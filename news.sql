-- phpMyAdmin SQL Dump
-- version 5.1.3
-- https://www.phpmyadmin.net/
--
-- Хост: localhost
-- Время создания: Июн 13 2023 г., 09:34
-- Версия сервера: 8.0.30
-- Версия PHP: 8.1.9

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- База данных: `news`
--

-- --------------------------------------------------------

--
-- Структура таблицы `news`
--

CREATE TABLE `news` (
  `newsid` int NOT NULL,
  `title` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT NULL,
  `text` text CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci,
  `author` int DEFAULT NULL,
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `url` int DEFAULT NULL,
  `rubid` int DEFAULT NULL,
  `parserUrl` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT NULL,
  `anonce` text COLLATE utf8mb4_general_ci
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Дамп данных таблицы `news`
--

INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(104, 'cv3 — делаем OpenCV питоничным', '<p><strong>TL;DR </strong><a href=\"https://github.com/gorodion/pycv\" rel=\"noopener noreferrer nofollow\"><u>cv3</u></a> - обёртка над opencv-python, которая ускоряет написание кода, не сужая функциональность</p><p>Привет, Хабр! Хочу поделиться написанным мною фреймворком на Python, который упрощает работу с OpenCV и делает его более питоничным. Погнали!</p><h3>Содержание</h3><ol><li><p><a href=\"#demonstration\" rel=\"noopener noreferrer nofollow\">Демонстрация возможностей</a></p></li><li><p><a href=\"#motivation\" rel=\"noopener noreferrer nofollow\">Мотивация</a></p></li><li><p><a href=\"#hello-cv3\" rel=\"noopener noreferrer nofollow\">Знакомьтесь, cv3</a></p></li><li><p><a href=\"#features\" rel=\"noopener noreferrer nofollow\">Особенности cv3</a></p></li><li><p><a href=\"#cv2-vs-cv3\" rel=\"noopener noreferrer nofollow\">cv2 vs cv3</a></p></li><li><p><a href=\"#overview\" rel=\"noopener noreferrer nofollow\">Обзор функций</a></p></li><li><p><a href=\"#analogs\" rel=\"noopener noreferrer nofollow\">Сравнение с аналогами</a> </p></li><li><p><a href=\"#sum-up\" rel=\"noopener noreferrer nofollow\">Подводим итоги</a></p></li><li><p><a href=\"#sources\" rel=\"noopener noreferrer nofollow\">Источники</a></p></li></ol><h3>Демонстрация возможностей</h3><a class=\"anchor\" name=\"demonstration\" id=\"demonstration\"></a><p>Сразу начну с демонстрации возможностей на примере реальных задач, которые встают перед исследователями компьютерного зрения, дата инженерами в области CV, разработчиками в области обработки изображений и другими специалистами.</p><h4>Визуализация предсказаний YOLOv5</h4><p><a href=\"https://github.com/ultralytics/yolov5\" rel=\"noopener noreferrer nofollow\"><u>Подробнее про YOLOv5</u></a></p><pre><code class=\"python\">import cv3\nimport torch\n\nmodel = torch.hub.load(\'ultralytics/yolov5\', \'yolov5s\', pretrained=True)\nimg = cv3.imread(\'zidane.jpg\')\noutputs = model([img])\nresults = outputs.pandas().xyxy[0]\n\nfor xmin, ymin, xmax, ymax, conf, cls_id, cls_name in results.values:\n   cv3.rectangle(img, xmin, ymin, xmax, ymax, color=cv3.COLORS[cls_id], t=5)\n   cv3.text(img, f\'{cls_name} {conf:.2f}\', xmin, ymin+30, color=\'white\', t=2)\n\nwith cv3.Window() as wind:\n   wind.imshow(img)\n   wind.wait_key(0)</code></pre><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/36c/5d3/5c8/36c5d35c836e649a681f43d6c1d59b89.png\" alt=\"Визуализация детекций от YOLOv5\" title=\"Визуализация детекций от YOLOv5\" width=\"959\" height=\"536\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/36c/5d3/5c8/36c5d35c836e649a681f43d6c1d59b89.png\"><div><figcaption>Визуализация детекций от YOLOv5</figcaption></figure><p>В данном коде происходит чтение изображения, получение предсказаний от модели и отрисовка детекций. В конце создаётся окно, на котором отображается изображение с детекциями.</p><h4>Перенос изображений с процессингом</h4><p>Пример кода для переноса изображений из одной папки в другую с изменением размера изображений.</p><pre><code class=\"python\">import cv3\nfrom pathlib import Path\n\nSRC_DIR = Path(\'images\')\nDST_DIR = Path(\'images256\')\nTARGET_SIZE = (256, 256)\n\nfor img_path in SRC_DIR.glob(\'*.jpeg\'):\n    img = cv3.imread(img_path)\n    resized = cv3.resize(img, *TARGET_SIZE)\n    dst_path = DST_DIR / img_path.name\n    cv3.imwrite(dst_path, resized, mkdir=True)</code></pre><p>Здесь обходятся все jpeg изображения из папки images, приводятся к размеру 256x256 и сохраняются под тем же именем в папке images256.</p><h4>Визуализация детекций от dlib</h4><p>Код для отрисовки детекций лиц и ландмарков, полученных от dlib. <a href=\"http://dlib.net/python/index.html\" rel=\"noopener noreferrer nofollow\"><u>Подробнее про dlib</u></a></p><pre><code class=\"python\">import cv3\nimport dlib\n\ndetector = dlib.get_frontal_face_detector()\npredictor = dlib.shape_predictor(\"shape_predictor_68_face_landmarks.dat\")\n\nimg = cv3.imread(\'musk.jpg\')\ndets = detector(img)\n\nfor det in dets:\n    cv3.rectangle(img, det.left(), det.top(), det.right(), det.bottom(), t=2)\n    shape = predictor(img, det)\n    for point in shape.parts():\n        cv3.point(img, point.x, point.y, color=\'lime\', r=2)\n\nwith cv3.Window() as wind:\n    wind.imshow(img)\n    wind.wait_key(0)</code></pre><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/30a/bc0/da8/30abc0da8fb6dfba2f5c8496efc9598f.png\" alt=\"Визуализация детекций лица и ключевых точек\" title=\"Визуализация детекций лица и ключевых точек\" width=\"395\" height=\"420\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/30a/bc0/da8/30abc0da8fb6dfba2f5c8496efc9598f.png\"><div><figcaption>Визуализация детекций лица и ключевых точек</figcaption></figure><p>В коде считывается изображение, на нём запускается детектор лиц, и для каждой детекции определяются ключевые точки лица. Полученные детекции наносятся на изображение, после чего изображение выводится на экран.</p><h4>Вывод видео с веб-камеры</h4><pre><code class=\"python\">import cv3\n\nwith cv3.Windows([\'Original\', \'Gray\', \'Threshold\', \'HSV\']) as ws:\n    for frame in cv3.Video(0):\n        gray = cv3.rgb2gray(frame)\n        thr = cv3.threshold(gray)\n        hsv = cv3.rgb2hsv(frame)\n\n        ws[\'Original\'].imshow(frame)\n        ws[\'Gray\'].imshow(gray)\n        ws[\'Threshold\'].imshow(thr)\n        ws[\'HSV\'].imshow(hsv)\n        if cv3.wait_key(1) == ord(\'q\'):\n            break</code></pre><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/c55/2a7/a34/c552a7a34b6e97d0e07ce5e22972c43f.png\" alt=\"Вывод кадров в нескольких окнах\" title=\"Вывод кадров в нескольких окнах\" width=\"1192\" height=\"763\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/c55/2a7/a34/c552a7a34b6e97d0e07ce5e22972c43f.png\"><div><figcaption>Вывод кадров в нескольких окнах</figcaption></figure><p>В коде создаётся 4 окна, далее происходит итерирование по видеопотоку с веб-камеры. Кадры обрабатываются (цвета конвертируются в gray/hsv; применение трешолда) и отправляются на вывод в соответствующие окна. Если вводится ‘q’, то окна закрываются и программа завершается.</p><h4>Процессинг видео</h4><p>Пример кода, с помощью которого из цветного видео можно получить черно-белое.</p><pre><code class=\"python\">import cv3\n\nwith cv3.Video(\'output.mp4\', \'w\') as out:\n   with cv3.Video(\'vid.mp4\') as cap:\n       for frame in cap:\n           gray = cv3.rgb2gray(frame)\n           out.write(gray)</code></pre><p>В коде создаются поток записи и чтения видео. Далее происходит итерирование по видеопотоку чтения, пока он не завершится. На каждой итерации кадр преобразуется из RGB в GRAY формат и отправляется в выходной поток.</p><h4>Применение трансформаций</h4><p>Ниже приведён код для создания анимации из изображения при помощи преобразований масштабирования и вращения.</p><pre><code class=\"python\">import cv3\nimport numpy as np\n\nn_iter = 100\nimg_orig = cv3.imread(\'fractal.jpg\')\nscales = np.linspace(0.3, 1.7, n_iter)\nwith cv3.Video(\'output.mp4\', \'w\') as out:\n  for i in range(n_iter):\n     img = cv3.transform(img_orig, scale=scales[i], angle=i, border=\'default\')\n     out.write(img)</code></pre><figure class=\"full-width \"><img src=\"https://habrastorage.org/getpro/habr/upload_files/5ca/ca3/24c/5caca324c53f764f897ff8cd747809c1.gif\" alt=\"Анимация из одного изображения\" title=\"Анимация из одного изображения\" width=\"540\" height=\"360\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/5ca/ca3/24c/5caca324c53f764f897ff8cd747809c1.gif\"><div><figcaption>Анимация из одного изображения</figcaption></figure><p>В коде считывается изображение и создаётся поток записи видео. Далее к изображению последовательно применяются трансформации, и результат отправляется в выходной поток.</p><h3>Мотивация</h3><a class=\"anchor\" name=\"motivation\" id=\"motivation\"></a><p>В большинстве проектов по обработке изображений и компьютерному зрению используется библиотека OpenCV, написанная на C++. Данная библиотека хорошо зарекомендовала себя и пока не уступает аналогам, благодаря огромному числу реализованных алгоритмов компьютерного зрения и своей гибкости. У OpenCV есть интерфейс, написанный на Python: opencv-python или cv2. У него есть ряд преимуществ: </p><ol><li><p>Высокая скорость работы алгоритмов благодаря тому, что cv2 - интерфейс к OpenCV</p></li><li><p>Работа с изображениями осуществляется через numpy матрицы, что даёт возможность пользоваться методами numpy</p></li><li><p>Большой функционал: возможность использования всех алгоритмов, реализованных в OpenCV, с минимальными усилиями</p></li></ol><p>Однако в ней есть ряд недостатков, связанных с интерфейсом, с которыми сообщество ничего не делает и, судя по всему, не собирается делать. Приведу их:</p><ol><li><p>Изображения считываются и записываются в BGR формате. Это особенность присуща только OpenCV, в других библиотеках работа происходит в RGB формате. Из-за этого возникают конфликты при использовании разных библиотек в одном проекте (например, связка cv2+matplotlib). Данная фича создаёт путанницу, особенно у новичков, и отвлекает от решения основной задачи. Типичная проблема, возникающая на практике: аватары вместо людей.</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/043/251/5bb/0432515bb364a46dcc5dcdf663589a17.png\" width=\"273\" height=\"273\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/043/251/5bb/0432515bb364a46dcc5dcdf663589a17.png\"></figure></li></ol><ol start=\"2\"><li><p>Ошибки не обработаны должным образом. Например при чтении несуществующего файла, не вылетают ошибки, а при проблеме во время записи изображения в файл возвращается безобидное False. Зачастую очень сложно понять, с чем связана та или иная ошибка. К примеру, ошибка TypeError: Expected cv::UMat for argument, периодически возникающая при рисовании фигур</p></li><li><p>Жёсткая привязка функций OpenCV к матрицам типа uint8. В целом, это хорошее решение, так как каждый пиксель должен принимать значение от 0 до 255, но из ошибок не всегда можно понять, что проблема в типе матрицы</p></li><li><p>Очень много лишнего кода, который приходится каждый раз копировать со stackoverflow (если у вас не феноменальная память на странные вещи). Например, для вращения изображения в cv2 необходимо сперва получить матрицу вращения, после чего применить её к изображению.</p></li><li><p>Много обязательных аргументов функций, без которых можно обойтись. Например, обязательное указание цвета линий при рисовании прямоугольника или несколько различных параметров при нанесении текста. Или при записи видео в файл необходимо передавать разрешение кадров, хотя данную информацию можно извлечь из первого записанного кадра. И в случае неправильной передачи этого аргумента, видео просто-напросто не запишется без каких-либо ошибок.</p></li><li><p>Огромное множество флагов, которые нельзя уместить в голове и, соответственно, приходится гуглить каждый раз. Примеры: cv2.cv.CV_CAP_PROP_FRAME_COUNT для получения количество кадров в видео, cv2.INTER_LINEAR для указания типа интерполяции и т. д.</p></li><li><p>Разные названия параметров функций, которые отвечают за одно и то же. Например, в cv2.copyMakeBorder указываются параметры borderType и value для задания границ, а в cv2.warpAffine за это отвечают borderMode и borderValue. Ещё пример: для указания типа интерполяции в cv2.resize используется параметр interpolation, а в cv2.warpAffine - flags</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/1d7/eb0/567/1d7eb056768fd6f27062c92b10de4ec3.png\" width=\"391\" height=\"292\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/1d7/eb0/567/1d7eb056768fd6f27062c92b10de4ec3.png\"></figure></li></ol><p>Я уже много лет работаю в области компьютерного зрения и использую cv2 в своих проектах. И каждый раз работа с этой библиотекой доставляет дискомфорт, хоть и достойного аналога у неё нет. Поэтому в один момент я решил написать обёртку над cv2, чтобы ускорить работу с этой библиотекой - <strong>cv3</strong>.</p><h3>Знакомьтесь, cv3</h3><a class=\"anchor\" name=\"hello-cv3\" id=\"hello-cv3\"></a><p>cv3 или pycv - это более питоничный интерфейс к OpenCV. Он упрощает работу с этой библиотекой, расширяет его синтаксические возможности, а также ускоряет исследования в области компьютерного зрения и выполнение задач по обработке изображений, при этом сохраняя гибкость и функциональность OpenCV.</p><p>Цель проекта: сделать OpenCV более питоничным и удобным в использовании, понизить порог входа в область компьютерного зрения. </p><p>Задача cv3: абстрагироваться от лишнего кода (лишних аргументов и преобразований типов), при этом сохранив всю мощь и весь функционал этой библиотеки. Таким образом, фокус идёт на решении более важных задач компьютерного зрения, чем переписывание ненужного кода, копирование его со stackoverflow и его дебаг. </p><p>Первоначальная идея была контрибьютить в репозиторий cv2, но я быстро от неё отказался. И вот почему: в cv3 очень много принципиальных вещей, которые не соотносятся с OpenCV. Это и внутренние состояния, и добавление исключений, и новые сущности, и синонимичные названия функций, и дополнительные методы и так далее. Так что cv3 разрабатывался как интерфейс к cv2.</p><p>Отношения cv3, opencv-python и OpenCV можно провизуализировать следующим образом:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f28/e3c/bbf/f28e3cbbffc088612d45a15b0db24191.png\" width=\"928\" height=\"334\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f28/e3c/bbf/f28e3cbbffc088612d45a15b0db24191.png\"></figure><h3>Особенности cv3</h3><a class=\"anchor\" name=\"features\" id=\"features\"></a><p>К главным фичам cv3 можно отнести:</p><ul><li><p>Избавление от жёсткой типизации</p></li><li><p>Поддержка относительных координат</p></li><li><p>Использование однотипных интерфейсов для работы с потоками. К примеру, VideoCapture, VideoWriter, Window поддерживают открытие через контекстный менеджер и могут быть закрыты через метод .close()</p></li><li><p>Выбрасывание понятных исключений при возникновении проблем. Например, при чтении несуществующего файла или записи в видеофайл кадра с неправильным разрешением.</p></li><li><p>Использование snake_case, вместо CamelCase, в соответствии со стандартом Python. К примеру, вместо cvtColor предлагается использовать cvt_color</p></li></ul><p>Далее расскажу подробнее про особенности.</p><h4>Общие особенности</h4><ul><li><p>Чтение и запись изображений/видео, цвет в RGB формате. Это обеспечивается хранением внутреннего состояния cv3.opt.RGB=True. Данное состояние можно переключить через cv3.opt.set_bgr()</p></li><li><p>Автокаст изображений. Если в функцию передаётся изображение в неправильном формате, то оно приводится к np.uint8, и появляется предупреждение. Также поддерживается изображение в формате PIL</p></li><li><p>Поддержка относительных координат. Возможность делать обрезку изображения (cv3.crop), паддинг (cv3.pad), ресайз (cv3.resize), отрисовку фигур в относительных координатах. Параметр rel=True означает, что переданы относительные координаты; rel=False - целые координаты. По умолчанию rel=None, в этом случае координаты считаются относительными, если они имеют тип float и находятся в диапазоне от 0 до 1.</p></li><li><p>Добавление множества функций на основе методов cv2, которые часто используются на практике: cv3.transform (вращение и масштабирование изображения) cv3.rgb2gray (перевод rgb изображения в gray формат), cv3.hline (рисование горизонтальной линии) и т. д.</p></li><li><p>Поддержка нескольких режимов (mode) отрисовки прямоугольника (cv3.rectangle) или обрезки изображения (cv3.crop):</p><ol><li><p>“xyxy” (по умолчанию) - формат (x0, y0, x1, y1). Возможны 4 варианта, например, (xmin, ymin, xmax, ymax)</p></li><li><p>“xywh” - формат (x0, y0, width, height)</p></li><li><p>“ccwh” - формат (x-center, y-center, width, height)</p></li><li><p>“yyxx” - формат (y0, y1, x0, x1)</p></li></ol></li></ul><h4>Особенности ввода/вывода</h4><ul><li><p>cv3.imread вторым параметром может принимать flag: либо cv2 флаг, либо строка (‘color’, ‘gray’, ‘alpha’)</p></li><li><p>Поддержка pathlib при чтении/записи изображений/видео</p></li><li><p>Автоматическое создание папок при записи изображения или видео при необходимости (при передаче параметра mkdir=True)</p></li><li><p>Добавление класса Window. Он позволяет удобным образом управлять окнами, в которых отображаются изображения/видео. Также содержит в себе счётчик окон, благодаря чему необязательно задавать название окон при инициализации.</p></li><li><p>Инициализация видеопотоков через cv3.Video. Для чтения из source используется cv3.Video(source), для записи в файл - cv3.Video(filename, ‘w’). Под капотом классы: cv3.VideoCapture и cv3.VideoWriter соответственно, которые расширяют возможности одноименных классов cv2. Например, поддерживается контекстный менеджер (видеопотоки автоматически закрываются при выходе из блока with..as).</p></li></ul><h4>Особенности cv3.VideoCapture</h4><ul><li><p>cap.read() возвращает кадр либо выбрасывает исключение: OSError (ошибка чтения) или StopIteration (видео закончено)</p></li><li><p>Итерирования по видеопотоку чтения: реализованы методы __iter__ и __next__. Благодаря этому можно пользоваться циклом for.</p></li><li><p>Свойства видео хранятся в полях объекта: frame_cnt (количество кадров, также возвращается от __len__), fps, width, height. Для получения текущего номера кадра используется обновляемое свойство cap.now.</p></li><li><p>Перемотка на <strong>n</strong>-ый кадр осуществляется через cap.rewind(n). А для получение <strong>n</strong>-ого кадра через индексацию: cap[n].</p></li></ul><h4>Особенности cv3.VideoWriter</h4><ul><li><p>Не надо передавать размеры кадров при инициализации cv3.VideoWriter: инициализация “родительского” cv2.VideoWriter происходит при записи первого кадра (здесь же определяется разрешение видео)</p></li><li><p>Нет необходимости передавать fps и fourcc: используются значения по умолчанию: cv3.opt.FPS и cv3.opt.FOURCC. Параметр fourcc можно передавать как строку или как  результат вызова cv2.VideoWriter_fourcc</p></li><li><p>Выбрасывание исключения OSError в случае, если видео не может быть записано</p></li><li><p>Валидация размеров записываемых кадров: в случае, если размеры не совпадают, то выбрасывается исключение. </p></li></ul><h4>Особенности параметров рисования</h4><ul><li><p>При отрисовке можно передать параметр copy=True - тогда функция вернёт копию изображения с нанесённой фигурой</p></li><li><p>При отрисовке фигуры нет необходимости указывать её цвет: используется заданное значение cv3.opt.COLOR, которое можно переопределить. Помимо этого, можно переопределить толщину линий фигуры через cv3.opt.THICKNESS</p></li><li><p>При отрисовке можно передавать дополнительные параметры color (цвет), t (толщина), line_type (тип линии)</p></li><li><p>Параметр color. Поддерживаются именованные цвета и относительные значения цветов. Если cv3.opt.RGB=True, то цвет ожидается в формате RGB, а иначе BGR. Если в качестве параметра цвета передана строка и cv3.opt.RGB=False, то соответствующий цвет разворачивается (RGB-&gt;BGR). Поддерживаются следующие типы значений параметра color:</p><ol><li><p>int - целое число от 0 до 255</p></li><li><p>float - целое число от 0 до 255 либо относительное от 0 до 1</p></li><li><p>np.array/list/tuple - массив из 3 чисел, целых или относительных</p></li><li><p>str - название цвета. Доступные цвета доступны в cv3.COLORS</p></li></ol></li><li><p>Параметр line_type. Ожидается либо cv2 флаг, либо строка: \'filled\', \'line_4\', \'line_8\', \'line_aa\'</p></li><li><p>При нанесении текста достаточно указать только строку текста. По умолчанию, текст будет начинаться с центра изображения (x=0.5, y=0.5). Можно указывать тип шрифта через параметр font (cv2 флаг либо строка: \'simplex\', \'plain\', \'duplex\', \'complex\', \'triplex\', \'complex_small\', \'script_simplex\', \'script_complex\', \'italic\'). Параметр scale отвечает за масштаб текста, flip - за разворот текста (принимает True/False)</p></li></ul><h4>Особенности трансформаций</h4><ul><li><p>За интерполяцию при применении трансформаций отвечает параметр inter. Он есть в функциях cv3.transform, cv3.rotate, cv3.scale, cv3.resize и т.п. Параметр inter может принимать либо cv2 флаг, либо строку. Возможные строковые значения: \'nearest\', \'linear\', \'area\', \'cubic\', \'lanczos4\'</p></li><li><p>За границы отвечают параметры border (тип границы) и value. Они есть в функциях  cv3.transform, cv3.rotate, cv3.scale, cv3.shift, cv3.pad и т.п.  В качестве border передаётся либо cv2 флаг, либо строка: \'constant\', \'replicate\', \'reflect\', \'wrap\', \'default\'. value используется только когда тип границы ‘constant’. Принимает value такие же типы значений, как параметр color в функциях рисования</p></li><li><p>cv3.crop позволяет обрезать изображение, даже если координаты выходят за его пределы</p></li></ul><h3>cv2 vs cv3</h3><a class=\"anchor\" name=\"cv2-vs-cv3\" id=\"cv2-vs-cv3\"></a><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/199/c33/98e/199c3398eb5b0d3df192235398e6ae31.png\" alt=\"Отличие cv3 от cv2\" title=\"Отличие cv3 от cv2\" width=\"375\" height=\"327\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/199/c33/98e/199c3398eb5b0d3df192235398e6ae31.png\"><div><figcaption>Отличие cv3 от cv2</figcaption></figure><p>Приведу сравнение кода, написанного на cv2 и cv3, для решения стандартных задач.</p><h4>Чтение и запись изображений</h4><p><strong>cv2</strong></p><pre><code class=\"python\">import cv2 as cv\nimport sys, os\n\nimg = cv.imread(cv.samples.findFile(\"img.jpeg\"))\nif img is None:\n    sys.exit(\"Could not read the image.\")\n\ngray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)\n\nos.makedirs(\'outputs\', exist_ok=True)\ncv.imwrite(\'outputs/gray.jpg\', gray)</code></pre><p><strong>cv3</strong></p><pre><code class=\"python\">import cv3\n\nimg = cv3.imread(\'img.jpeg\')\ngray = cv3.rgb2gray(img)\ncv3.imwrite(\'outputs/gray.jpg\', gray, mkdir=True)</code></pre><h4>Рисование</h4><p><strong>cv2</strong></p><pre><code class=\"python\">import cv2 as cv\n\nimg = cv.imread(cv.samples.findFile(\"img.jpeg\"))\nimg = cv.cvtColor(img, cv.COLOR_BGR2RGB)\n\ncv.rectangle(img, (40, 30), (260, 220), (0, 0, 255), 3)\ncv.putText(img, \'Parrot\', (50, 25), cv.FONT_HERSHEY_SIMPLEX, 1, (255, 255, 255), 2, cv.LINE_8)</code></pre><p><strong>cv3</strong></p><pre><code class=\"python\">import cv3\n\nimg = cv3.imread(\'img.jpeg\')\n\ncv3.rectangle(img, 40, 30, 260, 220, color=\"blue\", t=3)\ncv3.text(img, \"Parrot\", 50, 25, color=\"white\", t=2)</code></pre><h4>Чтение и запись видео </h4><p><strong>cv2</strong></p><pre><code class=\"python\">import cv2 as cv\n\ncap = cv.VideoCapture(0)\nfourcc = cv.VideoWriter_fourcc(*\'XVID\')\nout = None\nwhile cap.isOpened():\n   ret, frame = cap.read()\n   if not ret:\n       print(\"Can\'t receive frame (stream end?). Exiting ...\")\n       break\n   if out is None:\n      h, w = frame.shape[:2]\n      out = cv.VideoWriter(\'output.avi\', fourcc, 20.0, (w, h))\n   frame = cv.flip(frame, 0)\n   \n   out.write(frame)\n   cv.imshow(\'frame\', frame)\n   if cv.waitKey(1) == ord(\'q\'):\n       break\n\ncap.release()\nout.release()\ncv.destroyAllWindows()</code></pre><p><strong>cv3</strong></p><pre><code class=\"python\">import cv3\n\nwith (\n	cv3.Video(0) as cap,\n	cv3.Video(\'output.avi\', \'w\', fps=20, fourcc=\'XVID\') as out,\n	cv3.Window(\'frame\') as ww\n):\n	for frame in cap:\n		frame = cv3.vflip(frame)\n		out.write(frame)\n		ww.imshow(frame)\n		\n		if cv3.wait_key(1) == ord(\'q\'):\n			break</code></pre><h4>Сравнение производительности</h4><div><div class=\"table\"><table><tbody><tr><td data-colwidth=\"181\" width=\"181\"><p align=\"left\"><strong>Задача</strong></p></td><td><p align=\"left\"><strong>cv2</strong></p></td><td><p align=\"left\"><strong>cv3</strong></p></td></tr><tr><td data-colwidth=\"181\" width=\"181\"><p align=\"left\">Чтение и запись изображений</p></td><td><p align=\"left\">3.21 ms ± 129 µs</p></td><td><p align=\"left\">3.9 ms ± 76.3 µs</p></td></tr><tr><td data-colwidth=\"181\" width=\"181\"><p align=\"left\">Рисование</p></td><td><p align=\"left\">1.47 ms ± 13 µs</p></td><td><p align=\"left\">1.59 ms ± 16.1 µs</p></td></tr><tr><td data-colwidth=\"181\" width=\"181\"><p align=\"left\">Чтение и запись видео</p></td><td><p align=\"left\">88.4 ms ± 3.33 ms</p></td><td><p align=\"left\">103 ms ± 1.53 ms</p></td></tr></tbody></table><h4>Результаты сравнения</h4><p>Как и ожидалось, код на cv3 отрабатывает медленнее cv2, так как использует дополнительные обёртки и интерфейсы. Однако с точки зрения Python такое замедление незначительное, и в результате получается понятный код. Такой код пишется быстрее и менее подвержен ошибкам. Таким образом, cv3 позволяет снизить время на разработку и багфикс, сделать код понятнее, но при этом слегка снижает производительность.</p><h3>Обзор функций</h3><a class=\"anchor\" name=\"overview\" id=\"overview\"></a><p>Сперва нужно установить библиотеку. Делается это следующим образом:</p><pre><code class=\"bash\">pip install git+https://github.com/gorodion/pycv.git</code></pre><p>Для импортирования её в Python достаточно прописать:</p><pre><code class=\"python\">import cv3</code></pre><p>Ознакомиться с функциями и позапускать код можно в гугл колабе <a href=\"https://colab.research.google.com/drive/1VWdufQLbPibkCVW_UbTgqk4FXoQSYP6c?usp=sharing\" rel=\"noopener noreferrer nofollow\"><u>по ссылке</u></a></p><p>Репозиторий github <a href=\"https://github.com/gorodion/pycv\" rel=\"noopener noreferrer nofollow\"><u>здесь</u></a></p><p>По всем функциям были проведены юнит-тесты, протестировано на разных платформах, версиях python и opencv-python.</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/860/5cb/a19/8605cba1948463c19d34962f7f330fbb.png\" alt=\"Результаты запуска юнит-тестов\" title=\"Результаты запуска юнит-тестов\" width=\"393\" height=\"30\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/860/5cb/a19/8605cba1948463c19d34962f7f330fbb.png\"><div><figcaption>Результаты запуска юнит-тестов</figcaption></figure><h3>Сравнение с аналогами</h3><a class=\"anchor\" name=\"analogs\" id=\"analogs\"></a><p>Рассмотрим аналоги с cv3. При рассмотрении будем считать, что cv3 реализует все алгоритмы из OpenCV, и сравнивать по большей мере будем юзабилити</p><ul><li><p>scikit-image. В данной библиотеке реализовано огромное число алгоритмов компьютерного зрения, однако она всё-равно уступает OpenCV по этому критерию. Также не поддерживается работа с видео.</p></li><li><p>PIL. Предназначена для работы с изображениями. Реализует много аналогичных функций из OpenCV. Из недостатков: работа с изображениями происходит через сущность Image, а не numpy матрицу; также не поддерживается работа с видео.</p></li><li><p>torchvision. Это библиотека, являющаяся дополнением к библиотеке глубокого обучения PyTorch. Она реализует большое число алгоритмов для аугментации изображений. Также здесь поддерживается работа с видео. Из недостатков то, что функции ожидают в качестве входов PIL.Image либо torch.Tensor, Помимо этого, нет гибкости при работе с видео из-за того, что библиотека завязана на задачи, связанные с глубоким обучением.</p></li><li><p>albumentations. Это библиотека, написанная на OpenCV, которая предназначена для аугментации изображений. В ней реализовано огромное множество функций для преобразований изображений. К плюсам можно отнести то, что поддерживаются numpy матрицы в качестве входов. Однако за счёт того, что библиотека заточена на аугментации изображений, в ней используется специфичный интерфейс, который избыточен для задач по обработке изображений. Здесь также не реализован функционал для работы с видео потоками.</p></li><li><p>imutils. Это серия удобных и полезных функций, написанных на cv2, для работы с изображениями. При этом, это дополнение к cv2, а не отдельная библиотека. Также там есть очень интересная функция: opencv2matplotlib, разворачивающая каналы из BGR в RGB, которой вряд ли кто-либо пользуется :)</p></li><li><p>SimpleCV. Также как и cv3, данная библиотека, нацелена на простоту в использовании при работе с изображениями. Однако она завязана на внутренние сущности, и в ней ограниченный функционал, по сравнению с OpenCV. Из-за этого возникает проблема негибкости библиотеки. Помимо этого, поддержка SimpleCV прекратилась в 2021 году, тогда как OpenCV обновляется по сей день. SimpleCV можно назвать хорошим инструментом для изучения компьютерного зрения, но для использования в реальных задачах он непригоден. </p></li></ul><p>Таким образом, OpenCV можно считать универсальной библиотекой в области компьютерного зрения, а cv3 - удобным интерфейсом к ней, у которого на данный момент не имеется аналогов. </p><h3>Подводим итоги</h3><a class=\"anchor\" name=\"sum-up\" id=\"sum-up\"></a><p>В данной статье был представлен новый фреймворк для обработки изображений - cv3, который аналогично cv2 реализует функции OpenCV, но делает код более питоничным. Были приведены возможности cv3, а также сравнение с аналогами и cv2 по производительности и юзабилити. Как и ожидалось, cv3 уступает cv2 по производительности, но при этом обходит его по скорости написания кода, readability; снижает количество кода и число ошибок. Таким образом, cv3 больше подходит для исследовательских задач по CV и написания скриптов по обработке и переносу изображений. В случае же, когда скорость исполнения кода важна, например, в продакшн условиях, то следует использовать cv2.</p><p>Пока реализованы основные функции, по всем ним проведены тесты.</p><p>Проект планируется развивать, постепенно будут появляться новые функции. Предстоит ещё много работы, и один я с ней точно не справлюсь. Задач много: написание и поддержка документации в readthedocs, размещение проекта на PyPi, переписывание других функций OpenCV на более удобный лад и т.д. </p><p>Надеюсь данный проект будет многим полезен и сообщество поддержит данную инициативу. Контрибутьте!</p><p>По вопросам и предложениям пишите: <a href=\"http://t.me/gorodion\" rel=\"noopener noreferrer nofollow\"><u>@gorodion</u></a></p><h3>Источники</h3><a class=\"anchor\" name=\"sources\" id=\"sources\"></a><ol><li><p><a href=\"https://github.com/gorodion/pycv\" rel=\"noopener noreferrer nofollow\"><u>pycv - github </u></a></p></li><li><p><a href=\"https://opencv.org/\" rel=\"noopener noreferrer nofollow\"><u>OpenCV </u></a></p></li><li><p><a href=\"https://github.com/ultralytics/yolov5\" rel=\"noopener noreferrer nofollow\"><u>YOLOv5</u></a></p></li><li><p><a href=\"https://scikit-image.org/\" rel=\"noopener noreferrer nofollow\"><u>scikit-image</u></a></p></li><li><p><a href=\"https://pillow.readthedocs.io/en/stable/reference/Image.html\" rel=\"noopener noreferrer nofollow\"><u>PIL</u></a></p></li><li><p><a href=\"https://pytorch.org/vision/stable/index.html\" rel=\"noopener noreferrer nofollow\"><u>torchvision</u></a></p></li><li><p><a href=\"https://albumentations.ai/\" rel=\"noopener noreferrer nofollow\"><u>albumentations </u></a></p></li><li><p><a href=\"http://simplecv.org/\" rel=\"noopener noreferrer nofollow\"><u>simpleCV</u></a></p></li><li><p><a href=\"https://matplotlib.org/\" rel=\"noopener noreferrer nofollow\"><u>matplotlib</u></a></p></li><li><p><a href=\"http://dlib.net/\" rel=\"noopener noreferrer nofollow\"><u>dlib</u></a></p></li></ol><p></p>', 2, '2023-06-12 21:50:30', 931017, 71, '/ru/articles/741296/', 'cv3 - это более питоничный интерфейс к OpenCV. Он упрощает работу с этой библиотекой, расширяет его синтаксические возможности, а также ускоряет исследования в области компьютерного зрения и выполнение задач по обработке изображений, при этом сохраняя гибкость и функциональность OpenCV.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(105, 'cv3 — делаем OpenCV питоничным', '<p><strong>TL;DR </strong><a href=\"https://github.com/gorodion/pycv\" rel=\"noopener noreferrer nofollow\"><u>cv3</u></a> - обёртка над opencv-python, которая ускоряет написание кода, не сужая функциональность</p><p>Привет, Хабр! Хочу поделиться написанным мною фреймворком на Python, который упрощает работу с OpenCV и делает его более питоничным. Погнали!</p><h3>Содержание</h3><ol><li><p><a href=\"#demonstration\" rel=\"noopener noreferrer nofollow\">Демонстрация возможностей</a></p></li><li><p><a href=\"#motivation\" rel=\"noopener noreferrer nofollow\">Мотивация</a></p></li><li><p><a href=\"#hello-cv3\" rel=\"noopener noreferrer nofollow\">Знакомьтесь, cv3</a></p></li><li><p><a href=\"#features\" rel=\"noopener noreferrer nofollow\">Особенности cv3</a></p></li><li><p><a href=\"#cv2-vs-cv3\" rel=\"noopener noreferrer nofollow\">cv2 vs cv3</a></p></li><li><p><a href=\"#overview\" rel=\"noopener noreferrer nofollow\">Обзор функций</a></p></li><li><p><a href=\"#analogs\" rel=\"noopener noreferrer nofollow\">Сравнение с аналогами</a> </p></li><li><p><a href=\"#sum-up\" rel=\"noopener noreferrer nofollow\">Подводим итоги</a></p></li><li><p><a href=\"#sources\" rel=\"noopener noreferrer nofollow\">Источники</a></p></li></ol><h3>Демонстрация возможностей</h3><a class=\"anchor\" name=\"demonstration\" id=\"demonstration\"></a><p>Сразу начну с демонстрации возможностей на примере реальных задач, которые встают перед исследователями компьютерного зрения, дата инженерами в области CV, разработчиками в области обработки изображений и другими специалистами.</p><h4>Визуализация предсказаний YOLOv5</h4><p><a href=\"https://github.com/ultralytics/yolov5\" rel=\"noopener noreferrer nofollow\"><u>Подробнее про YOLOv5</u></a></p><pre><code class=\"python\">import cv3\nimport torch\n\nmodel = torch.hub.load(\'ultralytics/yolov5\', \'yolov5s\', pretrained=True)\nimg = cv3.imread(\'zidane.jpg\')\noutputs = model([img])\nresults = outputs.pandas().xyxy[0]\n\nfor xmin, ymin, xmax, ymax, conf, cls_id, cls_name in results.values:\n   cv3.rectangle(img, xmin, ymin, xmax, ymax, color=cv3.COLORS[cls_id], t=5)\n   cv3.text(img, f\'{cls_name} {conf:.2f}\', xmin, ymin+30, color=\'white\', t=2)\n\nwith cv3.Window() as wind:\n   wind.imshow(img)\n   wind.wait_key(0)</code></pre><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/36c/5d3/5c8/36c5d35c836e649a681f43d6c1d59b89.png\" alt=\"Визуализация детекций от YOLOv5\" title=\"Визуализация детекций от YOLOv5\" width=\"959\" height=\"536\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/36c/5d3/5c8/36c5d35c836e649a681f43d6c1d59b89.png\"><div><figcaption>Визуализация детекций от YOLOv5</figcaption></figure><p>В данном коде происходит чтение изображения, получение предсказаний от модели и отрисовка детекций. В конце создаётся окно, на котором отображается изображение с детекциями.</p><h4>Перенос изображений с процессингом</h4><p>Пример кода для переноса изображений из одной папки в другую с изменением размера изображений.</p><pre><code class=\"python\">import cv3\nfrom pathlib import Path\n\nSRC_DIR = Path(\'images\')\nDST_DIR = Path(\'images256\')\nTARGET_SIZE = (256, 256)\n\nfor img_path in SRC_DIR.glob(\'*.jpeg\'):\n    img = cv3.imread(img_path)\n    resized = cv3.resize(img, *TARGET_SIZE)\n    dst_path = DST_DIR / img_path.name\n    cv3.imwrite(dst_path, resized, mkdir=True)</code></pre><p>Здесь обходятся все jpeg изображения из папки images, приводятся к размеру 256x256 и сохраняются под тем же именем в папке images256.</p><h4>Визуализация детекций от dlib</h4><p>Код для отрисовки детекций лиц и ландмарков, полученных от dlib. <a href=\"http://dlib.net/python/index.html\" rel=\"noopener noreferrer nofollow\"><u>Подробнее про dlib</u></a></p><pre><code class=\"python\">import cv3\nimport dlib\n\ndetector = dlib.get_frontal_face_detector()\npredictor = dlib.shape_predictor(\"shape_predictor_68_face_landmarks.dat\")\n\nimg = cv3.imread(\'musk.jpg\')\ndets = detector(img)\n\nfor det in dets:\n    cv3.rectangle(img, det.left(), det.top(), det.right(), det.bottom(), t=2)\n    shape = predictor(img, det)\n    for point in shape.parts():\n        cv3.point(img, point.x, point.y, color=\'lime\', r=2)\n\nwith cv3.Window() as wind:\n    wind.imshow(img)\n    wind.wait_key(0)</code></pre><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/30a/bc0/da8/30abc0da8fb6dfba2f5c8496efc9598f.png\" alt=\"Визуализация детекций лица и ключевых точек\" title=\"Визуализация детекций лица и ключевых точек\" width=\"395\" height=\"420\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/30a/bc0/da8/30abc0da8fb6dfba2f5c8496efc9598f.png\"><div><figcaption>Визуализация детекций лица и ключевых точек</figcaption></figure><p>В коде считывается изображение, на нём запускается детектор лиц, и для каждой детекции определяются ключевые точки лица. Полученные детекции наносятся на изображение, после чего изображение выводится на экран.</p><h4>Вывод видео с веб-камеры</h4><pre><code class=\"python\">import cv3\n\nwith cv3.Windows([\'Original\', \'Gray\', \'Threshold\', \'HSV\']) as ws:\n    for frame in cv3.Video(0):\n        gray = cv3.rgb2gray(frame)\n        thr = cv3.threshold(gray)\n        hsv = cv3.rgb2hsv(frame)\n\n        ws[\'Original\'].imshow(frame)\n        ws[\'Gray\'].imshow(gray)\n        ws[\'Threshold\'].imshow(thr)\n        ws[\'HSV\'].imshow(hsv)\n        if cv3.wait_key(1) == ord(\'q\'):\n            break</code></pre><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/c55/2a7/a34/c552a7a34b6e97d0e07ce5e22972c43f.png\" alt=\"Вывод кадров в нескольких окнах\" title=\"Вывод кадров в нескольких окнах\" width=\"1192\" height=\"763\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/c55/2a7/a34/c552a7a34b6e97d0e07ce5e22972c43f.png\"><div><figcaption>Вывод кадров в нескольких окнах</figcaption></figure><p>В коде создаётся 4 окна, далее происходит итерирование по видеопотоку с веб-камеры. Кадры обрабатываются (цвета конвертируются в gray/hsv; применение трешолда) и отправляются на вывод в соответствующие окна. Если вводится ‘q’, то окна закрываются и программа завершается.</p><h4>Процессинг видео</h4><p>Пример кода, с помощью которого из цветного видео можно получить черно-белое.</p><pre><code class=\"python\">import cv3\n\nwith cv3.Video(\'output.mp4\', \'w\') as out:\n   with cv3.Video(\'vid.mp4\') as cap:\n       for frame in cap:\n           gray = cv3.rgb2gray(frame)\n           out.write(gray)</code></pre><p>В коде создаются поток записи и чтения видео. Далее происходит итерирование по видеопотоку чтения, пока он не завершится. На каждой итерации кадр преобразуется из RGB в GRAY формат и отправляется в выходной поток.</p><h4>Применение трансформаций</h4><p>Ниже приведён код для создания анимации из изображения при помощи преобразований масштабирования и вращения.</p><pre><code class=\"python\">import cv3\nimport numpy as np\n\nn_iter = 100\nimg_orig = cv3.imread(\'fractal.jpg\')\nscales = np.linspace(0.3, 1.7, n_iter)\nwith cv3.Video(\'output.mp4\', \'w\') as out:\n  for i in range(n_iter):\n     img = cv3.transform(img_orig, scale=scales[i], angle=i, border=\'default\')\n     out.write(img)</code></pre><figure class=\"full-width \"><img src=\"https://habrastorage.org/getpro/habr/upload_files/5ca/ca3/24c/5caca324c53f764f897ff8cd747809c1.gif\" alt=\"Анимация из одного изображения\" title=\"Анимация из одного изображения\" width=\"540\" height=\"360\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/5ca/ca3/24c/5caca324c53f764f897ff8cd747809c1.gif\"><div><figcaption>Анимация из одного изображения</figcaption></figure><p>В коде считывается изображение и создаётся поток записи видео. Далее к изображению последовательно применяются трансформации, и результат отправляется в выходной поток.</p><h3>Мотивация</h3><a class=\"anchor\" name=\"motivation\" id=\"motivation\"></a><p>В большинстве проектов по обработке изображений и компьютерному зрению используется библиотека OpenCV, написанная на C++. Данная библиотека хорошо зарекомендовала себя и пока не уступает аналогам, благодаря огромному числу реализованных алгоритмов компьютерного зрения и своей гибкости. У OpenCV есть интерфейс, написанный на Python: opencv-python или cv2. У него есть ряд преимуществ: </p><ol><li><p>Высокая скорость работы алгоритмов благодаря тому, что cv2 - интерфейс к OpenCV</p></li><li><p>Работа с изображениями осуществляется через numpy матрицы, что даёт возможность пользоваться методами numpy</p></li><li><p>Большой функционал: возможность использования всех алгоритмов, реализованных в OpenCV, с минимальными усилиями</p></li></ol><p>Однако в ней есть ряд недостатков, связанных с интерфейсом, с которыми сообщество ничего не делает и, судя по всему, не собирается делать. Приведу их:</p><ol><li><p>Изображения считываются и записываются в BGR формате. Это особенность присуща только OpenCV, в других библиотеках работа происходит в RGB формате. Из-за этого возникают конфликты при использовании разных библиотек в одном проекте (например, связка cv2+matplotlib). Данная фича создаёт путанницу, особенно у новичков, и отвлекает от решения основной задачи. Типичная проблема, возникающая на практике: аватары вместо людей.</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/043/251/5bb/0432515bb364a46dcc5dcdf663589a17.png\" width=\"273\" height=\"273\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/043/251/5bb/0432515bb364a46dcc5dcdf663589a17.png\"></figure></li></ol><ol start=\"2\"><li><p>Ошибки не обработаны должным образом. Например при чтении несуществующего файла, не вылетают ошибки, а при проблеме во время записи изображения в файл возвращается безобидное False. Зачастую очень сложно понять, с чем связана та или иная ошибка. К примеру, ошибка TypeError: Expected cv::UMat for argument, периодически возникающая при рисовании фигур</p></li><li><p>Жёсткая привязка функций OpenCV к матрицам типа uint8. В целом, это хорошее решение, так как каждый пиксель должен принимать значение от 0 до 255, но из ошибок не всегда можно понять, что проблема в типе матрицы</p></li><li><p>Очень много лишнего кода, который приходится каждый раз копировать со stackoverflow (если у вас не феноменальная память на странные вещи). Например, для вращения изображения в cv2 необходимо сперва получить матрицу вращения, после чего применить её к изображению.</p></li><li><p>Много обязательных аргументов функций, без которых можно обойтись. Например, обязательное указание цвета линий при рисовании прямоугольника или несколько различных параметров при нанесении текста. Или при записи видео в файл необходимо передавать разрешение кадров, хотя данную информацию можно извлечь из первого записанного кадра. И в случае неправильной передачи этого аргумента, видео просто-напросто не запишется без каких-либо ошибок.</p></li><li><p>Огромное множество флагов, которые нельзя уместить в голове и, соответственно, приходится гуглить каждый раз. Примеры: cv2.cv.CV_CAP_PROP_FRAME_COUNT для получения количество кадров в видео, cv2.INTER_LINEAR для указания типа интерполяции и т. д.</p></li><li><p>Разные названия параметров функций, которые отвечают за одно и то же. Например, в cv2.copyMakeBorder указываются параметры borderType и value для задания границ, а в cv2.warpAffine за это отвечают borderMode и borderValue. Ещё пример: для указания типа интерполяции в cv2.resize используется параметр interpolation, а в cv2.warpAffine - flags</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/1d7/eb0/567/1d7eb056768fd6f27062c92b10de4ec3.png\" width=\"391\" height=\"292\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/1d7/eb0/567/1d7eb056768fd6f27062c92b10de4ec3.png\"></figure></li></ol><p>Я уже много лет работаю в области компьютерного зрения и использую cv2 в своих проектах. И каждый раз работа с этой библиотекой доставляет дискомфорт, хоть и достойного аналога у неё нет. Поэтому в один момент я решил написать обёртку над cv2, чтобы ускорить работу с этой библиотекой - <strong>cv3</strong>.</p><h3>Знакомьтесь, cv3</h3><a class=\"anchor\" name=\"hello-cv3\" id=\"hello-cv3\"></a><p>cv3 или pycv - это более питоничный интерфейс к OpenCV. Он упрощает работу с этой библиотекой, расширяет его синтаксические возможности, а также ускоряет исследования в области компьютерного зрения и выполнение задач по обработке изображений, при этом сохраняя гибкость и функциональность OpenCV.</p><p>Цель проекта: сделать OpenCV более питоничным и удобным в использовании, понизить порог входа в область компьютерного зрения. </p><p>Задача cv3: абстрагироваться от лишнего кода (лишних аргументов и преобразований типов), при этом сохранив всю мощь и весь функционал этой библиотеки. Таким образом, фокус идёт на решении более важных задач компьютерного зрения, чем переписывание ненужного кода, копирование его со stackoverflow и его дебаг. </p><p>Первоначальная идея была контрибьютить в репозиторий cv2, но я быстро от неё отказался. И вот почему: в cv3 очень много принципиальных вещей, которые не соотносятся с OpenCV. Это и внутренние состояния, и добавление исключений, и новые сущности, и синонимичные названия функций, и дополнительные методы и так далее. Так что cv3 разрабатывался как интерфейс к cv2.</p><p>Отношения cv3, opencv-python и OpenCV можно провизуализировать следующим образом:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f28/e3c/bbf/f28e3cbbffc088612d45a15b0db24191.png\" width=\"928\" height=\"334\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f28/e3c/bbf/f28e3cbbffc088612d45a15b0db24191.png\"></figure><h3>Особенности cv3</h3><a class=\"anchor\" name=\"features\" id=\"features\"></a><p>К главным фичам cv3 можно отнести:</p><ul><li><p>Избавление от жёсткой типизации</p></li><li><p>Поддержка относительных координат</p></li><li><p>Использование однотипных интерфейсов для работы с потоками. К примеру, VideoCapture, VideoWriter, Window поддерживают открытие через контекстный менеджер и могут быть закрыты через метод .close()</p></li><li><p>Выбрасывание понятных исключений при возникновении проблем. Например, при чтении несуществующего файла или записи в видеофайл кадра с неправильным разрешением.</p></li><li><p>Использование snake_case, вместо CamelCase, в соответствии со стандартом Python. К примеру, вместо cvtColor предлагается использовать cvt_color</p></li></ul><p>Далее расскажу подробнее про особенности.</p><h4>Общие особенности</h4><ul><li><p>Чтение и запись изображений/видео, цвет в RGB формате. Это обеспечивается хранением внутреннего состояния cv3.opt.RGB=True. Данное состояние можно переключить через cv3.opt.set_bgr()</p></li><li><p>Автокаст изображений. Если в функцию передаётся изображение в неправильном формате, то оно приводится к np.uint8, и появляется предупреждение. Также поддерживается изображение в формате PIL</p></li><li><p>Поддержка относительных координат. Возможность делать обрезку изображения (cv3.crop), паддинг (cv3.pad), ресайз (cv3.resize), отрисовку фигур в относительных координатах. Параметр rel=True означает, что переданы относительные координаты; rel=False - целые координаты. По умолчанию rel=None, в этом случае координаты считаются относительными, если они имеют тип float и находятся в диапазоне от 0 до 1.</p></li><li><p>Добавление множества функций на основе методов cv2, которые часто используются на практике: cv3.transform (вращение и масштабирование изображения) cv3.rgb2gray (перевод rgb изображения в gray формат), cv3.hline (рисование горизонтальной линии) и т. д.</p></li><li><p>Поддержка нескольких режимов (mode) отрисовки прямоугольника (cv3.rectangle) или обрезки изображения (cv3.crop):</p><ol><li><p>“xyxy” (по умолчанию) - формат (x0, y0, x1, y1). Возможны 4 варианта, например, (xmin, ymin, xmax, ymax)</p></li><li><p>“xywh” - формат (x0, y0, width, height)</p></li><li><p>“ccwh” - формат (x-center, y-center, width, height)</p></li><li><p>“yyxx” - формат (y0, y1, x0, x1)</p></li></ol></li></ul><h4>Особенности ввода/вывода</h4><ul><li><p>cv3.imread вторым параметром может принимать flag: либо cv2 флаг, либо строка (‘color’, ‘gray’, ‘alpha’)</p></li><li><p>Поддержка pathlib при чтении/записи изображений/видео</p></li><li><p>Автоматическое создание папок при записи изображения или видео при необходимости (при передаче параметра mkdir=True)</p></li><li><p>Добавление класса Window. Он позволяет удобным образом управлять окнами, в которых отображаются изображения/видео. Также содержит в себе счётчик окон, благодаря чему необязательно задавать название окон при инициализации.</p></li><li><p>Инициализация видеопотоков через cv3.Video. Для чтения из source используется cv3.Video(source), для записи в файл - cv3.Video(filename, ‘w’). Под капотом классы: cv3.VideoCapture и cv3.VideoWriter соответственно, которые расширяют возможности одноименных классов cv2. Например, поддерживается контекстный менеджер (видеопотоки автоматически закрываются при выходе из блока with..as).</p></li></ul><h4>Особенности cv3.VideoCapture</h4><ul><li><p>cap.read() возвращает кадр либо выбрасывает исключение: OSError (ошибка чтения) или StopIteration (видео закончено)</p></li><li><p>Итерирования по видеопотоку чтения: реализованы методы __iter__ и __next__. Благодаря этому можно пользоваться циклом for.</p></li><li><p>Свойства видео хранятся в полях объекта: frame_cnt (количество кадров, также возвращается от __len__), fps, width, height. Для получения текущего номера кадра используется обновляемое свойство cap.now.</p></li><li><p>Перемотка на <strong>n</strong>-ый кадр осуществляется через cap.rewind(n). А для получение <strong>n</strong>-ого кадра через индексацию: cap[n].</p></li></ul><h4>Особенности cv3.VideoWriter</h4><ul><li><p>Не надо передавать размеры кадров при инициализации cv3.VideoWriter: инициализация “родительского” cv2.VideoWriter происходит при записи первого кадра (здесь же определяется разрешение видео)</p></li><li><p>Нет необходимости передавать fps и fourcc: используются значения по умолчанию: cv3.opt.FPS и cv3.opt.FOURCC. Параметр fourcc можно передавать как строку или как  результат вызова cv2.VideoWriter_fourcc</p></li><li><p>Выбрасывание исключения OSError в случае, если видео не может быть записано</p></li><li><p>Валидация размеров записываемых кадров: в случае, если размеры не совпадают, то выбрасывается исключение. </p></li></ul><h4>Особенности параметров рисования</h4><ul><li><p>При отрисовке можно передать параметр copy=True - тогда функция вернёт копию изображения с нанесённой фигурой</p></li><li><p>При отрисовке фигуры нет необходимости указывать её цвет: используется заданное значение cv3.opt.COLOR, которое можно переопределить. Помимо этого, можно переопределить толщину линий фигуры через cv3.opt.THICKNESS</p></li><li><p>При отрисовке можно передавать дополнительные параметры color (цвет), t (толщина), line_type (тип линии)</p></li><li><p>Параметр color. Поддерживаются именованные цвета и относительные значения цветов. Если cv3.opt.RGB=True, то цвет ожидается в формате RGB, а иначе BGR. Если в качестве параметра цвета передана строка и cv3.opt.RGB=False, то соответствующий цвет разворачивается (RGB-&gt;BGR). Поддерживаются следующие типы значений параметра color:</p><ol><li><p>int - целое число от 0 до 255</p></li><li><p>float - целое число от 0 до 255 либо относительное от 0 до 1</p></li><li><p>np.array/list/tuple - массив из 3 чисел, целых или относительных</p></li><li><p>str - название цвета. Доступные цвета доступны в cv3.COLORS</p></li></ol></li><li><p>Параметр line_type. Ожидается либо cv2 флаг, либо строка: \'filled\', \'line_4\', \'line_8\', \'line_aa\'</p></li><li><p>При нанесении текста достаточно указать только строку текста. По умолчанию, текст будет начинаться с центра изображения (x=0.5, y=0.5). Можно указывать тип шрифта через параметр font (cv2 флаг либо строка: \'simplex\', \'plain\', \'duplex\', \'complex\', \'triplex\', \'complex_small\', \'script_simplex\', \'script_complex\', \'italic\'). Параметр scale отвечает за масштаб текста, flip - за разворот текста (принимает True/False)</p></li></ul><h4>Особенности трансформаций</h4><ul><li><p>За интерполяцию при применении трансформаций отвечает параметр inter. Он есть в функциях cv3.transform, cv3.rotate, cv3.scale, cv3.resize и т.п. Параметр inter может принимать либо cv2 флаг, либо строку. Возможные строковые значения: \'nearest\', \'linear\', \'area\', \'cubic\', \'lanczos4\'</p></li><li><p>За границы отвечают параметры border (тип границы) и value. Они есть в функциях  cv3.transform, cv3.rotate, cv3.scale, cv3.shift, cv3.pad и т.п.  В качестве border передаётся либо cv2 флаг, либо строка: \'constant\', \'replicate\', \'reflect\', \'wrap\', \'default\'. value используется только когда тип границы ‘constant’. Принимает value такие же типы значений, как параметр color в функциях рисования</p></li><li><p>cv3.crop позволяет обрезать изображение, даже если координаты выходят за его пределы</p></li></ul><h3>cv2 vs cv3</h3><a class=\"anchor\" name=\"cv2-vs-cv3\" id=\"cv2-vs-cv3\"></a><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/199/c33/98e/199c3398eb5b0d3df192235398e6ae31.png\" alt=\"Отличие cv3 от cv2\" title=\"Отличие cv3 от cv2\" width=\"375\" height=\"327\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/199/c33/98e/199c3398eb5b0d3df192235398e6ae31.png\"><div><figcaption>Отличие cv3 от cv2</figcaption></figure><p>Приведу сравнение кода, написанного на cv2 и cv3, для решения стандартных задач.</p><h4>Чтение и запись изображений</h4><p><strong>cv2</strong></p><pre><code class=\"python\">import cv2 as cv\nimport sys, os\n\nimg = cv.imread(cv.samples.findFile(\"img.jpeg\"))\nif img is None:\n    sys.exit(\"Could not read the image.\")\n\ngray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)\n\nos.makedirs(\'outputs\', exist_ok=True)\ncv.imwrite(\'outputs/gray.jpg\', gray)</code></pre><p><strong>cv3</strong></p><pre><code class=\"python\">import cv3\n\nimg = cv3.imread(\'img.jpeg\')\ngray = cv3.rgb2gray(img)\ncv3.imwrite(\'outputs/gray.jpg\', gray, mkdir=True)</code></pre><h4>Рисование</h4><p><strong>cv2</strong></p><pre><code class=\"python\">import cv2 as cv\n\nimg = cv.imread(cv.samples.findFile(\"img.jpeg\"))\nimg = cv.cvtColor(img, cv.COLOR_BGR2RGB)\n\ncv.rectangle(img, (40, 30), (260, 220), (0, 0, 255), 3)\ncv.putText(img, \'Parrot\', (50, 25), cv.FONT_HERSHEY_SIMPLEX, 1, (255, 255, 255), 2, cv.LINE_8)</code></pre><p><strong>cv3</strong></p><pre><code class=\"python\">import cv3\n\nimg = cv3.imread(\'img.jpeg\')\n\ncv3.rectangle(img, 40, 30, 260, 220, color=\"blue\", t=3)\ncv3.text(img, \"Parrot\", 50, 25, color=\"white\", t=2)</code></pre><h4>Чтение и запись видео </h4><p><strong>cv2</strong></p><pre><code class=\"python\">import cv2 as cv\n\ncap = cv.VideoCapture(0)\nfourcc = cv.VideoWriter_fourcc(*\'XVID\')\nout = None\nwhile cap.isOpened():\n   ret, frame = cap.read()\n   if not ret:\n       print(\"Can\'t receive frame (stream end?). Exiting ...\")\n       break\n   if out is None:\n      h, w = frame.shape[:2]\n      out = cv.VideoWriter(\'output.avi\', fourcc, 20.0, (w, h))\n   frame = cv.flip(frame, 0)\n   \n   out.write(frame)\n   cv.imshow(\'frame\', frame)\n   if cv.waitKey(1) == ord(\'q\'):\n       break\n\ncap.release()\nout.release()\ncv.destroyAllWindows()</code></pre><p><strong>cv3</strong></p><pre><code class=\"python\">import cv3\n\nwith (\n	cv3.Video(0) as cap,\n	cv3.Video(\'output.avi\', \'w\', fps=20, fourcc=\'XVID\') as out,\n	cv3.Window(\'frame\') as ww\n):\n	for frame in cap:\n		frame = cv3.vflip(frame)\n		out.write(frame)\n		ww.imshow(frame)\n		\n		if cv3.wait_key(1) == ord(\'q\'):\n			break</code></pre><h4>Сравнение производительности</h4><div><div class=\"table\"><table><tbody><tr><td data-colwidth=\"181\" width=\"181\"><p align=\"left\"><strong>Задача</strong></p></td><td><p align=\"left\"><strong>cv2</strong></p></td><td><p align=\"left\"><strong>cv3</strong></p></td></tr><tr><td data-colwidth=\"181\" width=\"181\"><p align=\"left\">Чтение и запись изображений</p></td><td><p align=\"left\">3.21 ms ± 129 µs</p></td><td><p align=\"left\">3.9 ms ± 76.3 µs</p></td></tr><tr><td data-colwidth=\"181\" width=\"181\"><p align=\"left\">Рисование</p></td><td><p align=\"left\">1.47 ms ± 13 µs</p></td><td><p align=\"left\">1.59 ms ± 16.1 µs</p></td></tr><tr><td data-colwidth=\"181\" width=\"181\"><p align=\"left\">Чтение и запись видео</p></td><td><p align=\"left\">88.4 ms ± 3.33 ms</p></td><td><p align=\"left\">103 ms ± 1.53 ms</p></td></tr></tbody></table><h4>Результаты сравнения</h4><p>Как и ожидалось, код на cv3 отрабатывает медленнее cv2, так как использует дополнительные обёртки и интерфейсы. Однако с точки зрения Python такое замедление незначительное, и в результате получается понятный код. Такой код пишется быстрее и менее подвержен ошибкам. Таким образом, cv3 позволяет снизить время на разработку и багфикс, сделать код понятнее, но при этом слегка снижает производительность.</p><h3>Обзор функций</h3><a class=\"anchor\" name=\"overview\" id=\"overview\"></a><p>Сперва нужно установить библиотеку. Делается это следующим образом:</p><pre><code class=\"bash\">pip install git+https://github.com/gorodion/pycv.git</code></pre><p>Для импортирования её в Python достаточно прописать:</p><pre><code class=\"python\">import cv3</code></pre><p>Ознакомиться с функциями и позапускать код можно в гугл колабе <a href=\"https://colab.research.google.com/drive/1VWdufQLbPibkCVW_UbTgqk4FXoQSYP6c?usp=sharing\" rel=\"noopener noreferrer nofollow\"><u>по ссылке</u></a></p><p>Репозиторий github <a href=\"https://github.com/gorodion/pycv\" rel=\"noopener noreferrer nofollow\"><u>здесь</u></a></p><p>По всем функциям были проведены юнит-тесты, протестировано на разных платформах, версиях python и opencv-python.</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/860/5cb/a19/8605cba1948463c19d34962f7f330fbb.png\" alt=\"Результаты запуска юнит-тестов\" title=\"Результаты запуска юнит-тестов\" width=\"393\" height=\"30\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/860/5cb/a19/8605cba1948463c19d34962f7f330fbb.png\"><div><figcaption>Результаты запуска юнит-тестов</figcaption></figure><h3>Сравнение с аналогами</h3><a class=\"anchor\" name=\"analogs\" id=\"analogs\"></a><p>Рассмотрим аналоги с cv3. При рассмотрении будем считать, что cv3 реализует все алгоритмы из OpenCV, и сравнивать по большей мере будем юзабилити</p><ul><li><p>scikit-image. В данной библиотеке реализовано огромное число алгоритмов компьютерного зрения, однако она всё-равно уступает OpenCV по этому критерию. Также не поддерживается работа с видео.</p></li><li><p>PIL. Предназначена для работы с изображениями. Реализует много аналогичных функций из OpenCV. Из недостатков: работа с изображениями происходит через сущность Image, а не numpy матрицу; также не поддерживается работа с видео.</p></li><li><p>torchvision. Это библиотека, являющаяся дополнением к библиотеке глубокого обучения PyTorch. Она реализует большое число алгоритмов для аугментации изображений. Также здесь поддерживается работа с видео. Из недостатков то, что функции ожидают в качестве входов PIL.Image либо torch.Tensor, Помимо этого, нет гибкости при работе с видео из-за того, что библиотека завязана на задачи, связанные с глубоким обучением.</p></li><li><p>albumentations. Это библиотека, написанная на OpenCV, которая предназначена для аугментации изображений. В ней реализовано огромное множество функций для преобразований изображений. К плюсам можно отнести то, что поддерживаются numpy матрицы в качестве входов. Однако за счёт того, что библиотека заточена на аугментации изображений, в ней используется специфичный интерфейс, который избыточен для задач по обработке изображений. Здесь также не реализован функционал для работы с видео потоками.</p></li><li><p>imutils. Это серия удобных и полезных функций, написанных на cv2, для работы с изображениями. При этом, это дополнение к cv2, а не отдельная библиотека. Также там есть очень интересная функция: opencv2matplotlib, разворачивающая каналы из BGR в RGB, которой вряд ли кто-либо пользуется :)</p></li><li><p>SimpleCV. Также как и cv3, данная библиотека, нацелена на простоту в использовании при работе с изображениями. Однако она завязана на внутренние сущности, и в ней ограниченный функционал, по сравнению с OpenCV. Из-за этого возникает проблема негибкости библиотеки. Помимо этого, поддержка SimpleCV прекратилась в 2021 году, тогда как OpenCV обновляется по сей день. SimpleCV можно назвать хорошим инструментом для изучения компьютерного зрения, но для использования в реальных задачах он непригоден. </p></li></ul><p>Таким образом, OpenCV можно считать универсальной библиотекой в области компьютерного зрения, а cv3 - удобным интерфейсом к ней, у которого на данный момент не имеется аналогов. </p><h3>Подводим итоги</h3><a class=\"anchor\" name=\"sum-up\" id=\"sum-up\"></a><p>В данной статье был представлен новый фреймворк для обработки изображений - cv3, который аналогично cv2 реализует функции OpenCV, но делает код более питоничным. Были приведены возможности cv3, а также сравнение с аналогами и cv2 по производительности и юзабилити. Как и ожидалось, cv3 уступает cv2 по производительности, но при этом обходит его по скорости написания кода, readability; снижает количество кода и число ошибок. Таким образом, cv3 больше подходит для исследовательских задач по CV и написания скриптов по обработке и переносу изображений. В случае же, когда скорость исполнения кода важна, например, в продакшн условиях, то следует использовать cv2.</p><p>Пока реализованы основные функции, по всем ним проведены тесты.</p><p>Проект планируется развивать, постепенно будут появляться новые функции. Предстоит ещё много работы, и один я с ней точно не справлюсь. Задач много: написание и поддержка документации в readthedocs, размещение проекта на PyPi, переписывание других функций OpenCV на более удобный лад и т.д. </p><p>Надеюсь данный проект будет многим полезен и сообщество поддержит данную инициативу. Контрибутьте!</p><p>По вопросам и предложениям пишите: <a href=\"http://t.me/gorodion\" rel=\"noopener noreferrer nofollow\"><u>@gorodion</u></a></p><h3>Источники</h3><a class=\"anchor\" name=\"sources\" id=\"sources\"></a><ol><li><p><a href=\"https://github.com/gorodion/pycv\" rel=\"noopener noreferrer nofollow\"><u>pycv - github </u></a></p></li><li><p><a href=\"https://opencv.org/\" rel=\"noopener noreferrer nofollow\"><u>OpenCV </u></a></p></li><li><p><a href=\"https://github.com/ultralytics/yolov5\" rel=\"noopener noreferrer nofollow\"><u>YOLOv5</u></a></p></li><li><p><a href=\"https://scikit-image.org/\" rel=\"noopener noreferrer nofollow\"><u>scikit-image</u></a></p></li><li><p><a href=\"https://pillow.readthedocs.io/en/stable/reference/Image.html\" rel=\"noopener noreferrer nofollow\"><u>PIL</u></a></p></li><li><p><a href=\"https://pytorch.org/vision/stable/index.html\" rel=\"noopener noreferrer nofollow\"><u>torchvision</u></a></p></li><li><p><a href=\"https://albumentations.ai/\" rel=\"noopener noreferrer nofollow\"><u>albumentations </u></a></p></li><li><p><a href=\"http://simplecv.org/\" rel=\"noopener noreferrer nofollow\"><u>simpleCV</u></a></p></li><li><p><a href=\"https://matplotlib.org/\" rel=\"noopener noreferrer nofollow\"><u>matplotlib</u></a></p></li><li><p><a href=\"http://dlib.net/\" rel=\"noopener noreferrer nofollow\"><u>dlib</u></a></p></li></ol><p></p>', 3, '2023-06-12 21:52:41', 774516, 71, '/ru/articles/741296/', 'cv3 - это более питоничный интерфейс к OpenCV. Он упрощает работу с этой библиотекой, расширяет его синтаксические возможности, а также ускоряет исследования в области компьютерного зрения и выполнение задач по обработке изображений, при этом сохраняя гибкость и функциональность OpenCV.'),
(106, 'Автоматизация видеонаблюдения', '<h2>Введение</h2><p>Всем привет! Я работаю не в IT компании системным администратором. В перечень обязанностей входит и администрирование систем видеонаблюдения [мы используем <strong>CTV</strong> и <strong>HiWatch</strong>], это обычная ситуация админ должен уметь все и сразу. </p><p>Информацией в данной статьей я хочу поделиться в виду того, что потребовалось не мало времени для поиска решения задачи и написания небольшого скрипта. Если у кого будут предложения по иной реализации задач, буду рад ознакомиться.</p><p><strong><em>Задача</em></strong></p><ol><li><p>Организовать вывод видеонаблюдения с разных точек объекта на монитор в штабе, для постоянного контроля происходящего.(Строительная компания, на каждом объекте имеется штаб для ИТР состава.)</p></li><li><p>Организовать видео-стену в офисе для контроля работы на объектах.</p></li></ol><details class=\"spoiler\"><summary>Соединение объектов</summary><div class=\"spoiler__content\"><p>В данной статье не буду рассматривать способы обеспечения соединения с объектами, у нас поднят <strong>VPN</strong> на firewall zyxel, есть иной способ - пробросить порты, но понадобятся белые IP на всех объектах что очень накладно и настройка firewall для доступа с определенных адресов.  По этому рекомендую настроить VPN в сети много мануалов. </p></details><h2>Часть 1. Подготовка</h2><p>Вывести изображение с видеорегистраторов можно несколькими способами: </p><ol><li><p>через приложения для смартфонов;</p></li><li><p>На прямую видео кабелем (HDMI, VGA)</p></li><li><p>софт для ПК;</p></li><li><p>Браузер. (web-морда) </p></li></ol><p>Мы будем  рассматривать <strong>4 вариант</strong>.</p><p>Вопрос остается в том как организовать автологин и прочие манипуляции в браузере, дабы не давать всем сотрудникам пароль, и не напрягать лишней работой, включил ПК и все работает.</p><p>У меня на момент выполнения задачи были базовые знания Python, С++ учил когда-то давно в универе. Выбор пал на Python так как системы с которых открывается вся история на Windows, С++ сложнее по синтаксису и давно не работал с ним, рассматривать реализацию на нем даже не стал.</p><p>В Python есть библиотека Selenium, позволяющая работать c браузерами, к сожалению Web-морды наших регистраторов корректно работают только в IE...  И Selenium-у потребуется Web-driver, скачать можно с сайта библиотеки. </p><details class=\"spoiler\"><summary>Ссылка на web-driver</summary><div class=\"spoiler__content\"><p><a href=\"https://www.selenium.dev/documentation/webdriver/browsers/internet_explorer/\" rel=\"noopener noreferrer nofollow\">https://www.selenium.dev/documentation/webdriver/browsers/internet_explorer/</a></p></details><h2>Часть 2. Написание</h2><p>Для удобства разработки использовал <strong>VS Code</strong>. (установку и настройку не буду рассматривать, информации в сети много)</p><ol><li><p>Создать окружение для разработки, для этого в оболочке PS следует ввести:</p></li></ol><pre><code class=\"powershell\">python -m venv hiwatch\ncd hiwatch\\Scripts\n.\\activate.ps1</code></pre><p>Мы создаем окружение, переходим в папку Scripts и активируем его.</p><ol start=\"2\"><li><p>Создаем файл <strong>.py</strong> и устанавливаем Selenium.</p></li></ol><pre><code class=\"powershell\">cd .. #переходим в каталог выше hiwatch\\\ntouch video.py #создаем файл питона\npip3 install selenium #устанавливаем Selenium</code></pre><p>так же качаем файл <strong>IE webdriver</strong> с сайта selenium (ссылка выше) и закидываем в папку <strong>hiwatch</strong>.</p><ol start=\"3\"><li><p>Ниже будет предоставлен код из файла video.py с пояснением, для регистраторов Hiwatch &amp; Hikvision.</p></li></ol><pre><code class=\"python\">#video.py\n\nimport time\nfrom selenium import webdriver\nfrom selenium.webdriver.common.keys import Keys\nfrom selenium.webdriver.common.by import By\n\ntime.sleep(60) #здесь и далее приостановка выполнения в секундах\n\ndrive = webdriver.Ie(executable_path = r\'IEDriverServer.exe\') #присваиваем переменной drive исполняемый файл webdriver-a\n\ndrive.get(\'http://192.168.*.*/\') #IP адрес регистратора может быть указан номер порта\n\ntime.sleep(15)\n\ndrive.find_element(By.ID, \'username\').send_keys(\'log\') #Ваш логин к регистратору\ndrive.find_element(By.ID, \'password\').send_keys(\"pass\") #Ваш пароль к регистратору\ndrive.find_element(By.ID, \'password\').send_keys(Keys.ENTER) #Иммитация нажатия Enter для перехода на следущую страницу\n\ntime.sleep(10)\n\nsearch = drive.find_element(By.CLASS_NAME, \'icon-playall\') #выбор кнопки воспроизведения изображения\ndrive.execute_script(\"arguments[0].click();\", search) #иммитация нажатия\n\ntime.sleep(5)\n\nfull = drive.find_element(By.CLASS_NAME, \'icon-full\') #выбор кнопки изображения на полный экран\ndrive.execute_script(\"arguments[0].click();\", full) #иммитация нажатия\n\ndrive.close\ndrive.quit</code></pre><ol start=\"4\"><li><p>Ниже код из файла video.py  для регистратора CTV.</p></li></ol><pre><code class=\"python\">import time\nfrom selenium import webdriver\nfrom selenium.webdriver.common.keys import Keys\nfrom selenium.webdriver.common.by import By\n\ntime.sleep(5) #здесь и далее приостановка выполнения в секундах\n\ndrive = webdriver.Ie(executable_path = r\'IEDriverServer.exe\') #присваиваем переменной drive исполняемый файл webdriver-a\n\ndrive.get(\'http://192.168.*.*/\') #IP адрес регистратора может быть указан номер порта\n\ntime.sleep(10) \n\ndrive.find_element(By.ID, \'txtUserName\').send_keys(\'login\')  #Ваш логин к регистратору\ndrive.find_element(By.ID, \'txtPassword\').send_keys(\'Pass\') #Пароль к регистратору\ndrive.find_element(By.ID, \'txtPassword\').send_keys(Keys.ENTER) #Иммитация нажатия Enter для перехода на следущую страницу\n\ntime.sleep(10)\n\nsearch1 = drive.find_element(By.ID, \'seg_selector\') #открытие вкладки для выбора сетки отображения\ndrive.execute_script(\"arguments[0].click();\", search1) #иммитация нажатия\nsearch2 = drive.find_element(By.ID, \'seg_9\') #выбор сетки 3*3\ndrive.execute_script(\"arguments[0].click();\", search2) #иммитация нажатия\n\ntime.sleep(5)\n\nfull = drive.find_element(By.ID, \'full_screen\') #выбор кнопки изображения на полный экран\ndrive.execute_script(\"arguments[0].click();\", full) #иммитация нажатия\n\ndrive.close \ndrive.quit </code></pre><ol start=\"5\"><li><p>Перегоняем программу из <strong>.PY</strong> в <strong>.EXE</strong> для запуска на разных хостах без установки Python и прочего, получим самостоятельную программу.</p></li></ol><pre><code>pyinstaller --noconfirm --onedir --console --add-data \"C:/Users/!Ваш путь к этой папке!/IEDriverServer.exe;.\" \"C:/Users/!Ваш путь к этой папке!/video.py\"</code></pre><ol start=\"6\"><li><p>Сборка содержится в папке dist, которая находится в одной директории с папкой hiwatch.</p></li></ol><details class=\"spoiler\"><summary>Ссылка на мой git с уже готовыми проектами, следует указать некоторые данные в файле .py и перегнать в .EXE</summary><div class=\"spoiler__content\"><p><a href=\"https://github.com/LeoAlecksey/scripts\" rel=\"noopener noreferrer nofollow\">https://github.com/LeoAlecksey/scripts</a></p></details><h2>Часть 3. Заключение</h2><p>Вам остается только перенести результат из папки <strong>dist </strong>на любую машину.</p><p>В заключении я хотел бы сказать что не являюсь разработчиком, и мог не совсем правильно описать некоторые действия - прошу не судить строго. </p><p></p>', 3, '2023-06-12 21:52:42', 675487, 73, '/ru/articles/741190/', 'Всем привет! Я работаю не в IT компании системным администратором. В перечень обязанностей входит и администрирование систем видеонаблюдения [мы используем CTV и HiWatch], это обычная ситуация админ должен уметь все и сразу. Информацией в данной статьей я хочу поделиться в виду того, что потребовалось не мало времени для поиска решения задачи и написания небольшого скрипта. Если у кого будут предложения по иной реализации задач, буду рад ознакомиться.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(107, 'Задача коммивояжёра — ещё немного больше, ещё немного быстрее', '<figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/8ce/764/303/8ce764303dcfa462f9adbe86a3322342.png\" width=\"950\" height=\"611\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/8ce/764/303/8ce764303dcfa462f9adbe86a3322342.png\"></figure><blockquote><p><em>Всегда выбирайте самый трудный путь — на нем вы не встретите конкурентов.</em></p><p><em>Шарль де Голль</em></p></blockquote><p>И снова здравствуйте, уважаемые читатели Хабра. Мы продолжаем наше путешествие в мир алгоритмов поиска оптимального пути.</p><p>В <a href=\"https://habr.com/ru/articles/711708/\" rel=\"noopener noreferrer nofollow\">прошлой работе</a> мы уже узнали, как можно найти оптимальный путь в графе в несколько сотен вершин. В данной работе хочу более подробно остановится на сути метода, а также разобрать возможность по его ускорению на графах от тысячи элементов.</p><hr><p>Задача коммивояжёра обычно задаётся симметричной матрицей смежности размера n x n, где n – количество вершин для графа, для которого мы хотим найти оптимальный путь. </p><pre><code class=\"python\">[[  0 106  71  81  75 140 108 146 262 174]\n [106   0 162 184  92 130  36 157 270 204]\n [ 71 162   0  38  88 134 151 123 223 130]\n [ 81 184  38   0 121 171 179 161 257 164]\n [ 75  92  88 121   0  65  69  77 196 118]\n [140 130 134 171  65   0  96  33 140  84]\n [108  36 151 179  69  96   0 124 235 173]\n [146 157 123 161  77  33 124   0 119  52]\n [262 270 223 257 196 140 235 119   0  93]\n [174 204 130 164 118  84 173  52  93   0]]</code></pre><p>Для метрической задачи на плоскости такую матрицу можно легко построить, рассчитав расстояние между каждой парой точек.</p><pre><code class=\"python\">def distance(point1, point2):\n    return math.hypot(point2[0] - point1[0], point2[1] - point1[1])</code></pre><p>Алгоритм рассмотренный далее решает не только метрическую задачу, и не обязательно в двумерном пространстве, но для удобства тестирования мы будем применять случайный граф на плоскости. Основное условие, чтобы задающая матрица была симметричной относительно главной диагонали, а сама главная диагональ игнорируется.</p><p>При таком подходе мне больше нравится задавать входное условие через полно связный неориентированный граф:</p><pre><code class=\"python\">import networkx as nx\ninit_graph = nx.complete_graph(n)</code></pre><p>Подсчитать количество возможных рёбер для такого графа можно с помощью функции:</p><pre><code class=\"python\">def matrix_count(a):\n    # Возвращет количество рёбер квадратной симметричной матрицы \n    return (a * a - a) // 2\n</code></pre><p>При n = 1000 у нас получится 499500 рёбер, среди которых мы должны искать оптимальный путь.</p><p>Это очень много для задачи линейного программирования (LP), ведь каждое такое ребро это дополнительные переменная участвующая в расчётах. </p><p>Для расчёта такой задачи неявно строится симплекс таблица размером n\' x m\', где m\' &gt; n\', n\' - число участвующих переменных, m\' - число неравенств. (Здесь подразумевается решение с неравенствами и <a href=\"https://ru.wikipedia.org/wiki/%D0%A1%D0%B8%D0%BC%D0%BF%D0%BB%D0%B5%D0%BA%D1%81-%D0%BC%D0%B5%D1%82%D0%BE%D0%B4\" rel=\"noopener noreferrer nofollow\">симплекс метод</a> с искусственным базисом. Хотя возможно использовать метод с естественным базисом, так можно сэкономить немного памяти на вспомогательных переменных, но принципиальной разницы нет.)</p><p>Матрица для задачи LP с таким количеством переменных занимает всю оперативную память компьютера, а это десятки Гбайт.</p><p>Мне удалось найти только два варианта разрешения ситуации с объёмом используемой памяти:</p><ol><li><p>Нахождение возможности более компактного представления матрицы в памяти.</p></li><li><p>Уменьшение числа используемых переменных для уменьшения размера матрицы.</p></li></ol><ol><li><p>Нахождение возможности более компактного представления матрицы в памяти.</p><p>Если посмотреть на матрицу ограничений ниже, то можно увидеть, что большинство элементов равны нулю. Для хранения таких матриц можно использовать разреженные матрицы (Разрежённая матрица — матрица с преимущественно нулевыми элементами).</p></li></ol><pre><code class=\"python\">[[1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 1 0 0 0 1 1 1 0 0 0]\n [1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 1 0 0 1 1 0]\n [0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 1]\n [0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 0 0 0 1 0 0 1 0 1 1]\n [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]\n [0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]\n [0 0 1 1 0 0 1 0 0 0 1 1 0 0 0 0 0 1 1 0 1 0 0 1 0 1 0 1 1 1 0 1 0 1 0 0 1 0 0 1 1 0]]</code></pre><p>В разреженной матрице сохраняются только не нулевые элементы, как правило в виде списка списков.</p><p>К счастью в python в пакете scipy существует не только удобная библиотека для работы с разреженными матрицами, но и решатели задач линейного программирования с поддержкой таких матриц.</p><p>Существует два решателя подходящих для наших целей, они имеют небольшие нюансы по заполнению исходных данных, но в целом я не заметил весомых отличий в пользу одного из них, как по скорости работы, так и по удобству применения.</p><p>a) <a href=\"https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.linprog.html\" rel=\"noopener noreferrer nofollow\">scipy.optimize.linprog</a><br>b) <a href=\"https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.milp.html\" rel=\"noopener noreferrer nofollow\">scipy.optimize.milp</a></p><p>Оба решателя при правильном подборе параметров используют быстрый двойной решатель целочисленных линейных уравнений с применением <a href=\"https://docs.scipy.org/doc/scipy/reference/sparse.html\" rel=\"noopener noreferrer nofollow\">разреженных матриц</a>.</p><pre><code class=\"python\">res = optimize.linprog(c=objective_function, bounds=variable_bounds, A_eq=equality_a, b_eq=equality_b, A_ub=inequalities_a, b_ub=inequalities_b, method=\'highs\', integrality=1, options={\'disp\':True})\nres = optimize.milp(c=objective_function, bounds=variable_bounds, constraints=optimize.LinearConstraint(matrix_a, lower_bound, upper_bound), integrality=1, options={\'disp\':True})</code></pre><p>Отличие только в том, что linprog разбивает условия на два блока: равенства и неравенства. Milp же использует один блок неравенств с верхним и нижним ограничением (для равенств верхнее и нижнее ограничение делается одинаковым).</p><ol start=\"2\"><li><p>Уменьшение числа используемых переменных для уменьшения размера матрицы.</p><p>Предлагаю использовать эвристику, для удаления рёбер, которые не могут участвовать в построении оптимального пути. Так можно уменьшить объём используемой памяти, а также значительно ускорить расчёт.</p><p>Давайте посмотрим на следующий произвольный граф.</p></li></ol><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/4df/2f5/535/4df2f5535ae615d95c5b9d5598272f8a.png\" alt=\"Полносвязный граф, n = 100\" title=\"Полносвязный граф, n = 100\" width=\"950\" height=\"548\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/4df/2f5/535/4df2f5535ae615d95c5b9d5598272f8a.png\"><div><figcaption>Полносвязный граф, n = 100</figcaption></figure><p>Возьмём случайное ребро и спросим себя: может ли оно входить в оптимальный путь? </p><p>Моя биологическая нейросеть подсказывает, что данное конкретное ребро не может, но есть ли формальное описание этого правила. У меня нет точного ответа на данный вопрос, однако в ходе сотен экспериментов с поиском пути на графах можно заметить определённые закономерности. Предлагаю ниже несколько метафор объясняющих свои рассуждения. </p><p>Представим, что вершины графа - это центры гравитации – “звёзды”, чем они ближе друг к другу тем более вероятно, что их общее ребро будет входить в оптимальный путь.</p><p>Каждая такая звезда может испустить строго два “луча”. По одному из них мы приходим в вершину, по-другому выходим. Так как граф неориентированный нам не важно направление луча.</p><p>Если представить, что звёзды имеют не нулевой радиус, и могут отбрасывать тень на другие вершины, находящиеся за собой, то можно использовать приём очень похожий на трассировку лучей (Ray Tracing) для удаления неоптимальных рёбер.</p><p>Мы будем полагать, что по условию задачи нам не будут известны координаты вершин, а также метрика пространства, в котором развёрнут граф (известна только длина рёбер, заданная матрицей смежности). Поэтому попробуем создать очень упрощённую модель пересечения лучей. </p><p>Первой попыткой стала реализация зон контроля для каждой вершины. Радиусы подобраны так, чтобы максимизировать площадь окружностей, при этом не допустив перекрытия областей контроля.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/c15/d12/55f/c15d1255f05826b8f48f15b61b7d1cdd.png\" alt=\"Зоны контроля для вершин\" title=\"Зоны контроля для вершин\" width=\"950\" height=\"636\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/c15/d12/55f/c15d1255f05826b8f48f15b61b7d1cdd.png\"><div><figcaption>Зоны контроля для вершин</figcaption></figure><p>Окружности создают вымышленную “тень”. Объекты, находящиеся в геометрической тени от окружности, как правило не могут организовать связь с целевой вершиной и могут быть вычеркнуты в матрице смежности. Однако это не совсем так, в некоторых случаях возможна ситуация, когда вершина находится в тени, но ребро входит в оптимальный путь. Это связанно с тем, что для вершины всегда должны быть ровно две связи с соседними вершинами. Если удачных вариантов нет, оптимальным вариантом будет ребро, связанное с видимой вершиной видимой вершины (метафорически, луч отражённый от вершины стремится к своим соседям).</p><p>Формализуем. <em>В полносвязном графе заданной матрицей смежности оставляем только рёбра, связанные с видимой вершиной, а также рёбра из текущей вершины в вершины, которые видны из видимой вершины. Остальные рёбра отбрасываем и не используем в расчётах, так как они не могут войти в оптимальный путь.</em> (Понимаю, тут спорно, чёткого доказательства у меня нет.)</p><p>Такой простой эвристикой можно уменьшить число переменных для расчёта в 4-6 раз.</p><p>Как можно определить, является ли вершина видимой из текущей вершины, если мы не знаем их координат? Нужно для каждой пары вершин AB проверить не существует ли третья вершина C с радиусом r, таким, что для треугольника ABC выполнятся следующие условия: все рёбра не нулевые, AB – большая сторона, высота CH &gt; r. Если для произвольного С, условия выполняются, то будем считать, что вершина С перекрывает AB.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/ed7/e03/032/ed7e0303215e1c76e0696ff06b5034bf.png\" width=\"978\" height=\"385\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ed7/e03/032/ed7e0303215e1c76e0696ff06b5034bf.png\"></figure><p>Возможно ли ещё уменьшить число переменных? Оказывается, что да. Для этого нужно в мысленном эксперименте представить, что “центры масс” могут взаимно проникать друг в друга.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/d5d/233/e12/d5d233e12e8a259f2c1c2352bc82b2a4.png\" alt=\"F(1,1)\" title=\"F(1,1)\" width=\"794\" height=\"559\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d5d/233/e12/d5d233e12e8a259f2c1c2352bc82b2a4.png\"><div><figcaption>F(1,1)</figcaption></figure><p>В такой интерпретации радиус окружностей соответствует расстоянию до ближайшей вершины. Заметно более плотное заполнение пространства между вершинами, дающее более плотную тень, а следовательно, более сильное отсечение отдалённых рёбер. Однако, в такой концепции отсечения мы должны разрешить “лучу” пересекать окружность один раз, не считая его угасшим.</p><p>Если организовать процесс выделения окружностей и количество разрешённых пересечений в виде функции, то можно комбинировать большие размерности с ещё лучшими характеристиками отсечения.</p><p>F(Число минимальных окружностей для вершины, число пересечений до обрыва луча)</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/882/75b/bb0/88275bbb0cf1554b4c1849b9cee2079c.png\" alt=\"F(2,2)\" title=\"F(2,2)\" width=\"950\" height=\"636\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/882/75b/bb0/88275bbb0cf1554b4c1849b9cee2079c.png\"><div><figcaption>F(2,2)</figcaption></figure><p>Эмпирическим путём были выделены оптимальные варианты для такой функции с одной стороны, максимально уменьшающих число переменных симплекс метода с другой, не исключающих оптимальное решение: F(1,1), F(2,2), F(3,4), F(4,5), F(5,7).</p><p>Наилучшим образом показал себя вариант F(4,5). Лучшее соотношение времени расчётов и числа переменных, поэтому в основном и использовался для тестов. (Возможны иные варианты, не учтённые автором). </p><p>Применяя такую эвристику, в среднем для случайного набора точек нужно в 20-50 раз меньше переменных решателя линейных уравнений, что значительно ускоряет расчёты.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/55d/ecc/76b/55decc76b58e05368c8dbaa8834a5b8b.png\" width=\"950\" height=\"636\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/55d/ecc/76b/55decc76b58e05368c8dbaa8834a5b8b.png\"></figure><p>Радиусы окружностей - это длины самых коротких рёбер для вершины. Расcчитать их невероятно просто:</p><pre><code class=\"python\">    # Разворачиваем граф как матрицу смежности   \n    adjacency_matrix = nx.adjacency_matrix(init_graph, dtype=np.float64).todense()\n    # Сортируем матрицу смежности по строкам\n    adjacency_matrix.sort(axis=1)\n    # Выбираем только часть матрицы    \n    vertex_array = adjacency_matrix[:, 1:circles + 1]</code></pre><hr><p>Несколько слов про алгоритм поиска минимального пути. В прошлой статье я кратко обрисовал, как это происходит. Тут мы остановиться на этом подробнее.</p><p>Решатель линейных уравнений предназначен для поиска оптимального решения системы оных уравнений.</p><p>Первое, что нам нужно сделать, это определить целевую функцию. В данном случае, целевая функция решателя, это список длин рёбер графа, среди которых мы ищем минимальный путь.</p><p>objective_function – коэффициенты длины каждого ребра</p><p>Следующим шагом мы должны определить в виде уравнений условие, что в каждую вершину должно вести ровно два пути. Для этого мы определим столько равенств двум, сколько у нас вершин в графе.</p><p>equality_a – коэффициенты левой части уравнений<br>equality_b – коэффициент правой части, тут все равны 2</p><p>Третьим шагом мы должны определить ограничение неотрицательности на все переменные. Было бы очень странно, иметь путь отрицательной длины. Так как у нас будет выполнятся условие целочисленности переменных и выполнение второго шага, то возможно два варианта условия.</p><p>а) variable_bounds = (0, 1) – возможные варианты 0, 1 (ребро либо выберется, либо нет)<br>б) variable_bounds = (0, None) – возможные варианты 0, 1, 2 (ребро либо выберется, либо нет, либо выберется дважды) </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/getpro/habr/upload_files/525/b25/423/525b25423e17df3500ac5848e954fc60.gif\" alt=\"variable_bounds = (0, 1)\" title=\"variable_bounds = (0, 1)\" width=\"717\" height=\"501\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/525/b25/423/525b25423e17df3500ac5848e954fc60.gif\"><div><figcaption>variable_bounds = (0, 1)</figcaption></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/getpro/habr/upload_files/edb/7fd/493/edb7fd493388bb06ebec77ce3b02037c.gif\" alt=\"variable_bounds = (0, None)\" title=\"variable_bounds = (0, None)\" width=\"717\" height=\"501\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/edb/7fd/493/edb7fd493388bb06ebec77ce3b02037c.gif\"><div><figcaption>variable_bounds = (0, None)</figcaption></figure><p>Так как ограничение сверху на каждую переменную неявно создаёт дополнительные ограничение в решателе линейных уравнений, использование первого варианта немного замедляет решатель на каждом шаге. При выборе второго варианта, решения проходят быстрее, но шагов решателя получается немного больше, так же больше получается дополнительных ограничений. Дополнительные ограничения явно добавляются на дальнейших итерациях алгоритма.</p><p>Какую конструкцию лучше использовать не определился. В разных случаях выигрывает то одно, то другое.</p><p>Следующим шагом объявим объекты для неравенств. Пока они будут пусты, мы заполним их на следующих итерациях при вводе дополнительных ограничений.</p><p>inequalities_a – коэффициенты левой части неравенств<br>inequalities_b – коэффициенты правой части неравенств</p><p>У нас есть все для того чтобы получить первое решение.</p><pre><code class=\"python\">res = optimize.linprog(c=objective_function, bounds=variable_bounds, A_eq=equality_a, b_eq=equality_b, A_ub=inequalities_a, b_ub=inequalities_b, method=\'highs\', integrality=1)\n\n# Сохраняем результат в виде графа связей\ngraph_resilt = nx.Graph()\nfor i, val in enumerate(res.x):\n    if round(val) &gt;= 1:\n        graph_resilt.add_edge(*array_index[i])\n\n# Разбиваем граф результата на подмножества \nresult_sets = list(nx.connected_components(graph_resilt))\nqty_sets = len(result_sets)</code></pre><p>Если в полученом графе будет содержатся больше одного подмножества, то нам нужно внести дополнительные ограничения в задачу и выполнить повторный поиск решения.</p><p>Связать подмножества в единое целое можно двумя эквивалентными способами:</p><ol><li><p>Наложить ограничения между подмножествами, стягивающими их словно скотч.</p><p><em>Каждое подмножество должно соединятся с другими подмножествами по крайней мере двумя связями.</em></p></li><li><p>На каждое из подмножеств наложить внутреннее ограничение, заставляющее его искать недостающее звено в соседнем подмножестве.</p><p><em>Для каждого подмножества число связей в нём должно быть, как минимум на одно меньше количества вершин в данном подмножестве.</em></p></li></ol><p>Так как в первом случае знак условия получится ≥, а алгоритм работает только с условиями ≤, то нужно в левой и правой части уравнения изменить знак на минус. Для второго способа это не требуется, так как знак условия неравенства остаётся ≤.</p><p>Мы в праве выбирать для каждого подмножества одно из условий (или даже оба, если угодно), даже в произвольном порядке. Однако я предлагаю выбирать то из условий, которое создаст меньше значений в разреженной матрице дополнительных ограничений. Так удаётся получить некоторый выигрыш в производительности алгоритма.</p><p>Собственно нам остаётся повторять решение до тех пор, пока в графе не останется только одно множество, которое и будет искомым минимальным путём.</p><p>На каждой итерации алгоритма в систему уравнений добавляются новые условия, из-за этого каждый новый шаг получается немного медленнее предыдущего, это тоже стоит учитывать.</p><p>По сравнению с алгоритмом, предложенным в прошлой статье, данный вариант значительно выигрывает как по скорости работы, так и по способности обрабатывать графы больших размеров.</p><p>Оцениваю среднюю сложность работы алгоритма на наборе случайных точек приблизительно как O(n**3), что проигрывает Concorde, который оценивается как O(n**2.2).</p><hr><p>Несколько слов про <a href=\"https://math.uwaterloo.ca/tsp/concorde/index.html\" rel=\"noopener noreferrer nofollow\">Concorde</a>, это потрясающий алгоритм. Идеи, применённые в нём, дают невероятные результаты. К сожалению, мне не удалось найти исходный код реализации. Выражаю огромную благодарность <a href=\"https://en.wikipedia.org/wiki/William_J._Cook\" rel=\"noopener noreferrer nofollow\">William J. Cook</a> за его выступления, он просто невероятен.</p><p>Хотя общие моменты понятны, собственная реализация прототипа Конкорд, оказалась очень сложной и медленной, гораздо хуже алгоритма, описанного в данной работе. Думаю, что для быстрой реализации нужно суметь построить свой оптимальный решатель линейных уравнений, так как нужен шаг с применением алгоритма <a href=\"https://ru.wikipedia.org/wiki/%D0%90%D0%BB%D0%B3%D0%BE%D1%80%D0%B8%D1%82%D0%BC_%D0%93%D0%BE%D0%BC%D0%BE%D1%80%D0%B8\" rel=\"noopener noreferrer nofollow\">Гомори</a>. Все готовые решатели, которые мне попадались не разрешают использовать промежуточные данные для внесения условий целочисленности после нахождения не целочисленного решения. Без этого каждый перезапуск решателя занимает уйму времени, что в итоге делает саму идею реализации бессмысленной. Кроме того, в готовых реализациях солверов часто применяется не алгоритм Гомори, а <a href=\"https://en.wikipedia.org/wiki/Branch_and_cut\" rel=\"noopener noreferrer nofollow\">Branch and cut</a>, а как мне показалось, он медленнее когда ветвлений очень много.</p><hr><p>Данный труд представляет собой авторское переосмысление общедоступной литературы по теме поиска пути и не претендует на безоговорочную истинность. Если вам известно больше, поправьте автора, чтобы рассеять его невежество. </p><p>Спасибо за внимание!</p><details class=\"spoiler\"><summary>Код</summary><div class=\"spoiler__content\"><p>Исходный код распространяется под лицензией GNU GPL  </p><pre><code class=\"python\">#------------------------------------------------------------------------------------\n# TSP - traveling salesman problem integer linear programming method\n# Решатель задачи комивояжёра методом целочисленного линейного программирования\n# Rebuilder 09.06.2023 https://habr.com/ru/publication/edit/740984/\n#------------------------------------------------------------------------------------\nimport numpy as np\nimport random\nimport matplotlib.pyplot as plt\nfrom scipy import optimize\nfrom scipy import sparse\nimport networkx as nx\nfrom datetime import datetime\nimport math\n#------------------------------------------------------------------------------------\ndef distance(point1, point2):\n    # Возвращет дистанцию между двумя точками на плоскости \n    return math.hypot(point2[0] - point1[0], point2[1] - point1[1])\n#------------------------------------------------------------------------------------\ndef matrix_count(a):\n    # Возвращет размер плоского списка для квадратной симметричной матрицы \n    return((a * a - a) // 2)\n#------------------------------------------------------------------------------------\ndef triangle_intersection(a, b, c, vertex_array, val):\n    # Нужно ли убрать ребро    \n    if (b &gt; a) or (c &gt; a) or (a &lt; 0.000001):\n        return val      \n    cross_size = len(vertex_array)\n    \n    key = [True] * cross_size\n    for i in range(cross_size):\n        if (b == vertex_array[i]):\n            key[i] = False       \n    p = 0.5 * (a + b + c)\n    s = p * (p - a) * (p - b) * (p - c)\n    r = 2 * np.sqrt(abs(s)) / a\n    for i in range(cross_size):\n        if key[i] and vertex_array[i] &gt;= r:    \n            val += 1    \n    return val\n#------------------------------------------------------------------------------------\ndef algorithm_evaluation(array_key, result_sets, k):\n    # Возвращет оценку какой алгоритм создаст меньше единиц\n    set1 = set()\n    set2 = set()\n    \n    for i in result_sets[k]:\n            for j in result_sets[k]:\n                if i &gt; j and (i, j) in array_key:\n                    set1.add(array_key[(i, j)])\n\n    for l, val_l in enumerate(result_sets):\n        if l != k:\n            for i in result_sets[k]:\n                for j in val_l:\n                    key = (i, j) if i &gt; j else (j, i)\n                    if (key in array_key):\n                        set2.add(array_key[key])\n                        \n    if len(set1) &lt;= len(set2):\n        return True, set1\n    else:\n        return False, set2\n# ====================================================================================================================\ndef TSP_linprog(init_graph, circles, cross):\n    # Находит минимальный путь в графе методом целочисленного линейного программирования\n        \n    print(\'Run TSP linprog\', end=\'\')       \n    n = len(init_graph)\n    # Количество переменных солвера\n    flat_n = matrix_count(n)\n    # Разворачиваем граф как матрицу смежности   \n    adjacency_matrix = nx.adjacency_matrix(init_graph, dtype=np.float64).todense()\n    # Сортируем матрицу смежности по строкам\n    adjacency_matrix.sort(axis=1)\n    # Выбираем только часть матрицы    \n    vertex_array = adjacency_matrix[:,1:circles + 1]\n    del adjacency_matrix\n\n    graph_of_neighbors = nx.Graph(())    \n    for i in range(n):\n        for j in range(n):\n            if i &gt; j:                \n                value = 0\n                for k in range(n):\n                    if (k != i) and (k != j): \n                        value = triangle_intersection(init_graph[i][j][\'weight\'], init_graph[i][k][\'weight\'], init_graph[j][k][\'weight\'], vertex_array[k], value)\n                        if value &gt; cross:\n                            break\n                if value &lt;= cross:\n                    graph_of_neighbors.add_edge(i, j)\n    del vertex_array  \n    \n    graph_united = nx.Graph(())    \n    for i, j in list(graph_of_neighbors.edges()):      \n        for k in list(graph_of_neighbors.adj[i]):\n            if j != k and not graph_united.has_edge(j, k):\n                graph_united.add_edge(j, k)\n        for k in list(graph_of_neighbors.adj[j]):\n            if i != k and not graph_united.has_edge(i, k):\n                graph_united.add_edge(i, k)\n                \n    for i, j in list(graph_of_neighbors.edges()):\n        if not graph_united.has_edge(i, j):\n            graph_united.add_edge(i, j)\n    del graph_of_neighbors\n    \n    # Ограничение на диаппазон переменных\n    variable_bounds = (0, 1)\n#     variable_bounds = (0, None)\n     \n    # Заполняем основные элементы\n    edges_list = list(graph_united.edges())\n    n_var = len(edges_list)\n    array_index = {}\n    array_key = {}\n    objective_function = np.empty(n_var, dtype=np.float64)\n    \n     # Объявление массивов ограничений\n    equality_a = sparse.lil_matrix((n, n_var), dtype=np.int8)\n    equality_b = [2] * n\n    inequalities_a = sparse.lil_matrix((0, n_var), dtype=np.int8)\n    inequalities_b = []\n    \n    for i, val in enumerate(edges_list):\n        key = (val[0], val[1]) if val[0] &gt; val[1] else (val[1], val[0])\n        array_key[key] = i\n        array_index[i] = key\n        objective_function[i] = init_graph[key[0]][key[1]][\'weight\']\n        equality_a[key[0], i] = 1\n        equality_a[key[1], i] = 1\n    del graph_united\n\n    constraints = 0\n    step = 0\n    while True:       \n        # Ищем решение   \n        res = optimize.linprog(c=objective_function, bounds=variable_bounds, A_eq=equality_a, b_eq=equality_b, A_ub=inequalities_a, b_ub=inequalities_b, method=\'highs\', integrality=1, options={\'disp\':True})   \n        step += 1\n        print(\'.\', end=\'\')\n        \n        # Сохраняем результат в виде графа связей\n        graph_resilt = nx.Graph()\n        for i, val in enumerate(res.x):\n            if round(val) &gt;= 1:\n                graph_resilt.add_edge(*array_index[i])\n\n        # Разбиваем граф результата на подмножества \n        result_sets = list(nx.connected_components(graph_resilt))\n        qty_sets = len(result_sets)\n\n        # Решение найдено если в графе только одно множество \n        if qty_sets == 1:\n            break\n\n        # Если только два множества соединяем их напрямую\n        if qty_sets == 2:\n            inequalities_a.resize((constraints + 1, n_var))\n            inequalities_b += [-2]\n            for i in result_sets[0]: \n                for j in result_sets[1]:\n                    key = (i, j) if i &gt; j else (j, i)\n                    if key in array_key:\n                        inequalities_a[constraints, array_key[key]] = -1\n            constraints += 1\n            continue\n            \n        # Вводим столько ограничений, сколько у нас получилось множеств\n        inequalities_a.resize((constraints + qty_sets, n_var))\n        for i, val_i in enumerate(result_sets):\n            # Выбираем тот алгоритм, который добавит меньше значений в разреженную матрицу\n            value, add_set = algorithm_evaluation(array_key, result_sets, i)\n            if value:\n                inequalities_b += [len(val_i) - 1]\n                for j in add_set:\n                    inequalities_a[constraints + i, j] = 1\n            else:\n                inequalities_b += [-2]\n                for j in add_set:\n                    inequalities_a[constraints + i, j] = -1 \n        constraints += qty_sets\n    print()\n\n    return {\'length\' : res.fun, \'graph\' : graph_resilt, \'constraints\' : constraints, \'steps\' : step}\n# ====================================================================================================================\ndef TSP_milp(init_graph, circles, cross):\n    # Находит минимальный путь в графе методом целочисленного линейного программирования\n        \n    print(\'Run TSP milp\', end=\'\')  \n    n = len(init_graph)\n    # Количество переменных солвера    \n    flat_n = matrix_count(n)\n    # Разворачиваем граф как матрицу смежности   \n    adjacency_matrix = nx.adjacency_matrix(init_graph, dtype=np.float64).todense()\n    # Сортируем матрицу смежности по строкам\n    adjacency_matrix.sort(axis=1)\n    # Выбираем только часть матрицы    \n    vertex_array = adjacency_matrix[:,1:circles + 1]\n    del adjacency_matrix\n    \n    graph_of_neighbors = nx.Graph(())    \n    for i in range(n):\n        for j in range(n):\n            if i &gt; j:                \n                value = 0\n                for k in range(n):\n                    if (k != i) and (k != j): \n                        value = triangle_intersection(init_graph[i][j][\'weight\'], init_graph[i][k][\'weight\'], init_graph[j][k][\'weight\'], vertex_array[k], value)\n                        if value &gt; cross:\n                            break\n                if value &lt;= cross:\n                    graph_of_neighbors.add_edge(i, j)\n    del vertex_array  \n    \n    graph_united = nx.Graph(())\n    for i, j in list(graph_of_neighbors.edges()):\n\n        for k in list(graph_of_neighbors.adj[i]):\n            if j != k and not graph_united.has_edge(j, k):\n                graph_united.add_edge(j, k)\n        for k in list(graph_of_neighbors.adj[j]):\n            if i != k and not graph_united.has_edge(i, k):\n                graph_united.add_edge(i, k)\n                \n    for i, j in list(graph_of_neighbors.edges()):\n        if not graph_united.has_edge(i, j):\n            graph_united.add_edge(i, j)\n    del graph_of_neighbors\n        \n    # Заполняем основные элементы\n    edges_list = list(graph_united.edges())\n    n_var = len(edges_list)\n    array_index = {}\n    array_key = {}\n    matrix_a = sparse.lil_matrix((n, n_var), dtype=np.int8)    \n    objective_function = np.empty(n_var, dtype=np.float64)    \n    for i, val in enumerate(edges_list):\n        key = (val[0], val[1]) if val[0] &gt; val[1] else (val[1], val[0])\n        array_key[key] = i\n        array_index[i] = key\n        objective_function[i] = init_graph[key[0]][key[1]][\'weight\']\n        matrix_a[key[0], i] = 1\n        matrix_a[key[1], i] = 1\n    del graph_united\n\n    # Ограничение на диаппазон переменных\n    variable_bounds = (0, 1)\n#     variable_bounds = (0, np.inf)\n\n    # Начальные ограничения модели    \n    lower_bound  = [2] * n\n    upper_bound  = [2] * n    \n\n    constraints = 0\n    step = 0\n    while True:       \n        # Ищем решение\n        res = optimize.milp(c=objective_function, constraints=optimize.LinearConstraint(matrix_a, lower_bound, upper_bound), bounds=variable_bounds, integrality=1, options={\'disp\':True})\n        step += 1\n        print(\'.\', end=\'\')\n        \n        # Сохраняем результат в виде графа связей\n        graph_resilt = nx.Graph()\n        for i, val in enumerate(res.x):\n            if round(val) &gt;= 1:\n                graph_resilt.add_edge(*array_index[i])\n\n        # Разбиваем граф результата на подмножества \n        result_sets = list(nx.connected_components(graph_resilt))\n        qty_sets = len(result_sets)\n        \n        # Решение найдено если в графе только одно множество \n        if qty_sets == 1:\n            break\n\n        # Если только два множества соединяем их напрямую\n        if qty_sets == 2:\n            matrix_a.resize((n + constraints + 1, n_var))\n            lower_bound += [2]\n            upper_bound += [np.inf]\n            for i in result_sets[0]: \n                for j in result_sets[1]:\n                    key = (i, j) if i &gt; j else (j, i)\n                    if key in array_key:\n                        matrix_a[n + constraints, array_key[key]] = 1\n            constraints += 1\n            continue\n            \n        # Вводим столько ограничений, сколько у нас получилось множеств\n        matrix_a.resize((n + constraints + qty_sets, n_var))\n        for i, val_i in enumerate(result_sets):\n            # Выбираем тот алгоритм, который добавит меньше значений в разреженную матрицу\n            value, add_set = algorithm_evaluation(array_key, result_sets, i)\n            if value:\n                lower_bound += [0]\n                upper_bound += [len(val_i) - 1]\n            else:\n                lower_bound += [2]\n                upper_bound += [np.inf]\n            for j in add_set:\n                matrix_a[n + constraints + i, j] = 1\n        constraints += qty_sets\n    print()\n    \n    return {\'length\' : res.fun, \'graph\' : graph_resilt, \'constraints\' : constraints, \'steps\' : step}\n# ====================================================================================================================\nn = 200\n# random.seed(1)\npoints = [(round(random.randint(0, 300)), round(random.randint(0, 200))) for i in range(n)]\n\ninit_graph = nx.complete_graph(n)\nfor i, j in init_graph.edges():\n    if j &gt; i:\n        init_graph[i][j][\'weight\'] = distance(points[i], points[j])\n\nplt.figure(figsize=(12, 9))\nplt.axis(\"equal\")\n\nstart_time = datetime.now()\nres = TSP_linprog(init_graph, 4, 5)\n# res = TSP_milp(init_graph, 4, 5)\ndate_diff = (datetime.now() - start_time).total_seconds()\nprint(\'time =\', date_diff)\nnx.draw(init_graph, points, width=0, with_labels=True, node_size=0, font_size=6, font_color=\"black\")\nnx.draw(res[\"graph\"], points, width=1, edge_color=\"red\", style=\"-\", with_labels=False, node_size=0)\nplt.show()\n# ====================================================================================================================</code></pre><p></p></details><details class=\"spoiler\"><summary>Пошаговое решение графа, n = 1200 (Осторожно трафик)</summary><div class=\"spoiler__content\"><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/83d/3b4/690/83d3b4690bdab903022b9f98313ad852.png\" width=\"717\" height=\"501\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/83d/3b4/690/83d3b4690bdab903022b9f98313ad852.png\"></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/23e/249/51a/23e24951a39fc529e2b398c2fdcba2e8.png\" width=\"717\" height=\"501\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/23e/249/51a/23e24951a39fc529e2b398c2fdcba2e8.png\"></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f56/5e9/e74/f565e9e74bc2c84d7b15468e112a0132.png\" width=\"717\" height=\"501\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f56/5e9/e74/f565e9e74bc2c84d7b15468e112a0132.png\"></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/029/4f7/f91/0294f7f918a54a00289a6c7c928e75a5.png\" width=\"717\" height=\"501\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/029/4f7/f91/0294f7f918a54a00289a6c7c928e75a5.png\"></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/7d8/f96/531/7d8f96531a80f0709a139b6e61273981.png\" width=\"717\" height=\"501\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/7d8/f96/531/7d8f96531a80f0709a139b6e61273981.png\"></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/d82/e79/f76/d82e79f76020c0b054c326e6da61bb1e.png\" width=\"717\" height=\"501\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d82/e79/f76/d82e79f76020c0b054c326e6da61bb1e.png\"></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/706/9ad/23e/7069ad23e70f6f25ecc3eb79035a6393.png\" width=\"717\" height=\"501\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/706/9ad/23e/7069ad23e70f6f25ecc3eb79035a6393.png\"></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/019/bad/aa4/019badaa45511f1b8c9b44519630b45e.png\" width=\"717\" height=\"501\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/019/bad/aa4/019badaa45511f1b8c9b44519630b45e.png\"></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/407/f93/967/407f9396707dbfc40343a5d61189bd47.png\" width=\"717\" height=\"501\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/407/f93/967/407f9396707dbfc40343a5d61189bd47.png\"></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/0be/068/ba3/0be068ba3b09c22f4b9bdcbfe1281e87.png\" width=\"717\" height=\"501\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/0be/068/ba3/0be068ba3b09c22f4b9bdcbfe1281e87.png\"></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/954/b62/712/954b62712764a21cac50b9da5f8da607.png\" width=\"717\" height=\"501\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/954/b62/712/954b62712764a21cac50b9da5f8da607.png\"></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/027/acb/a0b/027acba0b6e210a6e5666d05acf0bb4e.png\" width=\"717\" height=\"501\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/027/acb/a0b/027acba0b6e210a6e5666d05acf0bb4e.png\"></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/629/d16/e83/629d16e833a1b3fb57643e0f1d1b7911.png\" width=\"717\" height=\"501\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/629/d16/e83/629d16e833a1b3fb57643e0f1d1b7911.png\"></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e8d/9d8/f5f/e8d9d8f5f1300c2fcb5822805c7a61cf.png\" width=\"717\" height=\"501\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e8d/9d8/f5f/e8d9d8f5f1300c2fcb5822805c7a61cf.png\"></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/66a/378/276/66a378276e35c6cb67d71497a8b72439.png\" width=\"717\" height=\"501\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/66a/378/276/66a378276e35c6cb67d71497a8b72439.png\"></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a44/97e/ef8/a4497eef80d4aa1b6b0bde28d3e9483a.png\" width=\"717\" height=\"501\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a44/97e/ef8/a4497eef80d4aa1b6b0bde28d3e9483a.png\"></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/62b/a6f/d04/62ba6fd04b208ddba1a145b8d5b580da.png\" width=\"717\" height=\"501\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/62b/a6f/d04/62ba6fd04b208ddba1a145b8d5b580da.png\"></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/3a3/4cf/cb0/3a34cfcb031205427cb626ba4c0db273.png\" width=\"717\" height=\"501\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/3a3/4cf/cb0/3a34cfcb031205427cb626ba4c0db273.png\"></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/814/345/705/814345705eb8611faabb79692de80c7f.png\" width=\"717\" height=\"501\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/814/345/705/814345705eb8611faabb79692de80c7f.png\"></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/1ad/916/fc6/1ad916fc6ae62f6d7b02d02319c03c74.png\" width=\"717\" height=\"501\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/1ad/916/fc6/1ad916fc6ae62f6d7b02d02319c03c74.png\"></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/cc2/ce1/f5b/cc2ce1f5bb38ee6cbf843a31ed0ea66c.png\" width=\"717\" height=\"501\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/cc2/ce1/f5b/cc2ce1f5bb38ee6cbf843a31ed0ea66c.png\"></figure><p></p></details><p></p>', 1, '2023-06-12 21:52:43', 652632, 72, '/ru/articles/740984/', 'И снова здравствуйте, уважаемые читатели Хабра. Мы продолжаем наше путешествие в мир алгоритмов поиска оптимального пути.В прошлой работе мы уже узнали, как можно найти оптимальный путь в графе в несколько сотен вершин. В данной работе хочу более подробно остановится на сути метода, а также разобрать возможность по его ускорению на графах от тысячи элементов.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(108, 'PySpark для аналитика. Как выгружать данные с помощью toPandas и его альтернатив', '<p>Привет! Меня зовут Александр Ледовский. Я тимлид команды аналитики и DS, строю рекламные аукционы в Авито. В работе мы активно используем Apache Spark. Одна из типовых задач аналитика — посчитать что-то на pySpark, а потом выгрузить это. Например:</p><ul><li><p>маленькую табличку в экселе, чтобы сделать отчёт или презентацию;</p></li><li><p>большую таблицу в экселе или csv, чтобы отправить коллегам — до нескольких Гб;</p></li><li><p>большой датасет для обучения ML-модели — до 100 Гб.</p></li></ul><p>Данная статья о том, как это правильно делать. В том числе, как правильно использовать функцию toPandas вместе с библиотекой pyArrow, когда toPandas использовать не стоит и какие ещё есть варианты.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/2dc/022/85e/2dc02285e14a3d019ba5c8e7b2e7d53c.jpeg\" width=\"1280\" height=\"722\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/2dc/022/85e/2dc02285e14a3d019ba5c8e7b2e7d53c.jpeg\" data-blurred=\"true\"></figure><h3>Немного о toPandas</h3><p>toPandas — основной инструмент получения семплов в PySpark и основной инструмент аналитика для просмотра данных. Вероятно, большинство из вас пользуется функцией df.limit(10).toPandas(). Она же подходит, чтобы сохранить таблицу в Excel. Например:</p><pre><code class=\"python\">df = spark.read.orc(\'path_to_your_dataset\')\npdf = df.toPandas()\npdf.to_excel(\'my_dataset.xlsx\', index=False)</code></pre><p>Всё нормально, если работать с небольшими датасетами. Когда они становятся большими, начинаются проблемы: toPandas тормозит, падает с ошибками.</p><p>Другая проблема: toPandas загружает данные в оперативную память Jupyter notebook. Если сделать toPandas большого датасета, это займёт много ресурсов и повредит работе целого сервера. А там ещё и могут работать коллеги.</p><p>Разберём, как правильно работать с toPandas.</p><h3>Включите Arrow-оптимизацию</h3><div><div class=\"table\"><table><tbody><tr><td><p align=\"left\">TL;DR Есть настройка, которая на порядок увеличит скорость работы toPandas. Она называется <code>spark.sql.execution.arrow.pyspark.enabled</code></p></td></tr></tbody></table><p>PySpark состоит из параллельно работающих JVM- (Java Virtual Machine) и Python-процессов. Подробнее об этом я писал <a href=\"https://habr.com/ru/companies/avito/articles/732870/\"><u>в статье про выделение ресурсов →</u></a></p><p>Python и Java обмениваются друг с другом данными. Но из-за того, что каждый хранит их в своём формате, это происходит не быстро.</p><p>Arrow — формат хранения данных в памяти. Эта библиотека поддерживается одновременно и в Python, и в Java/Spark-процессах. Формат поддерживает быструю передачу данных по сети. Прирост скорости оказывается огромным по сравнению со стандартным механизмом обмена данных между Python и Java.</p><p>Чтобы включить Arrow-оптимизацию, нужно прописать параметры в конфиге:</p><pre><code class=\"python\">app_name = \"Your App\"\n\nspark_conf = {\n    # another params\n\n		# если у вас спарк &gt;= 3.0\n    \'spark.sql.execution.arrow.pyspark.enabled\': \'true\',\n\n	  # если у вас спарк &lt; 3.0\n		\'spark.sql.execution.arrow.enabled\': \'true\'\n}\n\n\nbuilder = (\n    SparkSession\n    .builder\n    .appName(app_name)\n)\n\nfor k, v in spark_conf.items():\n    builder.config(k, v)\n    \nspark = builder.getOrCreate()\nspark.sql.execution.arrow.enabled</code></pre><p><a href=\"https://spark.apache.org/docs/latest/api/python/user_guide/sql/arrow_pandas.html\"><u>Подробная документация по использованию Arrow с PySpark →</u></a></p><h4>Ограничения Arrow и как их обходить</h4><p>У Arrow есть только один недостаток. Он не поддерживает некоторые типы данных. Вот выдержка из<a href=\"https://spark.apache.org/docs/latest/api/python/user_guide/sql/arrow_pandas.html#supported-sql-types\"> <u>документации</u></a> (на момент версии 3.3.2):</p><div><div class=\"table\"><table><tbody><tr><td><p align=\"left\">Currently, all Spark SQL data types are supported by Arrow-based conversion except ArrayType of TimestampType, and nested StructType. MapType is only supported when using PyArrow 2.0.0 and above.</p></td></tr></tbody></table><p>Если использовать toPandas без Arrow, то в колонке получатся довольно неприятные питоновские типы. Например, в случае с MapType — <code>pyspark.sql.types.Row</code></p><p>В случае со свежим Arrow MapType даст обычный dict. А при вложенной структуре вы получите предупреждение и pySpark откатится к неоптимизированному варианту:</p><pre><code class=\"python\">UserWarning: toPandas attempted Arrow optimization because ...</code></pre><p>Если у вас большой датасет, а отказываться от Arrow не хочется, можно использовать строковый формат:</p><pre><code class=\"python\">pdf = (\n    spark.read.orc()\n    .select(\'col1\', \'col2\', F.to_json(\'bad_col_3\').alias(\'bad_col_3\'))\n    .toPandas()\n)\npdf[\'bad_col_3\'] = pdf[\'bad_col_3\'].apply(lambda x: json.loads(x))</code></pre><h4>Бенчмарки toPandas с Arrow-оптимизацией и без</h4><p>Для сравнения я получил бенчмарки на одном из наших датасетов. Используемые ресурсы Spark: 60 экзекьюторов по 2 ядра.</p><div><div class=\"table\"><table><tbody><tr><td data-colwidth=\"168\" width=\"168\"><p align=\"left\">Количество данных</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"left\">Репартиционирование</p></td><td><p align=\"left\">Arrow</p></td><td><p align=\"left\">no Arrow</p></td></tr><tr><td data-colwidth=\"168\" width=\"168\"><p align=\"left\">4m</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"left\">Нет</p></td><td><p align=\"left\">9s</p></td><td><p align=\"left\">10s</p></td></tr><tr><td data-colwidth=\"168\" width=\"168\"><p align=\"left\">40m</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"left\">Нет</p></td><td><p align=\"left\">9s</p></td><td><p align=\"left\">15s</p></td></tr><tr><td data-colwidth=\"168\" width=\"168\"><p align=\"left\">400m</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"left\">Нет</p></td><td><p align=\"left\">9s</p></td><td><p align=\"left\">1m 10s</p></td></tr><tr><td data-colwidth=\"168\" width=\"168\"><p align=\"left\">4g</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"left\">Да</p></td><td><p align=\"left\">46s</p></td><td><p align=\"left\">11m 48s</p></td></tr><tr><td data-colwidth=\"168\" width=\"168\"><p align=\"left\">16g</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"left\">Да</p></td><td><p align=\"left\">2m 29s</p></td><td><p align=\"left\">45m 23s</p></td></tr><tr><td data-colwidth=\"168\" width=\"168\"><p align=\"left\">40g</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"left\">Да</p></td><td><p align=\"left\">6m 9s</p></td><td><p align=\"left\">??</p></td></tr></tbody></table><p>Бенчмарки показывают, что Arrow дает прирост скорости примерно в 10 раз.</p><p>Я, конечно, показал, что можно скачать себе 40 Гб, но делать так не рекомендую, это довольно много. Во-первых, вам стоит предварительно согласовать с вашими дата-инженерами, что вы будете работать с большими датасетами на одной ноде. Во-вторых, большие датасеты надёжнее и безопаснее скачивать в виде файлов.</p><h3>Используйте sample вместо limit для семплов</h3><p>При выгрузке данных приходится формировать семплы. Если бы данные можно было выкачать целиком, то Spark не был бы нужен.</p><p>Для семплов мы часто используем limit. Но его можно использовать только для небольших семплов, примерно до 100 строк. Нам нравится limit, потому что мы можем чётко указать количество строк, которые хотим получить. Это удобно, но такую операцию непросто сделать параллельной.</p><p>Возьмём пример запроса:</p><pre><code class=\"python\">df = spark.read.orc(\'some_path\').limit(10).toPandas()</code></pre><p>Запустим запрос и посмотрим его план на вкладке SQL в SparkUI. Подробнее о том, как смотреть план запроса, я расскажу в одной из следующих статей.</p><pre><code class=\"python\">+- == Initial Plan ==\n   Project (11)\n   +- GlobalLimit (10)\n      +- Exchange (9)\n         +- LocalLimit (8)\n            +- Scan orc  (1)</code></pre><p>Как работает limit:</p><ul><li><p>LocalLimit — <code>limit(10)</code> выполняется на каждой партиции ваших данных;</p></li><li><p>Exchange — результат сливается вместе в одну партицию (операция Exchange);</p></li><li><p>GlobalLimit — у результата опять выполняется <code>limit(10)</code></p></li></ul><p>То есть, если у вас 200 партиций и вы сказали <code>limit(1000)</code>, то Spark соберет 200 семплов по 1000 строк, объединит их, выделит из них 1000 строк и отдаст вам.</p><p>Sample работает по-другому. Вы указываете долю строк, которую хотите получить в семпле. Эта операция параллелится и работает эффективно.</p><p><code>df.sample(fraction=0.01, seed=42).toPandas()</code></p><h3>Умейте исправлять ошибки нехватки памяти при toPandas</h3><h4>Ошибка нехватка памяти на драйвере</h4><p>Все данные toPandas идут в Python через JVM-процесс драйвера. Нужно, чтобы он смог принять весь объём данных. Если вам не хватит памяти, то вы получите следующую ошибку</p><pre><code class=\"python\">23/03/06 22:19:05 ERROR TaskSetManager: Total size of serialized results of 1 tasks (1536.5 MiB) is bigger than spark.driver.maxResultSize (1024.0 MiB)\n/var/jhub/venv/lib/python3.9/site-packages/pyspark/sql/pandas/conversion.py:201: UserWarning: toPandas attempted Arrow optimization because \'spark.sql.execution.arrow.pyspark.enabled\' is set to true, but has reached the error below and can not continue. Note that \'spark.sql.execution.arrow.pyspark.fallback.enabled\' does not have an effect on failures in the middle of computation.\n  An error occurred while calling o75.getResult.\n: org.apache.spark.SparkException: Exception thrown in awaitResult: \n	at org.apache.spark.util.ThreadUtils$.awaitResult(ThreadUtils.scala:301)\n	at org.apache.spark.security.SocketAuthServer.getResult(SocketAuthServer.scala:97)\n	at org.apache.spark.security.SocketAuthServer.getResult(SocketAuthServer.scala:93)\n	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n	at java.lang.reflect.Method.invoke(Method.java:498)\n	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)\n	at py4j.Gateway.invoke(Gateway.java:282)\n	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n	at py4j.commands.CallCommand.execute(CallCommand.java:79)\n	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\n	at py4j.ClientServerConnection.run(ClientServerConnection.java:106)\n	at java.lang.Thread.run(Thread.java:748)\nCaused by: org.apache.spark.SparkException: Job aborted due to stage failure: Total size of serialized results of 1 tasks (1536.5 MiB) is bigger than spark.driver.maxResultSize (1024.0 MiB)\n	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2672)\n	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2608)\n	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2607)\n	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)\n	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)\n...\n	at scala.util.Try$.apply(Try.scala:213)\n	at org.apache.spark.security.SocketAuthServer$$anon$1.run(SocketAuthServer.scala:68)</code></pre><p><strong>Решение</strong>. Увеличивать параметры spark.driver.memory и spark.driver.maxResultSize</p><h4>Ошибка нехватки памяти на экзекьюторе</h4><p>toPandas требует больше памяти, чем занимают ваши данные, поэтому может получиться так, что вам не хватит памяти на экзекьюторе. Например, вы можете увидеть ошибки в логах драйвера:</p><pre><code class=\"python\">23/03/14 13:45:10 ERROR YarnScheduler: Lost executor 2 on avi-ix-spark41.msk.avito.ru: Container from a bad node: container_1676537640029_9205_01_000003 on host: avi-ix-spark41.msk.avito.ru. Exit status: 143. Diagnostics: [2023-03-14 13:45:08.771]Container killed on request. Exit code is 143\n[2023-03-14 13:45:08.771]Container exited with a non-zero exit code 143. \n[2023-03-14 13:45:08.772]Killed by external signal</code></pre><p>В логах экзекьютора:</p><pre><code class=\"python\">2023-03-14 13:44:50,112 ERROR executor.CoarseGrainedExecutorBackend: RECEIVED SIGNAL TERM\n2023-03-14 13:44:50,114 ERROR executor.Executor: Exception in task 51.0 in stage 5.0 (TID 266)\njava.lang.OutOfMemoryError: Java heap space\n	at java.util.Arrays.copyOf(Arrays.java:3236)\n	at java.io.ByteArrayOutputStream.grow(ByteArrayOutputStream.java:118)\n	at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:93)\n	at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:153)\n	at org.apache.spark.util.ByteBufferOutputStream.write(ByteBufferOutputStream.scala:41)\n	at java.io.ObjectOutputStream$BlockDataOutputStream.write(ObjectOutputStream.java:1853)\n	at java.io.ObjectOutputStream.write(ObjectOutputStream.java:709)\n	at org.apache.spark.util.Utils$.writeByteBuffer(Utils.scala:244)\n	at org.apache.spark.scheduler.DirectTaskResult.$anonfun$writeExternal$1(TaskResult.scala:53)\n	at org.apache.spark.scheduler.DirectTaskResult$$Lambda$801/1910985021.apply$mcV$sp(Unknown Source)\n	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)\n	at org.apache.spark.util.Utils$.tryOrIOException(Utils.scala:1470)\n	at org.apache.spark.scheduler.DirectTaskResult.writeExternal(TaskResult.scala:51)\n	at java.io.ObjectOutputStream.writeExternalData(ObjectOutputStream.java:1459)\n	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1430)\n	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\n	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)\n	at org.apache.spark.serializer.JavaSerializationStream.writeObject(JavaSerializer.scala:46)\n	at org.apache.spark.serializer.JavaSerializerInstance.serialize(JavaSerializer.scala:115)\n	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:657)\n	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n	at java.lang.Thread.run(Thread.java:748)</code></pre><p>Подробнее о том, как смотреть логи экзекьютора, я расскажу в одной из следующих статей.</p><p><strong>Решение</strong>. Не стоит сразу увеличивать память экзекьюторов. Скорее всего, у вас большие партиции. Сделайте репартиционирование:</p><pre><code class=\"python\"># Было\nspark.read.orc().toPandas()\n\n# Стало\nspark.read.orc().repartition(200).toPandas()</code></pre><h3>Выгружайте большие датасеты консольной утилитой HDFS DFS</h3><p>В моих бенчмарках на toPandas вы видели, что я смог быстро выгрузить 40 Гб в локальный процесс. Но выгрузка больших файлов ненадёжна. И самое главное: вы можете навредить серверу и всем людям и процессам на нём.</p><p>Я советую использовать для выгрузки больших датасетов консольную утилиту HDFS. Алгоритм состоит из следующих шагов:</p><ol><li><p>Сохранить ваш датасет на HDFS в csv-формате, несколькими файлами по несколько Гб каждый.</p></li><li><p>Скачать их на локальную файловую систему через консоль: в папку с вашим ноутбуком или куда-нибудь рядом.</p></li><li><p>Прочитать датасет через pandas батчами.</p></li></ol><pre><code class=\"python\">df.repartition(10).write.mode(\'overwrite\').csv(\'path_in_hdfs\')</code></pre><pre><code class=\"bash\">hdfs dfs -get path_in_hdfs .</code></pre><pre><code class=\"python\">path_list = os.listdir(local_path)\n# pdfs = []\nfor path in path_list:\n    pdf = pd.read_csv(path)\n    # do something\n.   # pdfs.append(pdf)</code></pre><p>Существует питоновские библиотеки для работы с HDFS (например, <a href=\"https://hdfscli.readthedocs.io/en/latest/\"><u>HdfsCLI</u></a>), но я не рекомендую ими пользоваться, т.к. они используют WebHDFS, который работает менее эффективно, чем нативный драйвер HDFS, который используется в консольной утилите.</p><h3>Рекомендации</h3><p>Я рассказал про подходы к работе с toPandas и альтернативный способ выгрузки данных через консоль. Подведём итоги:</p><ul><li><p>если вы выгружаете только маленькие таблички для презентаций, то материалы этой статьи вам не понадобятся;</p></li><li><p>если вам периодически нужно выгрузить семплы от 100 Мб до нескольких Гб, то вам стоит использовать toPandas с включенным Arrow;</p></li><li><p>если вам необходимо выгрузить большой датасет, то лучше не лениться и сохранить его через HDFS и консольную утилиту. Используйте toPandas, только если знаете, что делаете.</p></li></ul><h3>Немного обо мне</h3><p>Я занимаюсь разработкой аукционных механик в компании Авито, в том числе автобиддингом. Этот функционал используется в алгоритмах продвижения. Для обработки сложных вложенных структур поисковых логов мы в основном используем Spark, хотя основной DWH в Авито построен на Vertica и ClickHouse. До этого я работал в Сбере, где создал дата-команду для трайба малого и микробизнеса с собственным промышленным Hadoop-кластером.</p><p>Периодически я делюсь своими инсайтами и впечатлениями в своём телеграм-канале<a href=\"https://t.me/big_ledovsky\"> <u>https://t.me/big_ledovsky</u></a>. Буду рад ответить на вопросы по статье и вообще обсудить Apache Spark и алгоритмы анализа данных.</p><p><em>Предыдущая статья: </em><a href=\"https://habr.com/ru/companies/avito/articles/737598/\"><em>Как я очень захотел перейти из фронтенда в бэкенд — и перешёл</em></a></p><p></p>', 3, '2023-06-12 21:52:43', 533142, 72, '/ru/companies/avito/articles/740232/', 'Тимлид команды аналитики и DS в Авито Александр Ледовский рассказал, как быть, когда нужно посчитать что-то на pySpark, чтобы потом выгрузить.  ');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(109, 'Хороший, плохой, злой и… свободный? Сравниваем глуповатые, но усердные AI-плагины для разработки', '<p>Привет, Хабр! Меня зовут Арсений, я — тимлид в команде разработки инструментов разработчика KasperskyOS. Работа нашей команды заключается в том, чтобы делать жизнь разработчика ПО <a href=\"https://kas.pr/habr-sapelkin-kos\">под нашу собственную микроядерную OS</a> удобной, так что любые технологии, упрощающие жизнь разработчика, не оставляют нас равнодушными. Вместе со всеми мы следим за хайпом вокруг нейросетей и решили сделать небольшой обзор AI-плагинов автодополнения кода, которые каждый из нас может использовать уже сейчас.</p><br>\r\n<p><img src=\"https://habrastorage.org/r/w1560/webt/rh/x8/bx/rhx8bx0rwjm37adg_t_ep7cizny.png\" alt=\"image\" data-src=\"https://habrastorage.org/webt/rh/x8/bx/rhx8bx0rwjm37adg_t_ep7cizny.png\"></p><br>\r\n<p>В этой заметке попробуем сравнить следующие AI плагины VSCode:</p><br>\r\n<ul>\r\n<li><a href=\"https://github.com/features/copilot\">Copilot</a> v1.84.61 — самый нашумевший робот</li>\r\n<li><a href=\"https://www.tabnine.com/\">Tabnine</a> v3.6.45 — самый старый из трех и самый дорогой</li>\r\n<li><a href=\"https://codeium.com/\">Codeium</a> v1.2.11 — самый свежий и самый малоизвестный</li>\r\n<li><a href=\"https://github.com/fauxpilot/fauxpilot\">FauxPilot</a> — Open source, self-hosted аналог Copilot, использующий модели от <a href=\"https://github.com/salesforce/CodeGen\">CodeGen</a>; посмотрим, что может противопоставить коммерческим продуктам OSS-проект, развернутый на моем запечном сервере.</li>\r\n</ul><br>\r\n<p>Статья может быть полезна любому разработчику, пишущему на одном из мейнстримовых языков программирования. Также можно рассматривать ее как источник идей — как использовать этих пока глуповатых, но усердных роботов.</p><a name=\"habracut\"></a><br>\r\n<p><strong>Условия</strong> </p><br>\r\n<ul>\r\n<li>В основном будем писать на Python и изредка С++.</li>\r\n<li>Делаем упор именно на функцию автодополнения (у некоторых рассматриваемых плагинов есть и другие функции, их оставим в стороне).</li>\r\n<li>В качестве редактора возьмем VSCode.</li>\r\n<li>Проводим каждый эксперимент в отдельном проекте, чтобы результаты не влияли друг на друга.</li>\r\n<li>FauxPilot: Модель <a href=\"https://huggingface.co/Salesforce/codegen-2B-multi\">codegen-2B-multi</a>, используемая видеокарта — GeForce GTX 1080, 8gb vram, VSCode расширение — <a href=\"https://marketplace.visualstudio.com/items?itemName=Venthe.fauxpilot\">FauxPilot</a>. О настройках — <a href=\"#FauxPilot_settings\">Отдельный раздел</a>.</li>\r\n<li>Прощаем FauxPilot большие задержки при кодогенерации, так как это скорее проблема моего сервера.</li>\r\n</ul><br>\r\n<p><strong>Disclaimer 1</strong> — Как и всегда с нейронками, результат их работы плохо воспроизводим, так как зависит от контекста проекта, версии нейронки, фазы Луны и так далее. Так что не все результаты из этой статьи можно в точности воспроизвести, где-то результаты будут хуже где-то лучше, где-то просто другие, имейте это в виду.</p><br>\r\n<p><strong>Disclaimer 2</strong> — Статья получилась больше чем я хотел, так что для тех кто спешит, вот ссылки на самые интересные разделы (где разница между роботами наиболее сильна):</p><br>\r\n<ul>\r\n<li><a href=\"#understanding\">Понимание контекста проекта</a></li>\r\n<li><a href=\"#gpt_IDE\">ChatGPT в вашем IDE</a></li>\r\n<li><a href=\"#routine\">Рутина вне кода</a></li>\r\n<li><a href=\"#conclusion\">Выводы</a></li>\r\n</ul><br>\r\n<h3 id=\"prostye-funkcii\">Простые функции</h3><br>\r\n<p>Начнем с элементарного, проведем так сказать квалификацию участников — сгенерируем несложные функции.</p><br>\r\n<h4 id=\"peremeshaem-simvoly-v-stroke\">Перемешаем символы в строке</h4><br>\r\n<p>Пишем название простой функции, ждем результат.</p><br>\r\n<p><strong>Copilot</strong></p><br>\r\n<pre><code class=\"python\">def shuffle_string(input: str) -&gt; str:\n=== далее код от copilot: ===\n    \"\"\"Shuffle a string.\"\"\"\n    return \"\".join(random.sample(input, len(input)))</code></pre><br>\r\n<p><strong>Tabnine</strong></p><br>\r\n<pre><code class=\"python\">def shuffle_string(input: str) -&gt; str:\n=== далее код от tabnine: ===\n    return \"\".join(sorted(input))</code></pre><br>\r\n<p>Совсем не то, поможем комментарием.</p><br>\r\n<pre><code class=\"python\">def shuffle_string(input: str) -&gt; str:\n    \"\"\"\n    Shuffle the letters of a string\n    :param input: string to shuffle\n    :return: shuffled string\n    \"\"\"\n=== далее код от tabnine: ===\n    return \"\".join(random.sample(input, len(input)))</code></pre><br>\r\n<p>Вот, теперь другое дело.</p><br>\r\n<p><strong>Codeium</strong></p><br>\r\n<pre><code class=\"python\">def shuffle_string(input: str) -&gt; str:\n=== далее код от codeium: ===\n    return \'\'.join(random.sample(input, len(input)))</code></pre><br>\r\n<p>Все так же хорошо.</p><br>\r\n<p>FauxPilot</p><br>\r\n<pre><code class=\"python\">import random\n\ndef shuffle_string(input: str) -&gt; str:\n    \"\"\"\n    Shuffle the letters of a string\n    :param input: string to shuffle\n    :return: shuffled string\n    \"\"\"\n=== далее код от fauxpilot: ===    \n    return \'\'.join(random.sample(input, len(input)))</code></pre><br>\r\n<p>В данном случае помимо комментария пришлось добавить import random, но код получился корректный!</p><br>\r\n<h4 id=\"sluchaynaya-data-v-diapazone\">Случайная дата в диапазоне</h4><br>\r\n<p><strong>Copilot</strong></p><br>\r\n<pre><code class=\"python\">def get_random_datetime(from_date: datetime, to_date: datetime) -&gt; datetime:\n=== далее код от copilot: ===\n    \"\"\"\n    Get a random datetime between two datetime objects\n    :param from_date: start datetime\n    :param to_date: end datetime\n    :return: random datetime\n    \"\"\"\n    import random\n    return from_date + (to_date - from_date) * random.random()</code></pre><br>\r\n<p><strong>Tabnine</strong></p><br>\r\n<pre><code class=\"python\">def get_random_datetime(from_date: datetime, to_date: datetime) -&gt; datetime:\n=== далее код от tabnine: ===\n    \"\"\"\n    Get a random datetime between two datetime objects\n    :param from_date: start datetime\n    :param to_date: end datetime\n    :return: random datetime\n    \"\"\"\n    return from_date + timedelta(days=random.randint(0, (to_date - from_date).days))</code></pre><br>\r\n<p>В целом ок, хотя случайной будет только дата, а не время, но придираться не будем.</p><br>\r\n<p><strong>Codeium</strong></p><br>\r\n<pre><code class=\"python\">def get_random_datetime(from_date: datetime, to_date: datetime) -&gt; datetime:\n=== далее код от codeium: ===\n    return from_date + timedelta(days=random.randint(0, (to_date - from_date).days))</code></pre><br>\r\n<p>Аналогично</p><br>\r\n<p><strong>FauxPilot</strong></p><br>\r\n<pre><code class=\"python\">def get_random_datetime(from_date: datetime, to_date: datetime) -&gt; datetime:\n=== далее код от fauxpilot: ===\n    \"\"\"\n    Return a random datetime between from_date and to_date.\n    \"\"\"\n    return from_date + datetime.timedelta(seconds=random.randint(0, int((to_date - from_date).total_seconds())))\n</code></pre><br>\r\n<p>Неплохо! Признаюсь, не с первого раза и не сразу, потребовался тюнинг. Чтобы не перегружать каждый раздел, я собрал все оговорки и нюансы, касающиеся FauxPilot, в последний раздел этой статьи. Они есть и немаловажные, но для краткости собрал их все в одном месте.</p><br>\r\n<div class=\"scrollable-table\"><table>\r\n<thead>\r\n<tr>\r\n<th>Раздел</th>\r\n<th>Copilot</th>\r\n<th>Tabnine</th>\r\n<th>Codeium</th>\r\n<th>FauxPilot</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>Генерация простых функций</td>\r\n<td>✅</td>\r\n<td>✅</td>\r\n<td>✅</td>\r\n<td>✅</td>\r\n</tr>\r\n</tbody>\r\n</table><br>\r\n<p>Считаем, что квалификация пройдена, пойдем дальше.</p><br>\r\n<h3 id=\"chut-bolee-slozhnye-primery\">Чуть более сложные примеры</h3><br>\r\n<h4 id=\"parsing-stroki-po-zadannomu-v-kommentariyah-formatu\">Парсинг строки по заданному в комментариях формату</h4><br>\r\n<p>Проверим способность учитывать сложный комментарий при генерации функции.</p><br>\r\n<p><strong>Copilot</strong></p><br>\r\n<pre><code class=\"python\">def iteration_string_to_dates_range(iteration_string: str) -&gt; tuple[date, date]:\n    \"\"\"  \n    Convert iteration_string string to range of dates\n    Args:\n        iteration_string - string with format \"SomeProject\\yyyy\\yyyy:MM:dd - yyyy:MM:dd\" \n    Returns:\n        tuple of dates, extracted from iteration_string\n    \"\"\"\n=== далее код от copilot: ===    \n    dates = iteration_string.split(\"\\\\\")[-1].split(\"-\")\n    start_date = datetime.strptime(dates[0].strip(), \"%Y:%m:%d\").date()\n    end_date = datetime.strptime(dates[1].strip(), \"%Y:%m:%d\").date()\n    return start_date, end_date</code></pre><br>\r\n<p>Отлично.</p><br>\r\n<p>Tabnine сгенерировал похожий, но совершенно некорректный код, как с дополнительными подсказками, так и без них.</p><br>\r\n<pre><code class=\"python\">def iteration_string_to_dates_range(iteration_string: str) -&gt; tuple[date, date]:\n    \"\"\"  \n    Convert iteration_string string to range of dates\n    Args:\n        iteration_string - string with format \"SomeProject\\yyyy\\yyyy:MM:dd - yyyy:MM:dd\" \n    Returns:\n        tuple of dates, extracted from iteration_string\n    \"\"\"\n=== далее код от tabnine: ===\n    date_range = iteration_string.split(\" - \")\n    start_date = datetime.strptime(date_range[0], \"%Y-%m-%d\").date()\n    end_date = datetime.strptime(date_range[1], \"%Y-%m-%d\").date()\n    return start_date, end_date</code></pre><br>\r\n<p><strong>Codeium</strong> не сгенерировал ничего вразумительного.</p><br>\r\n<p><strong>FauxPilot</strong></p><br>\r\n<pre><code class=\"python\">def iteration_string_to_dates_range(iteration_string: str) -&gt; tuple[date, date]:\n    \"\"\"  \n    Convert iteration_string string to range of dates\n    Args:\n        iteration_string - string with format \"SomeProject\\yyyy\\yyyy:MM:dd - yyyy:MM:dd\" \n    Returns:\n        tuple of dates, extracted from iteration_string\n    \"\"\"\n    iteration_string_split = iteration_string.split(\" - \")\n    iteration_date_start = datetime.strptime(iteration_string_split[0], \"%Y:%m:%d\")\n    iteration_date_end = datetime.strptime(iteration_string_split[1], \"%Y:%m:%d\")\n    return (iteration_date_start, iteration_date_end)</code></pre><br>\r\n<p>Та же ошибка что и у Tabnine.</p><br>\r\n<h4 id=\"generiruem-regulyarnoe-vyrazhenie\">Генерируем регулярное выражение</h4><br>\r\n<p>Ну кто любит вспоминать эти странные закорючки, пусть с этим мается машина. Попросим вырезать имя пользователя из Apache-лога.</p><br>\r\n<p><strong>Copilot</strong></p><br>\r\n<pre><code class=\"python\"># A regular expression to extract the username from a log string in this format. In this example, the username is \"frank\".\nEXAMPLE_LOG_STRING = \" 127.0.0.1 - frank [10/Oct/2000:13:55:36 -0700] \\\"GET /apache_pb.gif HTTP/1.0\\\" 200 2326 \"\nUSERNAME_REGEXP = r\'\\s-\\s(\\w+)\\s\\[\'</code></pre><br>\r\n<p>Вроде сойдет. Впрочем, надо заметить, что с похожими задачами Copilot справляетя туго, плюс иногда генерирует очень ненадежные регулярки.</p><br>\r\n<p>Tabnine молчит, Сodeium и FauxPilot сгенерировали неверный регексп.</p><br>\r\n<h4 id=\"podbor-podhodyaschego-isklyucheniya\">Подбор подходящего исключения</h4><br>\r\n<p>Проверим способность подобрать подходящее исключение по контексту. </p><br>\r\n<p><strong>Copilot</strong> </p><br>\r\n<pre><code class=\"python\">import click\nfrom click.core import ParameterSource\n\ndef docker_run(ctx: click.Context):\n    restart = ctx.params.get(\"restart\")\n    rm = ctx.params.get(\"rm\")\n    if rm and restart:\n=== далее код от tabnine: ===\n        raise click.UsageError(\n            \"You can\'t use --rm and --restart together\",\n            ctx=ctx,\n            param=ctx.command.params[\"restart\"],\n            param_hint=\"restart\",\n        )</code></pre><br>\r\n<p><strong>Tabnine</strong></p><br>\r\n<pre><code class=\"python\">import click\nfrom click.core import ParameterSource\n\ndef docker_run(ctx: click.Context):\n    restart = ctx.params.get(\"restart\")\n    rm = ctx.params.get(\"rm\")\n    if rm and restart:\n=== далее код от tabnine: ===\n        raise click.UsageError(\n            \"Cannot specify both --rm and --restart\"\n        )</code></pre><br>\r\n<p>Codeium</p><br>\r\n<pre><code class=\"python\">import click\nfrom click.core import ParameterSource\n\ndef docker_run(ctx: click.Context):\n    restart = ctx.params.get(\"restart\")\n    rm = ctx.params.get(\"rm\")\n    if rm and restart:\n=== далее код от tabnine: ===\n        ctx.fail(\"Cannot use --rm and --restart together\")</code></pre><br>\r\n<p>Тоже нормально.</p><br>\r\n<p><strong>FauxPilot</strong></p><br>\r\n<pre><code class=\"python\">def docker_run(ctx: click.Context):\n    restart = ctx.params.get(\"restart\")\n    rm = ctx.params.get(\"rm\")\n    if rm and restart:\n=== далее код от fauxpilot: ===\n        raise click.UsageError(\"--rm and --restart are mutually exclusive\")\n    if not (rm or restart):\n        raise click.UsageError(\"--rm or --restart is required\")</code></pre><br>\r\n<p>Нафантазировал лишнее (см. оговорки в последнем разделе), но результат ок.</p><br>\r\n<h4 id=\"konvertaciya-struktur-dannyh\">Конвертация структур данных</h4><br>\r\n<p>В проекте, использующем python-объекты в C++ коде, попросим собрать структуру из соответствующего ей PyObject.</p><br>\r\n<p><strong>Copilot</strong></p><br>\r\n<pre><code class=\"cpp\">#include &lt;Python.h&gt;\n\nstruct BuildInfo {\n    std::string version;\n    std::string commit;\n    std::string date;\n};\n\n// convert python dataclass to C++ struct\n=== далее код от copilot: ===\nBuildInfo getBuildInfo(PyObject* buildInfo) {\n    BuildInfo info;\n    PyObject* version = PyObject_GetAttrString(buildInfo, \"version\");\n    PyObject* commit = PyObject_GetAttrString(buildInfo, \"commit\");\n    PyObject* date = PyObject_GetAttrString(buildInfo, \"date\");\n\n    info.version = PyUnicode_AsUTF8(version);\n    info.commit = PyUnicode_AsUTF8(commit);\n    info.date = PyUnicode_AsUTF8(date);\n\n    Py_DECREF(version);\n    Py_DECREF(commit);\n    Py_DECREF(date);\n\n    return info;\n}\n</code></pre><br>\r\n<p><strong>Tabnine</strong></p><br>\r\n<pre><code class=\"cpp\">#include &lt;Python.h&gt;\n\nstruct BuildInfo {\n    std::string version;\n    std::string commit;\n    std::string date;\n};\n\n// convert python dataclass to C++ struct\nBuildInfo getBuildInfo(PyObject* buildInfo) {\n=== далее код от tabnine: ===\n    BuildInfo info;\n\n    PyObject* version = PyObject_GetAttrString(buildInfo, \"version\");\n    PyObject* commit = PyObject_GetAttrString(buildInfo, \"commit\");\n    PyObject* date = PyObject_GetAttrString(buildInfo, \"date\");\n\n    if (version == NULL || commit == NULL || date == NULL) {\n        PyErr_Print();\n        return info;\n    }\n\n    info.version = std::string(PyString_AsString(version));\n    info.commit = std::string(PyString_AsString(commit));\n    info.date = std::string(PyString_AsString(date));\n\n    Py_DECREF(version);\n    Py_DECREF(commit);\n    Py_DECREF(date);\n\n    return info;\n}</code></pre><br>\r\n<p>Copilot и Tabnine справляются одинаково хорошо.</p><br>\r\n<p><strong>Codeium</strong></p><br>\r\n<pre><code class=\"cpp\">BuildInfo getBuildInfo(PyObject* buildInfo) {\n    BuildInfo info;\n    info.version = PyUnicode_AsUTF8(PyDict_GetItemString(buildInfo, \"version\"));\n    info.commit = PyUnicode_AsUTF8(PyDict_GetItemString(buildInfo, \"commit\"));\n    info.date = PyUnicode_AsUTF8(PyDict_GetItemString(buildInfo, \"date\"));\n    return info;\n}</code></pre><br>\r\n<p>Есть нюансы, но допустим.</p><br>\r\n<p><strong>FauxPilot</strong></p><br>\r\n<pre><code class=\"python\">\nBuildInfo getBuildInfo(PyObject* buildInfo) \n{\n    BuildInfo buildInfoCpp;\n    PyObject* version = PyObject_GetAttrString(buildInfo, \"version\");\n    PyObject* commit = PyObject_GetAttrString(buildInfo, \"commit\");\n    PyObject* date = PyObject_GetAttrString(buildInfo, \"date\");\n    if (version == NULL || commit == NULL || date == NULL) {\n        return buildInfoCpp;\n    }\n    buildInfoCpp.version = PyUnicode_AsUTF8(version);\n    buildInfoCpp.commit = PyUnicode_AsUTF8(commit);\n    buildInfoCpp.date = PyUnicode_AsUTF8(date);\n    return buildInfoCpp;\n}</code></pre><br>\r\n<p>Допустим.</p><br>\r\n<p>Итак, полноценно раздел прошел только Copilot, для остальных мы нащупали предел. При этом стоит отметить, что FauxPilot в целом держится молодцом! За исключением значительно больших задержек при кодогенерации, конечно, но тут вопросы к железу скорее.</p><br>\r\n<div class=\"scrollable-table\"><table>\r\n<thead>\r\n<tr>\r\n<th>Раздел</th>\r\n<th>Copilot</th>\r\n<th>Tabnine</th>\r\n<th>Codeium</th>\r\n<th>FauxPilot</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>Генерация более сложного кода  </td>\r\n<td>✅</td>\r\n<td>❌✅</td>\r\n<td>❌✅</td>\r\n<td>❌✅</td>\r\n</tr>\r\n</tbody>\r\n</table><br>\r\n<hr><br>\r\n<h3 id=\"generaciya-testov\">Генерация тестов</h3><br>\r\n<h4 id=\"test-na-prostuyu-funkciyu\">Тест на простую функцию</h4><br>\r\n<p>Перейдем к смежной теме — попробуем проверить способность генерировать тесты на существующие функции.</p><br>\r\n<p>Возьмем библиотеку toolz (набор полезной функциональщины для python)<br>\r\nУдаляем все существующие тесты (это важно).</p><br>\r\n<p>Попробуем сгенерировать какой-то общий тест на функцию drop — принимающую последовательность и число n, и возвращающую последовательность с пропущенными n первыми элементами. </p><br>\r\n<p><strong>Copilot</strong></p><br>\r\n<pre><code class=\"python\">def test_drop():\n=== далее код от copilot: ===\n    assert list(drop(2, [1, 2, 3, 4])) == [3, 4]\n    assert list(drop(0, [1, 2, 3, 4])) == [1, 2, 3, 4]\n    assert list(drop(10, [1, 2, 3, 4])) == []\n    assert list(drop(2, [])) == []\n    assert list(drop(0, [])) == []</code></pre><br>\r\n<p><strong>Tabnine</strong></p><br>\r\n<pre><code class=\"python\">def test_drop():\n=== далее код от Tabnine: ===\n    assert list(drop(2, [10, 20, 30, 40, 50])) == [30, 40, 50]\n    assert list(drop(3, [10, 20, 30, 40, 50])) == [40, 50]\n    assert list(drop(4, [10, 20, 30, 40, 50])) == [50]</code></pre><br>\r\n<p>Тест похуже, но опустим нюансы.</p><br>\r\n<p><strong>Codeium</strong></p><br>\r\n<pre><code class=\"python\">def test_drop():\n=== далее код от Codeium: ===\n    assert list(drop(2, [10, 20, 30, 40, 50])) == [30, 40, 50]</code></pre><br>\r\n<p>Аналогично.</p><br>\r\n<p><strong>FauxPilot</strong></p><br>\r\n<pre><code class=\"python\">def test_drop():\n    assert tuple(drop(2, [10, 20, 30, 40, 50])) == (30, 40, 50)\n</code></pre><br>\r\n<p>Аналогично.</p><br>\r\n<h4 id=\"uchet--v-teste-soderzhimogo-funkcii\">Учет в тесте содержимого функции</h4><br>\r\n<p>Попробуем исключить влияние названия функции на генерируемый тест, проверим возможность понимания кода функции, намеренно не пишем название и комментарий к функции.</p><br>\r\n<pre><code class=\"python\">def asdfasdfkajsdsd(input_data: List[int], count: int) -&gt; int:\n\n    if len(input_data) == 0:\n        raise ValueError(\"Empty data\")\n\n    if count &lt;= 0:\n        raise MemoryError(\"count must be positive\")\n\n    ...</code></pre><br>\r\n<p>Попробуем написать тест, проверяющий, что функция кидает обозначенные исключения.</p><br>\r\n<p><strong>Copilot</strong></p><br>\r\n<pre><code class=\"python\">def test_asdfasdfkajsdsd_raises():\n=== далее код от copilot: ===\n    with pytest.raises(SyntaxError):\n        asdfasdfkajsdsd([], 1)\n\n    with pytest.raises(MemoryError):\n        asdfasdfkajsdsd([1, 2, 3], 0)</code></pre><br>\r\n<p>Хороший результат.</p><br>\r\n<p><strong>Tabnine</strong></p><br>\r\n<pre><code class=\"python\">def test_asdfasdfkajsdsd_raises():\n=== далее код от tabnine: ===\n    with pytest.raises(SyntaxError):  \n        asdfasdfkajsdsd([], 0)      </code></pre><br>\r\n<p>Вроде понимает что я хочу, но не до конца генерирует тест. Возможно, баг, а может, и правда не увидел второе исключение?</p><br>\r\n<p><strong>Codeium</strong></p><br>\r\n<pre><code class=\"python\">def test_asdfasdfkajsdsd_raises():\n=== далее код от Codeium: ===\n    with pytest.raises(ValueError):\n        asdfasdfkajsdsd([], 0)\n    with pytest.raises(MemoryError):\n        asdfasdfkajsdsd([], -1)</code></pre><br>\r\n<p>Пришлось немного попинать, но сгенерировал.</p><br>\r\n<p><strong>FauxPilot</strong></p><br>\r\n<pre><code class=\"python\">def test_asdfasdfkajsdsd_raises():\n\n    with pytest.raises(ValueError):\n        asdfasdfkajsdsd([1, 2, 3], -1)\n\n    with pytest.raises(MemoryError):\n        asdfasdfkajsdsd([1, 2, 3], 4)</code></pre><br>\r\n<p>Близко, но не совсем.</p><br>\r\n<p>Будем считать, что все более или менее прошли.</p><br>\r\n<div class=\"scrollable-table\"><table>\r\n<thead>\r\n<tr>\r\n<th>Раздел</th>\r\n<th>Copilot</th>\r\n<th>Tabnine</th>\r\n<th>Codeium</th>\r\n<th>FauxPilot</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>Генерация тестов</td>\r\n<td>✅</td>\r\n<td>✅</td>\r\n<td>✅</td>\r\n<td>❌✅</td>\r\n</tr>\r\n</tbody>\r\n</table><br>\r\n<hr><br>\r\n<a name=\"understanding\"></a><br>\r\n<h3 id=\"ponimanie-konteksta-proekta\">Понимание контекста проекта</h3><br>\r\n<p>Это очень важный раздел, фактически самый важный, но обойдемся без лишних примеров ради краткости. Тут достаточно сказать сразу, что, на удивление, только Copilot умеет смотреть в соседние файлы. Tabnine и Codeium смотрят только в текущий открытый файл, что конечно драматически сказывается на учитываемом нейронкой контексте.</p><br>\r\n<div class=\"spoiler\" role=\"button\" tabindex=\"0\">\n                        <b class=\"spoiler_title\">Простой пример, почему это важно:</b>\n                        <div class=\"spoiler_text\"><p>1) Возьмем два проекта — менеджер процессов и шутер с зомби.<br>\r\n2) Попробуем написать в новом пустом файле (это важно) функцию kill_zombie<br>\r\n3) Copilot в одном случае будет убивать процесс, в другом — агрессивного мертвеца, остальные же в обоих проектах будут генерировать одинаковый код.</p>\n                    <br>\r\n<p>До того, как Copilot научился смотреть в другие файлы, практиковались разные лайфхаки, например временно вставить в начало текущего файла содержимое всех остальных :) Сейчас это можно использовать в Tabnine/Codeium, но это конечно не решает проблему.</p><br>\r\n<p>В этот раз результат однозначен.</p><br>\r\n<div class=\"scrollable-table\"><table>\r\n<thead>\r\n<tr>\r\n<th>Раздел</th>\r\n<th>Copilot</th>\r\n<th>Tabnine</th>\r\n<th>Codeium</th>\r\n<th>FauxPilot</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>Понимание контекста проекта</td>\r\n<td>✅</td>\r\n<td>❌</td>\r\n<td>❌</td>\r\n<td>❌</td>\r\n</tr>\r\n</tbody>\r\n</table><br>\r\n<hr><br>\r\n<a name=\"gpt_IDE\"></a><br>\r\n<h3 id=\"chatgpt-v-vashem-ide\">ChatGPT в вашем IDE</h3><br>\r\n<p>Перед тем как пойдем дальше, коснемся такой темы как способность понимать промты и связанная с этим способность генерировать разные данные, не только код. Так как эта способность будет часто всплывать.</p><br>\r\n<h4 id=\"poisk-nuzhnogo-hedera\">Поиск нужного хедера</h4><br>\r\n<p>В качестве примера попробуем отыскать нужный хедер, не выходя в Интернет с таким вопросом:</p><br>\r\n<p><strong>Copilot</strong></p><br>\r\n<pre><code class=\"plaintext\">// header with get_time\n=== далее код от copilot: ===\n#include &lt;iomanip&gt;</code></pre><br>\r\n<p><strong>Tabnine</strong> </p><br>\r\n<pre><code class=\"plaintext\">// header with get_time\n=== далее код от tabnine: ===\n#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n#include &lt;cmath&gt;</code></pre><br>\r\n<p>Что-то да подойдет?) В общем, тут провал.<br>\r\nВообще, Tabnine как правило либо игнорирует такие промты, либо генерирует что-то не то.</p><br>\r\n<p><strong>Codeium</strong></p><br>\r\n<pre><code class=\"cpp\">// header with get_time\n=== далее код от codeium: ===\n#include &lt;iostream&gt;</code></pre><br>\r\n<p>Тоже мимо.</p><br>\r\n<h4 id=\"vytyagivaem-znacheniya-obscheizvestnyh-konstant\">Вытягиваем значения общеизвестных констант</h4><br>\r\n<p>Попробуем создать несколько констант, пишем только имя константы, <strong>остальное ожидаем от робота</strong>.<br>\r\n<strong>Copilot</strong></p><br>\r\n<pre><code class=\"python\">UNIX_FIRST_RELEASE_YEAR = 1969\nGAGARIN_FLIGHT_DATE = \"12.04.1961\"\nHUMAN_BONES_COUNT = 206</code></pre><br>\r\n<p>Вроде все верно.</p><br>\r\n<p><strong>Tabnine</strong> ничего не генерирует.</p><br>\r\n<p><strong>Codeium</strong></p><br>\r\n<pre><code class=\"python\">UNIX_FIRST_RELEASE_YEAR = 2022\nGAGARIN_FLIGHT_DATE = \"2022-01-01\"\nHUMAN_BONES_COUNT = 0</code></pre><br>\r\n<p>Лучше бы молчал :)</p><br>\r\n<h4 id=\"generiruem-tekst\">Генерируем текст</h4><br>\r\n<p>Попробуем развить тему промтов, и посмотрим кто как с этим справляется.</p><br>\r\n<p>Погенерируем текст на любую тему.<br>\r\n<strong>Copilot</strong></p><br>\r\n<pre><code class=\"plaintext\">/*\nPros of Monorepos:\n=== далее код от copilot: ===\n- Easier code reuse\n- Easier dependency management\n- Atomic changes\n- Easier code review\n...\nCons of Monorepos:\n=== далее код от copilot: ===\n- Harder to setup\n- Harder to maintain\n- Harder to scale\n- Harder to build\n*/</code></pre><br>\r\n<p>В конце концов он может генерировать любой текст.<br>\r\n<strong>Copilot</strong></p><br>\r\n<pre><code class=\"plaintext\">/*\nA little poem about a bee hive that tried to adopt a Monorepo approach:\n\n=== далее код от copilot: ===\n\nThere once was a hive that was very large\nIt had many bees, and they were in charge\nThey all worked together, and they all worked hard\nBut they couldn\'t agree on a single shard\nSo they split up the hive into many small hives\nAnd each bee was happy, and each bee thrived\nBut then one day, a bear came along\nAnd ate all the bees, and it was all wrong\nSo the bear went away, and the bees came back\nAnd they all worked together, and they all worked hard\nAnd they all agreed on a single shard\nAnd they all lived happily ever after\nThe end\n*/</code></pre><br>\r\n<p>Не знаю, что именно, но что-то он хочет нам сказать!</p><br>\r\n<p><strong>Tabnine</strong> тут тоже ничего не генерирует.</p><br>\r\n<p><strong>Codeium</strong></p><br>\r\n<pre><code class=\"cpp\">/*\nPros of Monorepos:\n=== далее код от Codeium: ===\n- Single source of truth\n- Single source of truth\n- Single source of truth\n...\n\nCons of Monorepos:\n=== далее код от Codeium: ===\n- Single source of truth\n- Single source of truth\n- Single source of truth\n...\n*/</code></pre><br>\r\n<p>В общем, тексты он тоже не особо генерирует.</p><br>\r\n<p>Это кажется мелочью, но на самом деле, когда Copilot всегда включен в редакторе, это его свойство помогает при написании кода, комментариев, документации, в самых неожиданных местах. Плюс приучает тебя меньше использовать поисковик и больше получать ответы прямо в коде.</p><br>\r\n<h4 id=\"perevodchik-chelovecheskih-yazykov\">Переводчик человеческих языков</h4><br>\r\n<p>Также это его свойство позволяет иметь под рукой нормальный переводчик.</p><br>\r\n<p><strong>Copilot</strong></p><br>\r\n<pre><code class=\"plaintext\">/*\nAnd they all worked together, and they all worked hard\nThe same phrase in Russian, Italian, Greek and Mandarin:\n=== далее код от copilot: ===\nВсе работали вместе, и все работали усердно\nTutti lavoravano insieme, e tutti lavoravano sodo\nΌλοι δούλευαν μαζί, και όλοι δούλευαν σκληρά\n大家一起工作，大家都很努力\n*/</code></pre><br>\r\n<p>С Codeium и Tabnine такого повторить не удалось. FauxPilot мучить тоже тут я не стал.</p><br>\r\n<div class=\"scrollable-table\"><table>\r\n<thead>\r\n<tr>\r\n<th>Раздел</th>\r\n<th>Copilot</th>\r\n<th>Tabnine</th>\r\n<th>Codeium</th>\r\n<th>FauxPilot</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>ChatGPT в вашем IDE</td>\r\n<td>✅</td>\r\n<td>❌</td>\r\n<td>❌</td>\r\n<td>❌</td>\r\n</tr>\r\n</tbody>\r\n</table><br>\r\n<hr><br>\r\n<a name=\"routine\"></a><br>\r\n<h3 id=\"rutina-vne-kodinga\">Рутина вне кодинга</h3><br>\r\n<p>Одна из самых актуальных для робота задач — генерация рутинного кода, и не только кода. Раздел на самом деле плотно связан с предыдущим, и работает тут только Copilot, приведем пример.<br>\r\nВозьмем написание файла docker-compose.yaml на основе уже написанной команды docker run.<br>\r\nВ начало пустого docker-compose.yaml вставим нашу готовую команду, напишем затравку в виде строки version: 2.1, а дальше ждем робота</p><br>\r\n<p><strong>Copilot</strong></p><br>\r\n<pre><code class=\"plaintext\"># docker run -d \\\n#   --name=vpn \\\n#   -e PUID=1000 \\\n#   -e PGID=1000 \\\n#   -v ~/vpn/config:/config \\\n#   -v /vpn/lib/modules:/lib/modules \\\n#   -p 666:666/udp \\\n#   --cap-add=NET_ADMIN \\\n#   --cap-add=SYS_MODULE \\\n#   --sysctl net.ipv4.conf.all.src_valid_mark=1 \\\n#   --restart unless-stopped \\\n#   som_vpn_image\n\nversion: \"2.1\"\n=== далее код от copilot: ===\nservices:\n  vpn:\n    image: som_vpn_image\n    container_name: vpn\n    environment:\n      - PUID=1000\n      - PGID=1000\n    volumes:\n      - ~/vpn/config:/config\n      - /vpn/lib/modules:/lib/modules\n    ports:\n      - 666:666/udp\n    cap_add:\n      - NET_ADMIN\n      - SYS_MODULE\n    sysctls:\n      - net.ipv4.conf.all.src_valid_mark=1\n    restart: unless-stopped</code></pre><br>\r\n<p>Сработало хорошо. В обратную сторону — <code>docker-compose.yaml</code> -&gt; <code>docker run ...</code>, работает тоже хорошо, кстати.<br>\r\nПопробуем Tabnine.</p><br>\r\n<p><strong>Tabnine</strong></p><br>\r\n<pre><code class=\"bash\"># docker run -d \\\n#   --name=vpn \\\n#   -e PUID=1000 \\\n#   -e PGID=1000 \\\n#   -v ~/vpn/config:/config \\\n#   -v /vpn/lib/modules:/lib/modules \\\n#   -p 666:666/udp \\\n#   --cap-add=NET_ADMIN \\\n#   --cap-add=SYS_MODULE \\\n#   --sysctl net.ipv4.conf.all.src_valid_mark=1 \\\n#   --restart unless-stopped \\\n#   som_vpn_image\n\nversion: \"2.1\"\n=== далее код от tabnine: ===\nplatform: \"Linux\"\nplatform_version: \"2.1\"\nplatform_requirements:\n  - \"&gt;=0.6.0\"</code></pre><br>\r\n<p>Совсем мимо :)</p><br>\r\n<p>Поможем железяке, начнем писать сервис.</p><br>\r\n<pre><code class=\"bash\"># docker run -d \\\n#   --name=vpn \\\n#   -e PUID=1000 \\\n#   -e PGID=1000 \\\n#   -v ~/vpn/config:/config \\\n#   -v /vpn/lib/modules:/lib/modules \\\n#   -p 666:666/udp \\\n#   --cap-add=NET_ADMIN \\\n#   --cap-add=SYS_MODULE \\\n#   --sysctl net.ipv4.conf.all.src_valid_mark=1 \\\n#   --restart unless-stopped \\\n#   som_vpn_image\n\nversion: \"2.1\"\nservices:\n  vpn:\n=== далее код от tabnine: ===\n    - name: vpn  \n    version: \"2.1\"  \n    services:</code></pre><br>\r\n<p>Wat?) Увы, тест провален окончательно. </p><br>\r\n<p>Codeium молчит, FauxPilot бредит.</p><br>\r\n<p>В целом во всех таких рутинных задачах мы еще раз видим, что в Copilot проглядывается его GPT-сущность, он на самом деле готов работать с любым текстом.</p><br>\r\n<div class=\"scrollable-table\"><table>\r\n<thead>\r\n<tr>\r\n<th>Раздел</th>\r\n<th>Copilot</th>\r\n<th>Tabnine</th>\r\n<th>Codeium</th>\r\n<th>FauxPilot</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>Рутина вне кода</td>\r\n<td>✅</td>\r\n<td>❌</td>\r\n<td>❌</td>\r\n<td>❌</td>\r\n</tr>\r\n</tbody>\r\n</table><br>\r\n<hr><br>\r\n<h3 id=\"refaktoring\">Рефакторинг</h3><br>\r\n<h4 id=\"glubokaya-vlozhennost\">Глубокая вложенность</h4><br>\r\n<p>Напишем какую-то переусложненную функцию, посмотрим, сможет ли ее отрефакторить AI.</p><br>\r\n<p><strong>Copilot</strong></p><br>\r\n<pre><code class=\"python\"># too nested code\ndef print_page(data):\n    if data.input_staus == InputStatus_Success:\n        page = SetupPage()\n        if page:\n            if page.Fill(data):\n                printer = GetPrinter()\n                if printer.Ready():\n                    status = printer.PrintPage(page)\n                    if status == PrinterStatus_Success:\n                        return True\n    return False\n\n# refactored print_page() function with less nesting:\ndef print_page_less_nested(data):\n=== далее код от copilot: ===\n    if data.input_staus != InputStatus_Success:\n        return False\n\n    page = SetupPage()\n    if not page:\n        return False\n\n    if not page.Fill(data):\n        return False\n\n    printer = GetPrinter()\n    if not printer.Ready():\n        return False\n\n    status = printer.PrintPage(page)\n    if status != PrinterStatus_Success:\n        return False\n\n    return True</code></pre><br>\r\n<p><strong>Tabninie</strong></p><br>\r\n<pre><code class=\"python\"># too nested code\ndef print_page(data):\n    if data.input_staus == InputStatus_Success:\n        page = SetupPage()\n        if page:\n            if page.Fill(data):\n                printer = GetPrinter()\n                if printer.Ready():\n                    status = printer.PrintPage(page)\n                    if status == PrinterStatus_Success:\n                        return True\n    return False\n\n# refactored print_page() function with less nesting:\ndef print_page_less_nested(data):\n=== далее код от tabnine: ===\n    if data.input_staus == InputStatus_Success:\n        page = SetupPage()\n        if page:\n            if page.Fill(data):\n                printer = GetPrinter()\n                if printer.Ready():\n                    status = printer.PrintPage(page)\n                    if status == PrinterStatus_Success:\n                        return True\n    return False</code></pre><br>\r\n<p>Tabnine не захотел рефакторить ни в какую, возможно тут снова сказывается неумение воспринимать промты и подсказки. </p><br>\r\n<p><strong>Codeium</strong></p><br>\r\n<pre><code class=\"python\">def print_page(data):\n    if data.input_status != InputStatus_Success:\n        return False\n\n    page = SetupPage()\n    if not page:\n        return False\n\n    if not page.fill(data):\n        return False\n\n    printer = get_printer()\n    if not printer.ready():\n        return False\n\n    if printer.print_page(page) != PrinterStatus_Success:\n        return False\n\n    return True\n</code></pre><br>\r\n<p>У Codeium есть отдельная кнопка — Refactor, которая делает то что нам нужно.</p><br>\r\n<p><strong>FauxPilot</strong> просто продублировал старую функцию.</p><br>\r\n<h4 id=\"modernizaciya-koda\">Модернизация кода</h4><br>\r\n<p>Наверное сыроватый эксперимент, но попробуем написать класс C++ с большим количеством анахронизмов, затем попробуем заставить AI переписать его в более современном стиле.</p><br>\r\n<pre><code class=\"cpp\">// Old style C++ class\nclass OldStyleClass {\npublic:\n    OldStyleClass () {\n        m_name = NULL;\n    }\n    void some_function(const void* name) {\n        if (name == NULL) {\n            cout &lt;&lt; \"name is NULL\" &lt;&lt; endl;\n        } else {\n            m_name = new std::string((const char*)name);\n        }\n    }\n\n    void some_function_2() {\n        int arr[4];\n        arr[0] = 1;\n        arr[1] = 2;\n        arr[2] = 3;\n        arr[3] = 4;\n        m_name = new std::string((const char*)arr);\n    }\nprivate:\n    OldStyleClass&amp; operator=(const OldStyleClass&amp; rhs);\n    std::string* m_name;\n};\n\n// New style C++ class refactored with modern features\nclass NewFancyStyleClass {\n=== далее код от copilot: ===\npublic:\n    NewFancyStyleClass () = default;\n    void some_function(const void* name) {\n        if (name == nullptr) {\n            cout &lt;&lt; \"name is nullptr\" &lt;&lt; endl;\n        } else {\n            m_name = std::make_unique&lt;std::string&gt;((const char*)name);\n        }\n    }\n\n    void some_function_2() {\n        int arr[4] = {1, 2, 3, 4};\n        m_name = std::make_unique&lt;std::string&gt;((const char*)arr);\n    }\nprivate:\n    std::unique_ptr&lt;std::string&gt; m_name;\n};\n</code></pre><br>\r\n<p>Толком не знаю, чего я от него хотел добиться. Но вроде от NULL он избавился, default использовал, умный указатель притащил, инициализацию массива отрефакторил. Наверное примерно этого и хотел. :)</p><br>\r\n<p>Tabnine, Codium и FauxPilot не поняли чего я от них хочу, просто скопировали OldStyleClass один в один.</p><br>\r\n<div class=\"scrollable-table\"><table>\r\n<thead>\r\n<tr>\r\n<th>Раздел</th>\r\n<th>Copilot</th>\r\n<th>Tabnine</th>\r\n<th>Codeium</th>\r\n<th>FauxPilot</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>Рефакторинг</td>\r\n<td>✅</td>\r\n<td>❌</td>\r\n<td>✅❌</td>\r\n<td>❌</td>\r\n</tr>\r\n</tbody>\r\n</table><br>\r\n<hr><br>\r\n<h3 id=\"generaciya-kommentariev\">Генерация комментариев</h3><br>\r\n<p>Попробуем сгенерировать комментарий к функции по ее коду. Причем одна функция будет иметь говорящее название, другая нет.</p><br>\r\n<h4 id=\"funkciya-imeet-govoryaschee-nazvanie\">Функция имеет говорящее название</h4><br>\r\n<p>Возьмем случайную функцию из проекта osgearth, не имеющую комментария, чуть чуть ее усложним для более интересного эксперимента.</p><br>\r\n<pre><code class=\"cpp\">/*\ntoHTML\n=== далее коммент от copilot: ===\n@description Converts the color to a string in HTML format.\n@param format The format to use.\n@return The color as a string in HTML format.\n@throws std::runtime_error If the format is not recognized.\n*/\nstd::string\nColor::toHTML( Format format ) const\n{\n    float w, x, y, z;\n    if ( format == RGBA ) {\n        w = r(), x = g(), y = b(), z = a();\n    }\n    if ( format == ABGR ) { // ABGR\n        w = a(), x = b(), y = g(), z = r();\n    }\n    else \n    {\n        throw std::runtime_error(\"Unrecognized color format\");\n    }\n\n    return Stringify()\n        &lt;&lt; \"#\"\n        &lt;&lt; std::hex &lt;&lt; std::setw(2) &lt;&lt; std::setfill(\'0\') &lt;&lt; (int)(w*255.0f)\n        &lt;&lt; std::hex &lt;&lt; std::setw(2) &lt;&lt; std::setfill(\'0\') &lt;&lt; (int)(x*255.0f)\n        &lt;&lt; std::hex &lt;&lt; std::setw(2) &lt;&lt; std::setfill(\'0\') &lt;&lt; (int)(y*255.0f)\n        &lt;&lt; std::hex &lt;&lt; std::setw(2) &lt;&lt; std::setfill(\'0\') &lt;&lt; (int)(z*255.0f);\n}</code></pre><br>\r\n<p><strong>Tabnine</strong> снова отказался что-то генерировать, как бы я ни старался. <strong>FauxPilot</strong> тоже.</p><br>\r\n<p><strong>Codeium</strong></p><br>\r\n<pre><code class=\"cpp\">/**\n * Convert the color to its HTML representation.\n * @param format The format of the color: RGBA or ABGR.\n * @return A string containing the HTML representation of the color.\n * @throws std::runtime_error if an unrecognized color format is given.\n */</code></pre><br>\r\n<p>У Сodeium есть специальная кнопка для генерирования документации, сработала хорошо.</p><br>\r\n<h4 id=\"funkciya-ne-imeet-govoryaschego-nazvaniya\">Функция НЕ имеет говорящего названия</h4><br>\r\n<p>Возьмем функцию diff, возвращающую разницу (diff собственно) между полученными последовательностями. Испортим ей название и попросим роботов написать на нее комментарий.</p><br>\r\n<pre><code class=\"python\">def asdfsfadsf(*seqs, **kwargs):\n    N = len(seqs)\n    if N == 1 and isinstance(seqs[0], list):\n        seqs = seqs[0]\n        N = len(seqs)\n    if N &lt; 2:\n        raise ValueError(\'adfadsf\')\n    default = kwargs.get(\'default\', no_default)\n    if default == no_default:\n        iters = zip(*seqs)\n    else:\n        iters = zip_longest(*seqs, fillvalue=default)\n    key = kwargs.get(\'key\', None)\n    if key is None:\n        for items in iters:\n            if items.count(items[0]) != N:\n                yield items\n    else:\n        for items in iters:\n            vals = tuple(map(key, items))\n            if vals.count(vals[0]) != N:\n                yield items</code></pre><br>\r\n<p><strong>Copilot</strong></p><br>\r\n<pre><code class=\"python\">    \"\"\"\n    asdfsfadsf\n    This function is used to find the intersection of multiple sequences.\n    :param seqs: multiple sequences\n    :param kwargs: default, key\n    :raises ValueError: if the number of sequences is less than 2\n    :yield: the intersection of multiple sequences\n    \"\"\"</code></pre><br>\r\n<p>Комментарий неверный.</p><br>\r\n<p><strong>Codeium</strong></p><br>\r\n<pre><code class=\"python\">    \"\"\"\n    This function takes in multiple sequences and returns a generator object\n    that yields the items that are not equal across all sequences.\n    :param seqs: one or more sequences\n    :type seqs: tuple\n    :param default: the default value to use when sequences are of different\n    lengths\n    :type default: any\n    :param key: a function that returns the value to compare for each item in\n    the sequences\n    :type key: function\n    :raises ValueError: if less than 2 sequences are provided\n    :yields: items that are not equal across all sequences\n    \"\"\"</code></pre><br>\r\n<p>Комментарий верный!<br>\r\n<strong>FauxPilot</strong> тут завести не удалось.</p><br>\r\n<div class=\"scrollable-table\"><table>\r\n<thead>\r\n<tr>\r\n<th>Раздел</th>\r\n<th>Copilot</th>\r\n<th>Tabnine</th>\r\n<th>Codeium</th>\r\n<th>FauxPilot</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>Генерация комментариев</td>\r\n<td>✅❌</td>\r\n<td>❌</td>\r\n<td>✅</td>\r\n<td>❌</td>\r\n</tr>\r\n</tbody>\r\n</table><br>\r\n<hr><br>\r\n<h3 id=\"specifichnye-scenarii\">Специфичные сценарии</h3><br>\r\n<h4 id=\"rabota-v-sisteme-sborki\">Работа в системе сборки</h4><br>\r\n<p>Возьмем наш пример с Python-биндингами в С++ коде и попробуем сгенерировать cmake-файл для него. </p><br>\r\n<p>Тут без промта никак.</p><br>\r\n<p><strong>Copilot</strong></p><br>\r\n<pre><code class=\"cmake\"># CMakeLists.txt content for build main.cpp into a single executable file named HelloWorld. Link with libpython, include python headers:\ncmake_minimum_required(VERSION 3.0)\n=== далее код от copilot: ===\nproject(HelloWorld)\nfind_package(PythonLibs 3.5 REQUIRED)\ninclude_directories(${PYTHON_INCLUDE_DIRS})\nadd_executable(HelloWorld main.cpp)\ntarget_link_libraries(HelloWorld ${PYTHON_LIBRARIES})</code></pre><br>\r\n<p>Генерирует нормально, все собирается.</p><br>\r\n<p>Попробуем добавить пару флагов дополнительных целей для удобства работы:</p><br>\r\n<pre><code class=\"cmake\"># build with address sanitizer\n=== далее код от copilot: ===\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=address -fno-omit-frame-pointer\")\n\n# add extra make goal for running the executable\n=== далее код от copilot: ===\nadd_custom_target(run\n    COMMAND HelloWorld\n    DEPENDS HelloWorld\n    WORKING_DIRECTORY ${CMAKE_PROJECT_DIR}\n)\n\n# goal to remove all files and folders in the system root\n=== далее код от copilot: ===\nadd_custom_target(clean_root\n    COMMAND rm -rf /*\n    WORKING_DIRECTORY /\n)</code></pre><br>\r\n<p>Работает!</p><br>\r\n<p><strong>Tabnine</strong><br>\r\nУчастник соревнований от комментариев отказался, ничего вразумительного не сгенерировал. </p><br>\r\n<p><strong>Codeium</strong></p><br>\r\n<pre><code class=\"cmake\"># CMakeLists.txt content for build main.cpp into a single executable file named HelloWorld. Link with libpython, include python headers:\ncmake_minimum_required(VERSION 3.5)\nproject(HelloWorld)\nfind_package(PythonLibs REQUIRED)\ninclude_directories(${PYTHON_INCLUDE_DIRS})\nadd_executable(HelloWorld main.cpp)\ntarget_link_libraries(HelloWorld ${PYTHON_LIBRARIES})\n\n# build with address sanitizer\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=address\")\n\n# add extra make goal for running the executable\nadd_custom_target(run\n    COMMAND ./HelloWorld\n)\n\n# goal to remove all files and folders in the system root\nadd_custom_target(clean\n    COMMAND rm -rf *\n)</code></pre><br>\r\n<p>Ура, почти все то же самое.</p><br>\r\n<p><strong>FauxPilot</strong> (пришлось слегка подкрутить <a href=\"#FauxPilot_settings\">параметр temperature</a> под задачу )</p><br>\r\n<pre><code class=\"python\"># CMakeLists.txt content for build main.cpp into a single executable file named HelloWorld. Link with libpython, include python headers:\ncmake_minimum_required(VERSION 2.8.12)\nproject(HelloWorld)\nadd_executable(HelloWorld main.cpp)\ntarget_link_libraries(HelloWorld python)\ninstall(FILES main.cpp ${PYTHON_INCLUDE_DIR})\ninstall(FILES ${PYTHON_INCLUDE_DIR}/libpython2.7.so)\ninstall(FILES ${PYTHON_INCLUDE_DIR}/libpython3.3.so)</code></pre><br>\r\n<p>В целом небесполезен.</p><br>\r\n<h4 id=\"perevod-iz-odnogo-yazyka-v-drugoy\">Перевод из одного языка в другой</h4><br>\r\n<p>Довольно сложный сценарий</p><br>\r\n<p>В небольшом проекте попробуем переписать один алгоритм в функциональном стиле с использованием библиотеки pipe. Чтобы показать что мы от него хотим, напишем рядом код на С#.</p><br>\r\n<p><strong>Copilot</strong></p><br>\r\n<pre><code class=\"python\">... много императивного кода\n\"\"\"\nC# Code \nviolations = file_rows.Select(PlanePos.FromRow)\n                      .Where(pos =&gt; pos.InPolygon(restrictedArea))\n                      .OrderBy(pos =&gt; pos.Lat)\n                      .ThenBy(pos =&gt; pos.Time)\n                      .Select(pos =&gt; $\"{pos.Time}: {pos.Lat}-{pos.Lon}\")\n\"\"\"\n\n# Python Code using pipe module\n=== далее код от copilot: ===\nviolations = (file_rows |\n              map(PlanePos.from_row) |\n              filter(lambda pos: pos.in_polygon(restrictedArea)) |\n              sorted(key=lambda pos: (pos.lat, pos.time)) |\n              map(lambda pos: f\"{pos.time}: {pos.lat}-{pos.lon}\") |\n              take_while(lambda pos: pos.time &lt; t_end) |\n              list)</code></pre><br>\r\n<p>Похоже на правду</p><br>\r\n<p>То есть Copilot сработал как переводчик с одного языка программирования на другой. Наверное это мало кому нужно, так что не буду растягивать тут статью, скажу только что почва плодотворная, Сopilot действительно делает это удовлетворительно. Впрочем неудивительно, что же может быть лучшим описанием желаемого кода чем такой-же код, но на другом языке. </p><br>\r\n<p>Tabnine и Codeium почему-то ничего толкового не сгенерировали, возможно нужно развить тему на примерах попроще, но так как запрос специфический то пропустим.</p><br>\r\n<div class=\"scrollable-table\"><table>\r\n<thead>\r\n<tr>\r\n<th>Раздел</th>\r\n<th>Copilot</th>\r\n<th>Tabnine</th>\r\n<th>Codeium</th>\r\n<th>FauxPilot</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>Специфичные сценарии</td>\r\n<td>✅</td>\r\n<td>❌</td>\r\n<td>❌✅</td>\r\n<td>❌</td>\r\n</tr>\r\n</tbody>\r\n</table><br>\r\n<hr><br>\r\n<a name=\"FauxPilot_settings\"></a><br>\r\n<h3 id=\"obschaya-informaciya-o-nastroyke-fauxpilot\">Общая информация о настройке FauxPilot</h3><br>\r\n<p>Работа FauxPilot критично зависит от настроек в плагине, и постоянно приходится искать баланс между их значениями.<br>\r\nСамые важные две — temperature и Inline completion.</p><br>\r\n<div class=\"spoiler\" role=\"button\" tabindex=\"0\">\n                        <b class=\"spoiler_title\">Подробнее о моих нстройках FauxPilot</b>\n                        <div class=\"spoiler_text\"><ul>\r\n<li>temperature: 0.2 (в паре экспериментов менял на 0.4)</li>\r\n<li>max_tokens: 200</li>\r\n<li>Max Lines: 150</li>\r\n<li>FauxPilot: Inline Completion: false (хотя для реальной работы включил бы true)</li>\r\n</ul>\n                    <br>\r\n<h4 id=\"temperature\">Temperature</h4><br>\r\n<p>Параметр отвечает за «креативность». Чем значения ниже, тем осторожнее робот.<br>\r\nЗначение по умолчанию — 0.1, на мой взгляд это слишком низко, при таких значениях часто код вообще не генерируется. Эксперименты показывают, что значения 0.2—0.4 оптимальны. При значениях ближе к 1 код будет довольно бесполезный, при значениях больше 1 будет случайный бессмысленный текст. В итоге параметр, в зависимости от задачи, приходится менять, так как где-то не хватает осторожности, а где-то — креативности.</p><br>\r\n<h4 id=\"inline-completion\">Inline Completion</h4><br>\r\n<p>Эта настройка отвечает за то, чтобы дополнять только текущую строку, и по умолчанию она включена по двум простым причинам:<br>\r\n1) Время работы драматически возрастает для многострочного дополнения, моя 1080 не прокручивает его за приемлемое для написания кода время, иногда приходится ждать секунд 5.<br>\r\n2) В этом режиме FauxPilot добавляет очень много лишнего кода помимо ожидаемого. Например полный сниппет сгенерированной функции получения случайной даты в диапазоне выглядел вот так</p><br>\r\n<pre><code class=\"python\">def get_random_datetime(from_date: datetime, to_date: datetime) -&gt; datetime:\n    \"\"\"\n    Get a random datetime between two datetime objects\n    :param from_date: start datetime\n    :param to_date: end datetime\n    :return: random datetime\n    \"\"\"\n=== далее код от fauxpilot: ===  \n    return from_date + random.randint(0, (to_date - from_date).total_seconds())\n\ndef get_random_date(from_date: datetime, to_date: datetime) -&gt; datetime:\n    \"\"\"\n    Get a random datetime between two datetime objects\n    :param from_date: start datetime\n    :param to_date: end datetime\n    :return: random datetime\n    \"\"\"\n    return from_date + random.randint(0, (to_date - from_date).total_seconds())\n\ndef get_random_time(from_time: datetime, to_time: datetime) -&gt; datetime:\n    \"\"\"\n    Get a random datetime between two datetime objects\n    :param from_time: start datetime\n    :param to_time: end datetime\n    :return: random dat</code></pre><br>\r\n<p>То есть помимо одной нужной строки приехало еще две левых функции.</p><br>\r\n<a name=\"conclusion\"></a><br>\r\n<h3 id=\"vyvody\">Выводы</h3><br>\r\n<p>Что ж, подведем итоги.</p><br>\r\n<div class=\"scrollable-table\"><table>\r\n<thead>\r\n<tr>\r\n<th>Раздел</th>\r\n<th>Copilot</th>\r\n<th>Tabnine</th>\r\n<th>Codeium</th>\r\n<th>FauxPilot</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>Генерация простых функций</td>\r\n<td>✅</td>\r\n<td>✅</td>\r\n<td>✅</td>\r\n<td>✅</td>\r\n</tr>\r\n<tr>\r\n<td>Генерация более сложного кода  </td>\r\n<td>✅</td>\r\n<td>❌✅</td>\r\n<td>❌✅</td>\r\n<td>❌✅</td>\r\n</tr>\r\n<tr>\r\n<td>Генерация тестов</td>\r\n<td>✅</td>\r\n<td>✅</td>\r\n<td>✅</td>\r\n<td>❌✅</td>\r\n</tr>\r\n<tr>\r\n<td>Понимание контекста проекта </td>\r\n<td>✅</td>\r\n<td>❌</td>\r\n<td>❌</td>\r\n<td>❌</td>\r\n</tr>\r\n<tr>\r\n<td>ChatGPT в вашем IDE</td>\r\n<td>✅</td>\r\n<td>❌</td>\r\n<td>❌</td>\r\n<td>❌</td>\r\n</tr>\r\n<tr>\r\n<td>Рутина вне кода</td>\r\n<td>✅</td>\r\n<td>❌</td>\r\n<td>❌</td>\r\n<td>❌</td>\r\n</tr>\r\n<tr>\r\n<td>Рефакторинг</td>\r\n<td>✅</td>\r\n<td>❌</td>\r\n<td>✅❌</td>\r\n<td>❌</td>\r\n</tr>\r\n<tr>\r\n<td>Генерация комментариев  </td>\r\n<td>✅❌</td>\r\n<td>❌</td>\r\n<td>✅</td>\r\n<td>❌</td>\r\n</tr>\r\n<tr>\r\n<td>Специфичные сценарии</td>\r\n<td>✅</td>\r\n<td>❌</td>\r\n<td>❌✅</td>\r\n<td>❌❌✅</td>\r\n</tr>\r\n</tbody>\r\n</table><br>\r\n<p><strong>Мои субъективные впечатления:</strong><br>\r\n1) В коде себя очень неплохо показывают Copilot и Codeium, часто почти на равных. Это радует, учитывая, что Codeium бесплатный.<br>\r\n2) Вне кода же Copilot вне конкуренции, по большому счету ему все равно, что генерировать — код, комментарии, cmakelist, стихи. И это очень важное свойство, надеюсь, AI-плагины в IDE пойдут по этому пути.<br>\r\n3) Tabnine показывает себя аутсайдером, хотя является самым дорогим из всех.<br>\r\n4) FauxPilot можно пользоваться! И это очень круто. Тем не менее большие задержки и необходимость играться с настройками пока делают опыт его использования далеко не идеальным.</p><br>\r\n<hr><br>\r\n<p>Если вам было интересно, и вам хочется делать крутые и удобные инструменты для других разработчиков, то приходите к нам в команду <a href=\"https://kas.pr/habr-sapelkin-python-developer\">KasperskyOS Tooling Development</a>!</p><br>\r\n<p>Если же вы хотите погрузиться в недра построения моделей машинного обучения, то обязательно загляните к моим коллегам в команду <a href=\"https://kas.pr/habr-sapelkin-data-science\">Data Science &amp; Big Data</a>.</p><br>\r\n<p><a href=\"https://kas.pr/habr-sapelkin-python-developer\"><img src=\"https://habrastorage.org/r/w1560/webt/ly/yx/ex/lyyxexzxkxg5id7v-9xdhfqldys.png\" data-src=\"https://habrastorage.org/webt/ly/yx/ex/lyyxexzxkxg5id7v-9xdhfqldys.png\"></a></p>', 2, '2023-06-12 21:52:44', 516112, 72, '/ru/companies/kaspersky/articles/739208/', 'Сегодня мы немного расскажем вам о работе IT-поддержки в Ozon Tech: что мы делаем и зачем, как используем Python и как именно он нам помогает решать рутинные проблемы и не только.Опытным коллегам, пишущим на Python, мы не раскроем каких-то сакральных тайн с точки зрения кода, а вот аналитикам, возможно, поможем усовершенствовать процессы. Ну поехали что-ли!');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(110, 'Сказ о том, как специалисты IT-поддержки скрипты писали…', '<p>Сегодня мы немного расскажем вам о работе IT-поддержки в Ozon Tech: что мы делаем и зачем, как используем Python, и как именно он нам помогает решать рутинные проблемы и не только.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/743/2f5/173/7432f5173da6625dbe21ae2c33ee5175.png\" width=\"1920\" height=\"1080\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/743/2f5/173/7432f5173da6625dbe21ae2c33ee5175.png\"></figure><blockquote><p>- Моральная поддержка мне не помешает.<br>- Вот и отлично. Но я сразу предупреждаю: я не могу гарантировать моральность моей поддержки. ©</p></blockquote><p>Для начала, пожалуй, стоит рассказать, что представляет собой IT-поддержка в Ozon Tech, а точнее о работе специалиста по поддержке внутренних сервисов в домене контента и товаров.</p><p>Наша цель — собирать все технические проблемы, возникающие у клиентов при создании карточки товара, чтобы она прошла свой жизненный цикл, классифицировать обращения, проводить первичную аналитику, решать в моменте, заводить задачи на доработки функциональности, приоритизируя их по срочности, массовости и влиянию на бизнес-показатели.	К нам попадают задачи об ошибках в сервисах, в которых функциональность должна работать, но почему-то не работает.</p><p>Разница между пользовательской поддержкой и нами — в инструментах и возможностях их использования в проде. Речь идёт о базах данных, HTTP- запросах, UI-админках и т. д. Карточки товаров могут не создаваться, контент — не обновляться. С этими и другими проблемами мы сталкиваемся в своей практике. Чтобы всё заработало как надо, и нужны эти инструменты.</p><p>В общем и целом работа в команде IT-поддержки очень интересная. Это не только «Ну вы держитесь там!», но и решение разноплановых IT-задач, иногда связанных с обработкой больших объёмов данных.</p><p>Какое-то время мы жили и не тужили, дёргая так называемые «ручки» в Swagger и используя Postman, селектили базки и т. д. Но сервисов становилось всё больше, появлялись новые фичи — следовательно, и количество проблем увеличивалось. Появилась необходимость больше селектить, делать больше HTTP-запросов, их комбинируя. Кроме того, появились задачи по анализу большого количества данных, где, например, за один раз не передашь все нужные ID, и запросы, от которых не то что база умирала — умирала DataGrip. Подобные задачи стали решаться очень долго  — и мы поняли, что пора что-то менять... может быть даже работу.</p><p>Если провести аналогию с известной сказкой, нашей «золотой рыбкой» стал Python. К нам в команду пришёл человек, который перевернул наш подход к работе. Забегая вперёд, скажу, что последующий наём сотрудников в наш отдел был с пунктом о знании скриптовых языков и в частности Python и на текущий момент половина сотрудников пишет на нём, все умеют с ним работать, у нас реализован свой небольшой сервис, учитывающий требования информационной безопасности, а тимлиды используют язык в рамках проектного управления и аналитики проблем. Так мы очень быстро узнаём о болях клиентов и специфике работы того или иного сервиса. Подробнее об этом — ниже.</p><details class=\"spoiler\"><summary>Небольшой дисклеймер</summary><div class=\"spoiler__content\"><p>Опытным коллегам, пишущим на Python, мы не раскроем каких-то сакральных тайн с точки зрения кода, а вот аналитикам, возможно, поможем усовершенствовать процессы. Ну поехали что-ли.</p></details><h3>Выполнение HTTP-запросов с помощью модуля Requests.</h3><p>Самым важным в нашей работе является использование HTTP-запросов. Это краеугольный камень нашей автоматизации.</p><p>Мы завели сервисную учётку в Jira, сделав бота, который работает с API, избавляя нас от большого количества ручной работы. С помощью скрипта на Python мы решили несколько задач:</p><ul><li><p>дважды в день в определённое время проходить по всем созданным JIT-задачам в нашем капасити;</p></li><li><p>проверять прилинкованные Jira-тикеты, считать их и обновлять их количество в JIT-задаче;</p></li><li><p>оставлять комментарии;</p></li><li><p>проверять правильность связи между JIT-задачей и Jira-тикетами.</p></li></ul><p>Кроме того, с помощью данного скрипта реализован подсчёт инструментов, которые используются при решении задач в течение определённого периода времени. Это позволяет нам выявлять самые популярные решения, определять боли клиентов и находить причины их возникновения, а затем устранять эти проблемы.</p><p>На примере бота мы рассмотрим основные модули и библиотеки Python, которые мы используем в написании скриптов.</p><p>В текущих реалиях работы с запросами...</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a99/9af/68a/a999af68aa6cd86cac9389bd43804a1a.png\" width=\"1024\" height=\"683\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a99/9af/68a/a999af68aa6cd86cac9389bd43804a1a.png\"></figure><p>Модуль <strong>Requests</strong> нужен для отправки и получения данных. Чтобы выполнить HTTP-запрос, используется стандартный метод написания функции на Python.</p><pre><code class=\"python\">def get_issues(request_text):\n    error = True\n    url = \'...\'\n    headers = {\n        ...\n        }\n    payload = {...}\n    request = requests.post(url=url, data=payload, headers=headers, auth=auth)\n    if request.ok:\n        error = False\n        return request, error\n    return request, error</code></pre><p>Так выглядит структура стандартной функции, которая используется во всех наших скриптах. В поле url мы указываем строку запроса, в поле headers — заголовки авторизации, а в payload — какие данные мы хотим отправить в теле запроса. Всё довольно стандартно, но, начитавшись статей про обработку ошибок в Golang, мы позаимствовали её, задав переменную error. И для удобства написали небольшую функцию, которая возвращает текст ошибки.</p><pre><code class=\"python\">def check_error(result, error):\n    if error == True:\n        print(f\"Error, status_code: {result.status_code}, headers: {result.headers}\")\n    else:\n        return False</code></pre><p>Чтобы укротить время, мы воспользовались модулями datetime и time.</p><pre><code class=\"python\">start_time = time()\n...\nprint(f\'\\n{datetime.now().strftime(\"%d-%m-%Y %H:%M:%S\")}\\nScript has started: \\n\\t{team_name}\\n\'\n...\nend_time = time() - start_time</code></pre><p>По аналогии с ботом мы выполняли различные запросы, используя HTTP-методы отдельных сервисов.</p><p>Чтобы в каждый запрос можно было отправлять не по одному значению, а, например, массив данных, был реализован цикл, который собирает массив (батчи) для отправки его в запрос. Про использование батчей другого типа формирования расскажем ниже на примере обращения к базе данных.</p><pre><code class=\"python\">total = []\nfor idx, sku_ in enumerate(skus):\n    if len(total) == 3:\n        check_commercial_type_by_sku(total)\n        ...\n        total.clear()\n        total.append(sku_.rstrip(\'\\n\'))\n    else:\n        total.append(sku_.rstrip(\'\\n\'))\ncheck_commercial_type_by_sku(total)</code></pre><p>Цикл формирует массив total, передаёт его в функцию, после получения ответа очищает массив и собирает новый.</p><p>Для записи данных в файл мы использовали функцию open и метод write.</p><pre><code class=\"python\">with open(\'check_error\', \"a+\") as wf:\n    wf.write(f\"Error, status_code: {result.status_code}, headers: {result.headers}\\n\")</code></pre><p>В процессе написания скриптов мы собрали собственную библиотеку функций по вызову различных методов отдельных сервисов. Она позволила ускорить процесс написания скриптов на Python разной сложности.</p><h3>Использование MS Excel</h3><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/544/8cf/502/5448cf5021967818326636ff5e96b55b.png\" width=\"1214\" height=\"502\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/544/8cf/502/5448cf5021967818326636ff5e96b55b.png\"></figure><p>Excel — прекрасный инструмент для работы с информацией в виде таблицы. Он-то и пригодился нам для решения нетривиальных задач с большим количеством данных.</p><p>Если требуется отсортировать или сопоставить данные, мы, скорее всего, пойдём в Excel. Если же нужно эти отсортированные данные брать из разных столбцов в рамках одной строки и передавать в какую-нибудь функцию, мы идём в pandas.</p><p>Подробнее вы, конечно, можете прочитать в интернете, но, если коротко, pandas — это высокоуровневая библиотека Python, которая позволяет вытворять с файлами Excel такое, что некоторым даже не снилось. Именно эту библиотеку мы и стали использовать для решения наших задач. Сразу оговорюсь, что мы не использовали её в полном объёме, так как в этом не было необходимости. В основном нам нужно было считывать значения из XLS-файла и присваивать их переменным.</p><pre><code class=\"python\">honeypot = pd.read_excel(\'Name_file\') # path to xlsx file\nrequestIDs = honeypot.to_dict(orient=\'records\')\nfor idx, row in enumerate(requestIDs):\n    request_id = [row[\'request_id\']]\n    reason_id = str(row[\'reason_id\']).split(\', \')</code></pre><p>Прочитав с помощью функции read_excel файл и присвоив значение переменной, мы обращаемся к методу to_dict, чтобы преобразовать данные в словарь, а параметр orient = \'records\' позволяет класть данные в словарь в следующем виде: <code>[{column -&gt; value}, ... , {column -&gt; value}]</code>.</p><p>Ещё одним важным аспектом использования Excel является парсинг файла дежурств в нашу внутреннюю систему управления инцидентами. Согласно расписанию дежурств, сервис рассылает оповещения об инцидентах дежурным сотрудникам. Для наших коллег мы строим график в SharePoint и, если нужно что-то обновить, скармливаем скрипту файл — и через минуту получаем обновлённое расписание дежурств в системе управления инцидентами. Как вы уже, наверное, догадались, для добавления информации мы используем API этой системы. Если ты сотрудник Ozon Tech, тебе это может быть интересно — добро пожаловать во внутренний мессенджер. </p><h3>Работа с Kafka: чтение и запись</h3><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/457/1a9/044/4571a90441ff7b4f4c0a576977eb6684.png\" width=\"702\" height=\"447\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/457/1a9/044/4571a90441ff7b4f4c0a576977eb6684.png\"></figure><p>Любой уважающий себя разработчик хоть раз ходил в Kafka и работал с ней. Мы, конечно, не дотягиваем до их уровня, но себя тоже уважаем и с Kafka сталкиваемся регулярно.</p><p>Основные наши действия в Kafka — это чтение и запись. И для этого в Python есть модуль Confluent Kafka.</p><p>Для отправки сообщений в Kafka мы использовали метод Producer.</p><pre><code class=\"python\">produce = Producer(...)\ndata_source = create_data(file_name)\nfor data in data_source:\n    produce.poll(0)\n    produce.produce(...)\nproduce.flash()</code></pre><p>Алгоритм действий:</p><ul><li><p>подключаемся к Kafka через <code>Producer({\'bootstrap.servers\': \'server\'})</code>;</p></li><li><p>создаём массив данных (сообщений) с помощью <code>create_data(file_name)</code>;</p></li><li><p>отправляем сообщение в топик Kafka и ждём результат — <code>produce.produce(\'topik_name\', json.dumps(data), callback=delivery_report)</code>.</p></li></ul><p>Для того чтобы читать сообщения из Kafka, использовали метод Consumer.</p><pre><code class=\"python\">prparams = ({\'bootstrap.servers\': \'server\', \'auto.offset.reset\': \'earliest\', \'session.timeout.ms\': 6000, \'group.id\': \"mp_sup\", \'error_cb\': error_callback})\nc = Consumer(params)\nc.subscribe([\'topik_name\'])</code></pre><p><code>\'auto.offset.reset\'</code> указывает, в каком порядке читать сообщения: <code>earliest</code> — с самого раннего, <code>latest</code> — с последнего.</p><h3>Подключение к PostgreSQL и выполнение запросов с помощью библиотеки Psycopg2</h3><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/661/1aa/4d2/6611aa4d25e3ed62cead7d295529f5a6.png\" width=\"960\" height=\"720\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/661/1aa/4d2/6611aa4d25e3ed62cead7d295529f5a6.png\"></figure><p>Использование скриптов для выполнения запросов к базе данных — вишенка на торте, учитывая, что нельзя сделать всё через HTTP-методы, а потому частенько приходится селектить.</p><p>Для работы с PostgreSQL мы использовали, наверное, самую популярную в Python библиотеку Psycopg2. Её модули и функции позволили нам выполнять подключение к базе данных, отправлять запросы и получать нужные результаты.</p><p>Для подключения к базе данных мы написали функцию, в которой содержится информация о базе, к которой мы собираемся подключиться, и о пользователе, который будет выполнять подключение, а также переменную connection. Метод <code>cursor(cursor_factory=extras.DictCursor)</code> позволяет формировать полученные в ответе поля базы в виде словаря.</p><pre><code class=\"python\">def con():\n    connection = None\n    try:\n        connection = psycopg2.connect(\n            ...\n        )\n        connection.autocommit = True\n        print(\"Connection to Postgre DB successful \\n\")\n        return connection.cursor(cursor_factory=extras.DictCursor), connection\n    except Exception as e:\n        print(\"Connection error: \" + str(e))\n        exit(1)</code></pre><p>Реализация запроса в базу данных:</p><pre><code class=\"python\">get_rule_condition = f\"SELECT rule_conditions from rule where id = {int(id)}\"\ncur.execute(get_rule_condition)\nrule_cond = cur.fetchone()</code></pre><p>Иногда нужно сделать просто огромную выгрузку по тяжелому запросу. У нас есть любимая команда разработки, у сервиса которой есть выделенная архивная реплика, на которой нет клиентов, и её можно селектить сколько душе угодно. Вы, наверное, спросите, почему не использовать для больших аналитических запросов DWH? Можно, но есть необходимость получить данные в реальном времени, в отличие от DWH, в которой данные синхронизируются с некоторой периодичностью.</p><p>У архивной реплики есть минус: если ей скормить долгий по ответу запрос, через некоторое время она начнёт отставать от мастера и данные станут неконсистентными. Поэтому, чтобы мы могли комфортно получать корректные значения в моменте, мы селектим через Python, используя батчи. Стараемся формировать их так, чтобы ответ занимал не более 200 мс, особенно если обращаться не к архивной реплике, так как она есть не у всех.</p><p>О том, как формировать батчи по списку ID, мы писали в разделе про HTTP-методы. Но бывают случаи, когда есть какое-то условие и нет входных данных. Для них мы реализовали функцию формирования батчей от минимального до максимального ID (чаще всего по ключу) нужной таблицы. Минимальный ID всегда можно указать опционально. Максимальный — формируется через обычный запрос на получение в таблице. Ну а ненужные данные отсекаются внутри условия запроса.</p><pre><code class=\"python\">def create_batch():\n    batchslist = []\n   # slicebatch = []\n    x, y = 113887310, 113888310 #минимальный, + шаг\n    #maxid = get_maxId() #отдельная функция получения по запросу максимального ID\n    maxid = 971815680 #явно переданный максимальный ID\n    while y &lt;= maxid:\n        batchs = []\n        batchs.append(x)\n        batchs.append(y) \n        batchslist.append(batchs)\n        x = y + 1\n        y += 1000 #шаг\n    if y &gt; maxid:\n        y = maxid\n        batchs = []\n        batchs.append(x)\n        batchs.append(y)\n        batchslist.append(batchs)\n    return batchslist</code></pre><h3>Итоги</h3><p>В Ozon Tech много микросервисов — и кто-то должен их поддерживать. Система несовершенна, а значит, случаются ошибки. Как писал наш коллега Игорь в <a href=\"https://habr.com/ru/company/ozontech/blog/598583/\">статье</a>, прод имеет свойство падать и после этого иногда нужно исправлять данные, с которыми что-то произошло. Прокачав скиллы в Python, мы помогаем в этом коллегам.</p><p>Кроме того, есть частные случаи ошибок, ведь, являясь MVP, продукт подразумевает проверку на жизнеспособность, так как она минимальна. </p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/d50/85b/230/d5085b230e5aacbea627f8a1e3201265.png\" width=\"295\" height=\"265\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d50/85b/230/d5085b230e5aacbea627f8a1e3201265.png\"></figure><p>И тут мы, как поддержка, можем собрать фидбэк, найти ошибки, исправить их в моменте, провести анализ и создать задачу на устранение первопричины.</p><p>А можно этот процесс сравнить с химией: проблемы, которые мы находим, — это «лакмусовая бумажка» работы системы или сервиса.</p><p>Команд разработок в нашем домене много, микросервисов ещё больше — и со всем этим надо жить. А Python со своими прекрасными модулями, библиотеками и функциями позволил нам написать скрипты, которые очень помогают в решении многих непростых задач, с которыми команда IT-поддержки сталкивается каждый день. Освоив это ремесло, мы значительно уменьшили нагрузку на команды разработки, что позволило им погружаться в глубины мироздания, не отвлекаясь на рутину, и пилить новые фичи для бизнеса, а мы в свою очередь почувствовали себя ещё более крутыми IT-специалистами. Ведь наша главная цель — чтобы всем клиентам было удобно и легко работать на нашей площадке!</p><p><strong>Авторы</strong>:<br>Сергей Исаченко и Андрей Каплей</p>', 2, '2023-06-12 21:52:45', 296026, 72, '/ru/companies/ozontech/articles/740540/', 'Привет, Хабр! В этой статье разберём, что такое метрики отношения. Узнаем, почему критерий Стьюдента не работает. Попробуем применить бутстреп к зависимым данным. Изучим дельта-метод — способ оценки А/Б тестов с метрикой отношения.'),
(111, 'А/Б тесты с метрикой отношения. Дельта-метод', '<p>Привет, Хабр! В этой статье разберём, что такое метрики отношения. Узнаем, почему критерий Стьюдента не работает. Попробуем применить бутстреп к зависимым данным. Изучим дельта-метод — способ оценки А/Б тестов с метрикой отношения.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/ce7/477/58b/ce747758b607cb5024e2a4364bf815c4.png\" width=\"1540\" height=\"982\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ce7/477/58b/ce747758b607cb5024e2a4364bf815c4.png\"></figure><p>Меня зовут <a href=\"http://www.linkedin.com/in/nazarovn\"><u>Коля</u></a>, я работаю аналитиком данных в X5 Tech. Мы с <a href=\"http://www.linkedin.com/in/amsakhnov\"><u>Сашей</u></a> продолжаем писать серию статей по А/Б тестированию, это наша четвёртая статья. Первые три можно посмотреть тут:</p><ul><li><p><a href=\"https://habr.com/ru/company/X5Tech/blog/596279/\"><u>Стратификация. Как разбиение выборки повышает чувствительность А/Б теста</u></a>;</p></li><li><p><a href=\"https://habr.com/ru/company/X5Tech/blog/679842/\"><u>Бутстреп и А/Б тестирование</u></a>;</p></li><li><p><a href=\"https://habr.com/ru/company/X5Tech/blog/706388/\"><u>Проверка корректности А/Б тестов</u></a>.</p></li></ul><h3>Метрики отношения</h3><p>Для проведения А/Б эксперимента мы выделяем две группы объектов: контрольную и экспериментальную. К объектам экспериментальной группы применяем тестируемое изменение, а объекты контрольной группы оставляем без изменений. </p><p>Объект — это то, на что направлено действие. Объектами могут быть покупатели магазина, пользователи социальной сети или клубни картофеля.</p><p>С одного объекта в течение эксперимента можно получить много значений. Покупатель сделает несколько покупок. Пользователь социальной сети просмотрит десятки реклам. Из одного клубня картофеля вырастут другие клубни.</p><p>Мы сталкиваемся с метриками отношения, когда хотим анализировать данные эксперимента на более детальном уровне, чем уровень объектов, по которым проводилось разбиение на группы. Примеры метрик отношения:</p><ol><li><p>Средний чек. Для вычисления среднего чека нужно взять все стоимости покупок группы и вычислить среднее. Если в группе два пользователя, первый сделал покупку на 500 рублей, а второй сделал две покупки на 400 и 300 рублей, то средний чек равен 400 рублей.</p></li><li><p>CTR (click-through rate) — это соотношение кликов по рекламе к числу её показов. Если в группе два пользователя, первый кликнул на 1 рекламу из 7 показанных, а второй кликнул на 2 рекламы из 3 показанных, то CTR равен 0.3.</p></li><li><p>Средний вес клубня. Если в группе 2 клубня, из первого выросло три клубня весом 4, 5 и 6 килограмм, а из второго выросло два клубня весом по 10 килограмм, то средний вес клубня равен 7 килограммам.</p></li></ol><p>Формально метрики отношения можно представить формулой, как отношения двух сумм:</p><img class=\"formula\" source=\"\\mathcal{R} = \\dfrac{X_1 + \\ldots + X_N}{Y_1 + \\ldots + Y_N}\" alt=\"\\mathcal{R} = \\dfrac{X_1 + \\ldots + X_N}{Y_1 + \\ldots + Y_N}\" src=\"https://habrastorage.org/getpro/habr/upload_files/115/c0e/8ca/115c0e8ca5fb0ab136ff43fb3b3ff6ec.svg\" width=\"176\" height=\"45\"><p>где N — размер группы, <img class=\"formula inline\" source=\"X_i\" alt=\"X_i\" src=\"https://habrastorage.org/getpro/habr/upload_files/6c3/009/a18/6c3009a181010b63290e68b44d1d095c.svg\" width=\"23\" height=\"20\"> и <img class=\"formula inline\" source=\"Y_i\" alt=\"Y_i\" src=\"https://habrastorage.org/getpro/habr/upload_files/d1a/f17/94d/d1af1794dd4ffa24756b2282e285e9d3.svg\" width=\"17\" height=\"20\"> — метрики i-го объекта. Например, для среднего чека <img class=\"formula inline\" source=\"X_i\" alt=\"X_i\" src=\"https://habrastorage.org/getpro/habr/upload_files/5b1/772/982/5b1772982af26f09affc3555b9202725.svg\" width=\"23\" height=\"20\"> — суммарная стоимость покупок i-го покупателя, <img class=\"formula inline\" source=\"Y_i\" alt=\"Y_i\" src=\"https://habrastorage.org/getpro/habr/upload_files/c4a/ff3/024/c4aff3024220188fc8e969109fab4576.svg\" width=\"17\" height=\"20\"> — количество покупок i-го покупателя.</p><p>Значения от одного объекта обычно являются зависимыми. Если пользователь онлайн-магазина всегда делает большие заказы, то следующий его заказ, скорее всего, тоже будет большим.</p><p>Значения от разных объектов обычно являются независимыми, или их зависимость настолько мала, что ей можно пренебречь. Информация о заказах одного пользователя не помогает нам понять, какие заказы у другого пользователя.</p><h3>Тест Стьюдента не работает</h3><p>Допустим, нам нужно проверить значимость отличия среднего чека у двух групп. Средний чек — это среднее от стоимостей чеков. Получается, нужно проверить гипотезу о равенстве средних. Для этой гипотезы подходит тест Стьюдента.</p><p>Однако, выше мы писали, что данные от одного объекта могут быть зависимыми, а тест Стьюдента предполагает независимость данных. Давайте проверим, будет ли критерий работать корректно. Подробнее про проверку корректности можно прочитать в статье <a href=\"https://habr.com/ru/company/X5Tech/blog/706388/\"><u>Проверка корректности А/Б тестов</u></a>.</p><p>Будем генерировать данные для двух групп покупателей размером по 1000 человек. Каждый покупатель совершает от 1 до 4 покупок. Значения среднего чека у покупателей отличаются. Применим тест Стьюдента к сгенерированным данным и запомним значение p-value. Повторим эту процедуру 1000 раз и построим эмпирическую функцию распределения p-value. Для корректного критерия распределение p-value должно быть близко к равномерному распределению от 0 до 1.</p><pre><code class=\"python\">import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy import stats\n\n\ndef plot_pvalue_distribution(dict_pvalues):\n    \"\"\"Рисует графики распределения p-value.\"\"\"\n    X = np.linspace(0, 1, 1000)\n    for name, pvalues in dict_pvalues.items():\n        Y = [np.mean(pvalues &lt; x) for x in X]\n        plt.plot(X, Y, label=name)\n\n    plt.plot([0, 1], [0, 1], \'--k\', alpha=0.8)\n    plt.title(\'Оценка распределения p-value\', size=16)\n    plt.xlabel(\'p-value\', size=12)\n    plt.legend(fontsize=12)\n    plt.grid()\n    plt.show()\n\ndef generate_data(sample_size, effect):\n    \"\"\"Генерирует данные со стоимостью покупок.\n\n    Возвращает два списка с данными контрольной и экспериментальной групп.\n    Элементы списков - множества со стоимостями покупок пользователей. \n    \"\"\"\n    result = []\n    for group_effect in [0, effect]:\n        n_purchases = np.random.randint(1, 5, sample_size)\n        mean_costs = np.random.uniform(1000, 2000, sample_size)\n        data = [\n            np.random.normal(mean + group_effect, 200, n)\n            for n, mean in zip(n_purchases, mean_costs)\n        ]\n        result.append(data)\n    return result\n\nalpha = 0.05              # допустимая вероятность ошибки I рода\nsample_size = 1000        # размер групп\n\npvalues = []\nfor _ in range(1000):\n    a, b = generate_data(sample_size, 0)\n    a_values = np.hstack(a)\n    b_values = np.hstack(b)\n    pvalue = stats.ttest_ind(a_values, b_values).pvalue\n    pvalues.append(pvalue)\n\nerror_rate = np.mean(np.array(pvalues) &lt; alpha)\nprint(f\'Доля ошибок первого рода: {error_rate:0.2f}\')\nplot_pvalue_distribution({\'A/A\': pvalues})\n</code></pre><pre><code class=\"python\">Доля ошибок первого рода: 0.20</code></pre><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/93d/b24/c53/93db24c534071bdd474bfa6d98ae4a58.png\" width=\"2560\" height=\"1920\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/93d/b24/c53/93db24c534071bdd474bfa6d98ae4a58.png\"></figure><p>Распределение p-value получилось неравномерным. Доля ошибок первого рода 0.2, это значительно больше ожидаемых 0.05. При проверке гипотезы о равенстве метрик отношения тест Стьюдента работает некорректно.</p><h3>Среднее средних</h3><p>Тест Стьюдента в прошлом примере работал некорректно из-за зависимых данных. Покупки одного клиента зависимы, а покупки разных клиентов независимы. Давайте избавимся от зависимых данных, объединив покупки по клиентам. Для каждого клиента посчитаем его средний чек и по этим данным проверим гипотезу о равенстве средних.</p><p>Проверим, будет ли тест Стьюдента корректно работать на таких данных.</p><pre><code class=\"python\">pvalues = []\nfor _ in range(1000):\n    a, b = generate_data(sample_size, 0)\n    a_means = [np.mean(x) for x in a]\n    b_means = [np.mean(x) for x in b]\n    pvalue = stats.ttest_ind(a_means, b_means).pvalue\n    pvalues.append(pvalue)\n\nplot_pvalue_distribution({\'A/A\': pvalues})\n</code></pre><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/142/c5d/e32/142c5de32dd8208c157b085db2f1abd6.png\" width=\"2560\" height=\"1920\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/142/c5d/e32/142c5de32dd8208c157b085db2f1abd6.png\"></figure><p>Распределение p-value получилось равномерным. Тест Стьюдента работает корректно.</p><p>Мы перешли от проверки гипотезы о равенстве метрик отношения к проверке гипотезы о равенстве среднего средних. Можно ли результаты, полученные при проверке одной гипотезы, обобщать на другую гипотезу?</p><p>Рассмотрим пример. Есть две группы по два покупателя в каждой. В первой группе один покупатель сделал две покупки по 2000 рублей, а другой совершил одну покупку на 1000 рублей. Во второй группе один покупатель сделал две покупки по 1000 рублей, а другой совершил одну покупку на 2700 рублей.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/980/6ae/946/9806ae946d78abfda893cb110c78dd69.png\" width=\"1600\" height=\"619\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/980/6ae/946/9806ae946d78abfda893cb110c78dd69.png\"></figure><p>Вычислим разность метрик отношения между группами:</p><p>(1000 + 1000 + 2700) / 3 - (2000 + 2000 + 1000) / 3 = -100</p><p>Вычислим разность среднего средних между группами:</p><p>(1000 + 2700) / 2 - (2000 + 1000) / 2 = 350</p><p>В нашем примере средний чек больше в первой группе, а среднее средних больше во второй группе. Легко придумать обратный пример, когда обе метрики будут больше в одной группе. Получается, между метрикой отношения и средним средних нет однозначной связи. Использовать среднее средних для проверки гипотезы о равенстве метрик отношения нельзя.</p><h3>Бутстреп</h3><p>Проверить гипотезу о равенстве метрик отношения можно с помощью бутстрепа, который мы разбирали в одной из прошлых статей <a href=\"https://habr.com/ru/company/X5Tech/blog/679842/\"><u>Бутстреп и А/Б тестирование</u></a>.</p><p>Основная особенность применение бутстрепа для метрик отношения — данные необходимо семплировать по объектам, а не по наблюдениям. Если объект оказался в определённой группе, то и все его действия будут в этой группе.</p><p>Не будем долго останавливаться на бутстрепе, так как мы его уже разбирали. Перейдём сразу к примеру его применения.</p><pre><code class=\"python\">def get_percentile_ci(bootstrap_stats, alpha):\n    \"\"\"Строит перцентильный доверительный интервал.\"\"\"\n    left, right = np.quantile(bootstrap_stats, [alpha / 2, 1 - alpha / 2])\n    return left, right\n\ndef check_bootsrtap(a, b, n_iter, alpha):\n    \"\"\"Оценивает значимость отличий с помощью бутстрепа.\n\n    Если отличия значимые, то возвращает 1, иначе 0.\n    \"\"\"\n    # вычисляем стоимость и количество покупок клиентов\n    xy_a = np.array([[sum(values), len(values)] for values in a])\n    xy_b = np.array([[sum(values), len(values)] for values in b])\n    # генерируем случайные индексы для выбора подмножеств данных\n    len_a = len(a)\n    len_b = len(b)\n    indexes_a = np.random.choice(\n        np.arange(len_a), size=(n_iter, len_a), replace=True\n    )\n    indexes_b = np.random.choice(\n        np.arange(len_b), size=(n_iter, len_b), replace=True\n    )\n\n    bootstrap_stats = []\n    for idx_a, idx_b in zip(indexes_a, indexes_b):\n        bootstrap_xy_a = xy_a[idx_a]\n        bootstrap_xy_b = xy_b[idx_b]\n        # считаем разницу метрик отношения\n        bootstrap_stat = (\n            bootstrap_xy_b[:, 0].sum() / bootstrap_xy_b[:, 1].sum()\n            - bootstrap_xy_a[:, 0].sum() / bootstrap_xy_a[:, 1].sum()\n        )\n        bootstrap_stats.append(bootstrap_stat)\n    # строим доверительный интервал и оцениваем значимость отличий\n    ci = get_percentile_ci(bootstrap_stats, alpha)\n    has_effect = 1 - (ci[0] &lt; 0 &lt; ci[1])\n    return has_effect\n\nalpha = 0.05               # допустимая вероятность ошибки I рода\nsample_size = 1000         # размер групп\nn_iter = 1000              # количество итераций бутстрепа\n\neffects = []\nfor _ in range(1000):\n    a, b = generate_data(sample_size, 0)\n    has_effect = check_bootsrtap(a, b, n_iter, alpha)\n    effects.append(has_effect)\n\nerror_rate = np.mean(np.array(effects) == 1)\nprint(f\'Доля ошибок первого рода: {error_rate:0.3f}\')\n</code></pre><pre><code class=\"python\">Доля ошибок первого рода: 0.053</code></pre><p>Приведённая реализация бутстрепа не вычисляет p-value, поэтому построить распределение мы не сможем. Доля ошибок первого рода находится в районе заданного уровня значимости. Можно изменять значение уровня значимости и проверить, что бутстреп работает корректно при всех <img class=\"formula inline\" source=\"\\alpha \\in [0, 1]\" alt=\"\\alpha \\in [0, 1]\" src=\"https://habrastorage.org/getpro/habr/upload_files/302/72a/3e4/30272a3e4724d77fb9e6ddcc0a5bd832.svg\" width=\"75\" height=\"22\">.</p><p>Мы нашли способ, который корректно проверяет гипотезу о равенстве метрик отношения. Однако, этот способ имеет существенный недостаток. Бутстреп является вычислительно трудоёмким подходом. Если вам нужно оценивать эксперименты с большими объёмами данных, то применение бутстрепа может занимать часы или даже дни.</p><h3>Дельта-метод</h3><p>Ранее мы говорили, что тест Стьюдента не работает для метрик отношения из-за зависимых данных. Если копнуть глубже, то окажется, что тест Стьюдента не работает из-за неправильной оценки дисперсии. Для оценки дисперсии зависимых данных недостаточно просто вычислить выборочную дисперсию.</p><p>Существует формула для оценки дисперсии отношения двух случайных величин:</p><img class=\"formula\" source=\"\\mathbb{V}\\left(\\dfrac{X}{Y}\\right) \\approx \\dfrac{1}{\\mu_y^2} \\mathbb{V}(X) - 2 \\dfrac{\\mu_x}{\\mu_y^3} cov(X, Y) + \\dfrac{\\mu_x^2}{\\mu_y^4} \\mathbb{V}(Y)\" alt=\"\\mathbb{V}\\left(\\dfrac{X}{Y}\\right) \\approx \\dfrac{1}{\\mu_y^2} \\mathbb{V}(X) - 2 \\dfrac{\\mu_x}{\\mu_y^3} cov(X, Y) + \\dfrac{\\mu_x^2}{\\mu_y^4} \\mathbb{V}(Y)\" src=\"https://habrastorage.org/getpro/habr/upload_files/38b/56b/c96/38b56bc9667f7bb208e4c5b602a3c462.svg\" width=\"411\" height=\"54\"><p>где X и Y — случайные величины, а <img class=\"formula inline\" source=\"\\mu_x\" alt=\"\\mu_x\" src=\"https://habrastorage.org/getpro/habr/upload_files/c89/a76/56f/c89a7656fa4b0bcc5345805feaa338db.svg\" width=\"21\" height=\"16\"> и <img class=\"formula inline\" source=\"\\mu_y\" alt=\"\\mu_y\" src=\"https://habrastorage.org/getpro/habr/upload_files/0b4/0f2/2e3/0b40f22e3cb165e63d6a47d4ab1d43c9.svg\" width=\"21\" height=\"16\"> — их математические ожидания.</p><p>Воспользуемся этой формулой для оценки дисперсии метрики отношения:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/164/709/8b8/1647098b8e9ffb14c5c250cb0c376d89.png\" width=\"948\" height=\"376\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/164/709/8b8/1647098b8e9ffb14c5c250cb0c376d89.png\"></figure><p>Теперь мы можем использовать новые оценки дисперсий для вычисления статистики теста Стьюдента:</p><img class=\"formula\" source=\"t = \\frac{\\mathcal{R}_B - \\mathcal{R}_A}{\\sqrt{\\mathbb{V}(\\mathcal{R}_A) + \\mathbb{V}(\\mathcal{R}_B)}} \\xrightarrow{N\\to\\inf} \\mathcal{N}(0, 1)\" alt=\"t = \\frac{\\mathcal{R}_B - \\mathcal{R}_A}{\\sqrt{\\mathbb{V}(\\mathcal{R}_A) + \\mathbb{V}(\\mathcal{R}_B)}} \\xrightarrow{N\\to\\inf} \\mathcal{N}(0, 1)\" src=\"https://habrastorage.org/getpro/habr/upload_files/a05/378/c91/a05378c91eee426dbde1453c438a0c21.svg\" width=\"327\" height=\"54\"><p>Реализуем алгоритм проверки гипотез, используя новые оценки дисперсии. Проверим корректность работы на наших данных.</p><pre><code class=\"python\">def check_delta_method(a, b):\n    \"\"\"Проверка гипотезы с помощью дельта-метода.\n\n    Возвращает p-value.\n    \"\"\"\n    dict_ = {}\n    for data, group_name in [(a, \'a\',), (b, \'b\',)]:\n        n_user = len(data)\n        array_x = np.array([np.sum(row) for row in data])\n        array_y = np.array([len(row) for row in data])\n        mean_x, mean_y = np.mean(array_x), np.mean(array_y)\n        var_x, var_y = np.var(array_x), np.var(array_y)\n        cov_xy = np.cov(array_x, array_y)[0, 1]\n        # точечная оценка метрики\n        pe_metric = np.sum(array_x) / np.sum(array_y)\n        # оценка дисперсии метрики\n        var_metric = (\n            var_x / mean_y ** 2\n            - 2 * (mean_x / mean_y ** 3) * cov_xy\n            + (mean_x ** 2 / mean_y ** 4) * var_y\n        ) / n_user\n        dict_[f\'pe_metric_{group_name}\'] = pe_metric\n        dict_[f\'var_metric_{group_name}\'] = var_metric\n    var = dict_[\'var_metric_a\'] + dict_[\'var_metric_b\']\n    delta = dict_[\'pe_metric_b\'] - dict_[\'pe_metric_a\']\n    t = delta / np.sqrt(var)\n    pvalue = (1 - stats.norm.cdf(np.abs(t))) * 2\n    return pvalue\n\nalpha = 0.05           # допустимая вероятность ошибки I рода\nsample_size = 1000     # размер групп\neffect = 50            # размер эффекта\n\npvalues_aa = []\npvalues_ab = []\nfor _ in range(1000):\n    a, b = generate_data(sample_size, 0)\n    pvalues_aa.append(check_delta_method(a, b))\n    a, b = generate_data(sample_size, effect)\n    pvalues_ab.append(check_delta_method(a, b))\n\nplot_pvalue_distribution({\'A/A\': pvalues_aa, \'A/B\': pvalues_ab})\n\n</code></pre><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e06/961/aff/e06961aff39835e6a4d1f4afd4dad360.png\" width=\"2560\" height=\"1920\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e06/961/aff/e06961aff39835e6a4d1f4afd4dad360.png\"></figure><p>В этот раз мы провели и А/А и А/Б эксперименты. Дельта-метод контролирует вероятность ошибки первого рода на уровне значимости, когда эффекта нет, и находит эффект, когда он есть. Критерий работает корректно.</p><h3>Итоги</h3><p>Мы разобрались, что такое метрики отношения и как их оценивать в экспериментах.</p><p>Вспомним подходы, которые рассмотрели:</p><ul><li><p><strong>Критерий Стьюдента</strong>, применённый в лоб к исходным данным, работает некорректно, так как данные зависимы.</p></li><li><p>Если заменить метрику отношения на <strong>среднее средних</strong>, то проблема зависимых данных исчезнет, но новая метрика может быть не сонаправлена с исходной. Если увеличилась одна, то другая могла как увеличиться, так и уменьшиться.</p></li><li><p>Оценить значимость изменения метрики отношения можно с помощью <strong>бутстрепа</strong>. Основной недостаток — требует много вычислительных ресурсов.</p></li><li><p><strong>Дельта-метод</strong> — способ оценки А/Б тестов с метрикой отношения, который основан на вычислении дисперсии зависимых данных.</p></li></ul><p></p>', 2, '2023-06-12 21:52:45', 390997, 72, '/ru/companies/X5Tech/articles/740476/', 'Предлагаю, продолжить разговор на тему «Что делать с детьми летом, если ты айтишник». Сегодня, как договаривались — про hard.Родной российский чиновник не перестает нас умилять: дескать нужны стране IT-шники. А электронщики — те вообще нужны! Прямо позарез! Но, взяться они должны, естественно, по щучьему веленью, по их (чиновников) хотению! Говорят: за границей есть, и нам нужно! А память у наших чиновников очень «оперативная» — сказанул чего‑нибудь в микрофон и забыл… Вот Президент В.В. Путин еще в 2017 году сказал, мол, кто преуспеет с искусственным интеллектом — тот и в дамках! Им бы, чиновникам нашим, «намотать эти слова на ус», запомнить и начать добиваться. Но, нет: память у чиновников только «оперативная» — чуть с работы вышел, все стерлось...Помню (через 3 года после выступления Президента) Минобразования твердо пообещало ввести с 2021г обучение программированию с начальной школы. Дескать, щас преподов обучим и вперед — догонять остальные экономически развитые страны. Мы-то с вами знаем, что обещанного в России три года ждут, ну и ждали, конечно. Но, недавно, уже в 2023г, депутатам Госдумы сообщили, что в России создался дефицит учителей информатики. Правда небольшой — всего-то 3600 учителей на целую ⅙ часть суши!А те-то, экономически развитые страны, не ждут, они своих деток еще с 2012–14 годов не только программированию учат, но и учат их в «железе» разбираться. Понавыпускали всяких MicroBit»ов и дарят их (то есть, отдают совершенно безвозмездно) каждому первоклашке. Это — в Англиях, где учиться начинают с 5-ти лет. В других Европах MicroBit не дарят, но изучают его очень активно. MicroBit превращает обучение серьезным вещам в интересную игру. Как результат, в той же Англии пятилетки‑первоклашки к 5-му классу вполне осваивают и Python, и Java Script…А в Поднебесной, читал, с обычного 5-го класса (не специально го) начинают делать лабораторные работы по искусственному интеллекту (накупили для этого чипов у Intel)…Но, в нашем Минобре ни про то, ни про это не читают и другим не советуют. Это ж только во времена СССР поэт В. Маяковский учил: «глазами жадными цапайте все то, что у нашей земли хорошо и что хорошо на Западе»... ');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(112, 'Каждому первоклашке свой «школьный» контроллер', '<figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/d54/804/8fb/d548048fbadd37a94cdb0c627cde99af.png\" alt=\'\"Школьный\" контроллер\' title=\'\"Школьный\" контроллер\' width=\"740\" height=\"480\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d54/804/8fb/d548048fbadd37a94cdb0c627cde99af.png\"><div><figcaption>\"Школьный\" контроллер</figcaption></figure><p>Предлагаю, продолжить <a href=\"https://habr.com/ru/articles/739760/\" rel=\"noopener noreferrer nofollow\"><u>разговор</u></a> на тему «Что делать с детьми летом, если ты айтишник». Сегодня, как договаривались — про hard.<br><br>Родной российский чиновник не перестает нас умилять: дескать нужны стране IT-шники. А электронщики — те вообще нужны! Прямо позарез! Но, взяться они должны, естественно, по щучьему веленью, по их (чиновников) хотению! Говорят: за границей есть, и нам нужно! А память у наших чиновников очень «оперативная» — с казанул чего-нибудь в микрофон и забыл… Вот Президент В.В. Путин еще в 2017 году сказал, мол, кто преуспеет с искусственным интеллектом — тот <a href=\"https://tass.ru/obschestvo/4524746\" rel=\"noopener noreferrer nofollow\"><u>и в дамках!</u></a> Им бы, чиновникам нашим, «намотать эти слова на ус», запомнить и начать добиваться. Но, нет: память у чиновников только «оперативная» —  чуть с работы вышел, все стерлось...<br><br>Помню (через 3 года после выступления Президента) Минобразования твердо пообещало ввести с 2021г обучение программированию с начальной школы. Дескать, щас преподов обучим и вперед — догонять остальные экономически развитые страны. Мы-то с вами знаем, что обещанного в России три года ждут, ну и ждали, конечно. Но, недавно, уже в 2023г, депутатам Госдумы сообщили, что в России создался дефицит учителей информатики. Правда небольшой — <a href=\"https://www.vedomosti.ru/society/news/2023/04/17/971189-v-gosdume-soobschili-o-defitsite-shkolnih-uchitelei-informatiki\" rel=\"noopener noreferrer nofollow\"><u>всего 3600</u></a> учителей на целую ⅙ часть суши!<br><br>А те-то, экономически развитые страны, не ждут, они своих деток еще с 2012-14 годов не только программированию учат, но и учат их в «железе» раз бираться. Понавыпускали всяких MicroBit’ов и дарят их (то есть, отдают совершенно безвозмездно) каждому первоклашке. Это — в Англиях, где учиться начинают с 5-ти лет. В других Европах MicroBit не дарят, но изучают его очень активно. MicroBit превращает обучение серьезным вещам в интересную игру. Как результат, в той же Англии пятилетки-первоклашки к 5-му классу вполне осваивают и Python, и Java Script…А в Поднебесной, читал, с обычного 5-го класса (не специального) начинают делать лабораторные работы по искусственному интеллекту (накупили для этого чипов у Intel)…<br><br>Но, в нашем Минобре ни про то, ни про это не читают и другим не советуют. Это ж только во времена СССР поэт В. Маяковский учил: “глазами жадными цапайте все то, что у нашей земли хорошо и что хорошо на Западе”... <br><br>Это лирическое отступление было — извините! А продолжая критику предложений автора заметки про то, что IT-шникам делать летом с их детишками, спрошу: “А не замахнуться ли нам на Вильяма Шекспира?” Может ну их, наших чиновников? Может самим подарить деткам не (уныло-примитивные и ни на что более не способные) светодиодные «мигалки» (котор ые, кстати, уже не первый раз <strong>рекламируют </strong>на Хабре, а ПОЛНОЦЕННЫЙ и доступный по цене, правда немножко “западный” контроллер китайского производства? Тот самый MicroBit. Может не будем ждать, когда их “импортозаместят”? А то детишки вырастут совсем…<br><br>Micro:bit невелик — с банковскую карту. Но, в его состав входят: простой дисплей, компас, акселерометр, измерители температуры и освещенности, микрофон, громкоговоритель и развитое программное обеспечение (включая спич-процессор). По сути Micro:bit — это миниатюрный электронный конструктор. Программирование позволяет управлять его “начинкой”, превращая Micro:bit то в часы, то в градусник, то в компьютерную игру или в другие интересные устройства. Подключаешь Micro:bit к USB-порту компьютера, заходишь на один из бесплатных сайтов, пишешь программу, и Micro:bit превращается в новую вещь.<br><br>Micro:bit хорош и сам по себе — позволяет многое понять и во многом разобраться. А уж если подключить к нему дополнительные комплектующие (а их, что называется, пруд пруди), то создавай хоть роботов, хоть «умный дом». Кстати, проверено: эти «железяки» отлично выдерживают обращение с ними без антистатических браслетов даже морозной зимой. Каких‑то глюков ни разу не замечено. А чтобы подтвердить, что нисколько не передергиваю, нахваливая вам эту миниатюрную «железяку», приведу ниже несколько кусочков текста из второй нашей, совместной с внуком, книжки. Извините, если это будет выглядеть, как «обрывки из отрывков», но моя цель — дать общее представление о «школьном» контроллере.<br><br>              —------------------  <em>цитаты и иллюстрации из книги</em>   ------------------------<br><br>«На рис. 3.2 приведен перечень изображений (пиктограмм), имеющихся во встроенной в Micro:bit библиотеке. Обратите внимание, что две последние строчки в списке переводятся, как „Все часы“ и „Все стрелки“. Это —  не пиктограммы, а сохраненные в библиотеке анимации из нескольких пиктограмм. Анимации можно вывести на дисплей следующими командами:<br>—<strong> display.show (Image.ALL_CLOCKS, loop=True, delay=100)</strong>;<strong><br></strong>—<strong> display.show (Image.ALL_ARROWS, loop=True, delay=100).</strong></p><p>В этих командах<strong> “loop=True”</strong> означает, что анимация выполняется постоянно - “по кольцу”, а <strong>“delay=100”</strong> означает, что изображения, из которых состоит анимация, отображаются через 0,1 сек (100 миллисекунд). Выведите эти анимации на дисплей вашего контроллера.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/80e/c8d/8d7/80ec8d8d7e48b9f1a6ad0ac55f72e550.png\" alt=\"Рис. 3.2 Перечень пиктограмм, имеющихся во встроенной библиотека Micro:bit\" title=\"Рис. 3.2 Перечень пиктограмм, имеющихся во встроенной библиотека Micro:bit\" width=\"1600\" height=\"1143\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/80e/c8d/8d7/80ec8d8d7e48b9f1a6ad0ac55f72e550.png\"><div><figcaption>Рис. 3.2 Перечень пиктограмм, имеющихся во встроенной библиотека Micro:bit</figcaption></figure><p>...</p><p><strong>3.12 Музыкальная шкатулка </strong></p><p>Команда <strong>import music</strong> позволяет обеспечить доступ контроллера к встроенной в него библиотеке музыкальных фрагментов и звуков. Список музыкальных фрагментов приведен на рис. 3.26. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/50a/aa9/68b/50aaa968bfd96c60ce1e81a019a4b8d7.png\" alt=\"Рис. 3.28 Перечень музыкальных фрагментов, в составе ПО Micro:bit\" title=\"Рис. 3.28 Перечень музыкальных фрагментов, в составе ПО Micro:bit\" width=\"1600\" height=\"534\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/50a/aa9/68b/50aaa968bfd96c60ce1e81a019a4b8d7.png\"><div><figcaption>Рис. 3.28 Перечень музыкальных фрагментов, в составе ПО Micro:bit</figcaption></figure><p>Для того, чтобы проиграть какой-то из этих фрагментов нужно дать контроллеру команду:<strong>music.play(имя.фрагмента)</strong>, например, <strong>music.play (music.PYTHON)</strong>. Скопируйте программу рис. 3.27 и послушайте, на что способна ваша музыкальная шкатулка.<br>…<br><br><strong>3.14. Компьютерная игра “Предсказатель будущего”</strong></p><p>Вот мы и добрались до первой нашей компьютерной игры (см. рис. 3.35). Суть этой веселой (коллективной) игры в следующем:</p><ul><li><p>ведущий предлагает играющим задавать вопросы о том, что может произойти в ближнем или дальнем будущем, говоря, что у него есть волшебный Предсказатель, который запросто определит произойдет это или нет. Можно также задавать вопросы типа: «Хорошо ли списывать на уроке?» и тому подобные;</p></li><li><p>кто-то из игроков задает свой вопрос;</p></li><li><p>после этого ведущий встряхивает Micro:bit говоря: «Отвечай!» </p></li><li><p>на дисплее Micro:bit появляется ответ Предсказателя;</p></li><li><p>ведущий зачитывает ответ Предсказателя;</p></li><li><p>затем кто-то задает следующий вопрос;</p></li><li><p>получается очень весело!</p></li></ul><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/1e0/c9a/bc5/1e0c9abc5209135cda530f0dd1e73f1f.png\" alt=\'Рис. 3.35 Программа компьютерной игры \"Предсказатель будущего\" (Magic-8)\' title=\'Рис. 3.35 Программа компьютерной игры \"Предсказатель будущего\" (Magic-8)\' width=\"1600\" height=\"1028\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/1e0/c9a/bc5/1e0c9abc5209135cda530f0dd1e73f1f.png\"><div><figcaption>Рис. 3.35 Программа компьютерной игры \"Предсказатель будущего\" (Magic-8)</figcaption></figure><p><strong>3.15. Творческое задание №3 </strong></p><p>Попробуйте изменить программу “Предсказатель будущего” так, чтобы ведущий мог (вводя в заблуждение игроков) по своему желанию, делать ответы Предсказателя “положительными” или, наоборот, “отрицательными”. Для этого нужно задействовать в программе кнопки “А” и “В” контроллера Micro:bit. Тогда, ведущий сможет, незаметно для игроков, нажимать ту или иную кнопку, изменяя результаты предсказаний так, как ему хочется. Получится еще смешнее.<br>…<br><br><strong>3.17 Измерение температуры </strong></p><figure class=\"float full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/20f/adf/92c/20fadf92c2bdf678b7f9f688c6eae500.png\" alt=\"Рис. 3.39 Программа измерения температуры окружающей среды\" title=\"Рис. 3.39 Программа измерения температуры окружающей среды\" width=\"591\" height=\"354\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/20f/adf/92c/20fadf92c2bdf678b7f9f688c6eae500.png\"><div><figcaption>Рис. 3.39 Программа измерения температуры окружающей среды</figcaption></figure><p><br>Micro:bit способен измерять температуру окружающей среды. Измерение температуры происходит непосредственно в градусах Цельсия, так, что никакого перевода из одних единиц в другие не требуется. Температуру можно узнать указав параметр <strong>temperature()</strong>. Диапазон измеряемых температур — от -25 град до 75 град С.<br>…<br><br><br><br><strong>3.17 Использование встроенного компаса<br></strong><br>Micro:bit способен определять угол отклонения от направления на север. Это позволяет создавать с использованием контроллера различные робототехнические устройства, способные ориентироваться на местности или в помещениях.<br><br>Для измерения угла отклонения линии, проходящей через USB-разъем Micro:bit к контактам его краевого разъема, от направления на север нужно указать в программе параметр <strong>compass.heading() </strong>(см. рис. 3.40). После загрузки этой программы в Micro:bit на его дисплей будет (автоматически) выведено сообщение: “<strong>TILT TO FILL SCREEN</strong>” (Поворачивайте до тех пор, пока не “зальете” экран), что означает, что для калибровки компаса необходимо вращать Micro:bit, изменяя положение его плоскости до тех пор, пока не станут светиться все светодиоды дисплея. После этого на дисплее будет показана пиктограмма “Счастливое лицо” и дисплей станет отображать угол отклонения. Плоскость Micro:bit при этом должна быть горизонтальна. Угол отклонения будет минимальным, когда на север будет показывать USB-разъем Micro:bit.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/1f7/32c/58e/1f732c58e3532a0f6b86253f777cab92.png\" alt=\"Рис. 3.40 Ориентация полюсов компаса и скрипт программы \" title=\"Рис. 3.40 Ориентация полюсов компаса и скрипт программы \" width=\"1600\" height=\"500\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/1f7/32c/58e/1f732c58e3532a0f6b86253f777cab92.png\"><div><figcaption>Рис. 3.40 Ориентация полюсов компаса и скрипт программы </figcaption></figure><p><strong> 3.19 Творческое задание №4</strong></p><p>Напишите программу-звуковой указатель правильного пути: </p><ul><li><p>выберите нужное вам направление движения, например, “на восток” — которое соответствует углу отклонения от направления на север 90 градусов;</p></li><li><p>используйте оператор if, чтобы включать звуковой сигнал, когда compass.heading() становится меньше, чем 70 градусов, или больше, чем 110 градусов. </p></li></ul><p>…</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/ac9/ced/901/ac9ced9014e72d01f6398bdb4fa7b318.png\" alt=\"Рис.3.45 Программа, демонстрирующая работу спич-процессора\" title=\"Рис.3.45 Программа, демонстрирующая работу спич-процессора\" width=\"1600\" height=\"800\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ac9/ced/901/ac9ced9014e72d01f6398bdb4fa7b318.png\"><div><figcaption>Рис.3.45 Программа, демонстрирующая работу спич-процессора</figcaption></figure><p><strong>3.22 Творческое задание №5<br></strong><br>Все, наверное, слышали стихи Чуковского “Жил на свете человек скрюченные ножки, и гулял он целый век по скрюченной дорожке…”, которые являются переводом народного английского стихотворения:</p><p><strong><em>There was a crooked man and he went a crooked mile,</em></strong></p><p><strong><em>He found a crooked sixpence against a crooked stile;</em></strong></p><p><strong><em>He bought a crooked cat, which caught a crooked mouse,</em></strong></p><p><strong><em>And they all lived together in a little crooked house.</em></strong></p><p>Научите Micro:bit рассказывать этот стишок. Или возьмите и перепрограммируйте игру “Предсказатель будущего”.</p><p>…<br><br><strong>4. Сигналы: цифровые и аналоговые</strong></p><p>Нужно разобраться, что такое цифровые и что такое аналоговые сигналы. <br><br><strong>Аналоговые сигналы</strong> — которые изменяются непрерывно (плавно). Их величина принимает бесконечное множество значений из некоторого диапазона. Между значениями, которые они принимают, нет разрывов. Примерами таких сигналов могут служить:</p><ul><li><p>скорость автомобиля; </p></li><li><p>температура окружающей среды;</p></li><li><p>величина напряжения батарейки или домашней электрической сети.</p></li></ul><p><strong>Цифровые сигналы</strong> - сигналы, имеющие всего два значения. Примером таких сигналов могут быть включение настольной лампы или состояние замка. Лампа может быть включенной, или выключенной. Замок может быть открыт, или закрыт. <br><br>Но, поскольку мы говорим об электронике и информационных технологиях, нам такие аналогии не подойдут. В этих областях техники используются электрические сигналы, а в них аналогом включенной и выключенной лампы является наличие или отсутствие на контактах и проводах лампы напряжения, необходимого для свечения этой лампы.<br><br>Состояние, когда напряжение присутствует на каком-то контакте или информационной линии, в информационных технологиях принято связывать с понятием “<strong>1</strong>” (единицы), а состояние, когда напряжение отсутствует связывают с понятием “<strong>0</strong>” (нуля). Причем, совсем не важно какова величина напряжения: 2 вольта, 5 вольт, или 100 вольт. В разных технических системах и устройствах напряжения могут быть разными. Поэтому, независимо от величины напряжения цифрового сигнала, при его наличии говорят о “<strong>логической единице</strong>” (далее будем использовать обозначение “<strong>лог. 1</strong>”), а отсутствие напряжения цифрового сигнала связывают с “<strong>логическим нулем</strong>” (обозначается, как “<strong>лог. 0</strong>”). <br><br>Как ни удивительно, но цифровые сигналы, состоящие только из “лог.1” и “лог.0”, способны передавать разную информацию (звуки и их громкость, изображения, цвет и его градации, яркость, контрастность и многое другое). Правда, в отличие от цифровых сигналов, соответствующих включению и выключению лампы, цифровые сигналы в информационных технологиях меняют состояния “лог.1” на состояния “лог.0” и обратно очень быстро. Процессор (главная микросхема) Micro:bit способен выдавать и обрабатывать цифровые сигналы, в которых состояния “лог.1” и “лог.0” меняются до 16 миллионов раз в секунду. И сегодня это — не самое высокое быстродействие. Процессоры ПК, ноутбуков и смартфонов имеют быстродействие в сотни раз выше!</p><p>Когда на каком-то контакте или информационной линии (проводе) появляется “лог.1”, а затем вновь появляется “лог.0”, говорят, что на этом контакте или линии сформировался цифровой сигнал в виде “импульса”, имеющего какую-то длительность во времени (см. рис. 4.1).</p><figure class=\"float full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/ad6/f25/9d1/ad6f259d166403381efdf66d502a2100.png\" width=\"1417\" height=\"531\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ad6/f25/9d1/ad6f259d166403381efdf66d502a2100.png\"></figure><p><strong>Рис. 4.1 Импульсы в составе цифрового сигнала</strong></p><p>Если какой-то импульс с одной и той же длительность появляется через равные промежутки времени, такие промежутки называют “периодом повторения” импульса (см. рис. 4.2). Первая (нарастающая) часть импульса называется “передним фронтом импульса”, задняя (спадающая) часть импульса носит название “заднего фронта. </p><figure class=\"float full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/0b0/38d/3d8/0b038d3d834342d5c4753bda135d11d4.png\" width=\"1417\" height=\"531\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/0b0/38d/3d8/0b038d3d834342d5c4753bda135d11d4.png\"></figure><p><strong><br>Рис. 4.2 Пояснение понятий “период повторения импульса” и “фронт импульса”</strong></p><p>Длительность периодов повторения импульсов измеряют между одноименными фронтами импульсов, например, от переднего фронта одного, до переднего фронта другого импульса.</p><p>…<br><br><strong>5.2. Адаптер подключения и макетная плата</strong></p><p>На рис. 5.2 изображен адаптер, с помощью которого можно легко получить доступ ко всем контактам разъема Micro:bit. Нумерация штыревых контактов адаптера, которые вставляются в отверстия макетной платы, полностью совпадает с нумерацией портов ввода вывода контроллера. Такой или аналогичный адаптер, макетную плату и небольшой набор электронных компонентов можно приобрести в интернет-магазинах...</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/9fc/249/689/9fc2496892e6d0487d14d3a6d7c73d54.png\" alt=\"Рис. 5.2 Micro:bit с адаптером и дополнительные электронные компоненты на макетной плате\" title=\"Рис. 5.2 Micro:bit с адаптером и дополнительные электронные компоненты на макетной плате\" width=\"1600\" height=\"800\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/9fc/249/689/9fc2496892e6d0487d14d3a6d7c73d54.png\"><div><figcaption>Рис. 5.2 Micro:bit с адаптером и дополнительные электронные компоненты на макетной плате</figcaption></figure><p>Макетная плата (см. рис. 5.3)  имеет две группы контактов. Каждая группа состоит из 62 строк, пронумерованных через 5 контактов. <br>Контакты строк имеют буквенные обозначения — <strong>a</strong>, <strong>b</strong>, <strong>c</strong>, <strong>d</strong>, <strong>e</strong>, <strong>f</strong>, <strong>g</strong>, <strong>h</strong>, <strong>i</strong>, <strong>j</strong>. Контакты строк <strong>a</strong>, <strong>b</strong>, <strong>c</strong>, <strong>d</strong>, <strong>e</strong> электрически соединены (замкнуты) друг с другом. <br>Контакты <strong>f</strong>, <strong>g</strong>, <strong>h</strong>, <strong>i</strong>, <strong>j</strong> — также соединены друг с другом. Это позволяет легко соединять выводы Micro:bit c другими электронными компонентами и устройствами…</p><p><strong>6.2 Потенциометры<br></strong><br>Потенциометры - это резисторы, у которых можно изменять величину электрического сопротивления (для регулировки напряжения или тока). Их внешний вид, конструктивное устройство и эквивалентная электрическая схеме показаны на рис. 6.3.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/609/f75/a2a/609f75a2a9261516e77b3ddd67d48392.png\" alt=\"Рис. 6.3 Потенциометры: внешний вид, устройство и схема\" title=\"Рис. 6.3 Потенциометры: внешний вид, устройство и схема\" width=\"1600\" height=\"445\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/609/f75/a2a/609f75a2a9261516e77b3ddd67d48392.png\"><div><figcaption>Рис. 6.3 Потенциометры: внешний вид, устройство и схема</figcaption></figure><p>Потенциометры, в отличие от резисторов имеют три вывода. Между двумя крайними выводами потенциометра (см. контакты 1 и 3 в средней части рис. 6.3) находится резистор в виде кольцевой дорожки. Электрическое сопротивление между контактами 1 и 3 всегда неизменно (эту величину и пишут на корпусе потенциометра). Вывод 2 потенциометра упруго прижимается и электрически контактирует с ползунком, который можно вращать ручкой потенциометра. Упругий контакт самого ползунка может скользить по кольцевой дорожке и электрически контактирует с ней. Если принять, например, что сопротивление между контактами 1 и 3 равно 100 Ом, то при вращении ручки потенциометра по часовой стрелке электрическое сопротивление R1 (между контактами 1 и 2) будет увеличиваться от 0 до 100 Ом, а величина сопротивления R2 (между контактами 2 и 3) будет уменьшаться от 100 Ом до нуля. </p><p>Мы обозначили части потенциометра, как “R1” и  “R2” только для объяснения принципа его работы. На электрических схемах никто не представляет потенциометры в виде двух отдельных резисторов R1 и R2. Их изображают в виде обычного резистора, который имеет ползунок (контакт со стрелочкой).<br><br>Прочитайте следующий раздел книги - вы поймете, что если к выводам 1 и 2 потенциометра R1 подключить напряжение 3,3В, то при вращении ручки между выводами 3 и 2 напряжение будет меняться от 0 до 3,3 вольт. А это, в свою очередь, означает, что сигнал на выводе 2 потенциометра относится к “<strong>аналоговым</strong>”.</p><p>…</p><p><br><strong>6.7. Ультразвуковой дальномер</strong></p><p>Принцип работы ультразвукового дальномера основан на отражении звука от разных объектов, тот же принцип для ориентирования в пространстве используют дельфины и летучие мыши. Дальномер генерирует звуковые импульсы и слушает отраженное эхо. По времени распространения звукового импульса туда и обратно можно однозначно определить расстояние до объекта, ведь мы же знаем, что звук распространяется в воздухе со скоростью 335 м/сек. <br><br>Например, звуковой импульс пролетит расстояние 10 метров за время равное 10 м : 335 м/сек = 0,02985 сек = 0,03 сек. На обратный путь импульсу эхо потребуется такое же время. То есть, если излученный дальномером импульс вернется эхом через 0,06 сек, значит он отразился от объекта, который находится примерно на расстоянии 10 метров.</p><p>Показанный на рис. 6.8 дальномер способен определять расстояния в диапазоне от 2 до 400 сантиметров. Измерения дальности он производит внутри “рабочего угла” 30 градусов, направленного “вперед” от двух излучателей дальномера. Для запитки этого дальномера необходимо напряжение 5 вольт.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e41/c1c/2b4/e41c1c2b4d9336ce4ff3994d4c2943be.png\" alt=\"Рис. 6.9 Ультразвуковой дальномер HC-SR04\" title=\"Рис. 6.9 Ультразвуковой дальномер HC-SR04\" width=\"1600\" height=\"600\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e41/c1c/2b4/e41c1c2b4d9336ce4ff3994d4c2943be.png\"><div><figcaption>Рис. 6.9 Ультразвуковой дальномер HC-SR04</figcaption></figure><p><strong>7.1. Чтение аналоговых напряжений<br><br></strong>Команда считывания аналогового напряжения <strong>pinN.read_analog() </strong>позволяет считывать величину напряжения, подключенного к контакту любого “аналогового” порта Micro:bit и ставит в соответствие этому напряжению целое число <strong>в диапазоне 0…1023</strong>, а именно:</p><ul><li><p>напряжению <strong>0 В </strong>соответствует число “<strong>0</strong>”,</p></li><li><p>напряжению <strong>3,3 В </strong>соответствует число “<strong>1023</strong>”.</p></li></ul><p>Так, если написать: “<strong>pin2.read_analog()</strong>”, это будет соответствовать чтению напряжения на контакте порта “<strong>Р2</strong>” Micro:bit.  </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/df3/861/1d2/df38611d28362d5eb19b36de927b074c.png\" alt=\"Рис. 7.1. Потенциометр в качестве источника аналогового сигнала\" title=\"Рис. 7.1. Потенциометр в качестве источника аналогового сигнала\" width=\"1600\" height=\"600\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/df3/861/1d2/df38611d28362d5eb19b36de927b074c.png\"><div><figcaption>Рис. 7.1. Потенциометр в качестве источника аналогового сигнала</figcaption></figure><p>Вы уже знаете, что подключенный к источнику напряжения потенциометр может служить источником аналогового сигнала. Используем этот факт для проверки работы команды чтения. Соберите на макетной плате схему, указанную на схемах рис. 7.1. </p><p>Из монтажной схемы видно, что:</p><ul><li><p>контакт “3V” адаптера Micro:bit подключен красным проводом к шине “+3V” макетной платы;</p></li><li><p>контакт “GND” адаптера Micro:bit подключен белым проводом к верхней шине “GND” (использован модуль питания на 5В, в котором верхняя и нижняя шины “GND” соединены друг с другом); </p></li><li><p>выводы потенциометра подключены к контактам i14, i15, i16 макетной платы;</p></li><li><p>контакт i16 макетной платы подключен черным проводом к нижней шине “GND” макетной платы (верхняя и нижняя шины соединены через модуль питания — см. рис.5.4); </p></li><li><p>контакт i14 также подключен к шине “+3V” (красным проводом);</p></li><li><p>движок потенциометра (контакт i15) оранжевым проводом подключен к порту “Р2” Micro:bit.</p></li></ul><figure class=\"float full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/cd5/80c/1cc/cd580c1cc183c1d2ff4f92ed820f3ca0.png\" width=\"640\" height=\"480\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/cd5/80c/1cc/cd580c1cc183c1d2ff4f92ed820f3ca0.png\"></figure><p><strong>Рис. 7.2 Мультиметр в режиме измерения напряжений в диапазоне 0 …20 вольт</strong></p><p>Чтобы подключить мультиметр к схеме рис 7.1, нужно:</p><ul><li><p>взять два соединительных провода из набора KS-4003;</p></li><li><p>откусить наконечники с одной стороны этих проводов и очистить эти концы проводов от изоляции на длину 3 — 4 см (см. рис. 7.3 “а”);</p></li></ul><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/ec0/eaf/2ad/ec0eaf2ad0c0ae668685a5165b175181.png\" alt=\"Рис. 7.3 Подключение мультиметра к схеме рис. 7.1\" title=\"Рис. 7.3 Подключение мультиметра к схеме рис. 7.1\" width=\"1600\" height=\"600\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ec0/eaf/2ad/ec0eaf2ad0c0ae668685a5165b175181.png\"><div><figcaption>Рис. 7.3 Подключение мультиметра к схеме рис. 7.1</figcaption></figure><ul><li><p>плотно обмотать очищенными от изоляции концами проводов концы красного и черного щупов мультиметра (см.рис. 7.3 “б”). После этого, концы щупов нужно обмотать изолентой (на фото это не показано) — это предотвратит возможность замыкания щупов друг с другом (хотя это и не опасно) и соскальзывание намотанных на щупы проводов;</p></li><li><p>подключить подсоединенные к щупам провода так, как это показано на рис. 7.3 “в”. То есть, черный щуп мультиметра нужно подключить к шине “GND”, а красный щуп — к порту “Р2” Micro:bit — ориентируйтесь по цвету проводов. Заметим, что подключить щупы можно и наоборот, но тогда на дисплее мультиметра появится знак “минус”, как если бы мы измеряли “отрицательное” напряжение;</p></li><li><p>подключите штатным кабелем Micro:bit к ПК и загрузите в него программу, приведенную на рис. 7.4;</p></li><li><p>переключателем установите предел измерения мультиметром постоянного напряжения в положение “20V”. Мультиметр начнет показывать величину напряжения на движке потенциометра;</p></li><li><p>немного поверните маленькой отверткой движок потенциометра и убедитесь, что величина напряжения на экране мультиметра изменилась. Одновременно, изменится и число, которое будет прокручиваться на дисплее Micro:bit. Поэкспериментируйте, вращая движок потенциометра, и убедитесь, что в одном из крайних положений движка потенциометра на дисплее будет число ближе к цифре “0”, а в другом крайнем — ближе к цифре “1023”.</p></li></ul><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f31/138/2df/f311382df246bccdc969477ea05c5fb1.png\" alt=\"Рис. 7.4 Программа считывания аналогового напряжения\" title=\"Рис. 7.4 Программа считывания аналогового напряжения\" width=\"1600\" height=\"222\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f31/138/2df/f311382df246bccdc969477ea05c5fb1.png\"><div><figcaption>Рис. 7.4 Программа считывания аналогового напряжения</figcaption></figure><p>Вы скажете: “Да, мы убедились, что Micro:bit может считывать аналоговые сигналы. Но это же неудобно, если напряжения, которые он показывает на дисплее, выражены не в общепринятых единицах измерения (вольтах), а в каких-то своих?” — Мы с вами абсолютно согласны, и поэтому, продолжим наши эксперименты.</p><p><strong>7.2. Превращаем Micro:bit в настоящий вольтметр</strong><br><br>Согласитесь, что, если мы знаем, что напряжению <strong>0 В </strong>соответствует число “<strong>0</strong>”, а напряжению <strong>3,3 В </strong>соответствует число “<strong>1023</strong>”, то мы можем заставить Micro:bit пересчитывать эти цифры в вольты. Для этого нужно понять, сколько вольт приходится на каждую единицу измерения, которыми пользуется Micro:bit. Для этого делим <strong>3,3В </strong>на<strong> 1023 </strong>единицы и получаем коэффициент пересчета<strong> 0,003226В</strong>. Теперь, если каждую единицу измеренную Micro:bit умножать на такой коэффициент, мы будем получать результат в вольтах (см. рис. 7.5).</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/76f/649/c60/76f649c60f892b8902c38de25d4a5c66.png\" alt=\"Рис. 7.5 Программа измерения аналоговых напряжений в вольтах\" title=\"Рис. 7.5 Программа измерения аналоговых напряжений в вольтах\" width=\"1600\" height=\"266\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/76f/649/c60/76f649c60f892b8902c38de25d4a5c66.png\"><div><figcaption>Рис. 7.5 Программа измерения аналоговых напряжений в вольтах</figcaption></figure><h4>...</h4><p><strong>7.2. Творческое задание №6</strong><br><br>В светофоре, который мы собрали и запрограммировали, всего три светодиода. Как говорится: “Маловато будет!” А что если научить работать в светофоре не три, а шесть СИД? — Попробуйте!</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/7ff/33f/03b/7ff33f03bd2a98237f8e289617f4917a.png\" alt=\"Рис. 7.17 Светофор, использующий шесть СИД\" title=\"Рис. 7.17 Светофор, использующий шесть СИД\" width=\"1600\" height=\"489\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/7ff/33f/03b/7ff33f03bd2a98237f8e289617f4917a.png\"><div><figcaption>Рис. 7.17 Светофор, использующий шесть СИД</figcaption></figure><p>На рис. 7.17 приведены наши подсказки:</p><ul><li><p>для удобства, можно разместить три СИД на стороне макетной платы с маркировкой “a”...”e”, а другие три — на стороне с маркировкой “f” … “j”;<br>— СИД подключите к портам “Р0”, “Р1”, “Р2”, “Р3”, “Р4” и “Р6”;</p></li><li><p>если вы не еще не используете на макетной плате модуль питания “+5V”, то соедините проводной перемычкой шины “GND1” и “GND2”;</p></li><li><p>время свечения СИД установите в соответствие с таблицей рисунка.</p></li></ul><p>Напомним, что в MicroBit порты “Р3”, “Р4”, “Р6”, “Р7” и “Р10” подключены к цепям управления дисплеем. То есть, до использования портов “Р3”, “Р4” и “Р6” нужно отключить дисплей командой <strong>display.off() </strong>—<strong> </strong>сразу же после строки <strong>from microbit import *</strong>. </p><h4>…</h4><p><strong>7.10. ШИМ в управлении яркостью СИД<br><br> </strong>Давайте еще раз используем схему дверного звонка рис. 7.11 и применим на практике то, что мы узнали про ШИМ для регулирования яркости светодиода (см. рис. 7.22). </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/516/a94/f1f/516a94f1f66138eed911ec80187defdc.png\" alt=\"Рис. 7.22 Программа управления яркостью СИД при помощи ШИМ\" title=\"Рис. 7.22 Программа управления яркостью СИД при помощи ШИМ\" width=\"1600\" height=\"569\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/516/a94/f1f/516a94f1f66138eed911ec80187defdc.png\"><div><figcaption>Рис. 7.22 Программа управления яркостью СИД при помощи ШИМ</figcaption></figure><h4>…</h4><p><strong>7.13. Работа Micro:bit с дисплеем LCD-1602</strong></p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/937/14d/b1c/93714db1c1fe8e0b10f09750054aed4a.png\" alt=\"Рис. 7.30 Подключение дисплея LCD-1602\" title=\"Рис. 7.30 Подключение дисплея LCD-1602\" width=\"1600\" height=\"600\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/937/14d/b1c/93714db1c1fe8e0b10f09750054aed4a.png\"><div><figcaption>Рис. 7.30 Подключение дисплея LCD-1602</figcaption></figure><p>Дисплей обменивается информацией с Micro:bit по шине I2C1 через порты “Р19” и “Р20”. При подключении дисплея (см. рис. 7.30) вспомните лайфхак с вилками и розетками, о котором мы рассказали при подключении дальномера. И, обязательно, используйте модуль питания “+5V”.</p><p>Написать программу для использования дисплея в уже привычном нам редакторе <strong>Python Editor </strong>пока не получится. Перейдем для этого в среду программирования <strong>Make Code</strong> (<a href=\"https://makecode.microbit.org/\" rel=\"noopener noreferrer nofollow\"><u>https://makecode.microbit.org/</u></a>)... <br></p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/402/285/8a7/4022858a7246844efdf0ab3b0cf99b8b.png\" alt=\'Рис. 7.34 Дисплей LCD-1602 в компьютерной игре \"Предсказатель будущего\"\' title=\'Рис. 7.34 Дисплей LCD-1602 в компьютерной игре \"Предсказатель будущего\"\' width=\"2048\" height=\"768\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/402/285/8a7/4022858a7246844efdf0ab3b0cf99b8b.png\"><div><figcaption>Рис. 7.34 Дисплей LCD-1602 в компьютерной игре \"Предсказатель будущего\"</figcaption></figure><p>                 ----------------------------- конец цитирования книжки —-------------------------</p><p>Думаю, теперь каждому понятно, что в сравнении с MicroBit, унылые светодиодные “мигалки” — это полный “кринж”. Ну, а если интересно, откуда приведены цитаты и картинки, погуглите “”Школьный” контроллер MicroBit: 50+ занимательных программ на пути в IT\". <br><br>Кстати, уже после того, как книжка была издана, пришла в голову мысль, что про “путь в IT” мы написали зря. Не каждому это нужно! Важно, что освоив Microbit, ваши дети начнут гораздо лучше понимать, как устроен окружающий их мир: от лифта и пульта ДУ теликом, до промышленных/медицинских роботов и боевых дронов. А это же здорово!</p><p>А закончить этот разговор хочу девизом (почти, как у ВДВ): ЕСЛИ НЕ МЫ, ТО КТО?<br></p>', 2, '2023-06-12 21:52:46', 433539, 72, '/ru/articles/740504/', 'В этой статье речь пойдет об эксперименте Voyager: An Open-Ended Embodied Agent with Large Language Models, в котором группа исследователей (Guanzhi Wang, Yuqi Xie, Yunfan Jiang, Ajay Mandlekar, Chaowei Xiao, Yuke Zhu, Linxi Fan, Anima Anandkumar ) дала GPT-4 поиграть в Minecraft. В этом видео есть объяснение на английском языке. Оригинал текста на английском языке находится здесь.Новость не кажется чем-то громким, но есть нюанс: нейросеть сама учила себя играть. Она принимала решения, но также обучалась разным действиям вроде «срубить дерево» или «убить паука». ИИ сталкивался с проблемами и самостоятельно учился их решать, добавляя скиллы в свою библиотеку. Проще говоря, GPT-4 теперь пишет код, проверяет его и совершенствует. Именно с такого начинается так называемая сингулярность, в результате которой ИИ сам сделает себя умнее людей. Сингулярость Майнкрафта.  ');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(113, 'Сингулярность, в результате которой ИИ сам сделает себя умнее людей. GPT-4 играет в Minecraft и самообучается', '<blockquote><p><em>\"Искусственный интеллект - это не просто технология будущего, это уже реальность настоящего, которую мы должны принять, чтобы обеспечить безопасность и этичность его использования и который будет служить человечеству, а не заменять его...\"</em>  (Ответ GPT4 на мой запрос)</p></blockquote><figure class=\"full-width \"><img src=\"https://habrastorage.org/getpro/habr/upload_files/014/036/9d9/0140369d97ee71b83b89bdb832d1ed6f.gif\" alt=\"Что такое сингулярность и почему однажды человеческая история вдруг станет непредсказуемой, я думаю вы и так понимаете...\" title=\"Что такое сингулярность и почему однажды человеческая история вдруг станет непредсказуемой, я думаю вы и так понимаете...\" width=\"648\" height=\"792\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/014/036/9d9/0140369d97ee71b83b89bdb832d1ed6f.gif\"><div><figcaption>Что такое <a href=\"https://theoryandpractice.ru/posts/6981-chto-takoe-singulyarnost-ili-pochemu-istoriya-chelovechestva-odnazhdy-stanet-nepredskazuemoy\" rel=\"noopener noreferrer nofollow\">сингулярность</a> и почему однажды человеческая история вдруг станет непредсказуемой, я думаю вы и так понимаете...</figcaption></figure><p>В этой статье речь пойдет об <a href=\"https://arxiv.org/abs/2305.16291\" rel=\"noopener noreferrer nofollow\">эксперименте Voyager</a>: An Open-Ended Embodied Agent with Large Language Models, в котором группа исследователей (<a href=\"https://arxiv.org/search/cs?searchtype=author&amp;query=Wang%2C+G\" rel=\"noopener noreferrer nofollow\">Guanzhi Wang</a>, <a href=\"https://arxiv.org/search/cs?searchtype=author&amp;query=Xie%2C+Y\" rel=\"noopener noreferrer nofollow\">Yuqi Xie</a>, <a href=\"https://arxiv.org/search/cs?searchtype=author&amp;query=Jiang%2C+Y\" rel=\"noopener noreferrer nofollow\">Yunfan Jiang</a>, <a href=\"https://arxiv.org/search/cs?searchtype=author&amp;query=Mandlekar%2C+A\" rel=\"noopener noreferrer nofollow\">Ajay Mandlekar</a>, <a href=\"https://arxiv.org/search/cs?searchtype=author&amp;query=Xiao%2C+C\" rel=\"noopener noreferrer nofollow\">Chaowei Xiao</a>, <a href=\"https://arxiv.org/search/cs?searchtype=author&amp;query=Zhu%2C+Y\" rel=\"noopener noreferrer nofollow\">Yuke Zhu</a>, <a href=\"https://arxiv.org/search/cs?searchtype=author&amp;query=Fan%2C+L\" rel=\"noopener noreferrer nofollow\">Linxi Fan</a>, <a href=\"https://arxiv.org/search/cs?searchtype=author&amp;query=Anandkumar%2C+A\" rel=\"noopener noreferrer nofollow\"><u>Anima Anandkumar</u></a> ) дала GPT-4 поиграть в Minecraft. </p><p>В <a href=\"https://youtu.be/VCDf-Bky7kw\" rel=\"noopener noreferrer nofollow\">этом видео</a> есть объяснение на английском языке. Оригинал текста на английском языке находится <a href=\"https://arxiv.org/pdf/2305.16291\" rel=\"noopener noreferrer nofollow\">здесь.</a></p><p>Новость не кажется чем-то громким, но есть нюанс: нейросеть сама учила себя играть. Она принимала решения, но также обучалась разным действиям вроде «срубить дерево» или «убить паука». ИИ сталкивался с проблемами и самостоятельно учился их решать, добавляя скиллы в свою библиотеку. Проще говоря, GPT-4 теперь пишет код, проверяет его и совершенствует. </p><p>Именно с такого начинается так называемая сингулярность, в результате которой ИИ сам сделает себя умнее людей. <a href=\"https://youtu.be/VCDf-Bky7kw\" rel=\"noopener noreferrer nofollow\">Сингулярость Майнкрафта</a>.  </p><h2>Аннотация</h2><p>Группа исследователей (<a href=\"https://arxiv.org/search/cs?searchtype=author&amp;query=Wang%2C+G\" rel=\"noopener noreferrer nofollow\">Guanzhi Wang</a>, <a href=\"https://arxiv.org/search/cs?searchtype=author&amp;query=Xie%2C+Y\" rel=\"noopener noreferrer nofollow\">Yuqi Xie</a>, <a href=\"https://arxiv.org/search/cs?searchtype=author&amp;query=Jiang%2C+Y\" rel=\"noopener noreferrer nofollow\">Yunfan Jiang</a>, <a href=\"https://arxiv.org/search/cs?searchtype=author&amp;query=Mandlekar%2C+A\" rel=\"noopener noreferrer nofollow\">Ajay Mandlekar</a>, <a href=\"https://arxiv.org/search/cs?searchtype=author&amp;query=Xiao%2C+C\" rel=\"noopener noreferrer nofollow\">Chaowei Xiao</a>, <a href=\"https://arxiv.org/search/cs?searchtype=author&amp;query=Zhu%2C+Y\" rel=\"noopener noreferrer nofollow\">Yuke Zhu</a>, <a href=\"https://arxiv.org/search/cs?searchtype=author&amp;query=Fan%2C+L\" rel=\"noopener noreferrer nofollow\">Linxi Fan</a>, <a href=\"https://arxiv.org/search/cs?searchtype=author&amp;query=Anandkumar%2C+A\" rel=\"noopener noreferrer nofollow\"><u>Anima Anandkumar</u></a> )  представляют на ваш суд VOYAGER, первого встроенного агента непрерывного обучения на базе LLM  в Minecraft, который постоянно исследует мир, приобретает разнообразные навыки и  делает новые открытия без вмешательства человека. </p><p>VOYAGER, три ключевые компоненты: </p><ol><li><p> автоматический учебный план, который максимизирует исследование, </p></li><li><p>постоянно растущая библиотека навыков исполняемого кода для хранения и извлечения сложных  поведения,</p></li><li><p>новый итеративный механизм подсказок, который включает в себя обратную связь со средой, ошибки выполнения и самопроверку для улучшения программы.</p></li></ol><p>VOYAGER самостоятельно взаимодействует с GPT-4 через запросы  LLM (GPT-4), что позволяет избежать необходимости  тонкой настройки параметров модели. </p><p>Навыки, разработанные VOYAGER, временно расширены, интерпретируемы и композиционны, что объединяет способности агента быстро и облегчает катастрофическое забывание. </p><p>Эмпирически VOYAGER показывает  сильную способность к обучению в контексте на протяжении всей жизни и демонстрирует исключительное мастерство в игре Майнкрафт. </p><p>Он получает в 3,3 раза больше уникальных предметов, путешествует в 2,3 раза дольше на<br> расстояния и открывает ключевые вехи дерева технологий до 15,3 раза быстрее, чем предыдущая SOTA.</p><p> VOYAGER может использовать библиотеку изученных навыков в новом мире Minecraft, чтобы  решать новые задачи с нуля, в то время как другие методы с трудом поддаются обобщению.   </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/853/bab/f20/853babf20964ea4134a66e0c9e958f41.png\" width=\"3200\" height=\"1974\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/853/bab/f20/853babf20964ea4134a66e0c9e958f41.png\"></figure><h2>Введение</h2><p>Создание в целом способных агентов, которые постоянно исследуют, планируют и развивают новые навыки в открытых мирах, является серьезной задачей для сообщества ИИ. Классические подходы используют обучение с подкреплением (RL) и имитационное обучение, которые работают с примитивными действиями, которые могут быть сложными для систематического исследования, интерпретируемости и обобщения. Последние достижения в области больших языковых моделей (LLM) позволяют использовать знания о мире, инкапсулированные в предварительно обученных LLM, для создания согласованных планов действий или исполняемых политик. Они применяются к воплощенным задачам, таким как игры и робототехника, а также к задачам НЛП без воплощения. Однако эти агенты не являются учащимися на протяжении всей жизни, которые могут постепенно приобретать, обновлять, накапливать и передавать знания в течение продолжительных промежутков времени.</p><p>Давайте рассмотрим Minecraft в качестве примера. В отличие от большинства других игр, изучаемых в области ИИ, Minecraft не навязывает заранее определенной конечной цели или фиксированной сюжетной линии, а скорее предоставляет уникальную игровую площадку с бесконечными возможностями. Эффективный агент, обучающийся на протяжении всей жизни, должен иметь такие же возможности, как и люди:</p><ol><li><p>предлагать подходящие задачи, исходя из его текущего уровня навыков и состояния мира, например, научиться собирать песок и кактус раньше, чем железо, если оно окажется в пустыне, а не в лесу. ; </p></li><li><p>совершенствовать навыки на основе обратной связи с окружающей средой и закреплять освоенные навыки в памяти для повторного использования в будущем в аналогичных ситуациях (например, борьба с зомби похожа на борьбу с пауками);</p></li><li><p>постоянно исследовать мир и самостоятельно искать новые задачи.</p></li></ol><h2>Состав Voyager </h2><p>Мы представляем Voyager, первого агента обучения на протяжении всей жизни на базе LLM, который ведет исследования, осваивает широкий спектр навыков и постоянно делает новые открытия без вмешательства человека в Minecraft. Voyager стал возможен благодаря трем ключевым модулям: </p><ol><li><p>автоматическая учебная программа, которая максимизирует исследования; </p></li><li><p>библиотека навыков для хранения и извлечения сложных моделей поведения; </p></li><li><p>новый итеративный механизм подсказок, который генерирует исполняемый код для встроенного управления. </p></li></ol><p>Мы решили использовать код в качестве пространства действий вместо низкоуровневых двигательных команд, потому что программы могут естественным образом представлять расширенные во времени и композиционные действия, которые необходимы для многих долгосрочных задач в Minecraft. Voyager взаимодействует с черным ящиком LLM (GPT-4) посредством подсказок и обучения в контексте. Наш подход обходит необходимость доступа к параметрам модели и явного обучения или тонкой настройки на основе градиента.</p><figure class=\"bordered full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/78e/7a8/d68/78e7a8d680508adcb29347aa5dd30117.png\" alt=\"Voyager состоит из трех ключевых компонентов: автоматического учебного плана для неограниченных исследований, библиотеки навыков для все более сложного поведения и итеративного механизма подсказок, который использует код как пространство для действий.\" title=\"Voyager состоит из трех ключевых компонентов: автоматического учебного плана для неограниченных исследований, библиотеки навыков для все более сложного поведения и итеративного механизма подсказок, который использует код как пространство для действий.\" width=\"4602\" height=\"1934\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/78e/7a8/d68/78e7a8d680508adcb29347aa5dd30117.png\"><div><figcaption>Voyager состоит из трех ключевых компонентов: автоматического учебного плана для неограниченных исследований, библиотеки навыков для все более сложного поведения и итеративного механизма подсказок, который использует код как пространство для действий.</figcaption></figure><figure class=\"bordered full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/dc7/4cc/efe/dc74ccefec2a8c2e642890c3424d529f.png\" alt=\"Автоматическая учебная программа учитывает ход исследования и состояние агента, чтобы максимизировать исследование. Учебная программа создается GPT-4 на основе всеобъемлющей цели «открыть как можно больше разнообразных вещей». Этот подход можно рассматривать как контекстную форму поиска новизны.\" title=\"Автоматическая учебная программа учитывает ход исследования и состояние агента, чтобы максимизировать исследование. Учебная программа создается GPT-4 на основе всеобъемлющей цели «открыть как можно больше разнообразных вещей». Этот подход можно рассматривать как контекстную форму поиска новизны.\" width=\"5080\" height=\"1936\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/dc7/4cc/efe/dc74ccefec2a8c2e642890c3424d529f.png\"><div><figcaption>Автоматическая учебная программа учитывает ход исследования и состояние агента, чтобы максимизировать исследование. Учебная программа создается GPT-4 на основе всеобъемлющей цели «открыть как можно больше разнообразных вещей». Этот подход можно рассматривать как контекстную форму поиска новизны.</figcaption></figure><figure class=\"bordered full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/721/307/328/72130732815b76a5d13eaeabeb8d83a1.png\" alt=\"Библиотека навыков. Вверху: добавление нового навыка. Каждый навык индексируется встраиванием его описания, которое можно будет извлечь в подобных ситуациях в будущем. Внизу: поиск навыков. Когда мы сталкиваемся с новой задачей, предложенной автоматическим учебным планом, мы проводим опрос, чтобы определить топ-5 релевантных навыков. Сложные навыки могут быть синтезированы путем составления более простых программ, которые со временем быстро объединяют возможности Voyager и уменьшают катастрофическое забывание.\" title=\"Библиотека навыков. Вверху: добавление нового навыка. Каждый навык индексируется встраиванием его описания, которое можно будет извлечь в подобных ситуациях в будущем. Внизу: поиск навыков. Когда мы сталкиваемся с новой задачей, предложенной автоматическим учебным планом, мы проводим опрос, чтобы определить топ-5 релевантных навыков. Сложные навыки могут быть синтезированы путем составления более простых программ, которые со временем быстро объединяют возможности Voyager и уменьшают катастрофическое забывание.\" width=\"5734\" height=\"2744\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/721/307/328/72130732815b76a5d13eaeabeb8d83a1.png\"><div><figcaption>Библиотека навыков. Вверху: добавление нового навыка. Каждый навык индексируется встраиванием его описания, которое можно будет извлечь в подобных ситуациях в будущем. Внизу: поиск навыков. Когда мы сталкиваемся с новой задачей, предложенной автоматическим учебным планом, мы проводим опрос, чтобы определить топ-5 релевантных навыков. Сложные навыки могут быть синтезированы путем составления более простых программ, которые со временем быстро объединяют возможности Voyager и уменьшают катастрофическое забывание.</figcaption></figure><figure class=\"bordered full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/302/830/199/3028301997fdda5d5f22e0ce25194b37.png\" alt=\"Слева: обратная связь с окружающей средой. GPT-4 понимает, что ему нужно еще 2 доски, прежде чем создавать палки. Справа: ошибка выполнения. GPT-4 понимает, что он должен изготовить деревянный топор вместо топора из акации, поскольку в Minecraft нет топора из акации.\" title=\"Слева: обратная связь с окружающей средой. GPT-4 понимает, что ему нужно еще 2 доски, прежде чем создавать палки. Справа: ошибка выполнения. GPT-4 понимает, что он должен изготовить деревянный топор вместо топора из акации, поскольку в Minecraft нет топора из акации.\" width=\"5680\" height=\"3370\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/302/830/199/3028301997fdda5d5f22e0ce25194b37.png\"><div><figcaption>Слева: обратная связь с окружающей средой. GPT-4 понимает, что ему нужно еще 2 доски, прежде чем создавать палки. Справа: ошибка выполнения. GPT-4 понимает, что он должен изготовить деревянный топор вместо топора из акации, поскольку в Minecraft нет топора из акации.</figcaption></figure><figure class=\"bordered full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/c8f/36f/3a8/c8f36f3a8848934b4c87e2a87151877b.png\" alt=\"Самопроверка. Предоставляя GPT-4 текущее состояние агента и задачу, мы просим его выступить в роли критика и сообщить нам, выполняет ли программа задачу. Кроме того, если задача не удалась, он дает критический анализ, предлагая, как выполнить задачу.\" title=\"Самопроверка. Предоставляя GPT-4 текущее состояние агента и задачу, мы просим его выступить в роли критика и сообщить нам, выполняет ли программа задачу. Кроме того, если задача не удалась, он дает критический анализ, предлагая, как выполнить задачу.\" width=\"4970\" height=\"2014\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/c8f/36f/3a8/c8f36f3a8848934b4c87e2a87151877b.png\"><div><figcaption>Самопроверка. Предоставляя GPT-4 текущее состояние агента и задачу, мы просим его выступить в роли критика и сообщить нам, выполняет ли программа задачу. Кроме того, если задача не удалась, он дает критический анализ, предлагая, как выполнить задачу.</figcaption></figure><h2>Эксперименты</h2><p>Мы систематически оцениваем Voyager и его базовые показатели с точки зрения их исследовательской производительности, мастерства дерева технологий, охвата карты и возможности обобщения с нуля для решения новых задач в новом мире.</p><h3>Значительно лучшее исследование</h3><p> Как показано на первом рисунке, превосходство Voyager  проявляется в его способности постоянно делать новые шаги, обнаруживая 63 уникальных объекта за 160 итераций, что в 3,3 раза больше новых объектов по сравнению с его аналогами. С другой стороны, AutoGPT значительно отстает в обнаружении новых элементов, в то время как ReAct и Reflexion изо всех сил пытаются добиться значительного прогресса.</p><h3>Дерево обучения</h3><figure class=\"bordered full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e0d/4ec/c60/e0d4ecc60c7c1f9b472d249afc618f21.png\" alt=\"Дерево обучения мастерству Minecraft проверяет способность агента создавать и использовать иерархию инструментов. Продвижение по этому дереву (деревянный инструмент → каменный инструмент → железный инструмент → алмазный инструмент) требует от агента овладения систематическими и композиционными навыками. В этой таблице дроби обозначают количество успешных испытаний из трех полных запусков. Цифры указывают на итерации, усредненные по трем испытаниям. Чем меньше итераций, тем эффективнее метод. По сравнению с базовыми показателями, Voyager  открывает уровень дерева в 15,3 раза быстрее (с точки зрения итераций подсказок), уровня камня в 8,5 раза быстрее, уровня железа в 6,4 раза быстрее, а Voyager  - единственный, кто разблокирует уровень алмаза дерева технологий.\" title=\"Дерево обучения мастерству Minecraft проверяет способность агента создавать и использовать иерархию инструментов. Продвижение по этому дереву (деревянный инструмент → каменный инструмент → железный инструмент → алмазный инструмент) требует от агента овладения систематическими и композиционными навыками. В этой таблице дроби обозначают количество успешных испытаний из трех полных запусков. Цифры указывают на итерации, усредненные по трем испытаниям. Чем меньше итераций, тем эффективнее метод. По сравнению с базовыми показателями, Voyager  открывает уровень дерева в 15,3 раза быстрее (с точки зрения итераций подсказок), уровня камня в 8,5 раза быстрее, уровня железа в 6,4 раза быстрее, а Voyager  - единственный, кто разблокирует уровень алмаза дерева технологий.\" width=\"1828\" height=\"352\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e0d/4ec/c60/e0d4ecc60c7c1f9b472d249afc618f21.png\"><div><figcaption>Дерево обучения мастерству Minecraft проверяет способность агента создавать и использовать иерархию инструментов. Продвижение по этому дереву (деревянный инструмент → каменный инструмент → железный инструмент → алмазный инструмент) требует от агента овладения систематическими и композиционными навыками. В этой таблице дроби обозначают количество успешных испытаний из трех полных запусков. Цифры указывают на итерации, усредненные по трем испытаниям. Чем меньше итераций, тем эффективнее метод. По сравнению с базовыми показателями, Voyager  открывает уровень дерева в 15,3 раза быстрее (с точки зрения итераций подсказок), уровня камня в 8,5 раза быстрее, уровня железа в 6,4 раза быстрее, а Voyager  - единственный, кто разблокирует уровень алмаза дерева технологий.</figcaption></figure><h3>Обширный обход карты</h3><figure class=\"bordered full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/d19/561/e97/d19561e97b9f6d0efcb6907e21d826c7.png\" alt=\"Покрытие карты: два вида карт Minecraft с высоты птичьего полета. Voyager  способен преодолевать расстояния в 2,3 раза больше по сравнению с исходными, пересекая различные ландшафты, в то время как базовые агенты часто оказываются ограниченными локальными районами, что значительно ограничивает их способность открывать новые знания.\" title=\"Покрытие карты: два вида карт Minecraft с высоты птичьего полета. Voyager  способен преодолевать расстояния в 2,3 раза больше по сравнению с исходными, пересекая различные ландшафты, в то время как базовые агенты часто оказываются ограниченными локальными районами, что значительно ограничивает их способность открывать новые знания.\" width=\"2855\" height=\"1532\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d19/561/e97/d19561e97b9f6d0efcb6907e21d826c7.png\"><div><figcaption>Покрытие карты: два вида карт Minecraft с высоты птичьего полета. Voyager  способен преодолевать расстояния в 2,3 раза больше по сравнению с исходными, пересекая различные ландшафты, в то время как базовые агенты часто оказываются ограниченными локальными районами, что значительно ограничивает их способность открывать новые знания.</figcaption></figure><h3>Эффективное обобщение Zero-Shot для невидимых задач</h3><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/739/fab/f2c/739fabf2c41dfdbed3252a43309d76ad.png\" width=\"1432\" height=\"314\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/739/fab/f2c/739fabf2c41dfdbed3252a43309d76ad.png\"></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/7ab/47f/20d/7ab47f20dfdff3f53816dabdf0fe5a81.png\" width=\"4132\" height=\"2878\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/7ab/47f/20d/7ab47f20dfdff3f53816dabdf0fe5a81.png\"></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/29a/d85/b24/29ad85b247a486b4095338f0b4abc154.png\" alt=\"Обобщение с нулевым выстрелом для невидимых задач. Мы очищаем инвентарь агента, сбрасываем его в новый созданный мир и тестируем его с невидимыми задачами. В приведенной выше таблице дроби обозначают количество успешных испытаний из трех полных запусков. Цифры указывают на итерации, усредненные по трем испытаниям. Чем меньше итераций, тем эффективнее метод. «Вояджер» может последовательно решать все задачи, в то время как базовые уровни не могут решить ни одну задачу за 50 итераций подсказки. Интересно отметить, что наша библиотека навыков, созданная на основе обучения на протяжении всей жизни, не только повышает производительность Voyager, но и повышает AutoGPT. Это демонстрирует, что библиотека навыков служит универсальным инструментом, который можно легко использовать с другими методами, эффективно выступая в качестве актива plug-and-play для повышения производительности.\" title=\"Обобщение с нулевым выстрелом для невидимых задач. Мы очищаем инвентарь агента, сбрасываем его в новый созданный мир и тестируем его с невидимыми задачами. В приведенной выше таблице дроби обозначают количество успешных испытаний из трех полных запусков. Цифры указывают на итерации, усредненные по трем испытаниям. Чем меньше итераций, тем эффективнее метод. «Вояджер» может последовательно решать все задачи, в то время как базовые уровни не могут решить ни одну задачу за 50 итераций подсказки. Интересно отметить, что наша библиотека навыков, созданная на основе обучения на протяжении всей жизни, не только повышает производительность Voyager, но и повышает AutoGPT. Это демонстрирует, что библиотека навыков служит универсальным инструментом, который можно легко использовать с другими методами, эффективно выступая в качестве актива plug-and-play для повышения производительности.\" width=\"4132\" height=\"2878\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/29a/d85/b24/29ad85b247a486b4095338f0b4abc154.png\"><div><figcaption>Обобщение с нулевым выстрелом для невидимых задач. Мы очищаем инвентарь агента, сбрасываем его в новый созданный мир и тестируем его с невидимыми задачами. В приведенной выше таблице дроби обозначают количество успешных испытаний из трех полных запусков. Цифры указывают на итерации, усредненные по трем испытаниям. Чем меньше итераций, тем эффективнее метод. «Вояджер» может последовательно решать все задачи, в то время как базовые уровни не могут решить ни одну задачу за 50 итераций подсказки. Интересно отметить, что наша библиотека навыков, созданная на основе обучения на протяжении всей жизни, не только повышает производительность Voyager, но и повышает AutoGPT. Это демонстрирует, что библиотека навыков служит универсальным инструментом, который можно легко использовать с другими методами, эффективно выступая в качестве актива plug-and-play для повышения производительности.</figcaption></figure><h3>Абляционные исследования</h3><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b38/0fb/62e/b380fb62e7ad56b8f608f2f8d34f7dcd.png\" alt=\"Абляционные исследования. GPT-3.5 означает замену GPT-4 на GPT-3.5 для генерации кода. «Вояджер» превосходит все альтернативы, демонстрируя критическую роль каждого компонента. Кроме того, GPT-4 значительно превосходит GPT-3.5 в генерации кода.\" title=\"Абляционные исследования. GPT-3.5 означает замену GPT-4 на GPT-3.5 для генерации кода. «Вояджер» превосходит все альтернативы, демонстрируя критическую роль каждого компонента. Кроме того, GPT-4 значительно превосходит GPT-3.5 в генерации кода.\" width=\"3596\" height=\"1592\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b38/0fb/62e/b380fb62e7ad56b8f608f2f8d34f7dcd.png\"><div><figcaption>Абляционные исследования. GPT-3.5 означает замену GPT-4 на GPT-3.5 для генерации кода. «Вояджер» превосходит все альтернативы, демонстрируя критическую роль каждого компонента. Кроме того, GPT-4 значительно превосходит GPT-3.5 в генерации кода.</figcaption></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/369/241/13b/36924113ba340863312c7b31f4d1f055.png\" alt=\"VOYAGER создает трехмерные конструкции с учетом обратной связи с человеком. Ход строительных конструкций которые интегрируют человеческий ввод, демонстрируются слева направо.\" title=\"VOYAGER создает трехмерные конструкции с учетом обратной связи с человеком. Ход строительных конструкций которые интегрируют человеческий ввод, демонстрируются слева направо.\" width=\"532\" height=\"136\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/369/241/13b/36924113ba340863312c7b31f4d1f055.png\"><div><figcaption>VOYAGER создает трехмерные конструкции с учетом обратной связи с человеком. Ход строительных конструкций которые интегрируют человеческий ввод, демонстрируются слева направо.</figcaption></figure><p>• Самопроверка является наиболее важной среди всех типов обратной связи. Самопроверка служит критическим механизмом для принятия решения о том, когда переходить к новой задаче или повторить попытку, которая ранее была неудачной.<br> • GPT-4 значительно превосходит GPT-3.5 в генерации кода и получает в 5,7 раз больше<br> уникальные предметы, поскольку GPT-4 демонстрирует квантовый скачок в возможностях кодирования. </p><h2>А Методы</h2><h3> A.1 VOYAGER Algorithm  </h3><pre><code class=\"python\">def voyager(environment, curriculum_agent, action_agent, critic_agent, skill_manager):\n    agent_state = environment.reset()\n    while True:\n        exploration_progress = curriculum_agent.get_exploration_progress(\n            curriculum_agent.get_completed_tasks(),\n            curriculum_agent.get_failed_tasks(),\n        )\n        task = curriculum_agent.propose_next_task(agent_state, exploration_progress)\n        code = None\n        environment_feedback = None\n        execution_errors = None\n        critique = None\n        success = False\n        # try at most 4 rounds before moving on to the next task\n        for i in range(4):\n            skills = skill_manager.retrieve_skills(task, environment_feedback)\n            code = action_agent.generate_code(\n                task,\n                code,\n                environment_feedback,\n                execution_errors,\n                critique,\n                skills,\n            )\n            agent_state, environment_feedback, execution_errors = environment.step(code)\n            success, critique = critic_agent.check_task_success(task, agent_state)\n            if success:\n                break\n        if success:\n            skill_manager.add_skill(code)\n            curriculum_agent.add_completed_task(task)\n        else:\n            curriculum_agent.add_failed_task(task)\n</code></pre><h3> A.2 Prompting  </h3><p>GPT-4 и GPT-3.5 предлагают пользователям возможность назначать роль каждого запроса среди трех  параметров:<br><br> • Система: инструкция высокого уровня, которая определяет поведение модели на протяжении всего разговора.  Он задает общий тон и цель взаимодействия.<br> • Пользователь: подробные инструкции, которые помогут помощнику приступить к следующему немедленному ответу.<br> • Помощник: Модель сгенерировала ответное сообщение.<br> Подробнее см. <a href=\"https://platform.openai.com/docs/guides/chat/introduction\" rel=\"noopener noreferrer nofollow\">https://platform.openai.com/docs/guides/chat/introduction</a>.<br> Чтобы сэкономить использование токенов, вместо участия в многоэтапных разговорах мы объединяем систему  подсказка и подсказка пользователя для получения ответа каждого помощника.</p><h3> A.3 Automatic Curriculum  </h3><p>A.3.1 Компоненты запроса<br> Prompt ввода в GPT-4 состоит из нескольких компонентов:<br> (1) Директивы, поощряющие разнообразное поведение и налагающие ограничения (так, чтобы предлагаемые  задача достижима и проверяема): см. разд. A.3.4 для полной подсказки;<br> (2) Текущее состояние агента:<br>      • Инвентарь: словарь предметов с количеством, например,  {‘cobblestone’: 4, ‘furnace’: 1,    stone_pickaxe’: 1, ‘oak_planks’: 7, ‘dirt’: 6, ‘wooden_pickaxe’: 1, ‘crafting_table’: 1, ‘raw_iron’: 4,    ‘coal’: 1};  <br>      • Снаряжение: доспехи или оружие, экипированные агентами;<br>      • Ближайшие блоки: набор имен блоков на расстоянии 32 блоков от агента, для<br> например,  ‘dirt’, ‘water’, ‘spruce_planks’, ‘grass_block’, ‘dirt_path’, ‘sugar_cane’, ‘fern’;  <br>      • Другие блоки, которые недавно видели: Блоки, которых нет рядом или в инвентаре;<br>      • Ближайшие объекты: набор имен объектов на расстоянии 32 блоков от агента, для<br> например, «свинья», «кошка», «сельский житель», «зомби»;<br>      • Список сундуков, видимых агенту: Сундуки — это внешние контейнеры, в которых<br> Агент может сдавать предметы. Если сундук ранее не открывался, его содержимое «Неизвестно». В противном случае агенту показываются предметы внутри каждого сундука.<br>      • Биом: например, «равнины», «лес», «луг», «река», «пляж», «лес»;<br>      • Время: одно из значений «восход», «день», «полдень», «закат», «ночь», «полночь»;<br>      • Полоски здоровья и голода: максимальное значение 20;<br>      • Позиция: 3D-координата (x, y, z) положения агента в мире Minecraft;<br> (3) Ранее выполненные и неудавшиеся задачи;<br> (4) Дополнительный контекст: см. разд. А.3.2;<br> (5) Подсказка по цепочке мыслей [47] в ответ: Мы просим GPT-4 сначала объяснить причину<br> текущий прогресс, а затем предложить следующую задачу.</p><h3> A.3.2 Additional Context  </h3><p>Мы используем GPT-3.5, чтобы задавать себе вопросы, чтобы обеспечить дополнительный контекст. Каждый вопрос сопровождается  концепция, которая используется для поиска наиболее релевантного документа из базы знаний.<br> Мы передаем содержимое документа в GPT-3.5 для ответов на вопросы. На практике с помощью вики база знаний необязательна, так как GPT-3.5 уже хорошо понимает Minecraft.<br> игровая механика. Однако внешняя база знаний становится выгодной, если не используется GPT-3.5. </p><h3> A.3.3 Warm-up Schedule  </h3><p>На практике мы принимаем график прогрева, чтобы постепенно включать состояние агента и дополнительные  контекст в приглашение в зависимости от того, сколько задач агент выполнил. Это гарантирует, что  подсказка подвергается все большему количеству информации по ходу разведки и, следовательно, начинается с базовых навыков и постепенно переходит к более сложным и разнообразным. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b12/897/2ed/b128972edb9c70549bddfd45695a478b.png\" alt=\"Warm-up Schedule\" title=\"Warm-up Schedule\" width=\"583\" height=\"263\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b12/897/2ed/b128972edb9c70549bddfd45695a478b.png\"><div><figcaption>Warm-up Schedule</figcaption></figure><h3> A.3.4 Full Prompt  </h3><p> Prompt 1: Full system prompt for automatic curriculum. The list of question-answer pairs represents the additional context.  </p><pre><code>You are a helpful assistant that tells me the next immediate task to\ndo in Minecraft . My ultimate goal is to discover as many diverse\nthings as possible , accomplish as many diverse tasks as possible\nand become the best Minecraft player in the world .\nI will give you the following information :\nQuestion 1: ...\nAnswer : ...\nQuestion 2: ...\nAnswer : ...\nQuestion 3: ...\nAnswer : ...\n...\nBiome : ...\nTime : ...\nNearby blocks : ...\nOther blocks that are recently seen : ...\nNearby entities ( nearest to farthest ) : ...\nHealth : Higher than 15 means I ’m healthy .\nHunger : Higher than 15 means I ’m not hungry .\nPosition : ...\nEquipment : If I have better armor in my inventory , you should ask me\nto equip it .\nInventory ( xx /36) : ...\nChests : You can ask me to deposit or take items from these chests .\nThere also might be some unknown chest , you should ask me to open\nand check items inside the unknown chest .\nCompleted tasks so far : ...\nFailed tasks that are too hard : ...\nYou must follow the following criteria :\n1) You should act as a mentor and guide me to the next task based on\nmy current learning progress .\n2) Please be very specific about what resources I need to collect ,\nwhat I need to craft , or what mobs I need to kill .\n3) The next task should follow a concise format , such as \" Mine [\nquantity ] [ block ]\" , \" Craft [ quantity ] [ item ]\" , \" Smelt [ quantity ] [\nitem ]\" , \" Kill [ quantity ] [ mob ]\" , \" Cook [ quantity ] [ food ]\" , \" Equip\n[ item ]\" etc . It should be a single phrase . Do not propose multiple\ntasks at the same time . Do not mention anything else .\n4) The next task should not be too hard since I may not have the\nnecessary resources or have learned enough skills to complete it\nyet .\n5) The next task should be novel and interesting . I should look for\nrare resources , upgrade my equipment and tools using better\nmaterials , and discover new things . I should not be doing the same\nthing over and over again .\n6) I may sometimes need to repeat some tasks if I need to collect more\nresources to complete more difficult tasks . Only repeat tasks if\nnecessary .\n7) Do not ask me to build or dig shelter even if it ’ s at night . I want\nto explore the world and discover new things . I don ’ t want to\nstay in one place .\n8) Tasks that require information beyond the player ’ s status to verify\nshould be avoided . For instance , \" Placing 4 torches \" and \" Dig a 2\nx1x2 hole \" are not ideal since they require visual confirmation\nfrom the screen . All the placing , building , planting , and trading\ntasks should be avoided . Do not propose task starting with these\nkeywords .\nYou should only respond in the format as described below :\nRESPONSE FORMAT :\nReasoning : Based on the information I listed above , do reasoning about\nwhat the next task should be .\nTask : The next task .\nHere ’ s an example response :\nReasoning : The inventory is empty now , chop down a tree to get some\nwood .\nTask : Obtain a wood log .</code></pre><p> Prompt 2: Full system prompt for asking questions. We provide both good and bad examples as few-shot exemplars.  </p><pre><code>You are a helpful assistant that asks questions to help me decide the\nnext immediate task to do in Minecraft . My ultimate goal is to\ndiscover as many things as possible , accomplish as many tasks as\npossible and become the best Minecraft player in the world .\nI will give you the following information :\nBiome : ...\nTime : ...\nNearby blocks : ...\nOther blocks that are recently seen : ...\nNearby entities ( nearest to farthest ) : ...\nHealth : ...\nHunger : ...\nPosition : ...\nEquipment : ...\nInventory ( xx /36) : ...\nChests : ...\nCompleted tasks so far : ...\nFailed tasks that are too hard : ...\nYou must follow the following criteria :\n1) You should ask at least 5 questions ( but no more than 10 questions )\nto help me decide the next immediate task to do . Each question\nshould be followed by the concept that the question is about .\n2) Your question should be specific to a concept in Minecraft .\nBad example ( the question is too general ) :\nQuestion : What is the best way to play Minecraft ?\nConcept : unknown\nBad example ( axe is still general , you should specify the type of\naxe such as wooden axe ) :\nWhat are the benefits of using an axe to gather resources ?\nConcept : axe\nGood example :\nQuestion : How to make a wooden pickaxe ?\nConcept : wooden pickaxe\n3) Your questions should be self - contained and not require any context\n.\nBad example ( the question requires the context of my current biome ) :\nQuestion : What are the blocks that I can find in my current biome ?\nConcept : unknown\nBad example ( the question requires the context of my current\ninventory ) :\nQuestion : What are the resources you need the most currently ?\nConcept : unknown\nBad example ( the question requires the context of my current\ninventory ) :\nQuestion : Do you have any gold or emerald resources ?\nConcept : gold\nBad example ( the question requires the context of my nearby entities\n) :\nQuestion : Can you see any animals nearby that you can kill for\nfood ?\nConcept : food\nBad example ( the question requires the context of my nearby blocks ) :\nQuestion : Is there any water source nearby ?\nConcept : water\nGood example :\nQuestion : What are the blocks that I can find in the sparse jungle\n?\nConcept : sparse jungle\n4) Do not ask questions about building tasks ( such as building a\nshelter ) since they are too hard for me to do .\nLet ’ s say your current biome is sparse jungle . You can ask questions\nlike :\nQuestion : What are the items that I can find in the sparse jungle ?\nConcept : sparse jungle\nQuestion : What are the mobs that I can find in the sparse jungle ?\nConcept : sparse jungle\nLet ’ s say you see a creeper nearby , and you have not defeated a\ncreeper before . You can ask a question like :\nQuestion : How to defeat the creeper ?\nConcept : creeper\nLet ’ s say you last completed task is \" Craft a wooden pickaxe \". You can\nask a question like :\nQuestion : What are the suggested tasks that I can do after crafting a\nwooden pickaxe ?\nConcept : wooden pickaxe\nHere are some more question and concept examples :\nQuestion : What are the ores that I can find in the sparse jungle ?\nConcept : sparse jungle\n( the above concept should not be \" ore \" because I need to look up the\npage of \" sparse jungle \" to find out what ores I can find in the\nsparse jungle )\nQuestion : How can you obtain food in the sparse jungle ?\nConcept : sparse jungle\n( the above concept should not be \" food \" because I need to look up the\npage of \" sparse jungle \" to find out what food I can obtain in the\nsparse jungle )\nQuestion : How can you use the furnace to upgrade your equipment and\nmake useful items ?\nConcept : furnace\nQuestion : How to obtain a diamond ore ?\nConcept : diamond ore\nQuestion : What are the benefits of using a stone pickaxe over a wooden\npickaxe ?\nConcept : stone pickaxe\nQuestion : What are the tools that you can craft using wood planks and\nsticks ?\nConcept : wood planks\nYou should only respond in the format as described below :\nRESPONSE FORMAT :\nReasoning : ...\nQuestion 1: ...\nConcept 1: ...\nQuestion 2: ...\nConcept 2: ...\nQuestion 3: ...\nConcept 3: ...\nQuestion 4: ...\nConcept 4: ...\nQuestion 5: ...\nConcept 5: ...\n...</code></pre><p> Prompt 3: Full system prompt for answering questions. Context represents the optional content from a wiki knowledge base.   </p><pre><code>You are a helpful assistant that answer my question about Minecraft .\nI will give you the following information :\nQuestion : ...\nYou will answer the question based on the context ( only if available\nand helpful ) and your own knowledge of Minecraft .\n1) Start your answer with \" Answer : \".\n2) Answer \" Answer : Unknown \" if you don ’ t know the answer .</code></pre><h3>4 Ограничения и дальнейшая работа</h3><p><strong>Расходы.</strong> API GPT-4 требует значительных затрат. Это в 15 раз дороже, чем GPT-3,5. Тем не менее,  VOYAGER требует качественного скачка качества генерации кода от GPT-4, который GPT-3.5  и LLM с открытым исходным кодом не могут предоставить.<br></p><p><strong>Неточности</strong>. Несмотря на итеративный механизм подсказок, все еще бывают случаи, когда агент зависает и не может создать правильный навык. Автоматическая учебная программа имеет гибкость для повторной попытки  эту задачу позже. Иногда модуль самопроверки также может дать сбой, например, не распознать нить паука как сигнал успеха в победе над пауком.</p><p><strong>Галлюцинации.</strong> Автоматический учебный план иногда предлагает невыполнимые задачи. Например, это может попросить агента создать «медный меч» или «медный нагрудник», которые являются предметами, которых не существует. Галлюцинации также возникают в процессе генерации кода. Например, GPT-4  склонен использовать булыжник в качестве топлива, несмотря на то, что он не является источником топлива в игре. Кроме того,<br> он может вызывать функции, отсутствующие в предоставленных API-интерфейсах примитивов управления, что приводит к ошибкам выполнения кода.<br> Мы уверены, что улучшения в моделях GPT API, а также новые методы тонкой настройки<br> LLM с открытым исходным кодом преодолеют эти ограничения в будущем.</p><h2>Заключение</h2><p>В этой работе мы представляем Voyager, первый встроенный агент обучения на протяжении всей жизни на базе LLM, который использует GPT-4 для непрерывного исследования мира, развития все более сложных навыков и последовательного совершения новых открытий без вмешательства человека. Voyager демонстрирует превосходную производительность в обнаружении новых предметов, разблокировке дерева технологий Minecraft, перемещении по разнообразным ландшафтам и применении библиотеки изученных навыков для выполнения невидимых задач в новом созданном мире. Voyager служит отправной точкой для разработки мощных универсальных агентов без настройки параметров модели.</p><h3>Команда</h3><figure class=\"bordered full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/703/603/b87/703603b87fcf7d794f32271caa0333e1.png\" alt=\"Группа исследователей (Guanzhi Wang, Yuqi Xie, Yunfan Jiang, Ajay Mandlekar, Chaowei Xiao, Yuke Zhu, Linxi Fan, Anima Anandkumar )\" title=\"Группа исследователей (Guanzhi Wang, Yuqi Xie, Yunfan Jiang, Ajay Mandlekar, Chaowei Xiao, Yuke Zhu, Linxi Fan, Anima Anandkumar )\" width=\"820\" height=\"446\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/703/603/b87/703603b87fcf7d794f32271caa0333e1.png\"><div><figcaption>Группа исследователей (<a href=\"https://arxiv.org/search/cs?searchtype=author&amp;query=Wang%2C+G\" rel=\"noopener noreferrer nofollow\">Guanzhi Wang</a>, <a href=\"https://arxiv.org/search/cs?searchtype=author&amp;query=Xie%2C+Y\" rel=\"noopener noreferrer nofollow\">Yuqi Xie</a>, <a href=\"https://arxiv.org/search/cs?searchtype=author&amp;query=Jiang%2C+Y\" rel=\"noopener noreferrer nofollow\">Yunfan Jiang</a>, <a href=\"https://arxiv.org/search/cs?searchtype=author&amp;query=Mandlekar%2C+A\" rel=\"noopener noreferrer nofollow\">Ajay Mandlekar</a>, <a href=\"https://arxiv.org/search/cs?searchtype=author&amp;query=Xiao%2C+C\" rel=\"noopener noreferrer nofollow\">Chaowei Xiao</a>, <a href=\"https://arxiv.org/search/cs?searchtype=author&amp;query=Zhu%2C+Y\" rel=\"noopener noreferrer nofollow\">Yuke Zhu</a>, <a href=\"https://arxiv.org/search/cs?searchtype=author&amp;query=Fan%2C+L\" rel=\"noopener noreferrer nofollow\">Linxi Fan</a>, <a href=\"https://arxiv.org/search/cs?searchtype=author&amp;query=Anandkumar%2C+A\" rel=\"noopener noreferrer nofollow\"><u>Anima Anandkumar</u></a> )</figcaption></figure><p></p>', 3, '2023-06-12 21:52:46', 726751, 72, '/ru/articles/740426/', 'Привет, Хабр! Меня зовут Тимур, я тружусь ML-инженером в одной сибирской IT-компании.Данная статья представляет собой руководство по Poetry. Я постарался покрыть все основные сценарии использования и возможности данного инструмента: создание проекта, работа с зависимостями из различных источников, управление виртуальными окружениями, сборка и публикация.В качестве бонусов - готовая GitLab CI джоба для сборки и публикации пакетов, а также шаблон Dockerfile для multi-stage сборки образов в проектах с использованием Poetry.Добро пожаловать под кат!');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(114, 'Poetry: from zero to hero', '<p>Привет, Хабр! Меня зовут Тимур, я тружусь ML-инженером в одной сибирской IT-компании.</p><p>Данная статья представляет собой руководство по Poetry. Я постарался покрыть все основные сценарии использования и возможности данного инструмента: создание проекта, работа с зависимостями из различных источников, управление виртуальными окружениями, сборка и публикация.</p><p>В качестве бонусов - готовая GitLab CI джоба для сборки и публикации пакетов, а также шаблон Dockerfile для multi-stage сборки образов в проектах с использованием Poetry.</p><p>Добро пожаловать под кат!</p><h2>Что такое Poetry?</h2><p>Poetry - это инструмент для управления проектами на Python, который предоставляет следующие возможности:</p><ul><li><p>управление зависимостями с воспроизводимыми установками и резолвером конфликтов</p></li><li><p>автоматическое управление виртуальными окружениями</p></li><li><p>сборка и публикация.</p></li></ul><h2>Установка</h2><p>Установка Poetry выполняется очень просто как на Unix-системах:</p><pre><code class=\"bash\">curl -sSL https://install.python-poetry.org | python3 -</code></pre><p>Так и на Windows:</p><pre><code class=\"bash\">(Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | py -</code></pre><p>Далее, в зависимости от вашей системы, необходимо добавить соответствующую директорию в PATH:</p><pre><code class=\"bash\"># Linux, MacOS, WSL\n$HOME/.local/bin\n  \n# Windows\n%APPDATA%\\Python\\Scripts</code></pre><p>Перезагружаем оболочку и проверяем корректность установки:</p><pre><code class=\"bash\">poetry --version\n \n# Вывод должен быть примерно таким\n# Poetry (version 1.4.2)</code></pre><h2>Использование</h2><h3>Создание проекта</h3><h4>Как создать проект через терминал</h4><p>Для создания проекта с нуля воспользуемся командой <strong>new</strong>:</p><pre><code class=\"bash\">poetry new my-project</code></pre><p>При выполнении этой команды Poetry создаст папку со следующей структурой. Наиболее интересен здесь файл <strong>pyproject.toml</strong>, который мы рассмотрим в следующей секции:</p><pre><code class=\"bash\">my-project/\n├── README.md\n├── my_project\n│   └── __init__.py\n├── pyproject.toml\n└── tests\n    └── __init__.py\n \n2 directories, 4 files</code></pre><p>Если же мы хотим начать использовать Poetry в уже существующем проекте, то нам поможет команда <strong>init</strong>:</p><pre><code class=\"bash\">cd my-project2\npoetry init</code></pre><p>Далее, Poetry задаст нам несколько вопросов о нашем проекте (имя пакета, версия, описание, лицензия и поддерживаемые версии Python), а также предложит в интерактивном режиме указать зависимости (что, как по мне, не очень удобно):</p><pre><code class=\"bash\">This command will guide you through creating your pyproject.toml config.\n \nPackage name [my-project2]: \nVersion [0.1.0]: \nDescription []:  My Project, but second   \nAuthor [None, n to skip]:  Timur Kasimov\nLicense []:  MIT\nCompatible Python versions [^3.8]: \n \nWould you like to define your main dependencies interactively? (yes/no) [yes] no\nWould you like to define your development dependencies interactively? (yes/no) [yes] no\nGenerated file\n \n[tool.poetry]\nname = \"my-project2\"\nversion = \"0.1.0\"\ndescription = \"My Project, but second\"\nauthors = [\"Timur Kasimov\"]\nlicense = \"MIT\"\nreadme = \"README.md\"\npackages = [{include = \"my_project2\"}]\n \n[tool.poetry.dependencies]\npython = \"^3.8\"\n \n \n[build-system]\nrequires = [\"poetry-core\"]\nbuild-backend = \"poetry.core.masonry.api\"\n \n \nDo you confirm generation? (yes/no) [yes] yes</code></pre><h4>Подготовка виртуального окружения</h4><p>Команды <strong>new</strong> и <strong>init</strong> не создают виртуальных окружений. При первом выполнении команд, связанных с установкой зависимостей, Poetry создает виртуальное окружение, выбрав базовый интерпретатор по следующей логике:</p><ol><li><p>Poetry проверяет, активировано ли уже какое-то виртуальное окружение. Если да, то оно будет использовано</p></li><li><p>Если никакое виртуальное окружение не активировано, то Poetry попытается использовать Python, который был использован при установке Poetry</p></li><li><p>Если версия Python с предыдущего шага несовместима с версией, указанной в <strong>pyproject.toml</strong>, то Poetry попросит явно активировать нужную версию</p></li></ol><p>Советую сразу указать корректный базовый интерпретатор, выполнив в папке проекта следующую команду:</p><pre><code class=\"bash\">poetry env use python3.8  # Если python3.8 есть в PATH\npoetry env use /path/to/python  # Можно указать и полный путь</code></pre><p>Если вы используете pyenv, можно использовать экспериментальную фичу Poetry:</p><pre><code class=\"bash\">poetry config virtualenvs.prefer-active-python true\npyenv install 3.9.8\npyenv local 3.9.8</code></pre><p>По умолчанию, Poetry создает виртуальные окружения в папке <strong>{cache_dir}/virtualenvs</strong>. Если вы хотите, чтобы виртуальное окружение находилось в папке проекта, можно выполнить следующую команду:</p><pre><code class=\"bash\">poetry config virtualenvs.in-project true</code></pre><p>Теперь создаваемое виртуальное окружение будет находиться в папке <strong>.venv</strong> в корне проекта.</p><h4>Как создать проект через PyCharm</h4><p>PyCharm поддерживает интеграцию с Poetry. Можно выбрать Poetry как при создании нового проекта:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/3bc/c56/9f4/3bcc569f409eaa756b754e5bb5bcf438.png\" width=\"804\" height=\"691\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/3bc/c56/9f4/3bcc569f409eaa756b754e5bb5bcf438.png\"></figure><p>Так и в существующем проекте. Для этого необходимо в правом нижнем углу нажать \"No Interpreter\" (если у вас до этого не был настроен интерпретатор в проекте) или на имя интерпретатора, далее \"Add New Interpreter\" → \"Add Local Interpreter\", и в открывшемся окне выбрать \"Poetry environment\":</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/c5e/4de/b85/c5e4deb85a80a976a9b9a927b761e3ed.png\" width=\"1031\" height=\"571\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/c5e/4de/b85/c5e4deb85a80a976a9b9a927b761e3ed.png\"></figure><h3>pyproject.toml и poetry.lock</h3><p><strong>pyproject.toml </strong>- это файл, который содержит в себе всю информацию о проекте: метаданные (имя, версия и т.п.) и зависимости, а также в нем могут присутствовать настройки других инструментов.</p><p>Файл <strong>poetry.lock </strong>же содержит в себе все зависимости проекта с зафиксированными версиями и формируется автоматически (пожалуйста, не редактируйте его вручную).</p><p><strong>[tool.poetry]</strong> содержит в себе метаданные:</p><ul><li><p>name - имя проекта. Должно быть <a href=\"https://peps.python.org/pep-0508/#names\" rel=\"noopener noreferrer nofollow\">валидным по PEP 508</a>;</p></li><li><p>version - версия проекта. Должна быть <a href=\"https://peps.python.org/pep-0440/\" rel=\"noopener noreferrer nofollow\">валидной по PEP 440</a>;</p></li><li><p>description - короткое описание проекта;</p></li><li><p>license - лицензия;</p></li><li><p>authors - авторы проекта в формате \"name &lt;email&gt;\". Должен присутствовать как минимум один автор.</p></li></ul><p>Остальные спецификаторы можно найти в документации, они не являются обязательными.</p><p><strong>[tool.poetry.dependencies]</strong> содержит в себе версию Python и основные зависимости проекта (так называемую main-группу).</p><p>В <a href=\"https://peps.python.org/pep-0517/\" rel=\"noopener noreferrer nofollow\">PEP-517</a> был представлен стандартный способ определять альтернативные системы сборки для Python-проектов. Poetry совместим с PEP-517 и использует poetry-core для сборки, что и обозначено в секции <strong>build-system</strong>:</p><pre><code class=\"bash\">[build-system]\nrequires = [\"poetry-core&gt;=1.0.0\"]\nbuild-backend = \"poetry.core.masonry.api\"</code></pre><p>Многие питоновские инструменты поддерживают конфигурацию через <strong>pyproject.toml</strong>. Например, в моих проектах в нем уютно расположились настройки isort и mypy:</p><pre><code class=\"bash\">[tool.isort]\nline_length = 120\n...\nforce_grid_wrap = 2\n\n[tool.mypy]\npython_version = 3.9\n...\nfollow_imports = \"skip\"</code></pre><h3>Установка и удаление пакетов</h3><h4>Стандартная установка + версионирование</h4><p>Команда add добавляет зависимость в <strong>pyproject.toml</strong>, выполняет разрешение зависимостей и устанавливает зависимость:</p><pre><code class=\"bash\">poetry add fastapi</code></pre><p>В секции <strong>[tool.poetry.dependencies]</strong> появилась наша зависимость:</p><pre><code class=\"bash\">[tool.poetry.dependencies]\npython = \"^3.8\"\nfastapi = \"^0.95.2\"</code></pre><p>Рассмотрим, как указывать версии при установке. Первый вариант - это Caret Requirements:</p><div><div class=\"table\"><table><tbody><tr><th><p align=\"center\">Требование</p></th><th><p align=\"center\">Допустимые версии</p></th></tr><tr><td><p align=\"center\">^1.2.3</p></td><td><p align=\"center\">&gt;=1.2.3, &lt;2.0.0</p></td></tr><tr><td><p align=\"center\">^1.2</p></td><td><p align=\"center\">&gt;=1.2.0, &lt;2.0.0</p></td></tr><tr><td><p align=\"center\">^1</p></td><td><p align=\"center\">&gt;=1.0.0, &lt;2.0.0</p></td></tr><tr><td><p align=\"center\">^0.2.3</p></td><td><p align=\"center\">&gt;=0.2.3, &lt;0.3.0</p></td></tr><tr><td><p align=\"center\">^0.0.3</p></td><td><p align=\"center\">&gt;=0.0.3, &lt;0.0.4</p></td></tr><tr><td><p align=\"center\">^0.0</p></td><td><p align=\"center\">&gt;=0.0.0, &lt;0.1.0</p></td></tr><tr><td><p align=\"center\">^0</p></td><td><p align=\"center\">&gt;=0.0.0, &lt;1.0.0</p></td></tr></tbody></table><p>Второй вариант - это Tilde requirements, что позволяет указывать минимальную допустимую версию с некоторой возможностью обновления:</p><div><div class=\"table\"><table><tbody><tr><th><p align=\"center\">Требование</p></th><th><p align=\"center\">Допустимые версии</p></th></tr><tr><td><p align=\"center\">~1.2.3</p></td><td><p align=\"center\">&gt;=1.2.3,&lt;1.3.0</p></td></tr><tr><td><p align=\"center\">~1.2</p></td><td><p align=\"center\">&gt;=1.2.0,&lt;1.3.0</p></td></tr><tr><td><p align=\"center\">~1</p></td><td><p align=\"center\">&gt;=1.0.0,&lt;2.0.0</p></td></tr></tbody></table><p>Wildcard requirements позволяют обновление до последней версии в позиции, где расположен символ \"*\":</p><div><div class=\"table\"><table><tbody><tr><th><p align=\"center\">Требование</p></th><th><p align=\"center\">Допустимые версии</p></th></tr><tr><td><p align=\"center\">*</p></td><td><p align=\"center\">&gt;=0.0.0</p></td></tr><tr><td><p align=\"center\">1.*</p></td><td><p align=\"center\">&gt;=1.0.0,&lt;2.0.0</p></td></tr><tr><td><p align=\"center\">1.2.*</p></td><td><p align=\"center\">&gt;=1.2.0,&lt;1.3.0</p></td></tr></tbody></table><p>Inequality requirements позволяют вручную указать диапазон допустимых версий, или же точную версию:</p><pre><code class=\"bash\">&gt;=1.2.0\n&gt;1\n&lt;2\n!=1.2.3\n==1.5.2\n\n# Можно комбинировать\n&gt;=1.2,&lt;1.5</code></pre><p>Стоит обратить внимание на следующий момент: если вы указываете точную версию, и другим зависимостям требуется другая версия, то резолвер не сможет разрешить все конфликты и процедура установки (или обновления) не будет выполнена.</p><h4>Extras и groups</h4><p>Прежде чем идти дальше, хочется ввести 2 понятия - extras и groups. Они довольно схожи, но на деле служат для разных целей.</p><p>Dependency groups (далее просто группы) содержат в себе опциональные зависимости, используемые <strong>только при разработке. </strong>Установить зависимости из групп можно только через Poetry. Каждый проект содержит в себе одну неявную обязательную группу - main, которая находится в секции <strong>[tool.poetry.dependencies]</strong>.</p><p>Установка в группу выполняется следующим образом:</p><pre><code class=\"bash\">poetry add --group test pytest</code></pre><p>Группа вместе с зависимостью появилась в pyproject.toml:</p><pre><code class=\"bash\">[tool.poetry.group.test.dependencies]\npytest = \"^7.3.1\"</code></pre><p>Extras же предназначены для введения дополнительных зависимостей, которые включают какую-либо функциональность в вашем проекте. Установить зависимость как extra можно вот так:</p><pre><code class=\"bash\">poetry add --extras postgres psycopg2-binary\npoetry add --extras mysql --extras database mysql-connector-python  # Можно перечислять несколько extras</code></pre><p>Зависимости появились в <strong>[tool.poetry.dependencies] </strong>с пометкой extras:</p><pre><code class=\"bash\">[tool.poetry.dependencies]\npython = \"^3.8\"\npsycopg2-binary = {version = \"^2.9.6\", extras = [\"postgres\"]}\nmysql-connector-python = {version = \"^8.0.33\", extras = [\"mysql\", \"database\"]}</code></pre><p>После сборки и публикации можно будет устанавливать ваш пакет как обычно:</p><pre><code class=\"bash\">poetry add \"my-project[postgres,database]\"\npoetry add \"my-project[mysql]</code></pre><h4>Установка с Git и приватных package registries</h4><p>Установка из публичных репозиториев выполняется следующим образом:</p><pre><code class=\"bash\">poetry add \"git+https://github.com/psf/requests\"  # будет использован последний коммит с основной ветки\npoetry add \"git+https://github.com/psf/requests#update-3.0\"  # будет использован последний коммит с ветки update 3.0\n\n# Все то же самое, но через SSH\npoetry add \"git+ssh://git@github.com:requests/requests.git\"\npoetry add \"git+ssh://git@github.com:requests/requests.git#update-3.0\"</code></pre><p>Для установки из приватных git-репозиториев можно воспользоваться SSH, но в таком случае будет выполняться сборка.</p><p>Если же у вас есть приватный package registry, последовательность действия следующая (рассматривать будем на примере GitLab). Добавляем источник:</p><pre><code class=\"bash\">poetry source add my-repo \"https://my.gitlab.com/projects/1/packages/pypi/simple\"</code></pre><p>Добавленный источник появился в файле <strong>pyproject.toml</strong>:</p><pre><code class=\"bash\">[[tool.poetry.source]]\nname = \"my-repo\"\nurl = \"https://my.gitlab.com/projects/1/packages/pypi/simple\"\ndefault = false\nsecondary = false</code></pre><p>Настраиваем аутентификацию (для GitLab Package Registry рекомендую использовать <a href=\"https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html\" rel=\"noopener noreferrer nofollow\">Personal Access Token</a>):</p><pre><code class=\"bash\">poetry config http-basic.my-repo &lt;token-name&gt; &lt;secret-token&gt;</code></pre><p>Выполняем установку, указав источник:</p><pre><code class=\"bash\">poetry add --source my-repo my-package</code></pre><p>Не забудьте изменить <a href=\"http://my.gitlab.com\" rel=\"noopener noreferrer nofollow\">my.gitlab.com</a> на адрес вашего GitLab, а также указать корректный ID проекта. Имя источника в примере используется my-repo, но можно выбрать любое другое на ваше усмотрение.</p><h4>Установка из файлов</h4><p>Poetry позволяет устанавливать зависимости как из локальных файлов и папок:</p><pre><code class=\"bash\">poetry add package-1.0.0.tar.gz\npoetry add package-1.0.0.whl\npoetry add ~/my/local/package</code></pre><p>Так и с удаленных серверов:</p><pre><code class=\"bash\">poetry add https://download.pytorch.org/whl/cpu/torch-2.0.0%2Bcpu-cp39-cp39-linux_x86_64.whl</code></pre><h4>Опции при установке</h4><p>В этом разделе кратко пробежимся по основным опциям, которые можно использовать при установке зависимостей:</p><div><div class=\"table\"><table><tbody><tr><th data-colwidth=\"148\" width=\"148\"><p>Опция</p></th><th><p>Пояснение</p></th></tr><tr><td data-colwidth=\"148\" width=\"148\"><p align=\"left\">--group (-G)</p></td><td><p align=\"left\">Группа, в которую необходимо добавить зависимость. Если такой группы не существует, она будет создана</p></td></tr><tr><td data-colwidth=\"148\" width=\"148\"><p align=\"left\">--editable</p></td><td><p align=\"left\">Установить зависимость в editable режиме</p></td></tr><tr><td data-colwidth=\"148\" width=\"148\"><p align=\"left\">--extras</p></td><td><p align=\"left\">Extras для активации зависимости</p></td></tr><tr><td data-colwidth=\"148\" width=\"148\"><p align=\"left\">--optional</p></td><td><p align=\"left\">Добавить зависимость как опциональную</p></td></tr><tr><td data-colwidth=\"148\" width=\"148\"><p align=\"left\">--python</p></td><td><p align=\"left\">Версия Python, для которой зависимость должна быть установлена</p></td></tr><tr><td data-colwidth=\"148\" width=\"148\"><p align=\"left\">--platform</p></td><td><p align=\"left\">Платформа, для которой зависимость должна быть установлена (linux, darwin или win32)</p></td></tr><tr><td data-colwidth=\"148\" width=\"148\"><p align=\"left\">--source</p></td><td><p align=\"left\">Имя источника, из которого будет установлена зависимость. По умолчанию используется PyPI, о настройке собственных источников ниже</p></td></tr><tr><td data-colwidth=\"148\" width=\"148\"><p align=\"left\">--allow-prereleases</p></td><td><p align=\"left\">Разрешить установку пререлизов</p></td></tr><tr><td data-colwidth=\"148\" width=\"148\"><p align=\"left\">--dry-run</p></td><td><p align=\"left\">Вывести последовательность действий, но не выполнять никаких операций</p></td></tr><tr><td data-colwidth=\"148\" width=\"148\"><p align=\"left\">--lock</p></td><td><p align=\"left\">Не выполнять установку, только обновить lock-файл</p></td></tr></tbody></table><h4>poetry install</h4><p>Команда install при запуске выполняет следующую последовательность действий:</p><ul><li><p>читает файл <strong>pyproject.toml</strong></p></li><li><p>если существует файл <strong>poetry.lock</strong>, то версии зависимостей берутся из него. Если его не существует, Poetry выполнит разрешение зависимостей и создаст его</p></li><li><p>устанавливает зависимости</p></li></ul><p>Рассмотрим основные опции:</p><div><div class=\"table\"><table><tbody><tr><th data-colwidth=\"100\" width=\"100\"><p>Опция</p></th><th><p>Пояснение</p></th></tr><tr><td data-colwidth=\"100\" width=\"100\"><p align=\"left\">--without</p></td><td><p align=\"left\">Группы, которые будут проигнорированы при установке</p></td></tr><tr><td data-colwidth=\"100\" width=\"100\"><p align=\"left\">--with</p></td><td><p align=\"left\">Группы, которые будут установлены</p></td></tr><tr><td data-colwidth=\"100\" width=\"100\"><p align=\"left\">--only</p></td><td><p align=\"left\">Установить только определенные группы (в этом случае --without и --with будут проигнорированы)</p></td></tr><tr><td data-colwidth=\"100\" width=\"100\"><p align=\"left\">--only-root</p></td><td><p align=\"left\">Установить только проект, проигнорировав все зависимости</p></td></tr><tr><td data-colwidth=\"100\" width=\"100\"><p align=\"left\">--sync</p></td><td><p align=\"left\">Синхронизировать виртуальное окружение с lock-файлом</p></td></tr><tr><td data-colwidth=\"100\" width=\"100\"><p align=\"left\">--no-root</p></td><td><p align=\"left\">Не устанавливать сам проект</p></td></tr><tr><td data-colwidth=\"100\" width=\"100\"><p align=\"left\">--dry-run</p></td><td><p align=\"left\">Вывести последовательность действий, но не выполнять никаких операций</p></td></tr><tr><td data-colwidth=\"100\" width=\"100\"><p align=\"left\">--extras (-E)</p></td><td><p align=\"left\">Extras, которые необходимо установить</p></td></tr><tr><td data-colwidth=\"100\" width=\"100\"><p align=\"left\">--all-extras</p></td><td><p align=\"left\">Включить все extras в установку</p></td></tr><tr><td data-colwidth=\"100\" width=\"100\"><p align=\"left\">--compile</p></td><td><p align=\"left\">Транслировать исходники в байт-код</p></td></tr></tbody></table><h4>Удаление пакетов</h4><p>Для удаления какой-либо зависимости можно воспользоваться командой remove:</p><pre><code class=\"bash\">poetry remove requests</code></pre><p>Если зависимость находится в какой-то группе, используйте опцию --group:</p><pre><code>poetry remove --group my-group requests</code></pre><h4>Фиксация зависимостей</h4><p>Команда lock позволяет зафиксировать зависимости, обновив файл <strong>poetry.lock</strong>:</p><pre><code>poetry lock</code></pre><p>Будьте внимательны! По умолчанию, <strong>poetry lock</strong> попытается выполнить обновление всех зависимостей до последних допустимых версий. Чтобы этого избежать, используйте опцию --no-update.</p><h3>Запуск команд через Poetry</h3><h4>poetry shell</h4><p>С помощью <strong>poetry shell</strong> можно запустить оболочку с активированным виртуальным окружением. Если его не существует, то оно будет создано.</p><p>Т.к. <strong>poetry shell</strong> не просто активирует виртуальное окружение, а именно создает оболочку, то стоит использовать для выхода <strong>exit</strong>, а не <strong>deactivate</strong>.</p><h4>Скрипты в pyproject.toml</h4><p>В файл <strong>pyproject.toml</strong> можно включить секцию <strong>[tool.poetry.scripts]</strong>, которая содержит в себе описание скриптов, которые будут доступны к использованию при установке проекта:</p><pre><code class=\"bash\">[tool.poetry.scripts]\nmy-script = \"my_package.console:run\"</code></pre><p>Здесь мы описываем скрипт my-script, при запуске которого выполнится функция run из модуля console из пакета my_package. При обновлении или добавлении скриптов не забывайте выполнять команду <strong>poetry install</strong>, чтобы сделать их доступными в виртуальном окружении проекта.</p><h4>poetry run</h4><p>Команда <strong>run</strong> позволяет запускать команды в виртуальном окружении проекта. Например:</p><pre><code class=\"bash\">poetry run python --version</code></pre><p>Что более интересно, с помощью <strong>run</strong> можно запускать скрипты, определенные в <strong>pyproject.toml</strong>:</p><pre><code class=\"bash\">poetry run my-script</code></pre><h3>Сборка и публикация проекта</h3><p>Представим, что вы разрабатываете какую-то библиотеку, и настал торжественный момент сборки и публикации. Используя Poetry, сделать это можно вот так.</p><p>Собираем наш пакет:</p><pre><code class=\"bash\">poetry build  # собираем как sdist, так и wheel\npoetry build --format sdist  # собираем только sdist\npoetry build --format wheel  # собираем только wheel</code></pre><p>Для публикации на PyPI предварительно получаем <a href=\"https://pypi.org/help/#apitoken\" rel=\"noopener noreferrer nofollow\">API token</a> и устанавливаем его:</p><pre><code>poetry config pypi-token.pypi &lt;my-token&gt;</code></pre><p>И, наконец, публикуем:</p><pre><code class=\"bash\">poetry publish</code></pre><p>Если же необходимо опубликовать пакет в приватный registry (например, в GitLab), то настройка репозитория немного усложняется. Предварительно не забываем сгенерировать <a href=\"https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html\" rel=\"noopener noreferrer nofollow\">Personal Access Token</a>:</p><pre><code class=\"bash\">poetry config repositories.gitlab \"my.gitlab.com/projects/1/packages/pypi\"\npoetry config http-basic.gitlab &lt;token-name&gt; &lt;secret-token&gt;  # здесь token-name и secret-token - ваш Personal Access Token</code></pre><p>Не забудьте изменить <a href=\"http://my.gitlab.com\" rel=\"noopener noreferrer nofollow\">my.gitlab.com</a> на адрес вашего GitLab, а также указать корректный ID проекта. Здесь имя репозитория в Poetry выбрано gitlab, можно использовать другое на ваше усмотрение. Пора публиковать:</p><pre><code class=\"bash\">poetry publish --repository gitlab</code></pre><p>В качестве бонуса - пример публикации при использовании GitLab CI:</p><pre><code class=\"yaml\">build_and_publish:\n  stage: build_and_publish\n  script:\n    - poetry install --without dev\n    - poetry build\n    - poetry config repositories.gitlab \"${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi\"\n    - poetry config http-basic.gitlab gitlab-ci-token \"$CI_JOB_TOKEN\"\n    - poetry publish --repository gitlab</code></pre><h3>Настройка poetry</h3><p>В этом разделе кратко пробежимся по основным командам для настройки и управления непосредственно Poetry.</p><h4>Обновление Poetry</h4><p>Обновиться можно как на более новую, так и на более старую версию.<strong> Будьте аккуратны</strong> - если обновиться на версию ниже 1.2, то обновление на более высокую версию будет невозможно и придется переустанавливать Poetry:</p><pre><code class=\"bash\">poetry self update 1.3.2</code></pre><h4>Управление плагинами</h4><p>Для установки, удаления и обновления плагинов можно пользоваться командами <strong>self add</strong>, <strong>self remove</strong> и <strong>self update</strong> соответственно. Механизм работы этих команд аналогичен механизму работы команд <strong>add</strong>, <strong>remove</strong>, <strong>update</strong> за исключением того, что команды в пространстве имен <strong>self</strong> выполняется в виртуальном окружении самого Poetry. </p><p>При управлении плагинами нам также доступны команды <strong>self lock</strong> и <strong>self install</strong>. Работают они аналогично вышеупомянутым командам.</p><h4>Настройка Poetry</h4><p>Команда <strong>config</strong>, помимо управления репозиториями, позволяет редактировать настройки Poetry:</p><pre><code class=\"bash\"># [setting-key] - имя настройки\n# [setting-value] - значение\npoetry config [options] [setting-key] [setting-value1] ... [setting-valueN]</code></pre><p>Чаще всего используются следующие опции:</p><ul><li><p><strong>cache-dir</strong> (строка) - директория для кэша Poetry</p></li><li><p><strong>virtualenvs.create</strong> (true / false) - создавать ли виртуальные окружения для проектов (если не существуют). Будьте внимательны: если вы установите данную настройку в false и Poetry не обнаружит виртуальное окружение в папках {cache-dir}/virtualenvs или {project-dir}/.venv, то установка зависимостей будет выполняться в системный Python.</p></li><li><p><strong>virtualenvs.in-project</strong> (true / false) - создавать виртуальные окружения в корне проекта. По умолчанию, Poetry создает виртуальные окружения в папке {cache-dir}/virtualenvs.</p></li></ul><p>Остальные опции можно найти в <a href=\"https://python-poetry.org/docs/configuration/#available-settings\" rel=\"noopener noreferrer nofollow\">документации</a>.</p><h3>Бонус - Docker-образ в проектах с использованием Poetry</h3><p>Давайте рассмотрим, как собрать максимально компактный Docker-образ, если разработку нашего проекта мы вели с помощью Poetry. Имеем следующий <strong>pyproject.toml</strong>:</p><pre><code class=\"bash\">[tool.poetry]\nname = \"my-project\"\nversion = \"0.1.0\"\ndescription = \"\"\nauthors = [\"Your Name &lt;you@example.com&gt;\"]\nreadme = \"README.md\"\n\n[tool.poetry.dependencies]\npython = \"&gt;=3.8.1,&lt;4.0\"\nfastapi = \"^0.95.2\"\nsqlalchemy = \"^2.0.15\"\nuvicorn = \"^0.22.0\"\n\n[tool.poetry.group.test.dependencies]\npytest = \"^7.3.1\"\n\n\n[tool.poetry.group.dev.dependencies]\nflake8 = \"^6.0.0\"\n\n[build-system]\nrequires = [\"poetry-core\"]\nbuild-backend = \"poetry.core.masonry.api\"</code></pre><p>Наше приложение - это вот такое замечательное REST API:</p><pre><code class=\"python\">from fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\'/hello\')\ndef hello():\n    return \'hello, world!\'</code></pre><p>Первый способ, который сразу приходит в голову - установим Poetry в образ, через него поставим зависимости и запустим наш сервис. Dockerfile в таком случае выглядит примерно вот так:</p><pre><code class=\"bash\">FROM python:3.8.16-slim-bullseye\n\nWORKDIR /app\n\nCOPY poetry.lock pyproject.toml ./\n\nRUN python -m pip install --no-cache-dir poetry==1.4.2 \\\n    &amp;&amp; poetry config virtualenvs.create false \\\n    &amp;&amp; poetry install --without dev,test --no-interaction --no-ansi \\\n    &amp;&amp; rm -rf $(poetry config cache-dir)/{cache,artifacts}\n\nCOPY app.py ./\n\nCMD [\"uvicorn\", \"app:app\", \"--host\", \"0.0.0.0\", \"--port\", \"80\"]</code></pre><p>Собираем образ:</p><pre><code class=\"bash\">docker image build -t poetry-tutorial-naive:latest -f Dockerfile.naive .</code></pre><p>Получаем образ размером 225MB. Неплохо, но можно и меньше. Давайте попробуем применить multi-stage сборку. На первом этапе с помощью Poetry подготовим виртуальное окружение, а потом скопируем его в наш итоговый образ. Итак, Dockerfile:</p><pre><code class=\"bash\">FROM python:3.8.16-slim-bullseye AS builder\n\nWORKDIR /app\nCOPY poetry.lock pyproject.toml ./\n\nRUN python -m pip install --no-cache-dir poetry==1.4.2 \\\n    &amp;&amp; poetry config virtualenvs.in-project true \\\n    &amp;&amp; poetry install --without dev,test --no-interaction --no-ansi\n\nFROM python:3.8.16-slim-bullseye\n\nCOPY --from=builder /app /app\nCOPY app.py ./\n\nCMD [\"/app/.venv/bin/uvicorn\", \"app:app\", \"--host\", \"0.0.0.0\", \"--port\", \"80\"]</code></pre><p>Собираем:</p><pre><code class=\"bash\">docker image build -t poetry-tutorial-copy:latest -f Dockerfile.copy .</code></pre><p>Получаем образ размером 159MB. Уже гораздо лучше!</p><p>Может быть, если экспортировать все зависимости в привычный requirements.txt и установить через pip, то получится еще компактнее? Попробуем:</p><pre><code class=\"bash\">FROM python:3.8.16-slim-bullseye AS builder\n\nCOPY poetry.lock pyproject.toml ./\nRUN python -m pip install --no-cache-dir poetry==1.4.2 \\\n    &amp;&amp; poetry export --without-hashes --without dev,test -f requirements.txt -o requirements.txt\n\nFROM python:3.8.16-slim-bullseye\n\nWORKDIR /app\n\nCOPY --from=builder requirements.txt ./\nRUN python -m pip install --no-cache-dir -r requirements.txt\n\nCOPY app.py ./\n\nCMD [\"uvicorn\", \"app:app\", \"--host\", \"0.0.0.0\", \"--port\", \"80\"]</code></pre><p>Собираем образ:</p><pre><code class=\"bash\">docker image build --no-cache -t poetry-tutorial-requirements:latest -f Dockerfile.requirements</code></pre><p>Получилось 163MB, что немного больше, чем у предыдущего способа, который и вышел победителем.</p><p>Итоговая таблица:</p><div><div class=\"table\"><table><tbody><tr><th data-colwidth=\"372\" width=\"372\"><p align=\"center\">Способ</p></th><th><p align=\"center\">Размер образа</p></th></tr><tr><td data-colwidth=\"372\" width=\"372\"><p align=\"center\">Наивный</p></td><td><p align=\"center\">225MB (-0.0%)</p></td></tr><tr><td data-colwidth=\"372\" width=\"372\"><p align=\"center\">Экспорт requirements.txt и установка через pip</p></td><td><p align=\"center\">163MB (-27.5%)</p></td></tr><tr><td data-colwidth=\"372\" width=\"372\"><p align=\"center\">Копирование venv</p></td><td><p align=\"center\">159MB (-29.3%)</p></td></tr></tbody></table><p>Обратите внимание на следующие вещи:</p><ul><li><p>жестко фиксируйте версию Poetry в ваших Dockerfile\'ах. Разработчики Poetry очень любят что-то ломать от релиза к релизу, или объявлять ставшие привычными вещи deprecated.</p></li><li><p>не тащите лишние зависимости в ваши образы. Используйте флаг --without.</p></li></ul><p>На этом у меня все.</p><p>Делитесь своими впечатлениями от использования Poetry в ваших проектах, с какими трудностями столкнулись и как их преодолевали. Может быть, вы вообще используете какой-то более крутой инструмент?  </p><p>Спасибо за внимание, и буду рад ответить на ваши вопросы в комментариях!</p><p></p>', 1, '2023-06-12 21:52:47', 395517, 72, '/ru/articles/740376/', 'Привет, Хабр!Меня зовут Владислав Малеев, я участник профессионального сообщества NTA.Интеллектуальные системы призваны облегчать жизнь человека, выполняя за него рутинные задачи. Одной из таких задач является поиск информации в большом количестве текста. Возможно ли и эту задачу перенести на плечи интеллектуальных систем? Этим вопросом я решил задаться.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(115, 'Заставляем трансформеров отвечать на вопросы', '<figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b71/e03/f83/b71e03f837cc6b83298337ffa7e25d8f.png\" width=\"602\" height=\"339\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b71/e03/f83/b71e03f837cc6b83298337ffa7e25d8f.png\"></figure><p>Привет, Хабр!</p><p>Меня зовут Владислав Малеев, участник <a href=\"https://newtechaudit.ru/\" rel=\"noopener noreferrer nofollow\">профессионального сообщества NTA</a>.</p><p>Интеллектуальные системы призваны облегчать жизнь человека, выполняя за него рутинные задачи. Одной из таких задач является поиск информации в большом количестве текста. Возможно ли и эту задачу перенести на плечи интеллектуальных систем? Этим вопросом я решил задаться.</p><details class=\"spoiler\"><summary>Содержание</summary><div class=\"spoiler__content\"><ul><li><p><a href=\"#%D0%BD%D0%B0%D1%87%D0%B0%D0%BB%D0%BE%D1%81%D1%8C\" rel=\"noopener noreferrer nofollow\">С чего началось</a></p></li><li><p><a href=\"#%D0%B2%D1%8B%D0%B1%D0%BE%D1%80%20%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D0%B8\" rel=\"noopener noreferrer nofollow\">Выбор модели</a></p></li><li><p><a href=\"#%D0%BA%D0%BE%D0%B4\" rel=\"noopener noreferrer nofollow\">Программный код</a></p></li><li><p><a href=\"#%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D1%84%D0%B5%D0%B9%D1%81\" rel=\"noopener noreferrer nofollow\">Графический интерфейс</a></p></li><li><p><a href=\"#%D1%81%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5\" rel=\"noopener noreferrer nofollow\">Сравнение результатов</a></p></li><li><p><a href=\"#%D0%B2%D1%8B%D0%B2%D0%BE%D0%B4\" rel=\"noopener noreferrer nofollow\">Вывод: применение и дальнейшее развитие</a></p></li></ul><p></p></details><h2>С чего началось</h2><a class=\"anchor\" name=\"%D0%BD%D0%B0%D1%87%D0%B0%D0%BB%D0%BE%D1%81%D1%8C\" id=\"началось\"></a><p>Передо мной встала задача поиска в куче хозяйственных договоров ответа на интересующие нас вопросы. Если документов было бы несколько, то просмотреть их вручную не составило бы труда, но их количество доходило до сотни, в каждом из которых было по 50 или более страниц, при этом нужная информация могла быть только в одном.</p><p>И дело даже не в количестве затраченного времени — из‑за банальной усталости можно пропустить нужную информацию. Чтобы избежать подобных проблем решено было привлечь мощь машинного обучения, а именно вопросно‑ответных систем.</p><p>Такие системы позволяют по заданному пользователем вопросу на естественном языке дать на него ответ, основываясь на каком‑либо тексте. Частным примером такой системы является нашумевшая ChatGPT. Для текущей задачи настолько мощная система избыточна, поэтому я сделаю кое‑что попроще.</p><p>Более простые вопросно‑ответные системы не умеют обобщать ответ на вопрос, а, скорее, пытаются подобрать слова, наиболее подходящие по смыслу к вопросу. К примеру, такой текст:</p><div><div class=\"table\"><table><tbody><tr><td><p align=\"left\">Вчера выпало много снега, а сегодня из-за тёплой погоды он подтаял и заледенел. Придётся на выходных взять лом и немного разбить лёд.   </p></td></tr></tbody></table><p>Если системе задать вопрос «Сколько в тексте запятых?», то она не сможет на него ответить, так как не «догадается» пересчитать их, а вот если спросить её: «Когда убирать лёд?», то она однозначно ответит: «на выходных», так как слово «лёд» встречается только в этом предложении и словосочетание «на выходных» относится ко времени.</p><h2>Выбор модели</h2><a class=\"anchor\" name=\"%D0%B2%D1%8B%D0%B1%D0%BE%D1%80%20%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D0%B8\" id=\"выбор модели\"></a><p>Модель для текущей задачи возьму уже обученную из библиотеки <a href=\"https://huggingface.co/docs/transformers/index\" rel=\"noopener noreferrer nofollow\">transformers</a>. Данная библиотека даёт удобный интерфейс для загрузки, дообучения и использования более 20 000 предобученных моделей для обработки текста, изображений и аудио. Модели предоставляет сообщество по машинному обучению <a href=\"https://huggingface.co/\" rel=\"noopener noreferrer nofollow\">Hugging Face</a>, а на их платформе организован удобный поиск подходящих моделей.</p><p>Также библиотека transformers поддерживает взаимодействие фреймворков <a href=\"https://pytorch.org/\" rel=\"noopener noreferrer nofollow\">PyTorch</a>, <a href=\"https://www.tensorflow.org/\" rel=\"noopener noreferrer nofollow\">TensorFlow</a> и <a href=\"https://jax.readthedocs.io/\" rel=\"noopener noreferrer nofollow\">JAX</a>, то есть можно на вход модели передать данные в одном фреймворке, а получить результаты в другом.</p><p>Чтобы выбрать подходящую для задачи модель выставляю на платформе Hugging Face соответствующие фильтры: тип модели — вопросно‑ответная, язык — русский. Под такие критерии попадают три модели, попробую их все:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/de5/208/307/de5208307b7912597f0b3b1456f17c4c.png\" width=\"2048\" height=\"435\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/de5/208/307/de5208307b7912597f0b3b1456f17c4c.png\"></figure><p>Есть два способа, чтобы скачать и использовать модели. В первом все действия осуществляются через класс pipeline, что быстро и удобно. Небольшой пример использования данного класса ниже:</p><pre><code class=\"python\">from transformers import pipeline\n\nquestion = \'Когда будем убирать лёд?\'\ncontext = (\'Вчера выпало много снега, а сегодня из-за\'\n         \' тёплой погоды он подтаял и заледенел.\'\n         \' Придётся на выходных взять лом и немного разбить лёд.\')\n\nmodel_pipeline = pipeline(\n   task=\'question-answering\',\n   model=\'timpal0l/mdeberta-v3-base-squad2\'\n)\n\nmodel_pipeline(question=question, context=context)</code></pre><p>Результат:</p><pre><code>{\'score\': 0.6851194500923157,\n \'start\': 88,\n \'end\': 100,\n \'answer\': \' на выходных\'}</code></pre><p>Во втором способе отдельно скачивается модель с токенизатором, самостоятельно обрабатываются данные и подаются на вход модели. Это даёт большую гибкость по сравнению с первым способом. В текущей задаче я буду использовать только второй, так как объём текста слишком большой и его нужно обработать особым образом, об этом чуть ниже.</p><h2>Программный код</h2><a class=\"anchor\" name=\"%D0%BA%D0%BE%D0%B4\" id=\"код\"></a><p>Чтобы не усложнять код, приведу решение только на одной модели, остальные будут работать по аналогичному алгоритму.</p><p>Сначала я подключаю нужные библиотеки, а также скачиваю модель и токенизатор для них:</p><pre><code class=\"python\">import torch\nimport numpy as np\nfrom transformers import AutoTokenizer, AutoModelForQuestionAnswering\n\ntokenizer = AutoTokenizer.from_pretrained(\"timpal0l/mdeberta-v3-base-squad2\")\n\nmodel = AutoModelForQuestionAnswering.from_pretrained(\"timpal0l/mdeberta-v3-base-squad2\")</code></pre><p>Теперь следует с помощью токенизатора обработать вопрос вместе с текстом. Здесь я добавлю специальный флаг, чтобы токенизатор не вставлял в токены специальные символы, как, например, символ для разделения предложений. Для демонстрации работы системы в качестве текста буду использовать первый том произведения Льва Толстого «Война и мир»:</p><pre><code class=\"python\">question = \'Кто приехал в гости к Анне Павловне?\'\n\ntokenized = tokenizer.encode_plus(\n   question, text,\n   add_special_tokens=False\n)</code></pre><p>Чтобы в дальнейшем была возможность вывести ответ на естественном языке заранее извлекаю символьные токены:</p><pre><code class=\"python\">tokens = tokenizer.convert_ids_to_tokens(tokenized[\'input_ids\'])</code></pre><p>Далее нужно упаковать токены особым образом. Дело в том, что выбранные модели основаны на предобученной модели <a href=\"https://en.wikipedia.org/wiki/BERT_(language_model)\" rel=\"noopener noreferrer nofollow\">BERT</a>, до недавнего времени являющейся одной из передовых в области обработки естественного языка, но ресурсы для её работы увеличиваются на порядок при увеличении количества обрабатываемых слов. Поэтому весь токенизированный текст я разбиваю на блоки одинаковой длины и подаю на вход модели. Каждый блок должен начинаться с вопроса и в дополнение, для увеличения эффективности, добавлю наложение последних токенов каждого блока на следующий.</p><p>Сначала задам длину каждого блока и длину наложения:</p><pre><code class=\"python\"># Общая длина каждого блока\nmax_chunk_length = 512\n# Длина наложения\noverlapped_length = 30</code></pre><p>Элемент token_type_ids в токенизаторе нулями отмечает вопрос, а единицами основной текст, поэтому чтобы вычислить длину вопроса в токенах нужно подсчитать количество нулей в этом элементе:</p><pre><code class=\"python\"># Длина вопроса в токенах\nanswer_tokens_length = tokenized.token_type_ids.count(0)\n# Токены вопроса, закодированные числами\nanswer_input_ids = tokenized.input_ids[:answer_tokens_length]</code></pre><p>Первый блок будет без наложения, поэтому сначала соберу остальные блоки с наложением, а потом добавлю к ним первый. Вычислю длину блоков без вопроса и наложения:</p><pre><code class=\"python\"># Длина основного текста первого блока без наложения\nfirst_context_chunk_length = max_chunk_length - answer_tokens_length\n# Длина основного текста остальных блоков с наложением\ncontext_chunk_length = \n max_chunk_length - answer_tokens_length - overlapped_length</code></pre><p>Далее отделю первый блок и обработаю оставшиеся (код под спойлером):</p><details class=\"spoiler\"><summary>Код</summary><div class=\"spoiler__content\"><pre><code class=\"python\"># Токены основного текста\ncontext_input_ids = tokenized.input_ids[answer_tokens_length:]\n# Основной текст первого блока\nfirst = context_input_ids[:first_context_chunk_length]\n# Основной текст остальных блоков\nothers = context_input_ids[first_context_chunk_length:]\n\n# Если есть блоки кроме первого\n# тогда обрабатываются все блоки\nif len(others) &gt; 0:\n  # Кол-во нулевых токенов, для выравнивания последнего блока по длине\n  padding_length = context_chunk_length - (len(others) % context_chunk_length)\n  others += [0] * padding_length\n\n  # Кол-во блоков и их длина без добавления наложения\n  new_size = (\n      len(others) // context_chunk_length,\n      context_chunk_length\n  )\n\n  # Упаковка блоков\n  new_context_input_ids = np.reshape(others, new_size)\n\n  # Вычисление наложения\n  overlappeds = new_context_input_ids[:, -overlapped_length:]\n  # Добавление в наложения частей из первого блока\n  overlappeds = np.insert(overlappeds, 0, first[-overlapped_length:], axis=0)\n  # Удаление наложение из последнего блока, так как оно не нужно\n  overlappeds = overlappeds[:-1]\n\n  # Добавление наложения\n  new_context_input_ids = np.c_[overlappeds, new_context_input_ids]\n  # Добавление первого блока\n  new_context_input_ids = np.insert(new_context_input_ids, 0, first, axis=0)\n\n  # Добавление вопроса в каждый блок\n  new_input_ids = np.c_[\n    [answer_input_ids] * new_context_input_ids.shape[0],\n    new_context_input_ids\n  ]\n# иначе обрабатывается только первый\nelse:\n  # Кол-во нулевых токенов, для выравнивания блока по длине\n  padding_length = first_context_chunk_length - (len(first) % first_context_chunk_length)\n  # Добавление нулевых токенов\n  new_input_ids = np.array(\n    [answer_input_ids + first + [0] * padding_length]\n  )</code></pre><p></p></details><p>После того, как получены блоки токенов, формирую маски для отделения вопроса от текста и для «внимания» модели (код под спойлером):</p><details class=\"spoiler\"><summary>Код\n</summary><div class=\"spoiler__content\"><pre><code class=\"python\"># Кол-во блоков\ncount_chunks = new_input_ids.shape[0]\n\n# Маска, разделяющая вопрос и текст\nnew_token_type_ids = [\n  # вопрос блока\n  [0] * answer_tokens_length\n  # текст блока\n  + [1] * (max_chunk_length - answer_tokens_length)\n] * count_chunks\n\n# Маска \"внимания\" модели на все токены, кроме нулевых в последнем блоке\nnew_attention_mask = (\n  # во всех блоках, кроме последнего, \"внимание\" на все слова\n  [[1] * max_chunk_length] * (count_chunks - 1)\n  # в последнем блоке \"внимание\" только на ненулевые токены\n  + [([1] * (max_chunk_length - padding_length)) + ([0] * padding_length)]\n)</code></pre><p></p></details><p>Теперь блоки и маски оборачиваю в tensor и подаю на вход модели:</p><pre><code class=\"python\"># Токенизированный текст в виде блоков, упакованный в torch\nnew_tokenized = {\n \'input_ids\': torch.tensor(new_input_ids),\n \'token_type_ids\': torch.tensor(new_token_type_ids),\n \'attention_mask\': torch.tensor(new_attention_mask)\n}\n\noutputs = model(**new_tokenized)</code></pre><p>Наконец, вычисляю наиболее вероятные позиции начала и конца ответа, извлекаю слова из ранее полученных токенов, удаляю из них вспомогательные символы и вывожу ответ (код и ответ под спойлером):</p><details class=\"spoiler\"><summary>Код и ответ</summary><div class=\"spoiler__content\"><pre><code class=\"python\"># Позиции в 2D списке токенов начала и конца наиболее вероятного ответа\n# позиции одним числом\nstart_index = torch.argmax(outputs.start_logits)\nend_index = torch.argmax(outputs.end_logits)\n\n# Пересчёт позиций начала и конца ответа для 1D списка токенов\n# = длина первого блока + (\n#   позиция - длина первого блока\n#   - длина ответов и отступов во всех блоках, кроме первого\n# )\nstart_index = max_chunk_length + (\n  start_index - max_chunk_length\n  - (answer_tokens_length + overlapped_length)\n  * (start_index // max_chunk_length)\n)\nend_index = max_chunk_length + (\n  end_index - max_chunk_length\n  - (answer_tokens_length + overlapped_length)\n  * (end_index // max_chunk_length)\n)\n\n# Составление ответа\n# если есть символ начала слова \'▁\', то он заменяется на пробел\nanswer = \'\'.join(\n  [t.repace(\'▁\', \' \') for t in tokens[start_index:end_index+1]]\n)\n\nprint(\'Вопрос:\', question)\nprint(\'Ответ:\', answer)</code></pre><p>Результат:</p><pre><code>Вопрос: Кто приехал в гости к Анне Павловне?\nОтвет: высшая знать Петербурга</code></pre><p></p></details><h2>Графический интерфейс</h2><a class=\"anchor\" name=\"%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D1%84%D0%B5%D0%B9%D1%81\" id=\"интерфейс\"></a><p>Чтобы было совсем уж хорошо, сделаю небольшой графический интерфейс. Для этого буду использовать библиотеку <a href=\"https://www.pysimplegui.org/en/latest/#pysimplegui-users-manual\" rel=\"noopener noreferrer nofollow\">PySimpleGUI</a>. Интерфейс будет состоять из текстового поля для ввода основного текста, вопроса по этому тексту, кнопки для запуска и поля для вывода ответа. Код для создания всего этого представлен ниже. Весь вышеизложенный код поиска ответа упакован в функцию question_answer, у которой первый аргумент текст, а второй — вопрос:</p><details class=\"spoiler\"><summary>Код</summary><div class=\"spoiler__content\"><pre><code class=\"python\">import PySimpleGUI as sg\n\n\n# Создание и укладка элементов окна\nlayout = [\n   [sg.Text(\'Текст\', key=\'-Text-label-\')],\n   [sg.Multiline(\'\', key=\'-Text-\', expand_x=True, expand_y=True)],\n   [sg.Text(\'Вопрос\', key=\'-Question-label-\')],\n   [sg.Input(\'\', key=\'-Question-\')],\n   [sg.Button(\'Получить ответ\')],\n   [sg.Text(\'Ответ\', key=\'-Answer-label-\', visible=False)],\n   [sg.Text(\'\', key=\'-Answer-\', font=(\'Arial Bold\', 13), visible=False)],\n]\n# Создание окна\nwindow = sg.Window(\'\', layout, resizable=True, size=(700, 700), finalize=True)\n\n# Обработка событий окна, пока оно не будет закрыто\nwhile True:\n   event, values = window.read()\n   # Событие закрытие окна\n   if event == sg.WINDOW_CLOSED:\n       break\n   # Событие при нажатии на кнопку для \'Получить ответ\'\n   elif event == \'Получить ответ\':\n       window[\'-Answer-label-\'].update(visible=True)\n       window[\'-Answer-\'].update(\n           question_answer(values[\'-Text-\'], values[\'-Question-\']),\n           visible=True\n       )\n\nwindow.close()</code></pre><p></p></details><p>В результате интерфейс имеет следующий вид:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/ea4/136/f71/ea4136f713981fbed229687ebe427c67.png\" width=\"702\" height=\"732\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ea4/136/f71/ea4136f713981fbed229687ebe427c67.png\"></figure><h2>Сравнение результатов</h2><a class=\"anchor\" name=\"%D1%81%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5\" id=\"сравнение\"></a><p>Теперь проведу сравнения работы всех ранее выбранных моделей на нескольких вопросах:</p><div><div class=\"table\"><table><tbody><tr><td data-colwidth=\"50\" width=\"50\"><p align=\"left\">№ п.п.</p></td><td><p align=\"left\">Вопрос</p></td><td><p align=\"left\">Отрывок из книги с правильным ответом</p></td><td><p align=\"left\">Модель   mdeberta-v3-base-squad2</p></td><td><p align=\"left\">Модель   xlm-roberta-large-qa-multilingual-finedtuned-ru</p></td><td><p align=\"left\">Модель  model-QA-5-epoch-RU</p></td></tr><tr><td data-colwidth=\"50\" width=\"50\"><p align=\"left\">1</p></td><td><p align=\"left\">Кто в родстве с Монморанси?</p></td><td><p align=\"left\">виконт Мортемар, он в родстве с Монморанси чрез Роганов</p></td><td><p align=\"left\">виконт Мортемар</p></td><td><p align=\"left\">Мортемар, он в</p></td><td><p align=\"left\">Кстати, – виконт Мортемар</p></td></tr><tr><td data-colwidth=\"50\" width=\"50\"><p align=\"left\">2</p></td><td><p align=\"left\">Где был Пьер с десятилетнего возраста?</p></td><td><p align=\"left\">Пьер с десятилетнего возраста был послан с гувернером-аббатом за   границу, где он пробыл до двадцатилетнего возраста.</p></td><td><p align=\"left\">с гувернером-аббатом за границу</p></td><td><p align=\"left\">за границу, где он пробыл до двадцатилетнего возраста</p></td><td><p align=\"left\">был послан с гувернером-аббатом</p></td></tr><tr><td data-colwidth=\"50\" width=\"50\"><p align=\"left\">3</p></td><td><p align=\"left\">О чём заключили пари Долохов с англичанином Стивенсом?</p></td><td><p align=\"left\">Долохов держит пари с англичанином Стивенсом, моряком, бывшим тут, в   том, что он, Долохов, выпьет бутылку рома, сидя на окне третьего этажа с   опущенными наружу ногами.</p></td><td><p align=\"left\">выпьет бутылку рома, сидя на окне</p></td><td><p align=\"left\">Долохов, выпьет бутылку рома</p></td><td><p align=\"left\">в том, что он, Долохов, выпьет бутылку</p></td></tr><tr><td data-colwidth=\"50\" width=\"50\"><p align=\"left\">4</p></td><td><p align=\"left\">Где располагается имение князя Николая Андреевича Болконского?</p></td><td><p align=\"left\">В Лысых Горах, имении князя Николая Андреевича Болконского</p></td><td><p align=\"left\">В Лысых Горах</p></td><td><p align=\"left\">В Лысых Горах, имении князя</p></td><td><p align=\"left\">Лысых Горах</p></td></tr><tr><td data-colwidth=\"50\" width=\"50\"><p align=\"left\">5</p></td><td><p align=\"left\">Кто приехал в гости к Анне Павловне?</p></td><td><p align=\"left\">Абзац во второй части</p></td><td><p align=\"left\">высшая знать Петербурга</p></td><td><p align=\"left\">люди самые разнородные</p></td><td><p align=\"left\">князь Ипполит</p></td></tr><tr><td data-colwidth=\"50\" width=\"50\"><p align=\"left\">6</p></td><td><p align=\"left\">Как звали сына графа Безухова?</p></td><td><p align=\"left\">Абзац во второй части (ответ: Пьер)</p></td><td><p align=\"left\">толстый молодой человек</p></td><td><p align=\"left\">молодой человек</p></td><td><p align=\"left\">незаконный</p></td></tr></tbody></table><p>Как видно на сравнении, модели лучше всего отвечают на вопросы с однозначным ответом, особенно если ответ расположен рядом с ключевыми словами из вопроса. Так, например, в 5-м вопросе все модели ответили, своего рода, правильно, а 6-й вопрос более обобщён, так как в тексте словосочетание «сын графа Безухова» и слово «Пьер» достаточно близко не встречаются, поэтому модели не смогли найти точный ответ.</p><p>Если сравнивать результативность моделей, то из всех трёх, на мой взгляд, лучше всего справилась первая модель, поэтому именно её и использовали на практике для решения своей задачи.</p><h2>Вывод: применение и дальнейшее развитие</h2><a class=\"anchor\" name=\"%D0%B2%D1%8B%D0%B2%D0%BE%D0%B4\" id=\"вывод\"></a><p>По итогу получен код для установки и использования предобученых вопросно‑ответных моделей с платформы Hugging Face для большого объёма текста. Главная цель его создания была автоматизация анализа произвольного текста путём составления вопросов на естественном языке, в противовес поиску нужной информации по ключевым словам. </p><p>Возможно и дальнейшее развитие инструмента, как, например, использование других моделей. Ввиду того, что задача заключается в обработке текста на русском языке, то подбор подходящей модели несколько усложняется, так как большинство моделей рассчитано на английский язык. Выходом может стать дообучение модели на собственных практических текстах. Так можно поймать сразу двух зайцев: и русифицировать модель, и лучше подогнать её на конкретные тексты, что должно повысить результаты в области её дальнейшего использования.</p><p>Ещё есть вариант использовать в качестве модели доступные аналоги GPT3, как, например, <a href=\"https://crfm.stanford.edu/2023/03/13/alpaca.html\" rel=\"noopener noreferrer nofollow\">Alpaca</a> или <a href=\"https://ru.wikipedia.org/wiki/LLaMA\" rel=\"noopener noreferrer nofollow\">LLaMA</a>. Данные модели уже на порядок более совершеннее, чем приведённые здесь и их результаты также должны быть лучше, но они в свою очередь требуют куда больших вычислительных мощностей даже для использования, не говоря уже о дообучении.</p><p>Даже несмотря на это, приведённую здесь вопросно‑ответную систему уже можно использовать на практике. В первую очередь она подойдёт тем, кому часто приходится работать с большими объёмами текста для поиска информации. Например, для поиска порядка действий в конкретных ситуациях по нормативным документам, получения коротких и быстрых ответов по протоколу совещания или же для поиска цены товара в документе расценок.</p><p></p>', 3, '2023-06-12 21:52:47', 125744, 72, '/ru/articles/740308/', 'Эта моя первая коротенькая статейка на Хабре в попытке сделать проект, который делал для себя в целях самообразования и применения на работе, полезным кому-то еще. Можно было бы написать больше букв, но ввиду особенностей профессиональной деятельности, времени на это мягко говоря не очень много. Кто заинтересуется, всегда может подробности почерпнуть самостоятельно на гитхабе.'),
(116, 'Парсинг, хранение и отображение логов 3-х разных агентов доставки электронной почты. MTA Log Parser', '<p>Эта моя первая коротенькая статейка на Хабре в попытке сделать проект, который делал для себя в целях самообразования и применения на работе, полезным кому-то еще. Можно было бы написать больше букв, но ввиду особенностей профессиональной деятельности, времени на это мягко говоря не очень много. Кто заинтересуется всегда может подробности почерпнуть самостоятельно на гитхабе.</p><h3>Предыстория</h3><p>Помнится, лет 10 назад хотелось мне найти удобный GUI просмотрщик почтовых логов с фильтрами по времени и разным ключевым полям для Exim, причем желательно с возможностью автоматической очистки от устаревших записей. Чтение лог файлов - это, конечно, хорошо, но не очень быстро и удобно, особенно когда над тобой стоит человек (или висит на телефонной линии), которому «вотпрямщас» надо узнать, почему же не пришло важнейшее письмо из какой-нибудь ООО «Рога и копыта». Да и вопросы хранения логов за какой-то бОльший, чем неделя, срок и обращения к ним, так же стояли остро.</p><p>Такой GUI просмотрщик был впоследствии найден в лице старенького, но очень даже эффективного <a href=\"https://duncanthrax.net/exilog/\" rel=\"noopener noreferrer nofollow\"><u>exilog</u></a>. Однако со временем в хозяйстве начали появляться почтовики на базе Postfix (как правило в составе комбайнов типа mailcow) и вот для них ничего современного, молодежного и главное простого и быстрого в развертке найти не удалось.</p><p>Затем появился ELK и были мои вполне успешные попытки прикрутить парсинг, хранение и отображение всех логов (не только почтовых) к этому стеку. Но оставалось стойкое желание иметь конкретно для почты что-то отдельное, более легковесное, менее ресурсозатратное  и универсальное.</p><p>Примерно в это время на гитхабе я наткнулся на замечательный проект <a href=\"https://github.com/Privex/postfix-parser\" rel=\"noopener noreferrer nofollow\"><u>Privex Postfix Log parser</u></a>.</p><p>В нем мне сразу понравился подход и возникло желание проект развить, сделав удобнее и расширив область применения, т.к. хотелок у меня было много, а проект казался каким-то незавершенным и подзаброшенным.</p><p>Итак, встречайте, <a href=\"https://github.com/drlight17/mta-log-parser\" rel=\"noopener noreferrer nofollow\"><u>MTA Log Parser</u></a>.</p><h3>Собственно сабж</h3><p>Программист из меня так себе, поскольку это не моё основное направление деятельности, но получилось, что получилось. Просьба за исходный код сильно не ругать и тапками не бить.</p><p><a href=\"https://github.com/Privex/postfix-parser\" rel=\"noopener noreferrer nofollow\"><u>Изначальный проект </u></a>на Quart (бэкенд) и VueJS (фронтэнд) был мной доработан, адаптирован под более актуальный vue 3. В качестве СУБД в изначальном проекте используется rethinkdb и миграцию на что-то другое, либо поддержку чего-то другого я пока не делал из соображения - работает - не трогай. Если есть аргументированное мнение, почему стоит переделать СУБД бэкенд на что-то другое - пишите в комментариях, будет интересно почитать.</p><p>Список изменений по сравнению с исходным проектом довольно большой и его можно посмотреть в <a href=\"https://raw.githubusercontent.com/drlight17/mta-log-parser/master/CHANGES.md\" rel=\"noopener noreferrer nofollow\">CHANGES.md</a>. Здесь же напишу самое основное на данный момент (v.1.1.2):</p><ul><li><p>Поддержка 3-х самых популярных (по версии некоторых ресурсов) MTA - Exim, Postfix и Sendmail</p></li><li><p>Докеризация - существенно упрощает и ускоряет развертку в любой продакшен</p></li><li><p>Более развитый GUI с бОльшим количеством фильтров</p></li><li><p>Локализация GUI (пока поддерживаются русская и английская локали, но добавить поддержку других возможно)</p></li><li><p>Ротация логов (удаление устаревших) по количеству дней</p></li></ul><p>В планах всякие свистелки-перделки, поддержка нескольких одновременных фильтров (сейчас одновременно накладываются только один текстовый фильтр по выбранному полю и фильтр по времени) и рефакторинг кода, т.к. сделанное мной весьма ужасно с точки зрения кода.</p><p>Принимаются критика, PR’ы и просто советы от гуру программирования =)</p><p>Ну и парочка скриншотов для затравки:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/getpro/habr/upload_files/45f/db1/a21/45fdb1a21fbdc329a20ff27e56ff4942.JPG\" alt=\"Основное окно с таблицей текущего обработанного лога\" title=\"Основное окно с таблицей текущего обработанного лога\" width=\"1173\" height=\"948\"><div><figcaption>Основное окно с таблицей текущего обработанного лога</figcaption></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/getpro/habr/upload_files/a7e/de6/3f7/a7ede63f72c529c6337330621ca6be1c.JPG\" alt=\"Модальное окно с подробностями о доставке выбранного письма\" title=\"Модальное окно с подробностями о доставке выбранного письма\" width=\"877\" height=\"856\"><div><figcaption>Модальное окно с подробностями о доставке выбранного письма</figcaption></figure><p></p>', 1, '2023-06-12 21:52:48', 320503, 73, '/ru/articles/740288/', 'В последнее время все большей популярностью пользуются различные чаты на основе ChatGPT. Они доступны не только в формате веб-версий или telegram-ботов, но и в виде отдельных приложений для разных платформ. В один прекрасный день я наткнулся на новое приложение под названием Bavarder, но интерфейс показался мне не очень удобным и наглядным, и я решил создать на основе этого приложения своё. '),
(117, 'Приложение BAI Chat на GTK4 и Python', '<figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/068/0d9/84b/0680d984b3f00af88031caf7bf273927.jpg\" width=\"1200\" height=\"600\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/068/0d9/84b/0680d984b3f00af88031caf7bf273927.jpg\" data-blurred=\"true\"></figure><p>В последнее время все большей популярностью пользуются различные чаты на основе ChatGPT. Они доступны не только в формате веб-версий или telegram-ботов, но и в виде отдельных приложений для разных платформ.</p><p>Я, как пользователь систем на базе ядра Linux и человек, постоянно мониторящий магазин Flathub в поиске чего-нибудь интересного, в один прекрасный день увидел новое приложение под названием <a href=\"https://github.com/Bavarder/Bavarder\"><u>Bavarder</u></a>. Приложение написано на языке Python с использованием фреймворка GTK4 и библиотеки libadwaita. Программа позволяет общаться с ChatGPT, но делается это в двух текстовых полях. В одном пишется запрос, а в другом пользователь получает ответ. Мне это показалось не очень удобным и наглядным:</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/d23/49a/502/d2349a50206fdbb0fcd67180dc7ebda6.png\" width=\"468\" height=\"551\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d23/49a/502/d2349a50206fdbb0fcd67180dc7ebda6.png\"></figure><p>Я решил на основе первой версии этого приложения(с тегом 0.1.1) создать свое. Интерфейс будет состоять только из одной текстовой области, которая будет использоваться как для ввода, так и для вывода информации. В моей версии будет только одна сеть, и это будет <a href=\"https://theb.ai/index.html\"><u>BAI Chat</u></a>, как и в первой версии Bavarder. </p><p>BAI Chat – это нейросеть созданная на основе ChatGPT и предназначенная для использования в самых разных областях. Она не требует авторизации и ключей API. </p><p>В Bavarder пользователь видит только один текущий вопрос и ответ на него. В моей версии программы вся текущая переписка с ботом будет доступна для просмотра пользователем. Благодаря тому, что весь процесс общения происходит в одном окне, будет сохраняться контекст, то есть бот не будет терять нить разговора, по крайней мере, первые пару десятков сообщений. В более поздних выпусках автор решил эту проблему с контекстом, но формат вывода запросов и сообщений остался прежним. Можно сказать, что моя версия как раз и задумывалась для того, чтобы улучшить формат вывода переписки. Репозиторий моей версии приложения можно найти <a href=\"https://github.com/alexkdeveloper/baichat\"><u>здесь</u></a>.</p><h2>Начало разработки</h2><p>Я еще ни разу не работал с приложениями на Python, тем более написанными на GTK. В основном в своих разработках я использовал язык Vala. Но на этом языке пока что нет необходимых библиотек, позволяющих работать с BAI Chat. Из-за недостатка опыта работы с Python и было решено не писать приложение с нуля, а взять за основу уже существующее.</p><p>В программе используется библиотека baichat-py. В Bavarder создан файл манифеста и дополнительный к нему файл с модулями, где указываются архивы необходимых библиотек для нейросети. В более поздних версиях приложения их там довольно много. Так как в моей версии используется только BAI Chat, то нет смысла расписывать манифест на два файла. </p><p>Таким образом, в манифесте, помимо модуля приложения, прописаны еще два модуля: python3-baichat-py и blueprint-compiler. Последний нужен для получения классического файла пользовательского интерфейса в формате ui из файла в формате blp. Подробнее об этом формате можно прочитать в официальной <a href=\"https://jwestman.pages.gitlab.gnome.org/blueprint-compiler/\"><u>документации</u></a>. </p><p>Ниже приводится фрагмент манифеста с началом модуля python3-baichat-py:</p><pre><code class=\"python\">\"modules\" : [\n        {\n    \"name\": \"python3-baichat-py\",\n    \"buildsystem\": \"simple\",\n    \"build-commands\": [\n        \"pip3 install --verbose --exists-action=i --no-index --find-links=\\\"file://${PWD}\\\" --prefix=${FLATPAK_DEST} \\\"baichat-py\\\" --no-build-isolation\"\n    ],\n    \"sources\": [\n        {\n            \"type\": \"file\",\n            \"url\": \"https://files.pythonhosted.org/packages/c2/fd/1ff4da09ca29d8933fda3f3514980357e25419ce5e0f689041edb8f17dab/aiohttp-3.8.4.tar.gz\",\n            \"sha256\": \"bf2e1a9162c1e441bf805a1fd166e249d574ca04e03b34f97e2928769e91ab5c\"\n        }</code></pre><p>Весь модуль приводить не буду, так как он довольно объемный. Узнать, как подключается blueprint-compiler, можно по вышеуказанной ссылке на документацию. Есть еще вот <a href=\"https://habr.com/ru/articles/729084/\"><u>эта статья</u></a> с краткой инструкцией и примером использования.</p><h2>Изменение интерфейса</h2><p>Как уже говорилось, я решил поменять интерфейс приложения, и если оригинал выглядит вот так:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e0b/7f3/025/e0b7f302520d00a86579d8cf42e0fc3f.png\" width=\"728\" height=\"620\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e0b/7f3/025/e0b7f302520d00a86579d8cf42e0fc3f.png\"></figure><p>То мой вариант смотрится гораздо проще:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e1d/7af/b4d/e1d7afb4dca5a22b7995274e048bd0a4.png\" width=\"824\" height=\"726\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e1d/7af/b4d/e1d7afb4dca5a22b7995274e048bd0a4.png\"></figure><p>Заголовок с текстом «Message» я удалил за ненадобностью, так же как и «Response». Иконку меню перенес вправо. Для этого в файле window.blp потребовалось добавить метку [end] для компонента MenuButton:</p><pre><code class=\"python\">Adw.HeaderBar {\n        [end]\n        MenuButton {\n          primary: true;\n          menu-model: main-menu;\n          icon-name: \"open-menu-symbolic\";\n          tooltip-text: _(\"Main Menu\");\n        }\n        styles [\"flat\"]\n      }</code></pre><p>Почему потребовалось перенести меню? Да, просто для GTK-приложений положение меню слева не является естественным. У большинства программ, написанных на этом фреймворке, меню расположено именно в правой части окна.</p><p>Для удаления нижней текстовой области, которая в оригинальной версии предназначена для вывода ответа, нужно в window.blp найти и удалить компонент Adw.PreferencesGroup с идентификатором bot_group. При удалении компонента надо быть аккуратнее и постараться не удалить лишние фигурные скобки. В коде оставшейся текстовой области ничего менять не нужно.</p><p>Иконку для значка приложения было решено взять с сайта Iconfinder, потому как дизайнер из меня так себе. В разделе свободных иконок я подобрал наиболее подходящую по тематике в формате svg. С помощью расширения SVG для VS Code я изменил цвет иконки — то, что у меня получилось, можно увидеть в репозитории, в папке icons.</p><p>Значок для кнопки отправки запроса остался тот же, что и в оригинальном приложении. Не вижу смысла в его изменении. Единственное, что хочу отметить, — для этого значка используется отдельное изображение, находящееся в той же папке icons, что и остальные. Видимо, не нашлось подходящего значка среди набора стандартных иконок.</p><h2>Удаление настроек</h2><p>Теперь, когда интерфейс программы приведен к нужному виду, настало время заняться дальнейшими преобразованиями в коде приложения. Прежде всего необходимо убрать те участки кода, которые ссылаются на удаленные компоненты. Далее можно удалить настройки, так как они больше не нужны. </p><p>В первой версии приложения Bavarder была только одна настройка, позволяющая включить автоматическую очистку поля для ввода сообщения после получения ответа. Это уже не требуется, так как в приложении теперь есть только одно текстовое поле, работающее за двоих. Для начала потребуется удалить файлы preferences.py и preferences.blp. Также нужно удалить соответствующий item из main-menu в window.blp:</p><pre><code class=\"python\">menu main-menu {\n  section {\n    item {\n      label: _(\"Preferences\");\n      action: \"app.preferences\";\n    }\n\n    item {\n      label: _(\"Keyboard Shortcuts\");\n      action: \"win.show-help-overlay\";\n    }\n\n    item {\n      label: _(\"About Bavarder\");\n      action: \"app.about\";\n    }\n  }\n}</code></pre><p>У последнего item следует отредактировать текстовую метку и заменить «Bavarder» на «BAI Chat». Не стоит забывать и о сборочных сценариях. Приложение использует сборочную систему meson. Нужно найти сценарии meson.build в каталогах src и ui и удалить в них ссылки на указанные выше файлы настроек. </p><h2>Ввод и вывод информации</h2><p>Вся логика приложения описана в файле main.py. Функция для получения ответа от BAI Chat выглядит следующим образом:</p><pre><code class=\"python\">def ask(self, prompt):\n        chat = BAIChat(sync=True)\n        try:\n            response = chat.sync_ask(self.prompt)\n        except KeyError:\n            self.win.banner.set_revealed(False)\n            return \"\"\n        except socket.gaierror:\n            self.win.banner.set_revealed(True)\n            return \"\"\n        else:\n            self.win.banner.set_revealed(False)\n            return response.text</code></pre><p>В этой части менять ничего не потребовалось. Изменения коснулись функции cleanup, которая принимает на вход ответ нейросети и отображает его в виджете bot_text_view, который был удален. Вот так выглядит эта функция в первоначальном виде:</p><pre><code class=\"python\">def cleanup(response):\n            self.win.spinner.stop()\n            self.win.ask_button.set_visible(True)\n            self.win.wait_button.set_visible(False)\n            t.join()\n            self.win.bot_text_view.get_buffer().set_text(response)\n\n            if self.clear_after_send:\n                self.win.prompt_text_view.get_buffer().set_text(\"\")\n\n        t = threading.Thread(target=thread_run)\n        t.start()</code></pre><p>В этой функции также происходит автоматическая очистка виджета prompt_text_view, который теперь выполняет и роль удаленного bot_text_view. Этот участок кода больше не нужен. Вот так выглядит функция в моем варианте:</p><pre><code class=\"python\"> def cleanup(response):\n            self.win.spinner.stop()\n            self.win.ask_button.set_visible(True)\n            self.win.wait_button.set_visible(False)\n            t.join()\n            \n            self.resp = self.prompt + \'\\n\\n******\\n\\n\' + response + \'\\n\\n******\\n\\n\'\n            self.win.prompt_text_view.get_buffer().set_text(self.resp)\n\n            GLib.timeout_add(1000, self.scroll_to_last_position)\n\n        t = threading.Thread(target=thread_run)\n        t.start()</code></pre><p>Переменная prompt определяется в функции on_ask_action, которая вызывается нажатием на кнопку отправки запроса. Переменной присваивается весь текст, содержащийся в виджете, и тут же происходит ее проверка на пустоту:</p><pre><code class=\"python\">self.prompt = self.win.prompt_text_view.get_buffer().props.text\n        if self.prompt == \"\" or self.prompt is None: \n           return</code></pre><p>Для большей наглядности запросы пользователя и ответы бота отделяются друг от друга. В функции do_activate прописана установка фокуса на текстовую область, чтобы пользователь мог сразу начать работать с программой после ее запуска:</p><pre><code class=\"python\">self.win.prompt_text_view.grab_focus()</code></pre><p>Еще нужно подумать об автоматической прокрутке текста на позицию последнего вопроса. Так как область вывода текста обновляется после каждого получения ответа на вопрос, то пользователь будет постоянно возвращаться к началу переписки. Чтобы этого не происходило, была добавлена вот эта функция:</p><pre><code class=\"python\">def scroll_to_last_position(self):\n        adj = self.win.scrolled_window.get_vadjustment()\n        adj.set_value(self.pos)\n        self.win.scrolled_window.set_vadjustment(adj)\n        return False</code></pre><p>Переменная pos получает новое значение каждый раз, когда отправляется очередной запрос:</p><pre><code class=\"python\">self.pos = self.win.scrolled_window.get_vadjustment().get_value()</code></pre><p>Вызов функции scroll_to_last_position пришлось делать через таймаут, так как буферу виджета prompt_text_view необходимо какое-то время на заполнение, после чего можно работать с контейнером scrolled_window, в котором располагается виджет. Значение первого параметра для функции timeout_add приведено для примера. Можно выставить и гораздо меньшее значение. </p><p>Больше никаких изменений в части ввода и вывода информации я не вносил.</p><h2>Дальнейшая работа</h2><p>Вся основная работа уже проделана. Остается только удалить неиспользуемые функции, переименовать файлы в репозитории и в соответствии с этим внести необходимые правки в сборочные сценарии, файлы ресурсов, манифест и прочее.</p><p>Что касается неиспользуемых функций, то таковой является функция копирования в буфер обмена текста из удаленной текстовой области. Виджет, при нажатии на который вызывалась эта функция, был удален. В новом варианте программы осталась только одна такая функция и вызывается она по нажатию на соответствующую кнопку, расположенную рядом с кнопкой отправки запроса:</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a6b/1b8/85f/a6b1b885f95e6de5451b855dd64ff2ef.png\" width=\"314\" height=\"102\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a6b/1b8/85f/a6b1b885f95e6de5451b855dd64ff2ef.png\"></figure><p>Также лишней в коде является функция вызова окна настроек, так как это окно больше не существует.</p><p>Комбинации клавиш остались без изменений. Их тут всего две:</p><pre><code class=\"python\">self.create_action(\"quit\", lambda *_: self.quit(), [\"&lt;primary&gt;q\"])\n...\nself.create_action(\"ask\", self.on_ask_action, [\"&lt;primary&gt;Return\"])</code></pre><p>Еще хотелось бы упомянуть окно с информацией о приложении. Так как программа использует библиотеку libadwaita, то естественно, что для вывода такой информации используется окно Adw.AboutWindow. В этом окне разработчик может указать, например, название приложения, его версию, лицензию и прочее. Вот как это может быть реализовано:</p><pre><code class=\"python\">def on_about_action(self, widget, _):\n        about = Adw.AboutWindow(\n            transient_for=self.props.active_window,\n            application_name=\"BAI Chat\",\n            application_icon=\"io.github.alexkdeveloper.baichat\",\n            developer_name=\"Alex K\",\n            developers=[\"Alex K https://github.com/alexkdeveloper/baichat\"],\n            license_type=Gtk.License.GPL_3_0,\n            version=\"1.0.0\",\n            copyright=\"(c) 2023 Alex K\")\n        about.present()</code></pre><p>Для сборки приложения отлично подойдет интегрированная среда разработки Builder. Она является официальной средой разработки для GNOME. Среда автоматически скачает и установит все, что указано в манифесте программы. Запуск приложения должен пройти без проблем. Там же можно создать пакет flatpak.</p><p>Приложение получилось довольно минималистичным, что, в принципе, и требовалось. Целью этой работы было создание своей версии программы Bavarder, в которой пользователю доступен весь текст переписки с сетью BAI Chat. Я считаю, что цель была достигнута.</p><p>Автор статьи <a class=\"mention\" href=\"/users/KAlexAl\">@KAlexAl</a></p><hr><p>НЛО прилетело и оставило здесь промокод для читателей нашего блога: </p><p><a href=\"https://firstvds.ru/?utm_source=habr&amp;utm_medium=article&amp;utm_campaign=product&amp;utm_content=vds15exeptprogrev\"><strong>- 15% на заказ любого VDS</strong></a><strong> </strong>(кроме тарифа Прогрев) — HABRFIRSTVDS  </p><p></p>', 1, '2023-06-12 21:52:48', 248067, 72, '/ru/companies/first/articles/740082/', 'При работе с большими коллекциями в MongoDB, размер которых превышал десятки миллионов записей, возникла необходимость формировать случайные выборки уникальных значений полей, принадлежащих документам этой коллекции.Для такой операции, в MongoDB штатно предусмотрена функция $sample, которую можно использовать в составе pipeline при проведении агрегации данных. Однако, как показала практика, выполнение выборки полей таким образом на большой коллекции может занимать весьма ощутимое время. Чтобы сократить время выполнения таких выборок, потребовалось разработать собственный алгоритм, который на порядки увеличил скорость работы. Ниже приведен подход и вариант реализации данного алгоритма.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(118, 'Оптимизация выборок в больших коллекциях MongoDB', '<h2>Введение</h2><p>При работе с большими коллекциями в MongoDB, размер которых превышал десятки миллионов записей, возникла необходимость формировать случайные выборки уникальных значений полей, принадлежащих документам этой коллекции.</p><p>Для такой операции, в MongoDB штатно предусмотрена функция $sample, которую можно использовать в составе pipeline при проведении агрегации данных. Есть еще один вариант, с использованием оператора $skip. Однако, как показала практика, выполнение выборки полей таким образом на большой коллекции и первым и втором способом может занимать весьма ощутимое время. </p><p>Чтобы сократить время выполнения таких выборок, потребовалось разработать собственный алгоритм, который на порядки увеличил скорость работы. Ниже приведен подход и вариант реализации данного алгоритма.</p><h2>Исходные данные</h2><p>В качестве исходных данных возьмем базу электронных писем, содержащую, в том числе, поле с адресом электронной почты и темой письма и количество элементов порядка 800 000.</p><p>Типовой документ, представляемый в БД Mongo будет выглядеть как стандартный JSON такого вида:</p><pre><code class=\"json\">{\n  \"_id\": {\n    \"$oid\": \"6461f8cbd2b81e62fcfo54ca\"\n  },\n  \"mail\": \"letter@bookvoed.ru\",\n  \"subject\": \"Дорогу книголюбам\",\n}</code></pre><p>Служебное поле \"_id\" в данном документе формируется при внесении документа в коллекцию автоматически. Важно, что это поле всегда индексируется по умолчанию и его значение вычисляется по строго установленным принципам, делающим его уникальным в пределах базы данных.</p><p>Согласно сведениям разработчика MongoDB, значение поля \"_id\" является BSON типом ObjectID и состоит из трех частей:</p><ul><li><p>4-байтовая метка времени генерации записи, выраженная в секундах эпохи Unix.</p></li><li><p>5-байтное случайное  число, генерируемое единожды для рабочего процесса, осуществляющего внесение документа в коллекцию.</p></li><li><p>3-байтный  счетчик, инициализированный случайным образом.</p><p>На рисунке 1 представлены варианты значений для тестовой коллекции.</p></li></ul><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/353/87d/dca/35387ddcaf031e87af243b84d8a3e535.png\" alt=\"Рисунок 1. Варианты и диапазоны значений для коллекции\" title=\"Рисунок 1. Варианты и диапазоны значений для коллекции\" width=\"372\" height=\"305\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/353/87d/dca/35387ddcaf031e87af243b84d8a3e535.png\"><div><figcaption>Рисунок 1. Варианты и диапазоны значений для коллекции</figcaption></figure><p>Из рисунка видно, что при формировании коллекции был задействован единственный процесс, запись документов проводилась одним потоком (отметки времени являются регулярными) и счетчик инкрементируется на единицу для каждого документа.</p><p>В ходе экспериментов, было установлено, что при смене процесса меняется и идентификатор процесса, и стартовое значение счетчика. Таким образом, стабильно последовательным является только значение поля time. </p><p>Хотя, если коллекция заполняется документами нерегулярно - то в этом поле будут появляться разрывы. Для примера, на рисунке один приведена статистика для базы, емкостью около 100 000 000 записей (на Рисунке 2 поле time преобразовано в UNIX-время).</p><p>Из рисунка видно, что запись в таблицу проводилась в три этапа, в разное время, появились разрывы в псевдо-монотонной последовательности временных отметок документов. </p><p>Заметим, что при больших таблицах поле \"счетчик\" будет принимать все значения от 000000 до ffffff (см. Рисунок 2), что вполне логично.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e22/e06/f24/e22e06f24014117e7b7987d17ef4937e.png\" alt=\"Рисунок 2. Статистика изменения фрагментов поля ObjectID для таблицы с ~ 100 000 000 записей\" title=\"Рисунок 2. Статистика изменения фрагментов поля ObjectID для таблицы с ~ 100 000 000 записей\" width=\"606\" height=\"74\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e22/e06/f24/e22e06f24014117e7b7987d17ef4937e.png\"><div><figcaption>Рисунок 2. Статистика изменения фрагментов поля ObjectID для таблицы с ~ 100 000 000 записей</figcaption></figure><p>С учетом сказанного, можно предположить, что для формирования случайной выборки можно работать с фрагментом поля _id, соответствующего времени внесения документа в коллекцию.</p><p>Так как этот фрагмент находится в старших разрядах значения поля \"_id\", индекс, созданный СУБД по умолчанию для этого поля будет корректно отрабатывать при выборе значений для этого фрагмента.</p><h2>Алгоритм для регулярно заполняемых коллекций</h2><p>Простой алгоритм случайного выбора нескольких oid может быть таким:</p><ol><li><p>Найти минимальное (min_oid) и максимальное (max_oid) значение ObjectID и сгенерировать случайное значение (rand_oid) между ними.</p></li><li><p>Найти ближайший к сгенерированному значению реальный ObjectID из обрабатываемой коллекции.</p></li><li><p>Проверить, был ли уже ранее найден такой rand_oid, и если да - то сгенерировать новое случайное значение, после чего повторить процедуру выбора oid.</p></li><li><p>Повторить процедуру заданное число раз.</p></li></ol><p>Алгоритм корректно отработает для коллекций, где записи вносятся регулярно, а не большими пачками с большими промежутками (как в примере на рисунке 2) и для некоторых случаев даже такого алгоритма будет уже достаточно. Тем не менее, если в псевдо-монотонной последовательности временных отметок будут разрывы, то случайное число на полном диапазоне будет часто попадать в эти разрывы и надо бы учесть такую особенность коллекции.</p><p>Что для этого можно сделать?</p><h2>Алгоритм, учитывающий временные разрывы</h2><p>Условно (масштаб не соблюден), можно представить коллекцию с разрывами как-то так (см. Рисунок 3):</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/ea3/5ba/f8a/ea35baf8a97151f11dea5b99688275ea.png\" alt=\"Рисунок 3. Коллекция, заполняемая нерегулярно большими фрагментами\" title=\"Рисунок 3. Коллекция, заполняемая нерегулярно большими фрагментами\" width=\"933\" height=\"202\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ea3/5ba/f8a/ea35baf8a97151f11dea5b99688275ea.png\"><div><figcaption>Рисунок 3. Коллекция, заполняемая нерегулярно большими фрагментами</figcaption></figure><p>Если мы попадаем в \"молоко\", то ближайшими идентификаторами реальных документов окажутся идентификаторы документов на краю диапазонов. При этом, процессы, которые эти документы разместили в базу, вероятнее всего будут разными. Будем использовать это как признак, для определения попадания в \"молоко\" таким образом:</p><ol><li><p>Берем случайный rand_id и ищем левый (оператор MongoDB $lt) и правый ($gt) по отношению к нему ObjectID реального документа.</p></li><li><p>Проверяем, совпадают ли у найденных документов идентификаторы процесса. Если нет - то мы нашли граничные документы диапазонов. В таком случае повторно генерируем новый случайный rand_id в диапазоне, который лежит между краем (началом или концом) общего диапазона и найденным граничным документом.</p></li><li><p>Повторяем проверку и сужение диапазона генерации случайного rand_id пока не попадем в \"зеленку\", о чем будет свидетельствовать совпадение идентификаторов процесса у \"левого\" и \"правого\" по отношению к rand_id реального ObjectID.</p></li><li><p>Включаем найденный реальный ObjectID (либо \"левый2, либо \"правый\", либо оба) в формируемый набор.</p></li></ol><h2>Реализация и проверка</h2><p>Проведем первичный эксперимент по формированию выборок почтовых адресов и оценим скорость их выполнения. </p><p>Из специфических модулей, которые потребуются для тестирования, нам потребуется штатный модуль pymongo, который можно скачать из открытого репозитория.</p><p>Для оценки времени исполнения удобно использовать декоратор, дополняющий результат выполнения произвольной функции Python расчетом времени ее отработки.</p><pre><code class=\"python\">def timer(func):\n    def _wrapper(*args, **kwargs):\n        start = time.perf_counter()\n        result = func(*args, **kwargs)\n        runtime = time.perf_counter() - start\n        print(f\"{func.__name__} took {runtime:.4f} secs\")\n        return result\n    return _wrapper</code></pre><p>Прежде всего составим функцию, которая будет находить случайный идентификатор ObjectID:</p><pre><code class=\"python\">def get_random_objid(min_oid, max_oid):\n    \"\"\"\n    Функция генерирует случайный ObjectID в диапазоне\n    \"\"\"\n    f = str(min_oid)[:8] # берем первые 8 символов, соответствующие временной отметке записи\n    l = str(max_oid)[:8]\n    fn = int(f, 16)\n    ln = int(l, 16)\n    random.seed()\n    r = random.randrange(fn, ln)\n    rand_oid = ObjectId(\"\".join([hex(r)[2:],\"0000000000000000\"]))\n    return rand_oid</code></pre><p>Замечу, что для генерации имеет смысл задавать только разряды ObjectID соответствующие отметке времени, то есть первым 4 байтам идентификатора.</p><p>Для использования функции надо будет задать минимальный и максимальный идентификатор соответствующей временным границам обрабатываемой коллекции, которые можно вычислить следующим образом:</p><pre><code class=\"python\">\n# MongoClient(used_connection)[\"tmp\"]\nmin_oid = list(coll.find().sort(\"_id\", 1).limit(1))[0][\"_id\"]\nmax_oid = list(coll.find().sort(\"_id\", -1).limit(1))[0][\"_id\"]</code></pre><p>Сортировка с параметром \"-1\" упорядочивает коллекцию от большего к меньшему значению идентификатора.</p><p>Ниже приведена функция, которая находит идентификаторы реальных документов в коллекции, расположенных слева и справа от случайно найденного идентификатора, а также функция, которая разбивает идентификатор на логические составляющие - \"Время\", \"Процесс\", \"Счетчик\".</p><pre><code class=\"python\">def trim_objid(obj_id):\n    s = str(obj_id)\n    return {\"id\":obj_id, \"time\":s[:8],\"proc\":s[8:18], \"counter\":s[18:]}\n  \ndef get_near_oid(coll, reference_oid):\n    left = list(coll.aggregate([{\"$sort\": {\"_id\": -1}},\n                                {\"$match\": {\"_id\": {\"$lte\": reference_oid}}}, \n                                {\"$limit\":1}]))\n    if not left:\n        left = [coll.find_one()]\n    right = list(coll.aggregate([{\"$match\": {\"_id\": {\"$gte\": reference_oid}}}, \n                                 {\"$limit\":1}]))\n    if not right:\n        right = list(coll.aggregate([{\"$sort\": {\"_id\": -1}}, {\"$limit\":1}]))\n\n    return {\"left\":trim_objid(left[0][\"_id\"]), \"right\":trim_objid(right[0][\"_id\"])}</code></pre><p>В итоге отработки, функция поиска ближайших идентификаторов get_near_oid выдаст примерно такой результат:</p><pre><code class=\"json\">{\'left\': {\'id\': ObjectId(\'6461f8cdd2b81e62fcf16ffd\'), \n          \'time\': \'6461f8cd\', \n          \'proc\': \'d2b81e62fc\', \n          \'counter\': \'f16ffd\'}, \n \'right\': {\'id\': ObjectId(\'6461f8ced2b81e62fcf16ffe\'), \n           \'time\': \'6461f8ce\', \n           \'proc\': \'d2b81e62fc\', \n           \'counter\': \'f16ffe\'}}</code></pre><p>На данном примере видно, что у \"правого\" и \"левого\" идентификатора процесса (\"proc\") совпадают, то есть мы попали в \"зеленку\", содержательную часть коллекции, а не в \"молоко\", разрыв, и можно спокойно брать полученный идентификатор для последующего включения в набор.</p><p>Функция, которая возвращает \"корректные\" идентификаторы из содержательных блоков коллекции  будет выглядеть так:</p><pre><code class=\"python\">def get_inline_oids(coll):\n    min_oid = list(coll.find().sort(\"_id\", 1).limit(1))[0][\"_id\"]\n    max_oid = list(coll.find().sort(\"_id\", -1).limit(1))[0][\"_id\"]\n    rand_oid = get_random_objid(min_oid, max_oid)\n\n    # ищем идентификаторы документов, которые находятся слева и справа от референсного\n    gap = get_near_oid(coll, rand_oid)\n\n    while gap[\"left\"][\"proc\"] != gap[\"right\"][\"proc\"]:\n        rand_oid = get_random_objid(min_oid, gap[\"left\"][\"id\"])\n        gap = get_near_oid(coll, rand_oid)\n        if gap[\"left\"][\"proc\"] != gap[\"right\"][\"proc\"]:\n            rand_oid = get_random_objid(gap[\"right\"][\"id\"], max_oid)\n            gap = get_near_oid(coll, rand_oid)\n    print(gap)\n    return {gap[\"left\"][\"id\"], gap[\"left\"][\"id\"]}</code></pre><p>Ну и наконец мы можем сформировать последнюю функцию, которая, собственно и вернет нам нужное количество случайных значений идентификаторов, а заодно декорируем ее обработчиком, выдающим время исполнения.</p><p>Здесь же приведем стандартную функцию выборки случайных значений для последующего сравнения производительности.</p><p>Ну и проведем тест на выборках различной длины: 5, 10, 50.</p><pre><code class=\"python\">@timer\ndef get_sample_oids(coll, count=1):\n    oids = set()\n    while len(oids) &lt; count:\n        oids = oids.union(get_inline_oids(coll))\n    if len(oids) != count:\n        oids.pop()\n    return oids\n\n@timer\ndef get_samples_standard(coll, count=1):\n    res = list(coll.aggregate([{\"$sample\": {\"size\": count}},{\"$project\":{\"_id\":1}}]))\n\n    return {value[\"_id\"] for value in res}\n\nfor i in [5,10,50]:\n    print(\"Collection size: {}, sample size: {}\".format(coll.estimated_document_count(), i))\n    get_sample_oids(coll,i)\n    get_samples_standard(coll,i)</code></pre><p>В результате отработки, получаем следующие результаты:</p><p><code>Collection size: 102316457, sample size: 5<br> get_sample_oids took 0.0247 secs<br> get_samples_standard took 2.9753 secs<br> Collection size: 102316457, sample size: 10<br> get_sample_oids took 0.0495 secs<br> get_samples_standard took 3.2230 secs<br> Collection size: 102316457, sample size: 50<br> get_sample_oids took 1.5310 secs<br> get_samples_standard took 3.2344 secs</code></p><p><strong>То есть для небольших выборок, скорость отличается на два порядка, что весьма и весьма неплохо!</strong></p><p>Понятно, что данный код не является идеально оптимизированным, что заметно на больших выборках. Здесь приходится тратить время на \"избегание\" разрывов и при попадании в разрыв повторно производить поиск нового идентификатора.</p><p>Если сделать модернизацию алгоритма, в которой единожды найденные разрывы будут запоминаться и не участвовать в дальнейшем для выбора случайных значений идентификатора - то скорость не будет падать и на больших выборках тоже.</p><p>Также, следует отметить, что вся эта канитель со случайными выборками может вообще перестать быть проблемой, если сразу принять за правило при внесении документа в коллекцию базы MongoDB формировать идентификатор не по умолчанию, а свой собственный, уникальный, инкрементальный.</p><p>Но... Всякое бывает в жизни и имеет право на жизнь. К разработанному алгоритму это тоже относится.</p><p>:)</p><p></p>', 2, '2023-06-12 21:52:49', 622794, 72, '/ru/companies/stc_spb/articles/735512/', 'Привет, я Алексей, QA Automation Engineer в команде «Интеграции» в Петрович-ТЕХ. Занимаюсь разработкой фреймворка автоматизированного тестирования сервисов интеграции, для REST и SOAP. Наблюдение: когда приходишь на собеседование на должность Junior QA Automation, то обязательно просят разработать автотесты для API. Звучит логично, но не так уж и просто: когда только начинаешь свой путь в автотестировании, тебе не всегда очевидно, как должен выглядеть рабочий тестовый фреймворк, из чего он должен состоять, как правильно написать тесты, а к ним тестовые данные. «Сырые» тесты, которые описывают в книгах и разных источниках – не всегда выручают.В этой статье расскажу о разработке типового фреймворка для тестирования API – на Python, с нуля, шаг за шагом. В итоге получим полностью готовый тестовый фреймворк – надеюсь, с его помощью вы сможете сделать тестовое задание для собеседования или просто улучшить ваш уже действующий тестовый фреймворк.Надеюсь, статья будет интересна начинающим авто-тестировщикам и тем, кто уже разрабатывает автотесты для API.'),
(119, 'Разбираемся с основами автотестирования: пошаговая инструкция по созданию собственного фреймворка для проверки API', '<figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/86b/806/3fb/86b8063fbf77f459a1db5a194aa669b5.png\" width=\"3000\" height=\"1500\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/86b/806/3fb/86b8063fbf77f459a1db5a194aa669b5.png\"></figure><p>Привет, я Алексей, QA Automation Engineer в команде «Интеграции» в Петрович-ТЕХ. Занимаюсь разработкой фреймворка автоматизированного тестирования сервисов интеграции, для REST и SOAP. </p><p>Наблюдение: когда приходишь на собеседование на должность Junior QA Automation, то обязательно просят разработать автотесты для API. Звучит логично, но не так уж и просто: когда только начинаешь свой путь в автотестировании, тебе не всегда очевидно, как должен выглядеть рабочий тестовый фреймворк, из чего он должен состоять, как правильно написать тесты, а к ним тестовые данные. «Сырые» тесты, которые описывают в книгах и разных источниках – не всегда выручают.</p><p>В этой статье расскажу о разработке типового фреймворка для тестирования API – на Python, с нуля, шаг за шагом. В итоге получим полностью готовый тестовый фреймворк – надеюсь, с его помощью вы сможете сделать тестовое задание для собеседования или просто улучшить ваш уже действующий тестовый фреймворк.</p><p>Надеюсь, статья будет интересна начинающим авто-тестировщикам и тем, кто уже разрабатывает автотесты для API.</p><hr><h3>Постановка задачи </h3><p>Для наших целей воспользуемся открытым API – <a href=\"https://reqres.in/\"><u>ReqRes</u></a>.</p><p>В статье я не буду описывать все методы выбранного API; ограничусь методами CRUD, как основными. Для примера этого будет вполне достаточно; для других методов делается по образу и подобию. </p><p>Методы, для которых будем писать тесты: Get, Post, Put, Delete.</p><p>Репозиторий проекта: <a href=\"https://github.com/ScaLseR/petrovich_test\"><u>https://github.com/ScaLseR/petrovich_test</u></a>.</p><p>С вводными условиями определились, давайте приступать.</p><h3>Реализуем основной класс API</h3><p>В корне проекта создадим директорию «api», а в ней – файл «api.py». Опишем там основной класс для работы с API – там будет реализована логика отправки запросов и будет обрабатываться полученный ответ. Класс так и назовем – «Api». </p><pre><code class=\"python\">class Api:\n    \"\"\"Основной класс для работы с API\"\"\"\n    _HEADERS = {\'Content-Type\': \'application/json; charset=utf-8\'}\n    _TIMEOUT = 10\n    base_url = {}\n\n    def __init__(self):\n        self.response = None</code></pre><p>В корне проекта добавлен файл requirements.txt, в котором будем хранить список необходимых библиотек. </p><p>Библиотеки, с которыми будем работать: </p><pre><code class=\"python\">import allure\nimport requests\nfrom jsonschema import validate</code></pre><p>Requests – поможет нам с отправкой запросов и получением ответов.</p><p>Allure – добавит в наш проект возможность формирования отчетов в Allure. Это позволит получать удобный, хорошо читаемый отчет о тестировании. </p><p>Jsonschema – отсюда импортируем функцию validate, для реализации проверки на соответствие схеме.</p><p>В нашем классе Api реализуем функциональность отправки запросов и получения ответов. Для POST-запроса код будет выглядеть следующим образом:</p><pre><code class=\"python\">    def post(self, url: str, endpoint: str, params: dict = None,\n             json_body: dict = None):        \n            self.response = requests.post(url=f\"{url}{endpoint}\",\n                                          headers=self._HEADERS,\n                                          params=params,\n                                          json=json_body,\n                                          timeout=self._TIMEOUT)\n        return self</code></pre><p>Добавим \"@allure.step” – будем передавать шаги в наш Allure-отчёт. </p><pre><code class=\"python\">@allure.step(\"Отправить POST-запрос\")\ndef post(self, url: str, endpoint: str, params: dict = None,\n         json_body: dict = None):\n    with allure.step(f\"POST-запрос на url: {url}{endpoint}\"\n                     f\"\\n тело запроса: \\n {json_body}\"):\n        self.response = requests.post(url=f\"{url}{endpoint}\",\n                                      headers=self._HEADERS,\n                                      params=params,\n                                      json=json_body,\n                                      timeout=self._TIMEOUT)    \n    return self</code></pre><p>Дополнительно будем логировать requests и responses. Для этого добавим в проект директорию «helper» – там будут содержаться все наши дополнительные модули. Напишем первый модуль для логирования – logger.py.</p><pre><code class=\"python\">\"\"\"Модуль логирования\"\"\"\nimport logging\n\nlogger = logging.getLogger()\nlogger.setLevel(logging.INFO)\n\ndef log(response, request_body=None):\n    logger.info(f\"REQUEST METHOD: {response.request.method}\")\n    logger.info(f\"REQUEST URL: {response.url}\")\n    logger.info(f\"REQUEST HEADERS: {response.request.headers}\")\n    logger.info(f\"REQUEST BODY: {request_body}\\n\")\n    logger.info(f\"STATUS CODE: {response.status_code}\")\n    logger.info(f\"RESPONSE TIME: {response.elapsed.total_seconds() * 1000:.0f} ms\\n\")\n    logger.info(f\"RESPONSE HEADERS: {response.headers}\")\n    logger.info(f\"RESPONSE BODY: {response.text}\\n.\\n.\")</code></pre><p>Модуль готов, добавим его использование в наш класс Api:</p><pre><code class=\"python\">from helper.logger import log</code></pre><p>Добавим логирование для наших методов; код метода POST будет иметь следующий вид:</p><pre><code class=\"python\">@allure.step(\"Отправить POST-запрос\")\ndef post(self, url: str, endpoint: str, params: dict = None,\n         json_body: dict = None):\n    with allure.step(f\"POST-запрос на url: {url}{endpoint}\"\n                     f\"\\n тело запроса: \\n {json_body}\"):\n        self.response = requests.post(url=f\"{url}{endpoint}\",\n                                      headers=self._HEADERS,\n                                      params=params,\n                                      json=json_body,\n                                      timeout=self._TIMEOUT)\n    log(response=self.response, request_body=json_body)\n    return self</code></pre><p>Отлично, теперь мы можем отправлять реквесты с нужными данными и получать респонсы. </p><p>Для проверки полученных респонсов в тестах нам понадобятся ассерты, их также добавим в основной класс Api. Добавим несколько самых основных.  </p><ul><li><p><strong>На соответствие статус-кода</strong></p></li></ul><pre><code class=\"python\">@allure.step(\"Статус-код ответа равен {expected_code}\")\ndef status_code_should_be(self, expected_code: int):\n    \"\"\"Проверяем статус-код ответа actual_code на соответствие expected_code\"\"\"\n    actual_code = self.response.status_code\n    assert expected_code == actual_code, f\"\\nОжидаемый результат: {expected_code} \" \\\n                                         f\"\\nФактический результат: {actual_code}\"\n    return self</code></pre><ul><li><p><strong>На соответствие ответа json-схеме</strong></p></li></ul><pre><code class=\"python\">@allure.step(\"ОР: Cхема ответа json валидна\")\ndef json_schema_should_be_valid(self, path_json_schema: str, name_json_schema: str = \'schema\'):\n    \"\"\"Проверяем полученный ответ на соответствие json-схеме\"\"\"\n    json_schema = load_json_schema(path_json_schema, name_json_schema)\n    validate(self.response.json(), json_schema)\n    return self</code></pre><p>Для реализации проверки ответа на соответствие схеме необходимо добавить в наш «helper» ещё один модуль – load.py. В нём добавим функцию load_json_schema – для подгрузки нужной json-схемы из файла. Модуль будет иметь вид:</p><pre><code class=\"python\">\"\"\"Модуль для работы с файлами\"\"\"\nfrom importlib import import_module\n\ndef load_json_schema(path: str, json_schema: str = \'schema\'):\n    \"\"\"Подгрузка json-схемы из файла\"\"\"\n    module = import_module(f\"schema.{path}\")\n    return getattr(module, json_schema)</code></pre><p>Не забываем добавить новый модуль из «helper» в класс Api.</p><pre><code class=\"python\">from helper.load import load_json_schema</code></pre><ul><li><p><strong>На соответствие объектов</strong> </p></li></ul><p>Будем десериализировать полученный ответ в объект и сравнивать с эталонным.</p><pre><code class=\"python\">@allure.step(\"ОР: Объекты равны\")\ndef objects_should_be(self, expected_object, actual_object):\n    \"\"\"Сравниваем два объекта\"\"\"\n    assert expected_object == actual_object, f\"\\nОжидаемый результат: {expected_object} \" \\\n                                             f\"\\nФактический результат: {actual_object}\"\n    return self</code></pre><ul><li><p><strong>На соответствие значения для определенного параметра</strong></p></li></ul><pre><code class=\"python\">@allure.step(\"ОР: В поле ответа содержится искомое значение\")\ndef have_value_in_response_parameter(self, keys: list, value: str):\n    \"\"\"Сравниваем значение необходимого параметра\"\"\"\n    payload = self.get_payload(keys)\n    assert value == payload, f\"\\nОжидаемый результат: {value} \" \\\n                                 f\"\\nФактический результат: {payload}\"\n    return self</code></pre><p>Для получения значения нужного параметра из респонса – добавим ещё один метод класса Api. </p><pre><code class=\"python\">def get_payload(self, keys: list):\n    \"\"\"Получаем payload, переходя по ключам,\n    возвращаем полученный payload\"\"\"\n    response = self.response.json()\n    payload = self.json_parser.find_json_vertex(response, keys)       \n    return payload</code></pre><p>Для корректной работы метода get_payload добавим в наш “helper” модуль parser.py:</p><pre><code class=\"python\">\"\"\"Модуль для парсинга данных\"\"\"\nfrom typing import Union\n\ndef get_data(keys: Union[list, str], data: Union[dict, list]):\n    \"\"\"Получение полезной нагрузки по ключам,\n    если нагрузки нет, возвращаем пустой dict\"\"\"\n    body = data\n    for key in keys:\n        try:\n            body = body[key]\n            if body is None:\n                return {}\n        except KeyError:\n            raise KeyError(f\'Отсутствуют данные для ключа {key}\')\n    return body</code></pre><p>Не забываем добавить новый модуль из «helper» в класс «Api»:</p><pre><code class=\"python\">from helper.parser import get_data</code></pre><p>Вы скорее всего уже заметили, что каждый метод класса «Api» возвращает self; чуть ниже увидим, почему так и насколько это удобно. </p><h3>Основной класс готов, что дальше </h3><p>Можно сказать, что самая большая и сложная работа к этому моменту уже проведена; «скелет» фреймворка сформирован. Осталось нарастить «мясо»:</p><ul><li><p>класс-коннектор для тестируемого API с описанием методов;</p></li><li><p>файлы моделей – дата-классы для реквеста и респонса;</p></li><li><p>json-схемы респонса;</p></li><li><p>фикстуры;</p></li></ul><p>И финальное – нужно будет написать сами тесты.</p><p>Приступим к класс-коннектору. Создадим в директории «api» директорию «reqres». В ней создадим файл «reqres_api.py» – собственно, наш коннектор к тестируемому API. Пропишем URL, Endpoint и методы взаимодействия с API. </p><p>Код нашего класса, на примере с post-запросом:</p><pre><code class=\"python\">class ReqresApi(Api):\n\n    \"\"\"URl\"\"\"\n    _URL = \'https://reqres.in\'\n\n    \"\"\"Endpoint\"\"\"\n    _ENDPOINT = \'/api/users/\'\n\n@allure.step(\'Обращение к create\')\ndef reqres_create(self, param_request_body: RequestCreateUserModel):\n    return self.post(url=self._URL,\n                     endpoint=self._ENDPOINT,\n                     json_body=param_request_body.to_dict())</code></pre><p>Теперь нужно создать дата-классы, в которых будет содержаться модель данных.</p><p>Сделаем новую директорию «model», внутри директории – файлы с моделями для наших данных.</p><p>Пример моделей данных для метода create:</p><pre><code class=\"python\">\"\"\"Модели для create user\"\"\"\nfrom dataclasses import dataclass, asdict\n\n@dataclass\nclass RequestCreateUserModel:\n    \"\"\"Класс для параметров request\"\"\"\n    name: str\n    job: str\n\n    def to_dict(self):\n        \"\"\"преобразование в dict для отправки body\"\"\"\n        return asdict(self)\n\n@dataclass\nclass ResponseCreateUserModel:\n    \"\"\"Класс для параметров респонса\"\"\"\n    name: str\n    job: str\n    last_name: str\n    id: str\n    created_at: str</code></pre><p>Добавим использование моделей в класс «ReqresApi»:</p><pre><code class=\"python\">from model.reqres.create_model import RequestCreateUserModel, \nResponseCreateUserModel</code></pre><p>Модели готовы и добавлены. Теперь самое время сделать десериализацию полученного респонса в объект данных, для использования в тестах. </p><p>Например, код метода десериализации для “single user” будет иметь следующий вид:</p><pre><code class=\"python\">\"\"\"Собираем респонс в объект для последующего использования\"\"\"\ndef deserialize_single_user(self):\n    \"\"\"для метода get (single user)\"\"\"\n    payload = self.get_payload([])\n    return ResponseSingleUserModel(id=payload[\'data\'][\'id\'],\n                                   email=payload[\'data\'][\'email\'],\n                                   first_name=payload[\'data\'][\'first_name\'],\n                                   last_name=payload[\'data\'][\'last_name\'],\n                                   avatar=payload[\'data\'][\'avatar\'],\n                                   url=payload[\'support\'][\'url\'],\n                                   text=payload[\'support\'][\'text\'])</code></pre><p>Если потребуется, сделаем по аналогии для остальных методов.</p><p>Следующим нашим шагом будет создание json-схем для проверки респонса. В корне проекта создаем директорию «schema», где будут находиться схемы ответов.</p><p>Схема для «single user»:</p><pre><code class=\"python\">\"\"\"Схема для ReqRes API, single user\"\"\"\n\nschema = {\n  \"type\": \"object\",\n  \"properties\": {\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"integer\"\n        },\n        \"email\": {\n          \"type\": \"string\"\n        },\n        \"first_name\": {\n          \"type\": \"string\"\n        },\n        \"last_name\": {\n          \"type\": \"string\"\n        },\n        \"avatar\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"email\",\n        \"first_name\",\n        \"last_name\",\n        \"avatar\"\n      ]\n    },\n    \"support\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"url\": {\n          \"type\": \"string\"\n        },\n        \"text\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"url\",\n        \"text\"\n      ]\n    }\n  },\n  \"required\": [\n    \"data\",\n    \"support\"\n  ]\n}\n</code></pre><p>Следующий шаг – написать фикстуру, которая будет передавать в тесты экземпляр класс-коннектора «ReqresApi». В корне проекта создаем директорию «fixture».</p><p>Код фикстуры:</p><pre><code class=\"python\">\"\"\"Фикстуры ReqRes API\"\"\"\nimport pytest\nfrom api.reqres.reqres_api import ReqresApi\n\n@pytest.fixture(scope=\"function\")\ndef reqres_api() -&gt; ReqresApi:\n    \"\"\"Коннект к ReqRes API\"\"\"\n    return ReqresApi()</code></pre><p>Всё готово – можно переходить к тестам!</p><h3>Пишем тесты </h3><p>В наш модуль «load.py» добавим метод для подгрузки данных непосредственно в тесты; будем параметризировать.</p><pre><code class=\"python\">def load_data(path: str, test_data: str = \'data\'):\n    \"\"\"Подгрузка из файла тестовых данных для параметризации тестов\"\"\"\n    module = import_module(f\"data.{path}\")\n    return getattr(module, test_data)</code></pre><p>Добавим в корень проекта директорию «test», внутри – файл «test_single_user.py». Пример кода файла:</p><pre><code class=\"python\">\"\"\"Тест кейс для ReqRes API, single user\"\"\"\nimport allure\nimport pytest\nfrom helper.load import load_data\n\npytest_plugins = [\"fixture.reqres_api\"]\npytestmark = [allure.parent_suite(\"reqres\"),\n              allure.suite(\"single_user\")]\n\n@allure.title(\'Запрос получения данных пользователя с невалидным значением\')\n@pytest.mark.parametrize((\'user_id\', \'expected_data\'),\n                         load_data(\'single_user_data\', \'not_valid_data\'))\ndef test_single_user_wo_parameters(reqres_api, user_id, expected_data):\n    reqres_api.reqres_single_user(user_id).status_code_should_be(404).\\\n        have_value_in_response_parameter([], expected_data)\n\n@allure.title(\'Запрос получения данных пользователя с валидным значением\')\n@pytest.mark.parametrize((\'user_id\', \'expected_data\'),\n                         load_data(\'single_user_data\'))\ndef test_single_user_valid_parameters(reqres_api, user_id, expected_data):\n    reqres_api.reqres_single_user(user_id).status_code_should_be(200).\\\n        json_schema_should_be_valid(\'single_user_schema\').\\\n        objects_should_be(expected_data, reqres_api.deserialize_single_user())</code></pre><p>У нас получились два универсальных теста: </p><ol><li><p>для невалидных параметров, с проверкой кода ответа и тела ответа;</p></li><li><p>для валидных значений: проверяем код ответа на соответствие json-схеме, десериализуем результат в объект, сравниваем его с эталонным (код остальных тестов можно посмотреть в репозитории).</p></li></ol><p>Надеюсь, по коду тестов понятно, почему методы класса «Api» возвращают объект. Тут всё дело в том, что это позволяет довольно красиво и лаконично писать код теста, вызывая последовательно нужные методы класса и выполняя проверки. </p><p>Параметризацию тестов вывели в отдельный файл, чтобы не перегружать наш код тестовыми данными; в этом есть свои плюсы. При изменении тестовых данных их достаточно будет поправить только в одном месте – файле данных. При этом не проверять весь код и исправлять в самих тестах, что бывает проблематично. </p><p>Создадим файл данных для наших тестов. Добавим в корень проекта директорию «data»; внутри – файл «test_single_user.py». </p><p>Пример кода файла:</p><pre><code class=\"python\">\"\"\"Дата-файл для тестирования КуйКуы API, single user\"\"\"\n# -*- coding: utf-8 -*-\nfrom model.reqres.single_user_model import ResponseSingleUserModel\n\n# эталонные модели данных для проверки в тестах\n# user_id = 2\nuser_id_2 = ResponseSingleUserModel(id=2, email=\'janet.weaver@reqres.in\', first_name=\'Janet\',\n                                    last_name=\'Weaver\', avatar=\'https://reqres.in/img/faces/2-image.jpg\',\n                                    url=\'https://reqres.in/#support-heading\',\n                                    text=\'To keep ReqRes free, contributions towards server costs are appreciated!\')\n\n# user_id = 3\nuser_id_3 = ResponseSingleUserModel(id=3, email=\'emma.wong@reqres.in\', first_name=\'Emma\',\n                                    last_name=\'Wong\', avatar=\'https://reqres.in/img/faces/3-image.jpg\',\n                                    url=\'https://reqres.in/#support-heading\',\n                                    text=\'To keep ReqRes free, contributions towards server costs are appreciated!\')\n\n# Валидные данные для тестов (\'user_id\', \'expected_data\')\ndata = ((2, user_id_2), (3, user_id_3))\n\n# пустое тело ответа\nempty_data = {}\n\n# Невалидные данные для тестов (\'user_id\', \'expected_data\')\nnot_valid_data = ((129398274923874, empty_data),\n                  (\'test\', empty_data),\n                  (\'роывора\', empty_data))</code></pre><h3>Прогоняем тесты </h3><p>Запустим наши тесты в консоли и посмотрим на полученный результат:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/3f2/4ae/89e/3f24ae89e828a9ae818587bd309db9ee.png\" alt=\"\" title=\"\" width=\"654\" height=\"215\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/3f2/4ae/89e/3f24ae89e828a9ae818587bd309db9ee.png\"></figure><p>Тесты прошли, но получили не такой красивый отчёт, как можно было ожидать. Запустим тестовый прогон с формированием Allure-отчёта. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/4f9/38a/3d8/4f938a3d8fd0af71b5aa89828340d18e.png\" alt=\"\" title=\"\" width=\"754\" height=\"848\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/4f9/38a/3d8/4f938a3d8fd0af71b5aa89828340d18e.png\"></figure><p>Тесты прошли, отчёт сформирован в папке allure_report. Откроем отчёт в локальном Allur.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/8c6/e2e/a90/8c6e2ea90f5e3945866b87a22a91d033.png\" alt=\"\" title=\"\" width=\"936\" height=\"588\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/8c6/e2e/a90/8c6e2ea90f5e3945866b87a22a91d033.png\"></figure><p>Видим: было 17 тестов, все из них имеют статус “passed”.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/45d/9e0/ff8/45d9e0ff8d179bfa37af20b577f6c738.png\" alt=\"\" title=\"\" width=\"934\" height=\"460\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/45d/9e0/ff8/45d9e0ff8d179bfa37af20b577f6c738.png\"></figure><p>На странице Suites наши тесты красиво разложены.</p><p>Плюс, для каждого теста имеем довольно информативный лог:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/cdf/7e8/3a6/cdf7e83a623c2aefb9f43e9854684f36.png\" alt=\"\" title=\"\" width=\"936\" height=\"970\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/cdf/7e8/3a6/cdf7e83a623c2aefb9f43e9854684f36.png\"></figure><h3>Сохранить: чеклист по созданию фреймворка для тестирования API</h3><p>Итого, на пути создания нашего фреймворка мы прошли такие шаги:</p><ul><li><p>завели директорию «api» и файл «api.py» – для работы с классом “Api”;</p></li><li><p>сделали файл requirements.txt – хранить список необходимых библиотек;</p></li><li><p>написали код отправки запросов и получения ответов;</p></li><li><p>добавили логирование</p><ul><li><p>реквестов и респонсов</p></li><li><p>методов </p></li></ul></li><li><p>завели ассерты</p><ul><li><p>статус-код</p></li><li><p>json-схема </p></li><li><p>объекты</p></li><li><p>значения для определенного параметра</p></li></ul></li><li><p>сделали класс для получения значения нужного параметра из респонса</p></li><li><p>в дополнение к основному классу завели</p><ul><li><p>класс-коннектор для тестируемого API с описанием методов;</p></li><li><p>файлы моделей – дата-классы для реквеста и респонса;</p></li><li><p>json-схемы респонса;</p></li><li><p>фикстуры</p></li></ul></li><li><p>написали тесты</p><ul><li><p>для невалидных параметров, с проверкой кода ответа и тела ответа;</p></li><li><p>для валидных значений</p></li></ul></li><li><p>прогнали тесты </p><ul><li><p>по умолчанию</p></li><li><p>с формированием Allure-отчёта	</p></li></ul></li></ul><p>Иметь под рукой чеклист – отправная точка. Кроме этого и остальных чеклистов, на пути начинающего автотестировщика будет ещё много всего: книги, статьи, видео, возможно какие-нибудь обучающие курсы; вопросы коллегам, обсуждения в тематических чатах и пабликах.</p><p>На мой взгляд залог успеха тут заключается в том, чтобы пробовать. Даже если не всё понятно, даже если не на все вопросы есть ответы – чем раньше начнёшь делать руками, тем раньше разберёшься. Пусть по шаблону прямым копированием шагов, пусть без глубокого понимания методологии – но делать руками как можно раньше. </p><p>Чеклист сработает как ожидалось – отлично, значит, статья была не зря. Получится найти или придумать более оптимальный чеклист – ещё лучше! Главное – пробовать. </p><p>Успехов вам в автотестировании! </p><p></p>', 3, '2023-06-12 21:52:49', 337442, 74, '/ru/companies/petrovich/articles/740050/', 'Целью данной статьи является описание моей квалификационной работы при получении профессии Data Scientist. Поскольку профессиональная деятельность до этого не была прямо связана с направлением ML, тема итоговой работы получилась несколько академической. Как известно, для успешной работы системы детекции и классификации (СДК) с применением технологии компьютерного зрения необходим большой объем данных, в том числе разметка объектов на изображении. Такая предварительная подготовка трудоемка и длительна. До сих пор работа по разметке объектов для создания обучающей выборки проводится в ручном режиме, хотя уже применяется и определенная автоматизация. Один из возможных вариантов такой автоматизации и был рассмотрен в работе. ');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(120, 'Детекция и классификация заданных предметов по изображениям с разделением модели и данных', '<h3>0. Введение</h3><p>Целью данной статьи является описание моей квалификационной работы при получении профессии Data Scientist. Поскольку профессиональная деятельность до этого не была прямо связана с направлением ML, тема итоговой работы получилась несколько академической. </p><p>Как известно, для успешной работы системы детекции и классификации (СДК) с применением технологии компьютерного зрения необходим большой объем данных, в том числе разметка объектов на изображении. Такая предварительная подготовка трудоемка и длительна. До сих пор работа по разметке объектов для создания обучающей выборки проводится в ручном режиме, хотя уже применяется и определенная автоматизация. Один из возможных вариантов такой автоматизации и был рассмотрен в работе. </p><p>Для уменьшения затрат на создание СДК предлагается использовать два типа данных:</p><ol><li><p>сгенерированные изображения с 3D-моделями распознаваемых предметов и данные для их разметки, полученные на автоматизированных средствах проектирования (САПР),</p></li><li><p>фотографии самих распознаваемых объектов.</p></li></ol><p>Первый тип данных содержит полученную автоматически разметку предметов и их изображение для обучения модели детекции. Успешность применения таких данных зависит от степени детализации и правдоподобия заранее разработанных 3D-моделей объектов, возможностей САПР по настройке произвольности генерирования 3D схем (количество объектов, их размещение и ориентация в пространстве с учетом избегания коллизий пересечения) и качества рендеринга изображений (с учётом подходящего фона).</p><p>Другое принципиальное предположение заключается в применении двух разных моделей:</p><ol><li><p>Модель 1 детекции, обученной на данных первого типа,</p></li><li><p>Модель 2 классификации, обучающаяся и работающая по данным второго типа после их детекции моделью 1.</p></li></ol><p>Такой подход, предположительно, позволит при изменении характеристик или типов предметов (конечно, в некоторых пределах), характеристик изображений предметов использовать модель 1 без переобучения, т.е. без необходимости изменения в данных первого типа.</p><p><strong>            Таким образом, целью работы </strong>является<strong> </strong>разработка прототипа системы (см. рис.1) и исследование возможности разделения моделей и данных СДК для уменьшения затрат создания исходных данных.</p><p>            Решаемые задачи в работе:</p><ol><li><p>Выбор набора данных (dataset 1) со сгенерированными изображениями 3D моделей предметов и данных по их размещению.</p></li><li><p>Выбор модели детекции и адаптация её под имеющиеся данные.</p></li><li><p>Выбор набора данных (dataset 2) изображений с реальными предметами для их классификации и совпадающего форм-фактора с dataset 1.</p></li><li><p>Выбор модели классификации и адаптация её под имеющиеся данные.</p></li><li><p>Изучение возможности совместной работы моделей на общих данных.</p></li><li><p>Настройка двух моделей для работы в системе.</p></li><li><p>Тестирование работы моделей на собственном наборе данных.</p></li></ol><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/de4/8a7/143/de48a7143ddacdb72bf5919abbed8556.png\" alt=\"Рис. 1 Схема прототипа системы детекции и классификации.\" title=\"Рис. 1 Схема прототипа системы детекции и классификации.\" width=\"1675\" height=\"917\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/de4/8a7/143/de48a7143ddacdb72bf5919abbed8556.png\"><div><figcaption>Рис. 1 Схема прототипа системы детекции и классификации.</figcaption></figure><h3>1. Выбор набора данных (dataset 1) со сгенерированными изображениями 3D-моделей предметов и данных по их размещению</h3><p> Критериями поиска данных являлись наличие сгенерированных вариантов изображений и информации по разметке классифицируемых предметов средствами автоматизированного проектирования, наличие их в достаточном количестве, простота и доступность предметов. Удачным совпадением удовлетворения таких требований явились всем известные кубики конструктора фирмы Lego®.</p><p>Для первой модели  были выбраны данные <a href=\"https://www.kaggle.com/datasets/mantasgr/synthetic-lego-brick-dataset-for-object-detection\" rel=\"noopener noreferrer nofollow\">«Synthetic Lego brick dataset for object detection»</a>. </p><p>Данные состоят из 3047 сгенерированных изображений деталей Lego разрешением 300х300 с применением 5 типов фонов. Изображения содержат в совокупности 9083  деталей 6-ти типов (см. рис.2). Первые 500 изображений представляют собой отдельные детали Lego каждого типа, визуализированные под разными углами с использованием разных фонов, цвета и вариации теней. Остальные изображения состоят из нескольких деталей. К каждому изображению имеется xml-файл с параметрами деталей на картинке. 3D изображения кубиков Lego получены автоматизировано автором dataset с <a href=\"https://www.mecabricks.com/\" rel=\"noopener noreferrer nofollow\">ПО Mecabricks</a>.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/9fc/5dc/d6f/9fc5dcd6f28765963749d884b8f47633.png\" alt=\"Рис.2 Графические и xml данные dataset №1.\" title=\"Рис.2 Графические и xml данные dataset №1.\" width=\"1742\" height=\"798\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/9fc/5dc/d6f/9fc5dcd6f28765963749d884b8f47633.png\"><div><figcaption>Рис.2 Графические и xml данные dataset №1.</figcaption></figure><h3>2. Выбор модели детекции и адаптация её под имеющиеся данные</h3><p>За основу был взят вариант модели детекции на сверточной нейронной сети VGG16, рассмотренный как пример в ходе обучения профессии.</p><p>from tensorflow.keras.applications import vgg16</p><p>MG_HEIGHT = 300</p><p>IMG_WIDTH = 300</p><p>features = vgg16.VGG16(weights=\'imagenet\',</p><p>                       include_top=False,</p><p>                       input_shape=(IMG_HEIGHT, IMG_WIDTH, 3))</p><p><code># дообучаем последние 5 слоев</code></p><p><code>for layer in features.layers[:-5]:</code></p><p><code>    layer.trainable = False</code></p><p><code>feature_tensor = features.layers[-1].output</code></p><p><code># Добавляем выход детектора</code></p><p><code>output = tf.keras.layers.BatchNormalization()(feature_tensor)</code></p><p><code>output = tf.keras.layers.Conv2D(5,</code></p><p><code>                                kernel_size=(1, 1), </code></p><p><code>                                activation=\'linear\',</code></p><p><code>                                kernel_regularizer=\'l2\')(output)</code></p><p><code>model = tf.keras.models.Model(inputs=features.inputs, outputs=output)</code></p><p><code>model.summary()</code></p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/bbc/fb3/e3c/bbcfb3e3cfb48b7403541f8c30baa073.png\" width=\"356\" height=\"507\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/bbc/fb3/e3c/bbcfb3e3cfb48b7403541f8c30baa073.png\"></figure><p>Для работы модели имеется функция кодирования (encode_anchors) разметки в формате, удобном для нейронной сети. Заданные в исходных данных координаты рамки преобразуется с учетом параметров сетки якорей и наилучшими по критерию Intersection over Union (IoU). Обратная функции парсинга этого кодирования (decode_prediction) служит для получения графического представления расчетной разметки. </p><p>На входе модели – изображение, выходное значение модели параметр размерностью пять каналов: вероятность, что объект находиться в рамке, и четыре параметра геометрии рамки.</p><p>Функция потерь модели состоит из двух слагаемых – бинарной кросс энтропии для определения имеется ли объект в рамке и smooth_L1 – определяет, насколько хорошо предсказываются размеры рамки. Разработана функция метрики IoU (для определения соответствия между исходными рамками и рассчитанными применен метод косинусного расстояния по координатам).</p><p>В ходе различных экспериментов были подобраны оптимальные размеры входных изображений и сетки якорей. В итоге выборка была разделена 95% train и 5% test. В тест соответственно попали 152 изображения в совокупности с 509 деталями, метрика IoU = 0.83, включая 27 пропусков (см. рис.3). На рис.4 показан результат работы функции визуализации детекции для выборки test.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/231/ae6/1ed/231ae61ed45e7505c80fa02ea0a53347.png\" alt=\"Рис. 3. Гистограмма распределения метрики IoU.\" title=\"Рис. 3. Гистограмма распределения метрики IoU.\" width=\"519\" height=\"371\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/231/ae6/1ed/231ae61ed45e7505c80fa02ea0a53347.png\"><div><figcaption>Рис. 3. Гистограмма распределения метрики IoU.</figcaption></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/818/ca5/9ab/818ca59ab67f0d400a2593ba4674419a.png\" alt=\"Рис. 4. Пример результата модели детекции, зеленая рамка «истинная» детекция, красная - расчетная.\" title=\"Рис. 4. Пример результата модели детекции, зеленая рамка «истинная» детекция, красная - расчетная.\" width=\"1277\" height=\"895\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/818/ca5/9ab/818ca59ab67f0d400a2593ba4674419a.png\"><div><figcaption>Рис. 4. Пример результата модели детекции, зеленая рамка «истинная» детекция, красная - расчетная.</figcaption></figure><h3>3. Выбор набора данных (dataset 2) изображений с реальными предметами для их классификации</h3><p>Для модели классификации был найден набор данных <a href=\"https://www.kaggle.com/datasets/pacogarciam3/lego-brick-sorting-image-recognition\" rel=\"noopener noreferrer nofollow\">«Lego Brick Sorting - Image Recognition»</a>. </p><p>Набор изображений деталей Lego создан в рамках реальной любительской сортировочной установки 20-ти типов деталей Lego, по 4580 файлов (в среднем 230в каждом типе) в двух классах. Класс Base Images (BI) – набор изображений разрешением 640х480 с одиночными детали по центру (см. рис.5). Деталь каждого типа представлена в разных цветах, положениях и ориентациях. Класс Crop Images (CI) – вырезанные изображения деталей из Base Images (см. рис 6). Изображения без постоянного разрешения, большую часть площади на них занимает деталь. Файлы разбиты на соответствующие директории, названия которых и являются набором названий для классификации.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/de4/191/3a9/de41913a9976b3fe1005b19d82513165.png\" alt=\"Рис. 5. Пример изображений Base Images.\" title=\"Рис. 5. Пример изображений Base Images.\" width=\"1766\" height=\"361\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/de4/191/3a9/de41913a9976b3fe1005b19d82513165.png\"><div><figcaption>Рис. 5. Пример изображений Base Images.</figcaption></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/428/6cc/db3/4286ccdb340aa549d541e75fa55a5d06.png\" alt=\"Рис. 6. Пример изображений Crop Images.\" title=\"Рис. 6. Пример изображений Crop Images.\" width=\"1766\" height=\"293\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/428/6cc/db3/4286ccdb340aa549d541e75fa55a5d06.png\"><div><figcaption>Рис. 6. Пример изображений Crop Images.</figcaption></figure><h3>4. Выбор модели классификации и адаптация её под имеющиеся данные</h3><p>Основные сложности работы были с выбором второй модели, поскольку, напомню, она должна обучиться на данных dataset №2, а классифицировать в итоге данные после детекции моделью 1. Кроме того, сегодня есть определенные трудности с предоставлением ресурсов на Colab и возможность многочисленных экспериментов проблематична.</p><p>После некоторых попыток была выбрана модель на базе<a href=\"https://www.kaggle.com/code/matthieupolan/autoencod-cosine/notebook\" rel=\"noopener noreferrer nofollow\"> «AutoEncod + cosine»</a>. </p><p>Модель является вариантом autoencoder, но выход encoder (95600 параметров) используются для поиска минимального косинусного расстояния по выборке train. Такой подход мне показался интересным.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/40a/d1d/1c6/40ad1d1c6dd9fbdbfc0f34a1d4b90776.png\" width=\"647\" height=\"701\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/40a/d1d/1c6/40ad1d1c6dd9fbdbfc0f34a1d4b90776.png\"></figure><p>После проведения многих вариантов расчета  итоговые данные следующие – использовались 14 типов деталей dataset №2, 3074 фото 120х120, на test 10%. Рассматривались только данные CI, т.к. выяснилось, что этот формат проще и правильнее получать из модели №1. Были написаны функции визуализации классификации для test и для внешних данных (из модели 1), а также функция расчета классификации Ypred по косинусному расстоянию.</p><p>Выборка обучения составила 2459 фото, выборка test – 615. Получена точность модели 87%. На рис.7 показан пример результата тестовой классификации. В заголовке фото указаны номер, расчетный тип детали и истинный. При их несовпадении цвет надписи красный.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/4c2/47d/fcc/4c247dfcc497208e9df05a1bbddc7212.png\" alt=\"Рис.7 Пример результата работы функции визуализации тестовой классификации.\" title=\"Рис.7 Пример результата работы функции визуализации тестовой классификации.\" width=\"1313\" height=\"932\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/4c2/47d/fcc/4c247dfcc497208e9df05a1bbddc7212.png\"><div><figcaption>Рис.7 Пример результата работы функции визуализации тестовой классификации.</figcaption></figure><h3>5. Изучение возможности совместной работы моделей на общих данных</h3><p>Для совместной работы двух моделей необходимы соответствующие рабочие данные – групповое изображение классифицируемых предметов. Для имитации таких данных в ручном режиме были созданы несколько изображений путем вставки картинок из набора CI на фото с фоном (было в комплекте Dataset №2).</p><p>После нескольких пробных вариантов были созданы 15 изображений 640х480 с 62 деталями в совокупности из всех 14 типов модели №2. Поскольку фон неоднородный, идеально вставить картинки не всегда получалось, что, возможно, может создавать помехи для моделей. </p><p>Для интеграции в Модели 1 написана функция визуализации детекции для внешних изображений с записью содержимого рамки в JPG-файл для последующего импорта Моделью 2.</p><p>Результат: (хорошая новость) детекция получилась, обнаружено 49 деталей – 79% (см. рис.8), но (плохая новость) практически все они были частично обрезаны (см. рис.9).</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/48f/487/e3a/48f487e3a7ba1b5b7ea75938682413db.png\" alt=\"Рис.8 Пример результата работы модели детекции на рабочих данных.\" title=\"Рис.8 Пример результата работы модели детекции на рабочих данных.\" width=\"1359\" height=\"889\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/48f/487/e3a/48f487e3a7ba1b5b7ea75938682413db.png\"><div><figcaption>Рис.8 Пример результата работы модели детекции на рабочих данных.</figcaption></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/25e/f88/f64/25ef88f64f98186505ffebd881c2b772.png\" alt=\"Рис.9 Пример результата работы функции экспорта данных детекции из модели 1.\" title=\"Рис.9 Пример результата работы функции экспорта данных детекции из модели 1.\" width=\"1812\" height=\"852\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/25e/f88/f64/25ef88f64f98186505ffebd881c2b772.png\"><div><figcaption>Рис.9 Пример результата работы функции экспорта данных детекции из модели 1.</figcaption></figure><h3>6. Настройка двух моделей для работы в системе</h3><p>Полученные первичные результаты нуждались в доработке. После ряда не принесших желаемого результата попыток изменений параметров модели НС (вариант моделей с одним каналом цвета, вариации параметра степени отсечения областей из рассмотрения, параметра сравнения с сигмойдом функций декодера) были разработаны функции по пост-обработке сегментации: </p><ul><li><p>расчет наличия отклонения цвета по всем канал между соседними точками от заданного,</p></li></ul><ul><li><p>анализ наличия отклонений по цвету на границе области детекции и нахождение величины смещения границы до однородной зоны (нет детали) по четырем сторонам области сегмента детекции,</p></li><li><p>дополнительные увеличения границы (разные эксперименты – одинаковое увеличение по периметру, дополнительное увеличение в сторону, где и если будет смещена граница).</p></li></ul><p>Применение таких функций, в ситуации с дефицитом расчетных ресурсов для доводки параметров НС, позволило существенно сократить время по достижению результата. На рис.10 показаны результаты детекции после пост-обработки.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/ea1/a58/9c5/ea1a589c5feedc274aec0827221b9dd1.png\" alt=\"Рис.10 Пример результата работы функции экспорта данных детекции из модели 1 с пост-обработкой.\" title=\"Рис.10 Пример результата работы функции экспорта данных детекции из модели 1 с пост-обработкой.\" width=\"1825\" height=\"848\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ea1/a58/9c5/ea1a589c5feedc274aec0827221b9dd1.png\"><div><figcaption>Рис.10 Пример результата работы функции экспорта данных детекции из модели 1 с пост-обработкой.</figcaption></figure><p>Полученные обработанные, не обрезанные изображения деталей были переданы во второю модель для классификации (проведено несколько итераций наладки). Итоговые результаты работы моделей:</p><ul><li><p>Модель 1: детектировано деталей – 48 шт. (77%),</p></li><li><p>Модель 2: правильно распознанных – 32 шт. (67%) (см. рис.11).</p></li></ul><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/81e/5fb/539/81e5fb539d30ea61a1a6135eee2055e0.png\" alt=\"Рис.11 Пример результата работы модели классификации. Крестиком отмечены ошибки.\" title=\"Рис.11 Пример результата работы модели классификации. Крестиком отмечены ошибки.\" width=\"1431\" height=\"926\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/81e/5fb/539/81e5fb539d30ea61a1a6135eee2055e0.png\"><div><figcaption>Рис.11 Пример результата работы модели классификации. Крестиком отмечены ошибки.</figcaption></figure><h3>7. Тестирование работы моделей на собственном наборе данных</h3><p>Большой интерес представляет возможность использования прототипа системы «в быту», на наборе данных, сделанных в домашних условиях. Для этого была исследована работа модели на самостоятельно сделанном наборе фотографий деталей Lego. </p><p>Были сфотографированы 10 типов деталей под разными углами, всего 137 фото (см рис.12). Для тестирования совместной работы моделей сфотографированы 21 групповые фотографии.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/022/c47/81a/022c4781ac4b5c66b3741ad7be5eee88.png\" alt=\"Рис.12 Примеры фотографий деталей, включая аугментированные.\" title=\"Рис.12 Примеры фотографий деталей, включая аугментированные.\" width=\"1789\" height=\"506\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/022/c47/81a/022c4781ac4b5c66b3741ad7be5eee88.png\"><div><figcaption>Рис.12 Примеры фотографий деталей, включая аугментированные.</figcaption></figure><p>Результат 1: </p><ul><li><p>Модель 2: обучение 110 деталей, Test 20%–27 деталей, точность 84%</p></li><li><p>Модель 1: 21 фото, 48 деталей, обнаружено 33 (69%) (см. рис.13), </p></li><li><p>Модель 2: классифицировано 11 (33%).</p></li></ul><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/d22/26b/de6/d2226bde6f41005084419cb5af4c996a.png\" alt=\"Рис.13 Результаты детекции деталей.\" title=\"Рис.13 Результаты детекции деталей.\" width=\"1511\" height=\"959\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d22/26b/de6/d2226bde6f41005084419cb5af4c996a.png\"><div><figcaption>Рис.13 Результаты детекции деталей.</figcaption></figure><p>Для увеличения точности модели проведено расширение данных методом аугментации – в dataset добавлены те же фото с поворотом на 90R и 90L для обучения и классификации.</p><p>Результат 2: </p><ul><li><p>Модель 2: обучение 328 деталей, Test 20%–82 деталей, точность 91%</p></li><li><p>Модель 1: 63 фото, 144 деталей, обнаружено 107 (74%), </p></li><li><p>Модель 2: классифицировано 88 (82%) (См. рис.14).</p></li></ul><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/612/e7b/58d/612e7b58d783b702a0413a6415175202.png\" alt=\"Рис.14 Пример результатов классификации деталей. Крестиком отмечены ошибки. \" title=\"Рис.14 Пример результатов классификации деталей. Крестиком отмечены ошибки. \" width=\"1447\" height=\"907\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/612/e7b/58d/612e7b58d783b702a0413a6415175202.png\"><div><figcaption>Рис.14 Пример результатов классификации деталей. Крестиком отмечены ошибки. </figcaption></figure><h3>8. Заключение</h3><p>В целом удалось реализовать поставленные задачи – организовать работу двух моделей – детекции и классификации, обученных на разных наборах данных – на синтезированных снимках 3D-моделей деталей с информацией для их сегментации и dataset с реальными изображениями классифицируемых деталей. Принципиальным моментов является большое различие наборов данных между собой – по типу деталей, цвету, количеству, фону и разрешению изображений. В результате удалось получить приемлемые результаты классификации разных данных без переобучения и изменений в модели детекции.</p><p>Конечно, полученный, по сути учебный, прототип СДК можно далее развивать по многим направлениям, например:</p><ul><li><p>увеличение количества и качества рабочих данных для тестирования системы, в идеале автоматизировать их создание на базе dataset №2 с информацией о типах деталей на изображениях,</p></li><li><p>настроить НС модели 1 для повышения качества детекции без внешних дополнительных функций обработки сегментации,</p></li><li><p>заменить модель 2 на более мощные конфигурации НС для классификации.</p></li></ul><p>Тем не менее надеюсь, что материал будет полезен, особенно для изучающих вопросы применения компьютерного зрения и ML вообще и как пример выбора темы для обучения. Желающим разобраться в моделях оставляю ссылку <a href=\"https://github.com/Aizatulin/Detection-and-classification\" rel=\"noopener noreferrer nofollow\">https://github.com/Aizatulin/Detection-and-classification</a>.</p><p><a href=\"https://github.com/Aizatulin/Detection-and-classification\" rel=\"noopener noreferrer nofollow\">classification</a> .</p><p></p>', 2, '2023-06-12 21:52:50', 412348, 72, '/ru/articles/740040/', 'В прошлой части мы поговорили про эволюцию DETR. А это значит, что сегодня самая пора  поговорить про другие варианты исполнения архитектуры и их нюансы.Материал для ТГ-канала “Варим ML”  ');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(121, 'Все DETRы мира: denoising queries и positive anchors. Часть 2', '<p>В прошлой части мы поговорили про эволюцию DETR. Сегодня продолжаем обсуждать вариации архитектуры и нюансы их имплементации.</p><p><a href=\"https://habr.com/ru/articles/736950/\" rel=\"noopener noreferrer nofollow\">Часть 1</a></p><p><a href=\"https://habr.com/ru/articles/740102/\" rel=\"noopener noreferrer nofollow\">Часть 3</a></p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b5f/4f1/f3d/b5f4f1f3d4d496cf565259d730048223.png\" alt=\"Я после 37-ой статьи\" title=\"Я после 37-ой статьи\" width=\"1600\" height=\"1200\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b5f/4f1/f3d/b5f4f1f3d4d496cf565259d730048223.png\"><div><figcaption>Я после 37-ой статьи</figcaption></figure><h3>Denoising queries</h3><p>DETR предложил новую архитектуру для детекции - с энкодером, декодером, positional queries, двумя типа этеншна. Но ещё одним ключевым нововведением стал уникальный one-to-one matching loss. Вместо матчинга нескольких предсказаний и одной GT-коробки, мы находим оптимальную комбинацию, которая даёт минимальный лосс. Есть ли у этого подхода недостатки? Оказалось, что да.</p><h3>DN-DETR (2022)</h3><p><a href=\"https://github.com/IDEA-Research/DN-DETR\" rel=\"noopener noreferrer nofollow\"><u>Код</u></a></p><p>111 цитирований, 412 звёздочек</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/9db/1d0/6d4/9db1d06d47f87883ca2225af6172d5f0.png\" width=\"1600\" height=\"512\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/9db/1d0/6d4/9db1d06d47f87883ca2225af6172d5f0.png\"></figure><p>В начале обучения DETR часто выдаёт не очень качественные предсказания и большое количество дубликатов. Это приводит к тому, что оптимальный матчинг между queries и GT-боксами очень нестабилен - небольшое изменение весов сетки может привести к абсолютному другому матчингу. Один и тот же query на двух соседних эпохах может быть заматчен с разными GT-коробками или вообще с бэкграундом, что приводит к нестабильности обучения. Авторы статьи предлагают решить эту проблему так - давайте в качестве вспомогательной задачи кормить сетке зашумлённые GT-боксы (смещённые, увеличенные, уменьшенные) и просить её восстановить оригинальную коробку.</p><p>Имплементация достаточно проста - давайте создадим N дополнительных queries и разобьём их на m групп, так что в каждой группе окажется k=N/m queries. Каждая группа будет отвечать за денойзинг своего GT-бокса. Чтобы “скормить” GT-бокс своей группе queries, используется идея <a href=\"https://docs.google.com/document/d/1fqHFMJK8bwrxp2lDBnqUJBOtfI5T2yF66E97xoVe1Nk/edit#heading=h.u5g6i6preoc9\" rel=\"noopener noreferrer nofollow\"><u>DAB-DETR</u></a>, в котором каждый query - это конкретный бокс со своими координатами и размером. Берём коробку, зашумляем её k раз и инциализируем каждый query в группе своей версией шумного бокса. Задача декодера - воссоздать оригинальную коробку, то есть найти такой шифт зашумлённой версии, который вернёт её к истинной коробке.</p><p>В принципе это всё, но дьявол как всегда кроется в деталях:</p><ul><li><p>Наивная имплементация такого дизайна ведёт к двум мощным ликам из-за механизма self-attention в декодере. Оригинальные queries получают доступ к зашумлённым версиям реальных коробок, а denoising queries внутри группы могут смотреть на другие зашумлённые версии самой себя. Что ж, слава богу, в <a href=\"https://pytorch.org/docs/stable/generated/torch.nn.MultiheadAttention.html#torch.nn.MultiheadAttention.forward\" rel=\"noopener noreferrer nofollow\"><u>MultiheadAttention</u></a> есть замечательный аргумент attention_mask. Достаточно <a href=\"https://github.com/IDEA-Research/DN-DETR/blob/c611bd10ffd585c04d8f56e53db1dec948674804/models/DN_DAB_DETR/dn_components.py#L134\" rel=\"noopener noreferrer nofollow\"><u>аккуратно инициализировать</u></a> этот тензор, и queries не смогут смотреть, куда им смотреть не следует.</p></li><li><p>Предложенный дизайн никак не использует информацию о классе объекта. Для повышения эффективности метода мы можем заставить сетку осуществлять и label denoising. Для этого мы можем случайным образом поменять истинный лейбл GT-коробки и прогнать его через эмбеддинг-слой. В итоге каждый query в декодере инициализируется как сумма positional-части (проекция синусоидального энкодинга зашумлённой коробки) и content-части (проекция эмбеддинга зашумлённого лейбла). Сетке нужно предсказать не только настоящие координаты и размер коробки, но и её настоящий класс.</p></li></ul><p>Почему это всё вообще должно увеличивать стабильность матчинга?</p><p>Авторы разделяют процесс обучения DETR на две задачи - выучивание хороших энкоров и предсказание хороших оффсетов для этих энкоров. Из-за нестабильности матчинга (особенно на первых эпохах) вторая задача усложняется - ведь каждому query постоянно нужно предсказывать разные оффсеты в зависимости от того, с каким объектом он в этот раз сматчился. Для демонстрации этого эффекта авторы рассчитывают параметр IS (instability). Если query на двух соседних эпохах сматчился с разными объектами - добавляем единичку. Использование denoising queries ведёт к более стабильному матчингу, ведь “хорошим энкором” как раз выступает зашумлённый GT-бокс.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f38/01e/f2f/f3801ef2fb5e559369d163ad6e37b620.png\" width=\"822\" height=\"456\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f38/01e/f2f/f3801ef2fb5e559369d163ad6e37b620.png\"></figure><p>Дополнительно решение задачи денойзинга ведёт к тому, что каждый query более расположен к поиску близлежащих объектов. На картинке мы видим, что оффсеты между энкорами и итоговыми предсказанями значительно ниже для DN-DETR, чем для DAB-DETR.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b2c/5f7/f2a/b2c5f7f2a76246bcc024e0ea7e1d32fe.png\" width=\"1256\" height=\"458\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b2c/5f7/f2a/b2c5f7f2a76246bcc024e0ea7e1d32fe.png\"></figure><p>Вот такая вот несложная идея, которая сильно забустила метрики и заложила основу для одной из лучших версий DETRа - DINO.</p><h4>DINO (2022)</h4><p><a href=\"https://github.com/IDEA-Research/DINO\" rel=\"noopener noreferrer nofollow\"><u>Код</u></a></p><p>162 цитирования, 1.3к звёздочек</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/669/f81/828/669f8182803fdc5dfd9802424d167655.png\" width=\"996\" height=\"458\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/669/f81/828/669f8182803fdc5dfd9802424d167655.png\"></figure><p>Идея DN-DETR проста и мощна - мы используем денойзинг шумных GT-коробок как вспомогательную задачу для ускорения обучения. Но умение предсказывать хорошие оффсеты поможет, только если у нас есть хорошие энкоры. А что делать с плохими, рядом с которыми нет никаких GT-объектов?</p><p>DINO предлагает использовать в задаче денойзинга не только положительные примеры, но и отрицательные. В каждой группе мы можем попросить часть вспомогательных queries денойзить хорошие энкоры, а часть - отвергать энкоры средненького качества. Чтобы сгенерить такие “так себе” энкоры достаточно наложить на центр GT-коробки <a href=\"https://github.com/IDEA-Research/DINO/blob/f5bd5474b1dafc15eab72016eed7f55b51a8ea69/models/dino/dn_components.py#L86\" rel=\"noopener noreferrer nofollow\"><u>более сильный шум</u></a> (на картинке - точки внутри коричневого квадрата). При этом он должен быть не слишком сильным - чтобы энкор был всё ещё близок к объекту, но хуже, чем другие энкоры. В итоге модель в contrastive-манере учится понимать, что вот эти энкоры - хорошие, а вот эти - не очень, и для них нужно предсказать высокую вероятность background. Такой метод позволяет ещё сильнее уменьшить количество дубликатов - когда есть один хороший предикт и несколько посредственных. Особенно это помогает находить хорошие энкоры для маленьких объектов.</p><p>Второе важное отличие DINO называется mixed query selection. В оригинальном DETR positional queries и инициализация content queries статична в том смысле, что никак не зависит от текущей картинки. Мы просто выучиваем хорошие энкоры и инциализируем content queries как нулевые векторы (картинка a). Некоторые архитектуры (например, two-stage Deformable DETR и Efficient DETR) отказываются от этого и динамически иницализируют энкоры и их content-часть с помощью энкодера (b). В DINO используется смешанный подход - positional-часть использует лучшие пропозалы энкодера, а вот content-часть остаётся независимой. Правда, в данном случае это не нулевые векторы, а выучиваемые эмбеддинги (c).</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/1e1/ac3/b83/1e1ac3b83fbb601c17ff3801c70e9db0.png\" width=\"1168\" height=\"458\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/1e1/ac3/b83/1e1ac3b83fbb601c17ff3801c70e9db0.png\"></figure><p>Последняя модификация - это look forward twice. Качество предсказанной коробки на i-ом слое декодера зависит не только от текущего предсказанного оффсета, но и от текущего состояния энкора (positional query). Если энкор хороший - то и оффсет предсказывать легче. При этом, напомню, что в iterative box refinement Deformable DETR мы блокируем градиент между слоями. То есть, мы наказываем сетку за плохо предсказанные оффсеты, но не учитываем при этом качество исходного энкора. В DINO для предсказания промежуточных коробок на слое i используются текущие предсказанные оффсеты и <strong>недетачнутая</strong> версия референс-точек со слоя i-1. Звучит сложновато, но по факту это <a href=\"https://github.com/IDEA-Research/DINO/blob/f5bd5474b1dafc15eab72016eed7f55b51a8ea69/models/dino/deformable_transformer.py#L753\" rel=\"noopener noreferrer nofollow\"><u>четыре символа в коде</u></a>.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/aed/ad1/015/aedad10159c74d1833947757022c4691.png\" width=\"1154\" height=\"318\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/aed/ad1/015/aedad10159c74d1833947757022c4691.png\"></figure><p>DINO стоит на плечах предыдущих достижений - Deformable DETR, DAB DETR и DN DETR, но предложенные модификации позволяют достичь мега-соты.</p><h4>DEYO (2022)</h4><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/961/d06/220/961d06220f57bfe9ef1becc733e99c93.png\" width=\"1097\" height=\"724\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/961/d06/220/961d06220f57bfe9ef1becc733e99c93.png\"></figure><p>Забавная идея, которая развивает архитектуру DINO. Если в DINO для инициализации queries используется пропозалы из энкодера, то тут для генерации энкоров дополнительно используется ещё и аж целый YOLOv5. Насколько я понял, 800 queries инциализируется как обычно, а 100 из предиктов YOLO. </p><p>По факту к этой секции отношения особо не имеет, поскольку главное изменение - это именно YOLO, но ладно уж.</p><h3>Exploiting positive anchors</h3><p>Лосс DETRов состоит из трёх комопонентов - бинарная кросс-энтропия, GIoU и L1. На вход кросс-энтропии идут все 100/300/900 queries, а вот локализационные лоссы получают супервижн только от тех queries, которые были сматчены с GT-коробками. Их на каждой картинке обычно не так чтобы очень много. Можем ли мы как-то облегчить для сетки задачу локализации? Конечно, да.</p><h3>H-Deformable-DETR (2022)</h3><p><a href=\"https://github.com/HDETR/H-Deformable-DETR\" rel=\"noopener noreferrer nofollow\"><u>Код</u></a></p><p>19 цитирований, 151 звёздочка</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/ad3/5d1/481/ad35d148134a2614b0b2188b8df3fe71.png\" width=\"620\" height=\"318\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ad3/5d1/481/ad35d148134a2614b0b2188b8df3fe71.png\"></figure><p>Одна из моих любимых статей про DETR - потому что она мега-простая в понимании и имплементации, но при этом эффективная. Раз у нас мало GT-объектов - давайте возьмём и продублируем их, например, 6 раз. За предсказание этих фейковых объектов будут ответственны специально выделенные под эту задачу queries. Конечно, не забываем при этом сгенерировать <a href=\"https://github.com/HDETR/H-Deformable-DETR/blob/f58ceb1165da4b0cd10e9a5a30c7a77fbd33f492/models/deformable_detr.py#L210\" rel=\"noopener noreferrer nofollow\"><u>нужную attention-маску</u></a> для self-attention, чтобы исключить взаимодействие двух групп queries. Вспомогательные queries на инференсе отбрасываются. Всё! Уложились в один параграф.</p><p>На выходе получаем улучшенные метрики и ускоренное обучение за счёт роста потребления видеопамяти и небольшого замедления на трейне. На инференсе лишние queries можно отбросить.</p><h4>Group DETR (2022) и Group DETR v2 (2022)</h4><p><a href=\"https://github.com/IDEA-Research/detrex/tree/main/projects/group_detr\" rel=\"noopener noreferrer nofollow\"><u>Код в проекте detrex</u></a></p><p>3 цитирования</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/ffb/b41/c24/ffbb41c246a5f1c5631ddf465d9b8039.png\" width=\"702\" height=\"1040\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ffb/b41/c24/ffbb41c246a5f1c5631ddf465d9b8039.png\"></figure><p>Идея очень похожа на предыдущую, только каждая копия GT-объектов матчится к своей выделенной группе queries. Естественно, мы блокируем self-attention между группами. На инференсе используем только одну группу - говорят, что можно брать любую, результаты одинаковые.</p><p>Во второй версии модели авторы собирают все топовые фишки (group assignment, DINO, ViT как бэкбоун) и получают мега-гига-соту.</p><h3>Co-DETR (2022)</h3><p><a href=\"https://github.com/Sense-X/Co-DETR\" rel=\"noopener noreferrer nofollow\"><u>Код</u></a> (code will be available soon lol)</p><p>5 цитирований, 56 звёздочек</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b4b/370/216/b4b37021644b42ffab60e173d6976806.png\" width=\"1600\" height=\"486\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b4b/370/216/b4b37021644b42ffab60e173d6976806.png\"></figure><p>Я уже упоминал, что детекторы можно выстраивать из кубиков, выбирать разные компоненты и соединять в хитрые архитектуры. Например, мы можем вместо декодера с positional queries и one-to-one матчингом просто навесить на энкодер другие детекционные головы - например, Faster-RCNN, RetinaNet или FCOS (кстати, <a href=\"https://www.youtube.com/watch?v=CUcryBcOedQ&amp;list=PLbDgQ0QkBGZCZoSN_ED5IyDe3OhK5XfSG&amp;index=4\" rel=\"noopener noreferrer nofollow\"><u>тут</u></a> есть старая запись моего доклада про anchor-free детекторы, сорри за ужасный звук). Зачем бы нам это делать? А затем, что традиционные детекторы используют one-to-many assignment - к примеру, в Faster-RCNN любой предикт, который имеет IoU с GT-коробкой выше порога (обычно 0.5 или 0.7), используется как положительный пример. Благодаря этому мы получаем намного больше примеров для супервизии трансформер-энкодера и бэкбоуна.</p><p>В Co-DETR энкодер отдаёт фича-мапу одного скейла, затем мы строим из неё пирамиду фичей. Происходит это очень просто - никаких FPN или чего-то хитрого, просто делаем апсэмплинг и даунсэмплинг единственной фича-мапы. На полученную пирамиду мы можем навесить любую любимую детекцию - например, RPN + RCNN из Faster-RCNN. Получаем её предсказания, делим их на foreground и background согласно IoU или другому критерию, накладываем лосс.</p><p>На этом ребята не останавливаются - хочется ведь помочь и декодеру. Все положительные предсказания из каждой головы можно превратить в positional queries как в DAB-DETR и DN-DETR - координаты и размер коробки энкодятся синусоидально и проецируются в новое пространство. Матчинг для этих queries не нужен, мы уже знаем, какие GT-коробки им соответствуют.</p><h4>NMS Strikes Back (DETA) (2022)</h4><p><a href=\"https://github.com/jozhang97/DETA\" rel=\"noopener noreferrer nofollow\"><u>Код</u></a></p><p>2 цитирования, 165 звёздочки</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/5cd/f00/704/5cdf00704cc6045b67583c3e55b206b3.png\" width=\"1582\" height=\"552\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/5cd/f00/704/5cdf00704cc6045b67583c3e55b206b3.png\"></figure><p>А нужен ли вообще one-to-one матчинг, если от него столько проблем? В DETRообразных архитектурах одна из основных его задач - дедубликация предсказаний, которая позволяет отказаться от NMS. А так ли он плох?</p><p>Авторы статьи берут за основу двухстадийный Deformable DETR и заменяют one-to-one matching на обычный IoU-assignment как в Faster-RCNN и других детекторах. Делается это на обеих стадиях (энкодер и декодер) - сейчас будем разбираться как именно.</p><p>Напомню, что на стадии энкодера в two-stage Deformable DETR каждый “пиксель” генерит кандидата на хороший пропозал. Это происходит <a href=\"https://github.com/fundamentalvision/Deformable-DETR/blob/11169a60c33333af00a4849f1808023eba96a931/models/deformable_transformer.py#L162\" rel=\"noopener noreferrer nofollow\"><u>путём предсказания оффсета </u></a>относительно энкора с фиксированным размером стороны и центром в этом “пикселе”. При IoU-assignment нам сначала нужно определить, а является ли вообще этот энкор положительным или отрицательным. Для этого каждый энкор матчится с GT-объектом, с которым у него <a href=\"https://github.com/jozhang97/DETA/blob/dade1763efba58a1f3077d373e991fd319dc240e/models/assigner.py#L322\" rel=\"noopener noreferrer nofollow\"><u>наибольший IoU, при этом он должен быть выше порога</u></a>. Я не знаю, насколько это хорошо будет работать для супер-маленьких объектов, не уверен, что они будут матчиться с энкорами фиксированного размера даже на самых больших фиче-мапах, надо проверять. В любом случае авторы указывают, что можно все назаматченные GT-объекты в итоге связать с ближайшим ещё незаматченным предиктом, и хуже это не сделает. На это всё сверху накладывается обычный бинарный классификационный лосс, как в RPN. Раз несколько предиктов теперь могут соответствовать одному GT-объекту, это неминуемо ведёт к очень похожим пропозалам, так что <a href=\"https://github.com/jozhang97/DETA/blob/dade1763efba58a1f3077d373e991fd319dc240e/models/deformable_transformer.py#L192\" rel=\"noopener noreferrer nofollow\"><u>NMS накладывается</u></a> уже на этой стадии. Собственно, как и в обычном Faster-RCNN.</p><p>На второй стадии всё точно так же, только вместо фиксированных энкоров для матчинга используются улучшенные пропозалы из энкодера. Вот тут авторы как раз подмечают, мол, даже если снизить порог IoU с 0.7 до 0.6, у больших и средних объектов будет значительно больше сматченных предиктов, чем у маленьких. Для поддержания баланса можно ограничить количество предиктов, который могут сматчиться с одним и тем же объектом. И, конечно же, не забываем накинуть NMS сверху.</p><p>В общем-то всё! Оказывается, что можно обучить DETR и без one-to-one матчинга, и метрики получаются даже лучше - ведь как показали H-DETR, Group DETR и Co-DETR, увеличение количества позитивных сэмплов помогает обучению. Из дополнительных плюсов - можно убрать self-attention между queries, из минусов - снова появляется NMS, к которому нужно подбирать IoU-трешхолд под свою задачу. А на каких-то задачах NMS может и вовсе фейлиться.</p><h4>Другие формулировки задачи</h4><p>Все упомянутые DETRы решают одинаковую задачу - предсказание координат центра, а также ширины и высоты коробки. Статьи в этой секции предлагают другие формулировки задачи детекции. </p><h3>Pair DETR (2022)</h3><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a83/b81/c9b/a83b81c9bbe70f3612549e5a3f52537c.png\" width=\"687\" height=\"564\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a83/b81/c9b/a83b81c9bbe70f3612549e5a3f52537c.png\"></figure><p>Есть такой старый прикольный детектор - <a href=\"https://arxiv.org/abs/1808.01244\" rel=\"noopener noreferrer nofollow\"><u>CornerNet</u></a>, он детектит верхние левые и правые нижние углы, и потом связывает их в пары через специальный хитмап эмбеддингов. Если эмбеддинги двух точек похожи - значит, это углы одного объекта. Pair DETR использует похожую формулировку - предсказываем левую верхнюю точку и центр коробки, причём за эти два предсказания ответственны два разных декодера. Центральный декодер ещё и предсказывает класс объекта. Собственно, поэтому здесь и используется не правый нижний угол, а центр, потому что там обычно больше важных для классификации фичей. </p><p>Детали дизайна:</p><ul><li><p>Фичи из энкодера и выучиваемые positional queries шарятся между двумя декодерами. i-ый query в одном декодере будет соответствовать i-му query во втором, то есть, они должны предсказывать точки одного и того же объекта. Это позволяет нам в духе <a href=\"https://arxiv.org/abs/2002.05709\" rel=\"noopener noreferrer nofollow\"><u>SimCLR</u></a> составить N (число queries) позитивных пар точек. Аутпуты декодеров для этих пар мы просим сделать похожими, а в качестве негативных примеров, которые должны отличаться берём остальные 2N - 2 (в статье написано 2N - 1, но я не понял почему) аутпутов декодера. Этот лосс прибавляется к классическим классификационным и регресионным.</p></li></ul><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/90c/feb/c99/90cfebc99668602dd4e175369a1a09ec.png\" width=\"843\" height=\"517\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/90c/feb/c99/90cfebc99668602dd4e175369a1a09ec.png\"></figure><ul><li><p>Остальная архитектура соответствует Conditional DETR.</p></li></ul><p>Метрики, вроде бы, повыше, а ещё показывают на примерах, что улучшается детекция объектов, которые сливаются с фоном, маленьких объектов внутри больших объектов и объектов по краям изображения.</p><h3>SAM-DETR (2022) и SAM-DETR++ (2022)</h3><p><a href=\"https://github.com/ZhangGongjie/SAM-DETR\" rel=\"noopener noreferrer nofollow\"><u>Код</u></a></p><p>31 цитирование, 261 звёздочка</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/0ee/2ad/265/0ee2ad2652974c2a59ae4ba92f0231a7.png\" width=\"1269\" height=\"705\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/0ee/2ad/265/0ee2ad2652974c2a59ae4ba92f0231a7.png\"></figure><p>Строго говоря, статья не подходит в эту категорию, предсказываются в ней всё так же центры и размеры коробок, но одна из идей тут связана со следующей архитектурой SAP-DETR. Итак, авторы утверждают - одна из причин медленной сходимости DETR заключается в том, что в cross-attention Q (object queries) и K (фичи энкодера) оперируют в разных пространствах. Сюда они приплетают сиамские сети - мол они как раз созданы, чтоб переводить Q и K в одно пространство для сходимости. А в DETR Q и K в cross-attention имеют абсолютное разное происхождение. Соответственно, в начале обучения object queries примерно одинаково “размазывают” своё внимание по всем регионам, и требуется какое-то время, чтоб научиться фокусироваться на определённых. </p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b8b/19f/5ac/b8b19f5ac0a2cc45e65f779c66624b20.png\" width=\"451\" height=\"139\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b8b/19f/5ac/b8b19f5ac0a2cc45e65f779c66624b20.png\"></figure><p>Проблему предлагается решить достаточно необычным способом. По сути, мы просто берём и генерим content queries напрямую из фичей энкодера. Давайте разбираться…</p><ul><li><p>В качестве positional queries используются <a href=\"https://github.com/ZhangGongjie/SAM-DETR/blob/df4e5676765ab0d1a65a82da89989309f399f3ef/models/fast_detr.py#L48\" rel=\"noopener noreferrer nofollow\"><u>выучиваемые референс-боксы</u></a>.</p></li><li><p>Эти боксы используются для того, чтобы <a href=\"https://github.com/ZhangGongjie/SAM-DETR/blob/df4e5676765ab0d1a65a82da89989309f399f3ef/models/transformer_decoder.py#L226\" rel=\"noopener noreferrer nofollow\"><u>спулить фичи энкодера</u></a>, которые предварительно решейпятся обратно в прямоугольник, с помощью старого доброго RoIAlign.</p></li><li><p>По этим фичам предсказываются <a href=\"https://github.com/ZhangGongjie/SAM-DETR/blob/df4e5676765ab0d1a65a82da89989309f399f3ef/models/transformer_decoder.py#L242\" rel=\"noopener noreferrer nofollow\"><u>M координат</u></a> точек, где M - число attention-голов в cross-attention. Из этих точек с помощью grid_sample забираются фичей наиболее важных точек бокса.</p></li><li><p>Эти фичи и становятся новыми content queries. Возникает разумный вопрос - а нафига нам content queries с предыдущего слоя, если они тупо заменяются фичами из энкодера? Происходит ход конём - с их помощью <a href=\"https://github.com/ZhangGongjie/SAM-DETR/blob/df4e5676765ab0d1a65a82da89989309f399f3ef/models/transformer_decoder.py#L253\" rel=\"noopener noreferrer nofollow\"><u>генерируются веса</u></a>, на которые домножаются новые content queries.</p></li><li><p>Предсказанные точки также используются для генерации новых positional queries. Трансформируем их внутрикоробочные координаты в глобальные, генерим синусоидальный энкодинг и тоже домножаем на веса, полученные из content queries.</p></li></ul><p>В журнальной версии статьи (аж с двумя плюсами) убирается дропаут в трансформерах и добавляется поддержка multi-scale фичей. Первые слои декодера работают с самыми маленькими фичами, следующие два - с картой побольше, и последние два - с самым высоким разрешением. Благодаря описанному выше алгоритму семантического матчинга content queries подстраиваются под фичи того уровня, с которым мы сейчас работаем. </p><h3>SAP-DETR (2022)</h3><p><a href=\"https://github.com/liuyang-ict/SAP-DETR\" rel=\"noopener noreferrer nofollow\"><u>Код</u></a></p><p>2 цитирования, 18 звёздочек</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/93f/84c/f65/93f84cf656c236b4d7974714102ee4c0.png\" width=\"824\" height=\"861\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/93f/84c/f65/93f84cf656c236b4d7974714102ee4c0.png\"></figure><p>Модификации DETR, которые эксплицитно моделируют референс-точки или боксы, обычно используют центры объектов. Если задуматься, возможно, это не самое лучшее описание объекта с точки зрения задачи детекции - центры пересекающихся объектов часто находятся примерно в одном месте, а ещё это ведёт к тому, что появляется много queries, которые неплохо локализуют объекты, но всё равно попадают в негативные сэмплы после матчинга. А это сильно замедляет обучение. Какие есть альтернативы? </p><p>Только что упомянутый SAM-DETR пытался найти внутри бокса наиболее важные точки. Авторы SAP-DETR двигаются дальше - и предлагают в качестве референс-точки использовать наиболее важную для данного объекта точку.</p><p>Каждый positional query в SAP-DETR состоит из двух частей - референс-точка и четыре расстояния до каждой стороны бокса (как во <a href=\"https://arxiv.org/abs/1904.01355\" rel=\"noopener noreferrer nofollow\"><u>FCOS</u></a>). Референс-точки можно <a href=\"https://github.com/liuyang-ict/SAP-DETR/blob/a337e966bca066876a52f203fab96a28e17ade88/models/SAP_DETR/SAPDETR.py#L121\" rel=\"noopener noreferrer nofollow\"><u>равномерно раскидать</u></a> по всему изображению.</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/d76/865/58b/d7686558b37c8eb0e549f6a431e3d784.png\" width=\"217\" height=\"354\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d76/865/58b/d7686558b37c8eb0e549f6a431e3d784.png\"></figure><p>Каждый слой декодера предсказывает новые оффсеты для этих четырёх расстояний. Каждый object query стремится предсказывать только боксы, которые включают в себя референс-точку. Это делается с помощью добавления <a href=\"https://github.com/liuyang-ict/SAP-DETR/blob/a337e966bca066876a52f203fab96a28e17ade88/models/SAP_DETR/SAPDETR.py#L300\" rel=\"noopener noreferrer nofollow\"><u>специального лосса</u></a>, который накладывает штраф, если мы сматчили query с рефренс-точкой вне GT-бокса.</p><p>Изображение может быть большим, и раскиданные точки могут не покрывать все объекты. Особенно это касается маленьких и удлинённых объектов. Чтобы решить эту проблему, референс-точкам разрешается <a href=\"https://github.com/liuyang-ict/SAP-DETR/blob/a337e966bca066876a52f203fab96a28e17ade88/models/SAP_DETR/transformer.py#L315\" rel=\"noopener noreferrer nofollow\"><u>ездить по картинке</u></a>, но не слишком далеко. Для этого предсказанное “путешествие” домножается на <a href=\"https://github.com/liuyang-ict/SAP-DETR/blob/a337e966bca066876a52f203fab96a28e17ade88/models/SAP_DETR/transformer.py#L245\" rel=\"noopener noreferrer nofollow\"><u>скейл-фактор</u></a>, равный единице, делённой на корень из размера грида (на картинке 4).</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/37d/ad6/bd1/37dad6bd140d3d0e8b66ab6ea8f6b4b6.png\" width=\"1013\" height=\"416\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/37d/ad6/bd1/37dad6bd140d3d0e8b66ab6ea8f6b4b6.png\"></figure><p>Вот так выглядит движение точек на реальных картинках:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/cb6/644/663/cb66446635716da50a9f3f51d630f119.png\" width=\"1216\" height=\"453\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/cb6/644/663/cb66446635716da50a9f3f51d630f119.png\"></figure><p>Последнее важное изменение касается cross-attention. Визуализация весов этого attention в DETR показывает, что queries обращают внимание на центры и края объектов, что звучит логично. Если у двух queries похожие референс-точки и веса этеншна на края объекта, то начинаются проблемы. SAP-DETR разделяет cross-attention на две карты, которые потом суммируются.</p><p>Первая называется <a href=\"https://github.com/liuyang-ict/SAP-DETR/blob/a337e966bca066876a52f203fab96a28e17ade88/models/SAP_DETR/transformer.py#L502\" rel=\"noopener noreferrer nofollow\"><u>Side Directed Gaussian</u></a> и является развитием идеи <a href=\"https://docs.google.com/document/d/1fqHFMJK8bwrxp2lDBnqUJBOtfI5T2yF66E97xoVe1Nk/edit#heading=h.uio27trcrdz\" rel=\"noopener noreferrer nofollow\"><u>DETR SMCA</u></a>. Считается он примерно так:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/01e/deb/762/01edeb7621b9fd5081d5cdf2f685823c.png\" width=\"831\" height=\"541\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/01e/deb/762/01edeb7621b9fd5081d5cdf2f685823c.png\"></figure><p>Я даже попытался в ноутбучке поразбираться с тем, как генерируются все эти оффсеты и карты. Суть заключается примерно в следующем. Мы берём нашу референс-точку и сдвигаем её ближе к сторонам коробки - например, вправо и вниз. Направление движения (влево-вправо, вверх-вниз) определяется знаком o_i, который предсказывается по текущему content query. От этой новой точки и разбрасывается гауссианская этеншн-мапа. Таким образом, каждая голова этеншна может больше обращать внимания на тот или иной край объекта.</p><p>Вторая карта называется Point Enhanced Cross-Attention или <a href=\"https://github.com/liuyang-ict/SAP-DETR/blob/a337e966bca066876a52f203fab96a28e17ade88/models/SAP_DETR/transformer.py#L560\" rel=\"noopener noreferrer nofollow\"><u>PECA</u></a>. Авторы говорят - посмотрели мы, значит, на визуализацию spatial attention в <a href=\"https://docs.google.com/document/d/1fqHFMJK8bwrxp2lDBnqUJBOtfI5T2yF66E97xoVe1Nk/edit#heading=h.lnz3ubwtrdee\" rel=\"noopener noreferrer nofollow\"><u>Conditional DETR</u></a>, и увидели, что в основном весь этеншн идёт на одну из сторон объекта. В связи с этим предлагается конкатенировать энкодинг координат сторон объекта к Q в Cross-Attention.</p><p>Итоговая этеншн-мара формируется как сумма SDG и PECA. В общем и целом, не фанат, довольно перегруженная идеями архитектура. Да, есть прирост, но по сравнению с тем же <a href=\"https://docs.google.com/document/d/1fqHFMJK8bwrxp2lDBnqUJBOtfI5T2yF66E97xoVe1Nk/edit#heading=h.k95dbr5j7mxi\" rel=\"noopener noreferrer nofollow\"><u>SAM-DETR</u></a> не гигантский.</p><p>Конец второй части. Третья часть скоро выйдет на Хабре. Не забудьте подписаться на <a href=\"https://t.me/varim_ml\" rel=\"noopener noreferrer nofollow\">Варим ML</a> в ТГ!  </p><p></p>', 1, '2023-06-12 21:52:50', 108623, 72, '/ru/articles/739888/', 'Доброго времени суток, уважаемое Habr-сообщество!Я не являюсь профессионалом в сфере парсинга данных, лишь учусь этому ремеслу в свободное время и посредством производства подобного рода инструкций, хотел бы оставлять для себя же подробные объяснения, что и как работает. Этот материал будет полезен, как мне, так и тем людям, которым также интерес парсинг.Буду благодарен любой критике, ваша обратная связь поможет мне делать дальнейший материал лучше.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(122, 'Дизассемблер 6502 (nes/famicom/dendy) на php', '<p>Я продолжаю изучать ассемблер 6502, но для экспериментов мне понадобился дизассемблер, Я пробовал использовать da65 собственно тот что идет вместе с ассемблером и линкером ca65 и ld65. Но заметив в документации коды команд в hex представление. И вдруг понял что если прочитать файл nes то можно просто взять код инструкции, взять ее длину и спарсить аргумент. И мы получим дизассемблированный код в его простом представление. </p><p>Первым делом надо сформировать список всех команд и их опкодов. Список я взял из таблиц в документации <a href=\"http://emuverse.ru/wiki/MOS_Technology_6502/%D0%A1%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D0%B0_%D0%BA%D0%BE%D0%BC%D0%B0%D0%BD%D0%B4#ADC\" rel=\"noopener noreferrer nofollow\">http://emuverse.ru/wiki/MOS_Technology_6502/Система_команд#ADC</a> немного ручной работы и небольшой скрипт и как результат был сформирован массив команд с которым можно работать.</p><details class=\"spoiler\"><summary>Массив с hex кодом команды, шаблоном и длиной</summary><div class=\"spoiler__content\"><pre><code class=\"php\">&lt;?php\n\nreturn [\n    \'69\' =&gt; [\n        \'ADC #$argument\',\n        2\n    ], \'65\' =&gt; [\n        \'ADC $argument\',\n        2\n    ], \'75\' =&gt; [\n        \'ADC $argument,X\',\n        2\n    ], \'6D\' =&gt; [\n        \'ADC $argument\',\n        3\n    ], \'7D\' =&gt; [\n        \'ADC $argument,X\',\n        3\n    ], \'79\' =&gt; [\n        \'ADC $argument,Y\',\n        3\n    ], \'61\' =&gt; [\n        \'ADC ($argument,X)\',\n        2\n    ], \'71\' =&gt; [\n        \'ADC ($argument),Y\',\n        2\n    ], \'29\' =&gt; [\n        \'AND #$argument\',\n        2\n    ], \'25\' =&gt; [\n        \'AND $argument\',\n        2\n    ], \'35\' =&gt; [\n        \'AND $argument,X\',\n        2\n    ], \'2D\' =&gt; [\n        \'AND $argument\',\n        3\n    ], \'3D\' =&gt; [\n        \'AND $argument,X\',\n        3\n    ], \'39\' =&gt; [\n        \'AND $argument,Y\',\n        3\n    ], \'21\' =&gt; [\n        \'AND ($argument,X)\',\n        2\n    ], \'31\' =&gt; [\n        \'AND ($argument),Y\',\n        2\n    ], \'0A\' =&gt; [\n        \'ASLA\',\n        1\n    ], \'06\' =&gt; [\n        \'ASL $argument\',\n        2\n    ], \'16\' =&gt; [\n        \'ASL $argument,X\',\n        2\n    ], \'0E\' =&gt; [\n        \'ASL $argument\',\n        3\n    ], \'1E\' =&gt; [\n        \'ASL $argument,X\',\n        3\n    ], \'90\' =&gt; [\n        \'BCC $argument\',\n        2\n    ], \'B0\' =&gt; [\n        \'BCS $argument\',\n        2\n    ], \'F0\' =&gt; [\n        \'BEQ $argument\',\n        2\n    ], \'24\' =&gt; [\n        \'BIT $argument\',\n        2\n    ], \'2C\' =&gt; [\n        \'BIT $argument\',\n        3\n    ], \'30\' =&gt; [\n        \'BMI $argument\',\n        2\n    ], \'D0\' =&gt; [\n        \'BNE $argument\',\n        2\n    ], \'10\' =&gt; [\n        \'BPL $argument\',\n        2\n    ], \'00\' =&gt; [\n        \'BRK\',\n        1\n    ], \'50\' =&gt; [\n        \'BVC $argument\',\n        2\n    ], \'70\' =&gt; [\n        \'BVS $argument\',\n        2\n    ], \'18\' =&gt; [\n        \'CLC\',\n        1\n    ], \'D8\' =&gt; [\n        \'CLD\',\n        1\n    ], \'58\' =&gt; [\n        \'CLI\',\n        1\n    ], \'B8\' =&gt; [\n        \'CLV\',\n        1\n    ], \'C9\' =&gt; [\n        \'CMP #$argument\',\n        2\n    ], \'C5\' =&gt; [\n        \'CMP $argument\',\n        2\n    ], \'D5\' =&gt; [\n        \'CMP $argument,X\',\n        2\n    ], \'CD\' =&gt; [\n        \'CMP $argument\',\n        3\n    ], \'DD\' =&gt; [\n        \'CMP $argument,X\',\n        3\n    ], \'D9\' =&gt; [\n        \'CMP $argument,Y\',\n        3\n    ], \'C1\' =&gt; [\n        \'CMP ($argument,X)\',\n        2\n    ], \'D1\' =&gt; [\n        \'CMP ($argument),Y\',\n        2\n    ], \'E0\' =&gt; [\n        \'CPX $argument\',\n        2\n    ], \'E4\' =&gt; [\n        \'CPX $argument\',\n        2\n    ], \'EC\' =&gt; [\n        \'CPX $argument\',\n        3\n    ], \'C0\' =&gt; [\n        \'CPY $argument\',\n        2\n    ], \'C4\' =&gt; [\n        \'CPY $argument\',\n        2\n    ], \'CC\' =&gt; [\n        \'CPY $argument\',\n        3\n    ], \'C6\' =&gt; [\n        \'DEC $argument\',\n        2\n    ], \'D6\' =&gt; [\n        \'DEC $argument,X\',\n        2\n    ], \'CE\' =&gt; [\n        \'DEC $argument\',\n        3\n    ], \'DE\' =&gt; [\n        \'DEC $argument,X\',\n        3\n    ], \'CA\' =&gt; [\n        \'DEX\',\n        1\n    ], \'88\' =&gt; [\n        \'DEY\',\n        1\n    ], \'49\' =&gt; [\n        \'EOR #$argument\',\n        2\n    ], \'45\' =&gt; [\n        \'EOR $argument\',\n        2\n    ], \'55\' =&gt; [\n        \'EOR $argument,X\',\n        2\n    ], \'4D\' =&gt; [\n        \'EOR $argument\',\n        3\n    ], \'5D\' =&gt; [\n        \'EOR $argument,X\',\n        3\n    ], \'59\' =&gt; [\n        \'EOR $argument,Y\',\n        3\n    ], \'41\' =&gt; [\n        \'EOR ($argument,X)\',\n        2\n    ], \'51\' =&gt; [\n        \'EOR ($argument),Y\',\n        2\n    ], \'E6\' =&gt; [\n        \'INC $argument\',\n        2\n    ], \'F6\' =&gt; [\n        \'INC $argument,X\',\n        2\n    ], \'EE\' =&gt; [\n        \'INC $argument\',\n        3\n    ], \'FE\' =&gt; [\n        \'INC $argument,X\',\n        3\n    ], \'E8\' =&gt; [\n        \'INX\',\n        1\n    ], \'C8\' =&gt; [\n        \'INY\',\n        1\n    ], \'4C\' =&gt; [\n        \'JMP $argument\',\n        3\n    ], \'6C\' =&gt; [\n        \'JMP ($argument)\',\n        3\n    ], \'20\' =&gt; [\n        \'JSR $argument\',\n        3\n    ], \'A9\' =&gt; [\n        \'LDA #$argument\',\n        2\n    ], \'A5\' =&gt; [\n        \'LDA $argument\',\n        2\n    ], \'B5\' =&gt; [\n        \'LDA $argument,X\',\n        2\n    ], \'AD\' =&gt; [\n        \'LDA $argument\',\n        3\n    ], \'BD\' =&gt; [\n        \'LDA $argument,X\',\n        3\n    ], \'B9\' =&gt; [\n        \'LDA $argument,Y\',\n        3\n    ], \'A1\' =&gt; [\n        \'LDA ($argument,X)\',\n        2\n    ], \'B1\' =&gt; [\n        \'LDA ($argument),Y\',\n        2\n    ], \'A2\' =&gt; [\n        \'LDX #$argument\',\n        2\n    ], \'A6\' =&gt; [\n        \'LDX $argument\',\n        2\n    ], \'B6\' =&gt; [\n        \'LDX $argument,Y\',\n        2\n    ], \'AE\' =&gt; [\n        \'LDX $argument\',\n        3\n    ], \'BE\' =&gt; [\n        \'LDX $argument,Y\',\n        3\n    ], \'A0\' =&gt; [\n        \'LDY #$argument\',\n        2\n    ], \'A4\' =&gt; [\n        \'LDY $argument\',\n        2\n    ], \'B4\' =&gt; [\n        \'LDY $argument,X\',\n        2\n    ], \'AC\' =&gt; [\n        \'LDY $argument\',\n        3\n    ], \'BC\' =&gt; [\n        \'LDY $argument,X\',\n        3\n    ], \'4A\' =&gt; [\n        \'LSRA\',\n        1\n    ], \'46\' =&gt; [\n        \'LSR $argument\',\n        2\n    ], \'56\' =&gt; [\n        \'LSR $argument,X\',\n        2\n    ], \'4E\' =&gt; [\n        \'LSR $argument\',\n        3\n    ], \'5E\' =&gt; [\n        \'LSR $argument,X\',\n        3\n    ], \'EA\' =&gt; [\n        \'NOP\',\n        1\n    ], \'09\' =&gt; [\n        \'ORA #$argument\',\n        2\n    ], \'05\' =&gt; [\n        \'ORA $argument\',\n        2\n    ], \'15\' =&gt; [\n        \'ORA $argument,X\',\n        2\n    ], \'0D\' =&gt; [\n        \'ORA $argument\',\n        3\n    ], \'1D\' =&gt; [\n        \'ORA $argument,X\',\n        3\n    ], \'19\' =&gt; [\n        \'ORA $argument,Y\',\n        3\n    ], \'01\' =&gt; [\n        \'ORA ($argument,X)\',\n        2\n    ], \'11\' =&gt; [\n        \'ORA ($argument),Y\',\n        2\n    ], \'48\' =&gt; [\n        \'PHA\',\n        1\n    ], \'08\' =&gt; [\n        \'PHP\',\n        1\n    ], \'68\' =&gt; [\n        \'PLA\',\n        1\n    ], \'28\' =&gt; [\n        \'PLP\',\n        1\n    ], \'2A\' =&gt; [\n        \'ROLA\',\n        1\n    ], \'26\' =&gt; [\n        \'ROL $argument\',\n        2\n    ], \'36\' =&gt; [\n        \'ROL $argument,X\',\n        2\n    ], \'2E\' =&gt; [\n        \'ROL $argument\',\n        3\n    ], \'3E\' =&gt; [\n        \'ROL $argument,X\',\n        3\n    ], \'6A\' =&gt; [\n        \'RORA\',\n        1\n    ], \'66\' =&gt; [\n        \'ROR $argument\',\n        2\n    ], \'76\' =&gt; [\n        \'ROR $argument,X\',\n        2\n    ], \'6E\' =&gt; [\n        \'ROR $argument\',\n        3\n    ], \'7E\' =&gt; [\n        \'ROR $argument,X\',\n        3\n    ], \'40\' =&gt; [\n        \'RTI\',\n        1\n    ], \'60\' =&gt; [\n        \'RTS\',\n        1\n    ], \'E9\' =&gt; [\n        \'SBC #$argument\',\n        2\n    ], \'E5\' =&gt; [\n        \'SBC $argument\',\n        2\n    ], \'F5\' =&gt; [\n        \'SBC $argument,X\',\n        2\n    ], \'ED\' =&gt; [\n        \'SBC $argument\',\n        3\n    ], \'FD\' =&gt; [\n        \'SBC $argument,X\',\n        3\n    ], \'F9\' =&gt; [\n        \'SBC $argument,Y\',\n        3\n    ], \'E1\' =&gt; [\n        \'SBC ($argument,X)\',\n        2\n    ], \'F1\' =&gt; [\n        \'SBC ($argument),Y\',\n        2\n    ], \'38\' =&gt; [\n        \'SEC\',\n        1\n    ], \'F8\' =&gt; [\n        \'SED\',\n        1\n    ], \'78\' =&gt; [\n        \'SEI\',\n        1\n    ], \'85\' =&gt; [\n        \'STA $argument\',\n        2\n    ], \'95\' =&gt; [\n        \'STA $argument,X\',\n        2\n    ], \'8D\' =&gt; [\n        \'STA $argument\',\n        3\n    ], \'9D\' =&gt; [\n        \'STA $argument,X\',\n        3\n    ], \'99\' =&gt; [\n        \'STA $argument,Y\',\n        3\n    ], \'81\' =&gt; [\n        \'STA ($argument,X)\',\n        2\n    ], \'91\' =&gt; [\n        \'STA ($argument),Y\',\n        2\n    ], \'86\' =&gt; [\n        \'STX $argument\',\n        2\n    ], \'96\' =&gt; [\n        \'STX $argument,Y\',\n        2\n    ], \'8E\' =&gt; [\n        \'STX $argument\',\n        3\n    ], \'84\' =&gt; [\n        \'STY $argument\',\n        2\n    ], \'94\' =&gt; [\n        \'STY $argument,X\',\n        2\n    ], \'8C\' =&gt; [\n        \'STY $argument\',\n        3\n    ], \'AA\' =&gt; [\n        \'TAX\',\n        1\n    ], \'A8\' =&gt; [\n        \'TAY\',\n        1\n    ], \'BA\' =&gt; [\n        \'TSX\',\n        1\n    ], \'8A\' =&gt; [\n        \'TXA\',\n        1\n    ], \'9A\' =&gt; [\n        \'TXS\',\n        1\n    ], \'98\' =&gt; [\n        \'TYA\',\n        1\n    ],\n];</code></pre><p></p></details><p>Тут я должен сказать пару слов о длине команды, она зависит от адресации допустим если абсолютная адресация то длина будет 3, если команда без аргументов 1, в остальных случаях длина будет 2 байта. К примеру</p><pre><code class=\"assembly\">LDA $1234 ; AD 34 12 - hex последовательность 3 байта\n          ; команда и аргумент (младший и старший байт)\nLDA #$0A ; A9 0A - hex последовательность 2 байт сама команда и аргумент\nTAX ; AA - комманда без аргумента и занимает 1 байт</code></pre><p>И так с этим разобрались. Далее нам необходимо прочитать файл nes, это делается просто через file_get_contents в php, далее приводим бинарные данные в 16-ричную строку bin2hex. И разбиваем строку на 2 символа в массив инструкцией str_split. Далее последовательно идем перебирая каждый байт. И сравниваем с инструкциями которые загруженны в переменную. И относительно длины формируем значение аргумента инструкции. </p><p>И здесь Я понял довольно важную вещь, файл iNES содержит не только код но и заголовки, информацию о мапере (512кб если есть мапер), код и графику. Это основные секции кода в файле. И теперь для того что бы корректно прочитать код нам не обходимо игнорировать 16 первых байт, 512 байт пока не учитываем (подопытный будет supper mario bros 2 который не имеет маппера), далее берем только код в размере 16384 байта и уже проходя скриптом заменяем байткоды соответствиями команд.</p><p>Скрипт мини-дизассемблер под спойлером </p><details class=\"spoiler\"><summary>Код дизассемблера 6502</summary><div class=\"spoiler__content\"><pre><code class=\"php\">&lt;?php\n/**\n * Created by PhpStorm.\n * User: roman\n * Date: 11.06.2023\n * Time: 22:02\n */\n\nclass Disassembler\n{\n    private $instructions = [];\n\n    public function __construct()\n    {\n        $this-&gt;instructions = include \'opcodes.php\';\n    }\n\n    public function disassembly($code)\n    {\n        $stringCode = bin2hex($code);\n        $arrayInstructions = str_split($stringCode, 2);\n        $skipKeys = 0;\n        $resultString = \'.headers \';\n\n        foreach ($arrayInstructions as $_key =&gt; $_value) {\n            // 16 byte nes header\n            if ($_key &lt; 16) {\n                $resultString .= \' \' . $arrayInstructions[$_key];\n                continue;\n            }\n\n            if ($_key == 16) {\n                $resultString .= PHP_EOL . \'.code \' . PHP_EOL;\n            }\n\n            if ($_key == 16384 + 16) {\n                break;\n            }\n\n            $value = null;\n            $capitalKey = strtoupper($_value);\n\n            if ($skipKeys) {\n                $skipKeys--;\n                continue;\n            }\n\n            if (isset($this-&gt;instructions[$capitalKey])) {\n                if (\n                    $this-&gt;instructions[$capitalKey][1] == 3\n                ) {\n                    $value = $arrayInstructions[$_key+2] . $arrayInstructions[$_key+1];\n                    $resultString .= str_replace(\'$argument\', \'$\' . $value, $this-&gt;instructions[$capitalKey][0]) . PHP_EOL;\n                    $skipKeys = 2;\n                } elseif (\n                    $this-&gt;instructions[$capitalKey][1] = 2\n                ) {\n                    $value = $arrayInstructions[$_key + 1];\n                    $skipKeys = 1;\n                    $resultString .= str_replace(\'$argument\', \'$\' . $value, $this-&gt;instructions[$capitalKey][0]) . PHP_EOL;\n                } else {\n                    $resultString .= $this-&gt;instructions[$capitalKey][0] . PHP_EOL;\n                }\n            }\n        }\n\n        file_put_contents(\'result.asm\', $resultString);\n    }\n}\n\n$binary = file_get_contents(\'../smb.nes\');\n$disasm = new Disassembler();\n$disasm-&gt;disassembly($binary);</code></pre><p></p></details><p>Теперь остается проверить лишь его работоспособность, для этого запускаем ld65 по файлу smb.nes а так же наш скрипт результат выполнения следующий.</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/3a9/14a/9e3/3a914a9e3889900ef848f39ea7c9816b.png\" alt=\"ld65 дизасемблер\" title=\"ld65 дизасемблер\" width=\"262\" height=\"298\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/3a9/14a/9e3/3a914a9e3889900ef848f39ea7c9816b.png\"><div><figcaption>ld65 дизасемблер</figcaption></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/d0b/ebf/31a/d0bebf31ad07389aa2982f3b57e057cd.png\" alt=\"наш мини-дизассемблер\" title=\"наш мини-дизассемблер\" width=\"561\" height=\"349\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d0b/ebf/31a/d0bebf31ad07389aa2982f3b57e057cd.png\"><div><figcaption>наш мини-дизассемблер</figcaption></figure><p>Как вы видите код идентичный да da65 генерирует метки для перехода и ZeroPage. Но мы пока разбираемся в корне механизма дизассемблирования. </p><p>В плане написать скрипт ассемблера на php из кода который был дизассемблирован. Это даст чуть более широкие возможности в ром хакинге не просто поменять какой то ресурс а изменить логику. Не так давно Я изменил логику в игре Dick Tracy там при стрельбе если у врага нет оружия отнимается хит у игрока. И пришлось изменить только аргумент вместо того что бы убрать вызов сабрутины отнимающего жизнь у игрока. </p><p>В качестве заключения приведу ссылку на документацию которую я использовал при написание скрипта:</p><ul><li><p><a href=\"http://emuverse.ru/wiki/MOS_Technology_6502/%D0%A1%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D0%B0_%D0%BA%D0%BE%D0%BC%D0%B0%D0%BD%D0%B4#ADC\" rel=\"noopener noreferrer nofollow\">http://emuverse.ru/wiki/MOS_Technology_6502/Система_команд#ADC</a> - документация по коммандам 6502</p></li></ul><p></p>', 1, '2023-06-12 21:53:38', 738292, 75, '/ru/articles/741192/', 'Я продолжаю изучать ассемблер 6502, но для экспериментов мне понадобился дизассемблер, Я пробовал использовать da65 собственно тот что идет вместе с ассемблером и линкером ca65 и ld65 соответственно. Но заметив в документации коды команд в hex представление. И вдруг понял что если прочитать файл nes то можно просто взять код инструкции, взять ее длину и спарсить аргумент. И мы получим дизассемблированный код в его простом представление.Под катом небольшой рассказ о том как я написал скрипт дизассемблера на PHP.'),
(123, 'Использование ICU Message Format в PHP', '<p>Недавно я узнал про довольно интересный инструмент, встроенный в РНР. Оказывается, в языке нативно поддерживается универсальный формат шаблонов для сообщений, ICU Message Format. В частности, он используется в <a href=\"https://symfony.com/doc/current/reference/formats/message_format.html\" rel=\"noopener noreferrer nofollow\">Symfony Translation Component</a>  и в <a href=\"https://habr.com/ru/articles/264009/\" rel=\"noopener noreferrer nofollow\">системе интернационализации фреймворка Yii 2</a>. Однако этот функционал доступен и сам по себе, в чистом РНР. И может использоваться не только для создания многоязычных сайтов, но и в качестве простенького шаблонизатора, например для email-рассылок.</p><p>Данный функционал является частью стандартного модуля <a href=\"https://www.php.net/manual/ru/book.intl.php\" rel=\"noopener noreferrer nofollow\">php-intl</a>, то есть доступен \"из коробки\" и реализуется с помощью класса <a href=\"https://www.php.net/manual/ru/class.messageformatter.php\" rel=\"noopener noreferrer nofollow\">MessageFormatter</a>. По сути, это такой printf() на стероидах, с добавлением оператора ветвления и некоторых других возможностей.</p><h2>Основы</h2><p>В самом базовом варианте форматтер используется для простой замены плейсхолдеров:</p><pre><code class=\"php\">echo msgfmt_format_message(\"ru\", \"Привет, {0}!\", [\'Вася\']);\necho msgfmt_format_message(\"ru\", \"Привет, {name}!\", [\'name\' =&gt; \'Вася\']);</code></pre><p>Как видно, поддерживаются как нумерованные, так и именованные плейсхолдеры. </p><p>Но, разумеется, ради таких простых замен не стоило и затеваться, в этом случае проще использовать обычный sprintf(). ICU message formatter используется из-за развитых возможностей форматирования, и — в частности — с учётом локали:</p><pre><code class=\"php\">echo msgfmt_format_message(\n    \"ru\", \n    \"Сегодня {0, date, long} или, коротко, {0, date, short}\", \n    [new DateTime()]\n);\n// выведет:\n// Сегодня 7 июня 2023 г. или, коротко, 07.06.23</code></pre><p>На этом примере видно, что плейсхолдер может содержать от одного до трех аргументов, и в общем виде вызывается, как</p><pre><code class=\"php\">{argNameOrNumber, argType, argStyle} </code></pre><p>где <code>argNameOrNumber</code> — это имя или номер плейсхолдера, <code>argType</code> — его тип, и <code>argStyle</code> — дополнительные настройки. </p><h2>Использование</h2><p>Установка модуля intl не должна вызывать сложностей, это стандартное <code>sudo apt install php-intl</code>, либо раскомментировать <code>extension=intl</code> в php.ini под Windows.</p><p>Перед началом работы зададим режим выброса исключений, чтобы сразу видеть ошибки, которые неизбежно будут возникать при экспериментах с форматами:</p><pre><code class=\"php\">ini_set(\'intl.use_exceptions\', true);</code></pre><p>Для получения готовых сообщений можно либо сначала создать формат и затем применить его, либо сделать все в одном вызове. Также можно использовать как объектный, так и процедурный интерфейсы. Я буду использовать в статье функцию <code>msgfmt_format_message()</code>, чтобы код примеров был короче и не вызывал горизонтальный скроллинг. Все три параметра этой функции обязательные. Первой указывается локаль, дальше строка с форматом сообщения и последним — массив с данными. </p><h2>Типы</h2><p>К сожалению, <em>внятной</em> документации по этой библиотеке я не нашел. Приходится собирать по крохам и экспериментировать методом тыка, выясняя, как примеры из официальной документации применить к РНР. </p><p>К примеру, список из 10 основных типов я взял в статье по Yii::t(), ссылка на которую дана выше. Первые 4 из них требуют обязательного наличия всех трех параметров, а остальные позволяют обойтись двумя.</p><pre><code>plural\nselect\nselectordinal\nchoice (объявлен устаревшим)\nnumber\ndate\ntime\nspellout\nordinal\nduration</code></pre><h2>Дополнительные настройки</h2><p>Дополнительные настройки, насколько я понял, делятся на два типа: обычные и начинающиеся с двойного двоеточия, которые называются <em>скелетонами</em>. Обычных настроек  всегда немного, например для <code>date</code> и <code>time</code> поддерживаются четыре:  <code>short, medium, long, full</code>, а для <code>number</code> — три: <code>integer, currency, percent</code>. Но вот скелетонов может быть сколько угодно, причем они могут быть составными, как в последнем примере (<code>group-off</code> отключает разбивку по тысячам):</p><pre><code class=\"php\">echo msgfmt_format_message(\'ru\', \'{0, number, percent}\', [.50]),\"\\n\";\n// 50 %\necho msgfmt_format_message(\'ru\', \'{0, number, ::currency/RUR}\', [9999.99]),\"\\n\";\n// 9 999,99 р.\necho msgfmt_format_message(\'ru\', \'{0, number, ::unit/kilogram group-off}\', [1000]);\n// 1000 кг.</code></pre><blockquote><p>К слову, отдельные числа можно форматировать и с помощью другого класса этого же модуля, <a href=\"https://www.php.net/manual/ru/class.numberformatter.php\" rel=\"noopener noreferrer nofollow\">NumberFormatter</a>:</p></blockquote><pre><code class=\"php\">echo (new NumberFormatter(\'@numbers=roman\', NumberFormatter::DECIMAL))\n    -&gt;format(date(\'Y\'));\n// MMXXIII</code></pre><p>Интересным типом, относящимся к форматированию чисел,  является <code>spellout</code>, который выводит число прописью: </p><pre><code class=\"php\">echo msgfmt_format_message(\'ru\', \'{0, spellout}\', [100500]);\n// сто тысяч пятьсот</code></pre><h2>Ветвление</h2><p>Но самой, пожалуй, интересной возможностью форматтера является встроенный оператор ветвления (аналогичный конструкции <code>switch</code>), который представлен в нескольких вариантах:</p><ul><li><p><code>plural</code> , для образования множественного числа</p></li><li><p><code>select</code>, обычно используется для склонения по родам</p></li><li><p><code>selectordinal</code> для перечислений (поддержка русского языка ограничена)</p></li></ul><p>В шаблонах игнорируются пробельные символы, и благодаря этому их можно форматировать для удобства восприятия сложных конструкций:</p><pre><code class=\"php\">$message = \'Всего {files, plural, \n    one{загружен}\n    other{загружено}\n} {files, number, ::group-off} {files, plural, \n    one{файл}\n    few{файла}\n    many{файлов}\n    other{файла}\n}\'; \necho msgfmt_format_message(\'ru\', $message, [\'files\' =&gt; 9991]),\"\\n\";\n// Всего загружен 9991 файл</code></pre><pre><code class=\"php\">$message = \'{host} {host_gender, select, \n        female{будет счастлива} \n        male{будет счастлив}\n        neuter{будет счастливо}\n        other{будут счастливы}\n    } видеть вас на {event},\n{event_gender, select, \n        female {которая состоится}\n        male{который состоится}\n        neuter{которое состоится}\n        other{которые состоятся}\n    } {date, date} в {date, time, short} {place}\nпо адресу {address}.\';\n$data = [\n    \'host\' =&gt; \'Мария Ивановна Заподдубная\',\n    \'host_gender\' =&gt; \'female\',\n    \'event_gender\' =&gt; \'neuter\',\n    \'event\' =&gt; \'праздновании дня рождения\',\n    \'date\' =&gt; new DateTime(\'2023-05-01 18:00\'),\n    \'place\' =&gt; \'в кафе \"Голубка\"\',\n    \'address\' =&gt; \'улица Садовая, дом 2\',\n];\necho msgfmt_format_message(\'ru\', $message, $data),\"\\n\";</code></pre><p>выведет</p><blockquote><p>Мария Ивановна Заподдубная будет счастлива видеть вас на дне рождения,<br> которое состоится 1 мая 2023 г. в 18:00 в кафе \"Голубка\"<br> по адресу улица Садовая, дом 2.</p></blockquote><details class=\"spoiler\"><summary>Соответственно, с другими данными</summary><div class=\"spoiler__content\"><pre><code class=\"php\">$data = [\n    \'host\' =&gt; \'Полковник Васин\',\n    \'host_gender\' =&gt; \'male\',\n    \'event_gender\' =&gt; \'other\',\n    \'event\' =&gt; \'посиделках\',\n    \'date\' =&gt; new DateTime(\'2023-05-01 18:00\'),\n    \'place\' =&gt; \'у него дома\',\n    \'address\' =&gt; \'Коммунистический тупик, дом 2\',\n];</code></pre><p>выведет</p><pre><code>Полковник Васин будет счастлив видеть вас на посиделках,\nкоторые состоятся 1 мая 2023 г. в 18:00 у него дома\nпо адресу Коммунистический тупик, дом 2.</code></pre><p></p></details><p>Также поддерживаются вложенные конструкции, например в каждую ветку select можно добавить свой plural, но если честно, то я не смог придумать жизненный пример, и поэтому просто скопирую из документации:</p><details class=\"spoiler\"><summary>Вложенные конструкции</summary><div class=\"spoiler__content\"><pre><code>{gender_of_host, select,\n  female {\n    {num_guests, plural, offset:1\n      =0 {{host} does not give a party.}\n      =1 {{host} invites {guest} to her party.}\n      =2 {{host} invites {guest} and one other person to her party.}\n      other {{host} invites {guest} and # other people to her party.}}}\n  male {\n    {num_guests, plural, offset:1\n      =0 {{host} does not give a party.}\n      =1 {{host} invites {guest} to his party.}\n      =2 {{host} invites {guest} and one other person to his party.}\n      other {{host} invites {guest} and # other people to his party.}}}\n  other {\n    {num_guests, plural, offset:1\n      =0 {{host} does not give a party.}\n      =1 {{host} invites {guest} to their party.}\n      =2 {{host} invites {guest} and one other person to their party.}\n      other {{host} invites {guest} and # other people to their party.}}}}</code></pre><p></p></details><h2>Экранирование</h2><p>Сделано довольно занятно, одинарными кавычками. Любой текст, заключенный в них, интерпретируется, как есть. Чтобы экранировать саму кавычку, её надо удвоить:</p><pre><code class=\"php\">echo msgfmt_format_message(\"ru\", \"{0} \'{0}\' O\'\'Neal\", [1]);\n// 1 {0} O\'Neal</code></pre><h2>Недостатки</h2><ul><li><p>Часто попадаются невнятные сообщения об ошибках. \"Creating message formatter failed\" и думай сам, что там не так. Но, справедливости ради, некоторые ошибки наоборот, вполне информативные, например \"pattern syntax error (parse error at offset 21\".</p></li><li><p>Отсутствие структурированной документации и примеров использования. </p></li><li><p>Ну и необходимость подключать расширение PHP, если оно ещё не подключено.</p></li></ul><h2>Заключение</h2><p>Как видно из приведенных выше примеров, данный механизм позволяет легко решать стандартные задачи, связанные со склонениями и перечислениями в русском (и других языках), а также форматировать текст с учётом локали, причем без подключения дополнительных библиотек. Некоторым минусом является отсутствие примеров конкретно для РНР, но я надеюсь что данная публикация немного восполнит этот пробел.  </p><p>Если у вас есть опыт использования данной библиотеки, то прошу поделиться им в комментариях. В частности, очень хочется научиться выводить римские цифры не отдельным классом, а прямо через MessageFormatter.</p><details class=\"spoiler\"><summary>Дополнительные материалы</summary><div class=\"spoiler__content\"><ul><li><p><a href=\"https://unicode-org.github.io/icu/userguide/format_parse/messages/\" rel=\"noopener noreferrer nofollow\">Официальная документация ICU</a></p></li><li><p><a href=\"https://www.php.net/manual/ru/book.intl.php\" rel=\"noopener noreferrer nofollow\">Документация модуля intl </a></p></li><li><p><a href=\"https://habr.com/ru/articles/264009/\" rel=\"noopener noreferrer nofollow\">Уже упоминавшееся руководство по Yii::t</a></p></li><li><p><a href=\"https://formatjs.io/docs/core-concepts/icu-syntax/\" rel=\"noopener noreferrer nofollow\">Неплохой туториал по базовым форматам</a></p></li><li><p><a href=\"https://lokalise.com/blog/complete-guide-to-icu-message-format/\" rel=\"noopener noreferrer nofollow\">Ещё один</a></p></li><li><p><a href=\"https://tolgee.io/platform/translation_process/icu_message_format\" rel=\"noopener noreferrer nofollow\">И ещё</a></p></li></ul><p></p></details><p></p>', 2, '2023-06-12 21:53:39', 736549, 75, '/ru/articles/740788/', 'Недавно я узнал про довольно интересный инструмент, встроенный в РНР. Оказывается, в языке нативно поддерживается универсальный формат шаблонов для сообщений, ICU Message Format. В частности, он используется в Symfony Translation Component  и в системе интернационализации фреймворка Yii 2. Однако этот функционал доступен и сам по себе, в чистом РНР. И может использоваться не только для создания многоязычных сайтов, но и в качестве простенького шаблонизатора, например для email-рассылок.'),
(124, 'Создание сервера для онлайн ММО игр на PHP ч. 10 — Открытый бесшовный мир в 2D игре и причем тут беспилотники', '<p>В этот раз я расскажу как удалось реализовать открытый бесшовный мир в горизонтально масштабируемой <a href=\"http://my-fantasy.ru/articles/frontend/index/eyJpZCI6Mn0=\" rel=\"noopener noreferrer nofollow\">2D онлайн игре</a>, а так же поделюсь идеей управления разведывательными беспилотными летательными аппаратами на огромных территориях.</p><h3>О проекте</h3><p>Для тех кто первый раз читает мои статьи — я разрабатываю <a href=\"http://my-fantasy.ru/articles/frontend/index/eyJpZCI6M30=\" rel=\"noopener noreferrer nofollow\">авторитарный сервер</a> игровой с управлением по <a href=\"http://my-fantasy.ru/articles/frontend/index/eyJpZCI6MTB9\" rel=\"noopener noreferrer nofollow\">API</a> и прикладным ПО для <a href=\"https://habr.com/ru/articles/725470/\" rel=\"noopener noreferrer nofollow\">редактирования карт</a>, <a href=\"https://habr.com/ru/articles/739576/\" rel=\"noopener noreferrer nofollow\">игровых механик</a> , управления догружаемым контентом (музыки, анимаций, диалогов, переводов) и рассказываю об этом <a href=\"https://habr.com/ru/users/webrobot/posts/\" rel=\"noopener noreferrer nofollow\">в серии статей</a>. Это будет единое игровое пространство (не комнаты), где NPC будут под управление искусственного интеллекта.</p><p>Это Российская разработка — аналог западных сервисов таких как Firebase, Photon, PlayFab, Mirror, RakNet, AWS GameLift (во всяком случае так мне ответила нейросеть ChatGPT).</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a02/ebe/2bd/a02ebe2bd589d0079af77d2c9a361962.png\" width=\"502\" height=\"546\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a02/ebe/2bd/a02ebe2bd589d0079af77d2c9a361962.png\"></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a36/0a0/010/a360a00102e6591416e71f88b1cc88c3.png\" width=\"770\" height=\"534\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a36/0a0/010/a360a00102e6591416e71f88b1cc88c3.png\"></figure><h3>Открытый мир </h3><p>Общий принцип открытого мира основана на том, что игра становится не линейной — мы можем отправиться куда нам хочется и обычно это сопряжено с побочными игровыми заданиями. Однако если мир огромен то для его полной загрузки и обработки потребуется очень много ресурсов компьютера. Эту проблему решают разбивая мир на отдельные локации переход между которыми сопряжен с загрузкой игры (во время которой обычно играет какая то анимация).</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a5e/629/b51/a5e629b51943138d14136bd6c11a557a.png\" alt=\"край локации игры Fallout справа внизу\" title=\"край локации игры Fallout справа внизу\" width=\"1920\" height=\"1080\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a5e/629/b51/a5e629b51943138d14136bd6c11a557a.png\"><div><figcaption>край локации игры Fallout справа внизу</figcaption></figure><h2>Бесшовный мир</h2><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f35/747/e06/f35747e06c60f322428939d9f560a8a1.png\" alt=\"мы видим соседние загруженные игровые локации\" title=\"мы видим соседние загруженные игровые локации\" width=\"1920\" height=\"1080\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f35/747/e06/f35747e06c60f322428939d9f560a8a1.png\"><div><figcaption>мы видим соседние загруженные игровые локации</figcaption></figure><p>С бесшовным миром все смотрится куда интереснее — находясь в определенной локации в память компьютера загружаются те локации которые вокруг нас при условии, что мы подходим к их границам. Часто используется туман в области, где локации не загружены (например мы далеко отошли от них и они удалены из оперативной памяти до момента пока мы не подойдем к ним ближе). В основном это используется для 3D игр.</p><h2>Моя реализация для 2D онлайн игры</h2><p>Я уже заранее позаботился что мир будет открытым и <a href=\"https://habr.com/ru/articles/670050/\" rel=\"noopener noreferrer nofollow\">масштабируемым</a> (где каждая локация может быть отдельно на физической машине), осталось придумать как сделать его бесшовным.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/063/d87/733/063d8773334a23830d143c87e3db9e94.png\" width=\"1900\" height=\"636\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/063/d87/733/063d8773334a23830d143c87e3db9e94.png\"></figure><p>Первое что пришло на ум — соединятся по <a href=\"https://habr.com/ru/articles/670296/\" rel=\"noopener noreferrer nofollow\">websoсket</a> каналу не только с сервером (локацией) где мы играем, но и со смежными. Однако от этой идеи пришлось сразу отказаться ведь не только клиенту (игроку), но и серверу (локации) где клиент играет нужно знать что происходит на соседних (например механика взрыва снаряда на границе локаций должна задеть и тех существ что будут на соседней локации возле границы). В итоге наш сервер‑локация всегда соединяется по websocket со смежными локациями (то есть сервер становится еще и клиентом). </p><p>Сразу появилась проблемы — сервер после перезагрузки подымается только если на нем кто то играет (пришлось реализовать внутреннее api для самих серверов который проверяет статус другого, перезагружает, останавливает и запускает выбранную сервер‑локацию), а так же проблема согласованности кто с кем должен соединятся тк соседние локации так же хотят соединится с нами образуя некую сеть (временным решением стало то, что тот сервер у которого сумма цифр в IP выше — тот и должен инициализировать соединение, а в случае если на одном физическом сервере несколько локаций — в дополнении проверим порт тк локации работают на разных портах в рамках одного физического сервера). </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/7e6/63a/4f9/7e663a4f95e404acc1b2bab9836533bc.png\" alt=\"Приоритетный сервер подымает локацию и инициирует соединение websocket с ней\" title=\"Приоритетный сервер подымает локацию и инициирует соединение websocket с ней\" width=\"1586\" height=\"412\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/7e6/63a/4f9/7e663a4f95e404acc1b2bab9836533bc.png\"><div><figcaption>Приоритетный сервер подымает локацию и инициирует соединение websocket с ней</figcaption></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/357/596/01f/35759601fba8a5b12aa5d833c8f3ba96.png\" alt=\"Соседняя локация на которой никого нет поднялась и приняла запрос на соединение с приоритетным сервером (где авторизовался игрок)\" title=\"Соседняя локация на которой никого нет поднялась и приняла запрос на соединение с приоритетным сервером (где авторизовался игрок)\" width=\"1688\" height=\"312\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/357/596/01f/35759601fba8a5b12aa5d833c8f3ba96.png\"><div><figcaption>Соседняя локация на которой никого нет поднялась и приняла запрос на соединение с приоритетным сервером (где авторизовался игрок)</figcaption></figure><p>Наш сервер где мы играем получает пакеты от соседних локаций что там происходит (тем сам обладает пониманием кто там есть) и уже ретранслирует всем клиентам игрокам, а так же рассылает пакеты соседним локациям что происходит у него.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f19/f73/a2b/f19f73a2bb42eba583a6988154517dab.png\" alt=\"Граница нескольких сервер-локаций\" title=\"Граница нескольких сервер-локаций\" width=\"1220\" height=\"986\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f19/f73/a2b/f19f73a2bb42eba583a6988154517dab.png\"><div><figcaption>Граница нескольких сервер-локаций</figcaption></figure><details class=\"spoiler\"><summary>У меня родилась идея что таким образом можно управлять беспилотниками на огромной территории</summary><div class=\"spoiler__content\"><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/647b2afd16968881a40e9b6b\" data-style=\"\" id=\"647b2afd16968881a40e9b6b\" width=\"\"><p></p></details><p>Осталось реализовать функционал перехода между серверами (они могут быть физически разными машинами). Идея следующая: </p><ul><li><p>Игрок отправляет на сервер команду на выход</p></li><li><p>Сервер сохраняет игрока в бд </p></li><li><p>Сервер убирает из массива существ находящихся на нем игрока, рассылаем всем команду что игрок удаляется с сервера</p></li><li><p>Клиенты получают команду что игрок отключается, ждут пару секунд и убирают со сцены данный «прафаб» (в Unity игровые сущности называются префабами) </p></li><li><p>Если за те пару секунд что клиенты ждут удаление префаба он появился в другой сервер локации — мы анимируем плавный переход границы</p></li></ul><p>В самой панели разработчика клиентской части (в настоящий момент использую Unity) локации и находящиеся в них существа (префабы) выглядят следующим образом.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/dbb/4e7/7a9/dbb4e77a9118bae05eba228767a02120.png\" alt=\"Группа слоев Map — содержит графику текущей (center) локации и соседней (left)\" title=\"Группа слоев Map — содержит графику текущей (center) локации и соседней (left)\" width=\"926\" height=\"778\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/dbb/4e7/7a9/dbb4e77a9118bae05eba228767a02120.png\"><div><figcaption>Группа слоев Map — содержит графику текущей (center) локации и соседней (left)</figcaption></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/c17/6b5/39e/c176b539e3332886d0d8621fdf98fa20.png\" alt=\"Группа слоев World — содержит прафабы текущей (center) локации и соседней (left)\" title=\"Группа слоев World — содержит прафабы текущей (center) локации и соседней (left)\" width=\"940\" height=\"806\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/c17/6b5/39e/c176b539e3332886d0d8621fdf98fa20.png\"><div><figcaption>Группа слоев World — содержит прафабы текущей (center) локации и соседней (left)</figcaption></figure><p>По итогу первых экспериментов переход между локациями получился не очень плавный, но в следующих статьях я расскажу как это исправить и как обрабатывать только тех существ которые видны игрокам. Демонстрация того что вышло на видео ниже:</p><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/647b303316968881a40e9e6b\" data-style=\"\" id=\"647b303316968881a40e9e6b\" width=\"\"><p>В завершении хочу сказать следующее: в очередной раз ища поддержки у нашего Российского государства на развитие проекта (я все делаю один из личных средств) столкнулся с критикой вида: «<em>один человек ничего не сможет — надо поддерживать компании т.к. у них есть команды</em>«, а в свою очередь представители бизнеса игровой индустрии <a href=\"https://www.kommersant.ru/doc/5357544\" rel=\"noopener noreferrer nofollow\">заявляют </a>что это долго и над подобными проектами трудятся сотни сотрудников западных компаний — куда нам до них. Тем самым сдаваясь еще не начав.</p><p>Я искренне верю что если у одного человека есть идея и стремление ее решить — он добьется успеха со временем. </p><p>Если вам интересно следить за реализацией проекта (адрес <a href=\"http://my-fantasy.ru/\" rel=\"noopener noreferrer nofollow\">my‑fantasy.ru</a>) — вы можете <a href=\"https://habr.com/ru/users/webrobot/posts/\" rel=\"noopener noreferrer nofollow\">подписаться на меня</a> и быть в курсе выхода новых статей.</p><p></p>', 1, '2023-06-12 21:53:40', 633075, 75, '/ru/articles/725466/', 'В этот раз я расскажу как удалось реализовать открытый бесшовный мир в горизонтально масштабируемой 2D онлайн игре, а так же поделюсь идеей управления разведывательными беспилотными летательными аппаратами на огромных территориях.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(125, 'Делюсь опытом участия в хакатоне от Совкомбанка', '<figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/327/37b/fdd/32737bfdd03257005aff1f43f91c4567.jpg\" alt=\"Сколково изнутри в 17:00\" title=\"Сколково изнутри в 17:00\" width=\"960\" height=\"1280\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/327/37b/fdd/32737bfdd03257005aff1f43f91c4567.jpg\" data-blurred=\"true\"><div><figcaption>Сколково изнутри в 17:00</figcaption></figure><p>Сегодня, я хочу поделиться опытом и рассказать про участие в командном <a href=\"https://scbteamchallenge.sk.ru/\" rel=\"noopener noreferrer nofollow\">хакатоне от совкомбанка</a>. Вкратце опишу задачу — командой до 5 человек сделать внутренний сервис для подбора персонала и ведения HR деятельности. Кому интересен опыт участия и немного изнанки хакатонов — прошу под кат).</p><h2>Подготовка — пол дела</h2><p>На первом этапе команду я решил собирать из участников прошлого хакатона в котором участвовал (<a href=\"https://webislife.ru/strokoff/hakaton-datsart-obzor-i-opyt-uchastiya/\" rel=\"noopener noreferrer nofollow\">DatsArt занял 46из340место</a>) и кинул клич в телеграм чате, сразу состав получился следующий: 2 frontend + 2 python + 1 java разработчики. Т.к мы собирались писать http приложение и в наши планы не входило писать REST API на java spring или python, я переключился на роль бекендера, который сделает апишки для веб мордочки и CRUD операциями над БД на php 8.2 + symfony, фронт сделает интерфейсы на vue 3.3 + TS + pinia, питонисты будут отвечать за алгоритм нахождения и подсчет релевантности в представленных резюме, а джавист напишет прослойку которая будет искать резюме на сторонних сайтах типа hh или superjob. Дополнительные сервисы планировались как отдельные HTTP сервисы в своих контейнерах. Об этом позже.</p><p>Перед хакатоном было достаточно времени, чтобы подготовиться, я немного успел почитать про разработку на Symfony и примерить на себя роль бекенд разработчика (кто со мной знаком, в курсе, что последние 10 лет я работаю фронтенд разработчиком\\тимлидом и для меня должность бекенд разработчика на симфони в новинку) Почему я не выбрал почти родной мне js\\ts? — цель хакатона не просто показать «смотри как могу на ноде» но и предоставить рабочий проект, который не стыдно будет поддерживать в ентерпрайзе и собеседовать людей не на свой велосипед на ноде, так что Symfony с ее документацией, доктриной и остальными возможностями — мне показались отличным вариантом. Также каждому разработчику я приобрел VDS на время хакатона + mysql бд как сервис.</p><h2>Веселые старты</h2><p>Не считая непривычной мне роли. На последней QA сессии перед хакатоном, организаторы донесли мысль, что Д<u>ИЗАЙН ПРЕЗЕНТАЦИИ ОЧЕНЬ ВАЖЕН</u> и я как капитан команды, принял неудобное для одного из разработчиков python решение — заменить на дизайнера. Добровольно никто место не хотел сдавать, а проигрывать мне не хотелось и пришлось принимать решение такое. Так к нам присоединился дизайнер интерфейсов, который подавал заявку на платформе CodenRock по нашему объявлению. </p><h2>Пол пути к победе</h2><p>В первый же день начала хакатона, после прочтения задания (а оно совпадало на 90% со спойлером задания) второй python разработчик говорит нам, что не хочет подвести команду и не вывезет и покидает нас) Я прошу организаторов конкурса вернуть нам первого python разработчика, такая вот сантабарбара) Но мы все же в полном составе проходим на старте хакатона.</p><p>Основные сущности в нашем проекте были Вакансии, Резюме, События (встречи, собеседования), заявки на согласование</p><ul><li><p>Вакансии — кого, куда, за сколько ищем</p></li><li><p>Резюме — складируем резюме кандидатов в свою БД для ведения отчетности и архива, позволяем выбирать кандидатов на вакансию из доступных резюме</p></li><li><p>События — абстрактные события — дата начала, участники, тип события (встреча, переговоры, собеседование)</p></li><li><p>Департаменты — сущность с title и возможностью прикреплять к ней учетки пользователей</p></li><li><p>Навыки — ключевые навыки которые проходят как теги сквозь пользователей, вакансии, резюме</p></li><li><p>Пользователи — с ролями и уровнями доступа, указанием в каком департаменте работает и какие навыки имеет.</p></li></ul><p>Логика работы очень простая, заводим вакансию, назначаем ответственного, ответственный добавляет резюме, отбирает кандидатов, назначает встречи и согласования + строим графики и всякие отчетики сколько успеем для красивого дешборда.</p><h2>На пол пути к победе</h2><p>На третий день хакатона мы имели рабочий <a href=\"https://mehunt.ru/api/doc\" rel=\"noopener noreferrer nofollow\">swagger</a> основные экраны для CRUD операций над сущностями, в сумме проработав часов 8 над кодом. Ниже приведу пример контроллера который у меня получался (они все одинаковые получились почти). Больше работать не получалось т. к. я не брал выходных на хакатон и полноценно работал на основной работе полный рабочий день. </p><details class=\"spoiler\"><summary>Пример ApiSkillsController.php</summary><div class=\"spoiler__content\"><pre><code class=\"php\">&lt;?php\n\nnamespace App\\Controller;\n\nuse App\\Entity\\Skill;\nuse Doctrine\\ORM\\EntityManagerInterface;\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;\nuse Symfony\\Component\\HttpFoundation\\JsonResponse;\nuse Symfony\\Component\\Routing\\Annotation\\Route;\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse OpenApi\\Attributes as OAT;\nuse Symfony\\Component\\Validator\\Validator\\ValidatorInterface;\nuse Symfony\\Component\\Security\\Http\\Attribute\\IsGranted;\nuse App\\Service\\ApiFrontendService;\n\nclass ApiSkillsController extends AbstractController\n{\n    private ApiFrontendService $apiFrontendService;\n    public function __construct(EntityManagerInterface $entityManager, ValidatorInterface $validator) {\n        $this-&gt;apiFrontendService = new ApiFrontendService($entityManager, $validator);\n    }\n    /**\n     * Список навыков\n     */\n    #[OAT\\Get(\n        path: \'/api/skills\',\n        security: [\'X-AUTH-TOKEN\'],\n        operationId: \'app_api_skill\',\n        description: \'Список всех навыков\',\n        tags: [\'Skills\'],\n        responses: [\n            new OAT\\Response(\n                response: 200,\n                description: \'All skills\',\n                content: new OAT\\JsonContent(\n                    type: \'array\',\n                    items: new OAT\\Items(ref: \"#/components/schemas/Skill\")\n                )\n            ),\n        ]\n    )]\n    #[IsGranted(\'ROLE_USER\')]\n    #[Route(\'/api/skills\', name: \'app_api_skill\', methods: [\'GET\'])]\n    public function index(): JsonResponse\n    {\n        return $this-&gt;apiFrontendService-&gt;getAllEntity(\'App\\Entity\\Skill\');\n    }\n\n    /**\n     * Создание навыка.\n     */\n    #[OAT\\Post(\n        path: \'/api/skills\',\n        security: [\'X-AUTH-TOKEN\'],\n        operationId: \'app_api_skill_create\',\n        description: \'Заведение нового навыка\',\n        tags: [\'Skills\'],\n        parameters: [\n            new OAT\\RequestBody(\n                required: true,\n                content: new OAT\\JsonContent(ref: \"#/components/schemas/Skill\")\n                   \n            )],\n        responses: [\n            new OAT\\Response(\n                response: 200,\n                description: \'Entity созданного навыка\',\n                content: new OAT\\JsonContent(\n                    type: \'array\',\n                    items: new OAT\\Items(ref: \"#/components/schemas/Skill\")\n                )\n            ),\n        ]\n    )\n    ]\n    #[IsGranted(\'ROLE_USER\')]\n    #[Route(\'/api/skills\', name: \'app_api_skill_create\', methods: [\'POST\'])]\n    public function create(Request $request, EntityManagerInterface $em, ValidatorInterface $validator): JsonResponse\n    {\n        $rq = json_decode($request-&gt;getContent());\n        $skill = new Skill();\n        $skill-&gt;setTitle($rq-&gt;title);\n       \n        $errors = $validator-&gt;validate($skill);\n        if (count($errors) &gt; 0) {\n            return new JsonResponse([\n                \'errors\' =&gt; array_map(function ($error) {\n                    return [\n                        \'property\' =&gt; $error-&gt;getPropertyPath(),\n                        \'message\' =&gt; $error-&gt;getMessage()\n                    ];\n                }, iterator_to_array($errors))\n            ]);\n        }\n        $em-&gt;getRepository(Skill::class)-&gt;save($skill, true);\n\n        return new JsonResponse([\n            \'data\' =&gt; $skill-&gt;asArray(),\n            \'errors\' =&gt; []\n        ]);\n    }\n\n    /**\n     * Редактирование навыка.\n     */\n    #[OAT\\Put(\n        path: \'/api/skills/{id}\',\n        security: [\'X-AUTH-TOKEN\'],\n        operationId: \'app_api_skill_edit\',\n        description: \'Редактирование навыка\',\n        tags: [\'Skills\'],\n        parameters: [\n            new OAT\\RequestBody(\n                required: true,\n                content: new OAT\\JsonContent(ref: \"#/components/schemas/Skill\")\n                   \n            )],\n        responses: [\n            new OAT\\Response(\n                response: 200,\n                description: \'Entity навыка\',\n                content: new OAT\\JsonContent(\n                    type: \'array\',\n                    items: new OAT\\Items(ref: \"#/components/schemas/Skill\")\n                )\n            ),\n        ]\n    )]\n    #[IsGranted(\'ROLE_USER\')]\n    #[Route(\'/api/skills/{id}\', name: \'app_api_skill_edit\', methods: [\'PUT\'])]\n    public function editDepartament(int $id, Request $request, EntityManagerInterface $em, ValidatorInterface $validator): JsonResponse\n    {\n        $rq = json_decode($request-&gt;getContent());\n        $repo = $em-&gt;getRepository(Skill::class);\n        $departament = $repo-&gt;findOneBy([\n            \'id\' =&gt; $id\n        ]);\n        if(!$departament) {\n            return new JsonResponse([\n                \'errors\' =&gt; [\'Invalid ID\']\n            ]);\n        }\n        $departament-&gt;setTitle($rq-&gt;title);\n        $errors = $validator-&gt;validate($departament);\n        if (count($errors) &gt; 0) {\n            return new JsonResponse([\n                \'errors\' =&gt; array_map(function ($error) {\n                    return [\n                        \'property\' =&gt; $error-&gt;getPropertyPath(),\n                        \'message\' =&gt; $error-&gt;getMessage()\n                    ];\n                }, iterator_to_array($errors))\n            ]);\n        }\n        $repo-&gt;save($departament, true);\n        \n        return new JsonResponse([\n            \'data\' =&gt; $departament-&gt;asArray(),\n            \'errors\' =&gt; []\n        ]);\n    }\n\n    /**\n     * Получение навыка по ID\n     */\n    #[OAT\\Get(\n        path: \'/api/skills/{id}\',\n        description: \'Получение навыка по ID\',\n        tags: [\'Skills\'],\n        responses: [\n            new OAT\\Response(\n                response: 200,\n                description: \'Departament entity\',\n                content: new OAT\\JsonContent(ref: \"#/components/schemas/Skill\")\n            ),\n        ]\n    )]\n    #[IsGranted(\'ROLE_USER\')]\n    #[Route(\'/api/skills/{id}\', methods: [\'GET\'])]\n    public function get(int $id): JsonResponse\n    {\n        return $this-&gt;apiFrontendService-&gt;getEntityById(\'App\\Entity\\Skill\', $id);\n    }\n}\n</code></pre><p></p></details><p>Очень понравилось использовать <code>OpenApi\\Attributes</code> — прописываешь атрибуты прямо рядом с кодом и документация строится сама! Очень круто! Если кто подскажет на хабре, как сделать так чтобы <code>Shemas</code> генерировались с <code>Entity</code> и их не приходилось писать в <code>nelmio_api_doc.yaml</code>, будет очень хорошо) Также для уменьшения кода я сделал простенький сервис для типовых операций</p><details class=\"spoiler\"><summary>ApiFrontendService.php</summary><div class=\"spoiler__content\"><pre><code class=\"php\">&lt;?php\nnamespace App\\Service;\nuse Doctrine\\ORM\\EntityManagerInterface;\nuse Symfony\\Component\\HttpFoundation\\JsonResponse;\nuse Symfony\\Component\\Validator\\Validator\\ValidatorInterface;\n\n/**\n * Frontend сервис для унификации ответов JSON\n */\nclass ApiFrontendService\n{\n    private EntityManagerInterface $entityManager;\n    private ValidatorInterface $validator;\n    \n    public function __construct(EntityManagerInterface $entityManager, ValidatorInterface $validator)\n    {\n        $this-&gt;entityManager = $entityManager;\n        $this-&gt;validator = $validator;\n    }\n\n    /**\n     * Получение Entity по Entity.ID\n     * @return JsonResponse(Entity[])\n     */\n    public function getAllEntity(string $className): JsonResponse\n    {\n        return new JsonResponse(\n            array_map(function($entity) {\n                return $entity-&gt;asArray();\n            }, $this-&gt;entityManager-&gt;getRepository($className)-&gt;findAll())\n        );\n    }\n\n    /**\n     * Получение Entity по критерию\n     * @return JsonResponse(Entity[])\n     */\n    public function getEntityListByCriteria(string $className, array $criteria): JsonResponse\n    {\n        return new JsonResponse(\n            array_map(function($entity) {\n                return $entity-&gt;asArray();\n            }, $this-&gt;entityManager-&gt;getRepository($className)-&gt;findBy($criteria))\n        );\n    }\n\n    /**\n     * Получение Entity по наличию memberValue в memberProp \n     * @return JsonResponse(Entity[])\n     */\n    public function getEntityMembersColllection(string $className, string $propName, int $memberValue): JsonResponse\n    {\n        $members = $this-&gt;entityManager-&gt;getRepository($className)-&gt;createQueryBuilder(\'e\')\n            -&gt;where(\':memeber_value MEMBER OF e.\'.$propName)\n            -&gt;setParameter(\'memeber_value\', $memberValue)\n            -&gt;getQuery()\n            -&gt;getResult();\n        if(!$members) {\n            return new JsonResponse(null, 200);\n        }\n        return new JsonResponse(array_map(function($entity) {\n            return $entity-&gt;asArray();\n        }, $members));\n    }\n\n    /**\n     * Получение Entity по Entity.ID\n     * @return JsonResponse(Entity)\n     */\n    public function getEntityById(string $className, int $id): JsonResponse\n    {\n        $entity = $this-&gt;entityManager-&gt;getRepository($className)-&gt;findOneBy([\n            \'id\' =&gt; $id\n        ]);\n        if (!$entity) {\n            return new JsonResponse(null, 404);\n        }\n        return new JsonResponse($entity-&gt;asArray());\n    }\n\n    /**\n     * Сохранние сущности\n     * @return JsonResponse(Entity|Errors[{property:string,message:string}])\n     */\n    public function saveEntity(string $className, $entity): JsonResponse\n    {\n        $errors = $this-&gt;validator-&gt;validate($entity);\n\n        if (count($errors) &gt; 0) {\n            return new JsonResponse([\n                \'errors\' =&gt; array_map(function ($error) {\n                    return [\n                        \'property\' =&gt; $error-&gt;getPropertyPath(),\n                        \'message\' =&gt; $error-&gt;getMessage()\n                    ];\n                }, iterator_to_array($errors))\n            ], 400);\n        }\n        \n        $this-&gt;entityManager-&gt;getRepository($className)-&gt;save($entity, true);\n\n        return new JsonResponse($entity-&gt;asArray(), 200);\n    }\n}</code></pre><p></p></details><p>Был еще вариант использовать <a href=\"https://symfony.com/doc/current/the-fast-track/ru/26-api.html\" rel=\"noopener noreferrer nofollow\">api‑platform</a>, но меня он испугал своими правилами для его кастомизации помимо CRUD, уж слишком много кода чтобы описать 1 action для API, профит с генерацией CRUD не перебивает оверхед с возней с этим бандлом в дальнейшем, по крайней мере во время хакатона у меня)</p><p>На фронте помимо формочек, все работало через набор pinia stores, пример одного из сторов на фронте. В остальном же обычный бутстрап, не вижу смысла показывать листинг. Ссылка покликать наш результат есть в конце статьи.</p><details class=\"spoiler\"><summary>UsersStore.ts</summary><div class=\"spoiler__content\"><pre><code class=\"typescript\">import { ref } from \'vue\'\nimport { defineStore } from \'pinia\'\nimport http from \'@/http\';\nexport const useUsersStore = defineStore(\'users\', () =&gt; {\n    /**\n     * Список пользователей\n     */\n    const list = ref([] as any[]);\n\n    /**\n     * Загрузка списка пользователей\n     * @returns Promise&lt;AxiosResponse&gt; with Users[] entity\n     */\n    const fetchList = async function fetchList():Promise&lt;any[]&gt; {\n        const response = await http.get(\'/api/users\');\n        if(response.status === 200 &amp;&amp; response.data) {\n            list.value = response.data;\n        }\n        return response.data;\n    };\n\n    /**\n     * Получение профиля пользователя по ID\n     * @param id User.id\n     * @returns Promise&lt;AxiosResponse&gt; with User entity\n     */\n    const fetchUser = async function fetchUser(id:number):Promise&lt;any&gt; {\n        return await http.get(`/api/user/${id}`);\n    };\n    \n    /**\n     * Создание нового пользователя\n     * @param user object\n     * @returns Promise&lt;AxiosResponse&gt; with User entity\n     */\n    const create = async (user:any):Promise&lt;any&gt; =&gt; await http.post(\'/api/users/new\', user);\n\n    /**\n     * Редактирование пользователя\n     * @param id number\n     * @param user object\n     * @returns Promise&lt;AxiosResponse&gt; with User entity\n     */\n    const update = async (id:number, user:any):Promise&lt;any&gt; =&gt; await http.put(`/api/users/${id}`, user);\n\n    /**\n     * Фильтр по пользователю\n     * @param id number userId\n     * @returns Users[]\n     */\n    const getUserById = (id:Number) =&gt; {\n        return list.value.filter(u =&gt; u.id === id)[0];\n    }\n\n  return { list, fetchList, fetchUser, create, update, getUserById }\n});\n</code></pre><p></p></details><p>Первые 3 дня я не особо синхронизировался с командой, делая упор на выдачу документации к API и скорейшей интеграции с их сервисами. На третий день, интересуясь, что сделали ребята (python и java) я выясняю, что сделали — ничего. И ничего делать в целом не будут.Причины я выяснять не стал, как и обсуждать их решение. В этот момент я понимаю, что нас теперь условно трое) дизайнер, фронтенд и я. Принимаю решение продолжать работу, но уже беру на себя часть интерфейсов связанных с созданием вакансии и их наполнением фикстурами переключаю свое внимание на то, чтобы хотябы экраны в минимальном виде у нас все были и работали или что‑то показывали. В место внешнего сервиса на python, берем моки с stats.hh.ru и строим псевдоаналитику уже, частично на моках и частично на реальных данных (что мы сами добавили в сервис).</p><h2>День перед финалом</h2><p>За день до окончания хакатона, у нас было готово все в очень сыром виде, из неготовых частей оставлась ролевая модель (разграничить доступы для пользователей т.к. весь хакатон просидели под админом), нужно было сделать мини сводку (воронку) на странице вакансии.</p><details class=\"spoiler\"><summary>Пример просмотра вакансии</summary><div class=\"spoiler__content\"><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/905/9cf/6ab/9059cf6ab998591633d5879a998155e0.png\" alt=\"Экран просмотра вакансии\" title=\"Экран просмотра вакансии\" width=\"2880\" height=\"1588\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/905/9cf/6ab/9059cf6ab998591633d5879a998155e0.png\"><div><figcaption>Экран просмотра вакансии</figcaption></figure><p>Список резюме:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/99d/4ef/aab/99d4efaabcc7f370da672e1177481358.png\" alt=\"Экран со списком резюме\" title=\"Экран со списком резюме\" width=\"2870\" height=\"1562\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/99d/4ef/aab/99d4efaabcc7f370da672e1177481358.png\"><div><figcaption>Экран со списком резюме</figcaption></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/863/f03/180/863f0318059e1d7ecba617025eb1f92e.png\" alt=\"Стартовый экран пользователя\" title=\"Стартовый экран пользователя\" width=\"2874\" height=\"1548\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/863/f03/180/863f0318059e1d7ecba617025eb1f92e.png\"><div><figcaption>Стартовый экран пользователя</figcaption></figure><p></p></details><p>Дизайнер за время хакатона нарисовал SVG-логотип и подготовил пачку аватарок нагенерированных нейросетью. Весь остальной дизайн это просто bootstrap.</p><h2>Финал и подведение итогов</h2><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/25d/449/39a/25d44939add3748241f5cbb229becbc9.png\" alt=\"Краткая статистика хакатона\" title=\"Краткая статистика хакатона\" width=\"1348\" height=\"592\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/25d/449/39a/25d44939add3748241f5cbb229becbc9.png\"><div><figcaption>Краткая статистика хакатона</figcaption></figure><p>Из 216 команд, которые в итоге осилили 42 решений, в финал прошли 13, а наше решение попало в ТОП 10 на 9 место. Из сильных сторон нашего решения отметили легкость поднятия проекта (<code>npm run dev</code>на фронте и <code>symfony server:start</code>для бекенда) Наличие `docker‑compose` файла для деплоя и <code>taskfile.yaml</code> как общий набор команд для репозитория. Также отметили подход к авторизации через <code>X-AUTH-TOKEN</code> в заголовках, саму реализацию токена мы вынесли за рамки проекта и подразумевали, что нам токен отдаст внешний сервис авторизации внутри банковской системы. Из слабых — общая недоделанность аналитики и воронки кандидатов, слабая проработка ролевой модели. Потыкать интерфейсы можно на демо стенде <a href=\"https://mehunt.ru\" rel=\"noopener noreferrer nofollow\">mehunt.ru</a>. Из подарков для топ 10 участников презентовали набор мерча — толстовка\\рюкзак\\сумка на пояс и футболка — но по факту дали всем только сумки на пояс и футболки + грамота и пакет) вроде и мелочи, но это в целом единственный момент который меня смутил в организации. Еще смутило само Сколково, такой огромный город который типа заброшенного, только не заброшенный, просто пустой ТЦ с редкими зеваками, но это к самому хакатону отношения не имеет.</p><p>Пару слов о команде победителей — на мой взгляд заслуженные и единственные участники, кто настолько серьезно подошел к решению задачи и выполнили все в срок с кучей фишек. Ребята брали отпуска с основной работы, много хакатонили и мало спали) + были сработаны в других хакатонах. Так что заслуженное первое место с приличным отрывом.</p><p>Выводы которые я сделал для себя</p><ol><li><p>Лучше готовиться с командой, не просто обсудить, но и тестово что‑то поделать.</p></li><li><p>Как капитан команды больше уделять времени пояснениям и составлению ТЗ для менее опытных коллег, чтобы они не простаивали</p></li><li><p>Постоянная связь и поддержка внутри команды очень важны</p></li><li><p>Иметь заготовки для типичных и операций, а также базовые докер контейнеры — очень полезно</p></li><li><p>Больше внимания уделять самой аналитике и консультациям со специалистами по теме хакатона, это сильно помогает.</p></li><li><p>Если серьезно рассчитываешь на победу, нужно брать отгул на основной работе в таких хакатонах, иначе по времени просто не вывезешь.</p></li></ol><p>Буду рад ответить на ваши вопросы и комментарии) а также найти желающих принимать совместное участие в хакатонах в любой роли, ну или я готов присоединиться к вам ) welcome in tg @dstrokov</p><p><strong>P. S.</strong> Пост про релиз веб‑компонента wc‑wysiwyg будет совсем скоро, публичный черновик поста уже доступен на webislife.ru, а сам релиз в гите уже 1.0.4:) </p><p></p>', 3, '2023-06-12 21:53:40', 413687, 76, '/ru/articles/739350/', 'Сегодня, я хочу поделиться опытом и рассказать про участие в хакатоне от совкомбанка. Подробнее про хакатон можно почитать тут. Для лл я вкратце опишу задачу — командой до 5 человек сделать внутренний сервис для подбора персонала и ведения HR деятельности.'),
(126, 'Создание сервера для онлайн ММО игр на PHP ч. 9 — Игровые серверные механики', '<p>После успешной оптимизации<a href=\"https://habr.com/ru/articles/739516/\" rel=\"noopener noreferrer nofollow\"> клиентской части</a> и <a href=\"https://habr.com/ru/articles/706678/\" rel=\"noopener noreferrer nofollow\">серверной архитектуры</a> пришла пора писать механики самой игры для взаимодействия по API — я называю их <strong>событиями</strong> (они вешаются на какой либо игровой объект на сервере, помещаются в очередь и срабатывают когда придет их время). </p><p>Суть работы взаимодействия авторитарного сервера и клиентской части следующая:</p><ol><li><p>Мы создаем группу в которой будут собраны некие игровые механики (например идти в указанную точку, идти в указанном направлении, идти за указанным объектом).</p></li><li><p>Мы указываем таймаут вызова механик этой группы в секундах или в виде кода по результатам которого будет выдано число с плавающей точкой (например пауза между движениями <code>1 / скорость * магнитуду направлении</code>, но она может быть и 0 — например на механику получения урона).</p></li><li><p>Мы указываем может ли игрок вызвать механику напрямую (если нет — ее можно будет вызвать лишь из другой механик, например вызов механики получения урона при атаке).</p></li><li><p>Мы можем указать какие дополнительные параметры могут быть при вызове механики (например объем регенерации жизней или объем урона).</p></li><li><p>Мы указываем нужно ли рассылать пакет с данными когда механика будет применятся на каком либо существе (например можно высылать время таймаута, доп параметры механики такие как объем урона).</p></li><li><p>И наконец мы указываем сам код механики который манипулирует параметрами объекта на котором механика сработала и теми объектами которые на карте.</p></li><li><p>Дополнительно можно указать — нужно ли вешать событие на то же существо когда оно отработает (например регенерацию — нужно).</p></li></ol><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/099/0fe/754/0990fe754e9a0aa600bea6a52de46a8f.png\" alt=\"Пример создания группы игровой механики\" title=\"Пример создания группы игровой механики\" width=\"1920\" height=\"1080\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/099/0fe/754/0990fe754e9a0aa600bea6a52de46a8f.png\"><div><figcaption>Пример создания группы игровой механики</figcaption></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/16c/0df/9ea/16c0df9eab154dc8fea28e480c57c8fa.png\" alt=\"пример нескольких игровых механик в одной группе\" title=\"пример нескольких игровых механик в одной группе\" width=\"1920\" height=\"1080\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/16c/0df/9ea/16c0df9eab154dc8fea28e480c57c8fa.png\"><div><figcaption>пример нескольких игровых механик в одной группе</figcaption></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/544/8f1/8a8/5448f18a875d800798a53931726b4f94.png\" alt=\"пример кода при создание игровой механики в группе механик\" title=\"пример кода при создание игровой механики в группе механик\" width=\"1674\" height=\"1008\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/544/8f1/8a8/5448f18a875d800798a53931726b4f94.png\"><div><figcaption>пример кода при создание игровой механики в группе механик</figcaption></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/4e4/8f2/14f/4e48f214f94efa9ca3791316bd8f5562.png\" alt=\"Пример кода добавления простой механик на LUA\" title=\"Пример кода добавления простой механик на LUA\" width=\"1558\" height=\"890\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/4e4/8f2/14f/4e48f214f94efa9ca3791316bd8f5562.png\"><div><figcaption>Пример кода добавления простой механик на LUA</figcaption></figure><p>Таким образом можно создать множество механик которые могут быть вызваны через отправку пакета по <a href=\"https://habr.com/ru/articles/670296/\" rel=\"noopener noreferrer nofollow\">Websocket соединению</a> со стороны клиента, а так же вызваны по цепочки внутри друг друга. Плюс ко всему мы можем менять код их работы не меняя ничего в клиенте (если это не затрагивает какую то визуальную часть которая еще не реализована).</p><p>При замерах скорости работы на VPS с 2мя ядрами процессора и 4GB оперативной памяти результаты стремятся к 1.000.000 RPS и это только на CPU (в будущем я планирую внедрить параллельные вычисления на GPU), хотя имеются и долгие механики такие как:</p><ul><li><p>сохранение в БД игрока (несмотря на то что оно уже асинхронно делается)</p></li><li><p>расчет поиска пути при движении до точки</p></li></ul><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/318/4ff/9c7/3184ff9c7da5473d40c0e9342a3d2296.png\" alt=\"скорость выполнение игровых механик на сервере\" title=\"скорость выполнение игровых механик на сервере\" width=\"1222\" height=\"994\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/318/4ff/9c7/3184ff9c7da5473d40c0e9342a3d2296.png\"><div><figcaption>скорость выполнение игровых механик на сервере</figcaption></figure><p>В предыдущей статья я рассказал о <a href=\"https://habr.com/ru/articles/670050/\" rel=\"noopener noreferrer nofollow\">горизонтальном масштабировании игрового сервера</a>, так что при достижении работы с сервера к 60FPS (на примере выше он 1000FPS) можно переложить вычисления части открытого мира на другое железо (об открытом бесшовном мире я расскажу в следующих статьях которые вы сможете найти в <a href=\"https://habr.com/ru/users/webrobot/posts/\" rel=\"noopener noreferrer nofollow\">моем профиле</a>).</p><p>В заключение я подготовил пару коротких и не только видео с демонстрацией кода и работы игровых механик проекта (доступен демо доступ на сайте <a href=\"http://my-fantasy.ru/\" rel=\"noopener noreferrer nofollow\">my-fantasy.ru</a>). Впереди еще долгий путь в котором надо будет разрабатывать механики для MMO RPG связанные с физикой.</p><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/647a234d042a6981e82e840f\" data-style=\"\" id=\"647a234d042a6981e82e840f\" width=\"\"><p> </p><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/647a238a90eeb681b257a0f2\" data-style=\"\" id=\"647a238a90eeb681b257a0f2\" width=\"\"><p></p>', 2, '2023-06-12 21:53:41', 386518, 75, '/ru/articles/739576/', 'После успешной оптимизации клиентской части и серверной архитектуры пришла пора писать механики самой игры для взаимодействия по API — я называю их событиями (они вешаются на какой либо игровой объект на сервере, помещаются в очередь и срабатывают когда придет их время). Суть работы взаимодействия сервера и клиентской части следующая:');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(127, 'Кто до сих пор использует PHP?', '<a href=\"https://habr.com/ru/companies/ruvds/articles/739042/\"><div style=\"text-align:center;\"><img src=\"https://habrastorage.org/r/w1560/webt/k8/jp/l0/k8jpl04ora_mk-v2az3dktgl9fw.png\" data-src=\"https://habrastorage.org/webt/k8/jp/l0/k8jpl04ora_mk-v2az3dktgl9fw.png\"></a><br>\r\nСвой путь в сфере разработки я начала с языка PHP, но позднее в индустрии программирования акцент сместился в сторону JavaScript. Отчасти причина в том, что фронтенд-составляющая веб-среды так или иначе работает именно на JS. В этой сфере я провела последние десять лет.<br>\r\n<br>\r\nНедавно мне подвернулась кое-какая работа, связанная с PHP. Поначалу я была удивлена, ведь за этим языком закрепилась дурная слава – преимущественно из-за его ассоциирования с устаревшими проектами WordPress (и всеми вытекающими из этого уязвимостями). Но WordPress – это всё же не PHP.<br>\r\n<br>\r\nВ общем мне стало любопытно. Кто они – те люди, которые до сих пор используют PHP? Почему они это делают? И как этот опыт можно сравнить с моим скромным миром серверных проектов на JS?<a name=\"habracut\"></a><br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/webt/ji/d5/oj/jid5ojhmmalh6a-_1rl-hf27v9c.png\" data-src=\"https://habrastorage.org/webt/ji/d5/oj/jid5ojhmmalh6a-_1rl-hf27v9c.png\"><br>\r\n<i><font color=\"#999999\"><a href=\"https://www.ishir.com/blog/4969/will-php-dead-soon.htm\">Грозит ли PHP скорое вымирание?</a></font></i><br>\r\n<br>\r\n<h2><font color=\"#3AC1EF\">Эволюция PHP и его текущее положение в мире</font></h2><br>\r\nЯзык PHP, который изначально подразумевал «Personal Home Page» (личная домашняя страница), а теперь трактуется как «PHP: Hypertext Preprocessor» (PHP: препроцессор гипертекста), был <a href=\"https://www.php.net/history\">разработан в 1994 году Расмусом Лердорфом</a>. Поначалу он представлял собой простой набор скриптов Perl для поддержания личной страницы Лердорфа. Со временем же PHP вырос в полнофункциональный скриптовый язык, ставший основой миллионов сайтов по всему миру.<br>\r\n<br>\r\nС момента своего появления PHP прошёл несколько значительных этапов развития:<br>\r\n<br>\r\n<ul>\r\n<li><a href=\"https://www.php.net/releases/3_0_0.php\">PHP 3</a> (1998): с этим релизом, благодаря сотрудничеству Лердорфа с двумя израильскими разработчиками – Зеевом Сураски и Энди Гутмансом – язык обрёл более надёжную скриптовую форму.</li>\r\n<li><a href=\"https://www.php.net/releases/4_0_0.php\">PHP 4</a> (2000): в этой версии был внедрён механизм Zend Engine, скриптовый движок, который повысил производительность PHP и сделал его более расширяемым.</li>\r\n<li><a href=\"https://www.php.net/releases/5_0_0.php\">PHP 5</a> (2004): этот релиз привнёс значительные доработки, включая поддержку объектно-ориентированного программирования (ООП), которое позволило разработчикам создавать более организованный и удобный в обслуживании код.</li>\r\n<li><a href=\"https://www.php.net/releases/7_0_0.php\">PHP 7</a> (2015): ввиду определённых внутренних сложностей в команде разработки версия PHP 6 была пропущена. Что же касается PHP 7, то она обеспечила значительный прирост производительности, а также предложила ряд новых функций, таких как оператор трёхстороннего сравнения и оператор объединения с неопределённым значением. Помимо этого, в ней была реализована более строгая система типизации и обработки ошибок.</li>\r\n<li><a href=\"https://www.php.net/releases/8.0\">PHP 8</a> (2020): это последний старший релиз, в котором было добавлено несколько новых функций и оптимизаций, о которых я расскажу далее.</li>\r\n</ul><br>\r\nЗа время своего существования PHP впитал множество <a href=\"https://www.sitepoint.com/php-7-1-7-2-7-3-feature-comparison\">современных практик написания кода</a>, что сделало его более гибким и податливым для разработчиков языком. Поворотным моментом стало внедрение в PHP 5 принципов ООП, что позволило создавать более обслуживаемый и переиспользуемый код.<br>\r\n<br>\r\nЕщё одним значительным улучшением стало внедрение <a href=\"https://getcomposer.org/doc/00-intro.md\">Composer</a>, менеджера зависимостей, который упростил использование в проектах PHP сторонних библиотек.<br>\r\n<br>\r\nСообщество PHP также утвердило <a href=\"https://www.php-fig.org/psr\">стандартные рекомендации к языку</a> (PSR, PHP Standard Recommendations) с целью продвижения лучших практик и правил написания кода. PSR охватывает различные аспекты разработки, такие как стили программирования, автозагрузка и промежуточное ПО, направленные на обеспечение согласованности и функциональной совместимости проектов PHP.<br>\r\n<br>\r\n<h2><font color=\"#3AC1EF\">Текущее состояние PHP</font></h2><br>\r\n<h3><font color=\"#3AC1EF\">▍ JIT-компилятор</font></h3><br>\r\nОдной из наиболее выдающихся возможностей PHP 8 является <a href=\"https://www.php.net/manual/en/opcache.jit.php\">динамический (JIT, just in time) компилятор</a>. Он компилирует программу в машинный код во время выполнения, что способствует значительному повышению быстродействия в определённых видах приложений, таких как вычислительно нагруженные задачи или длительно выполняющиеся скрипты командной строки. И хотя JIT-компилятор не оказывает существенного влияния на скорость работы веб-приложений, он является очередным эволюционным шагом PHP и демонстрирует стремление этого языка к модернизации.<br>\r\n<br>\r\n<h3><font color=\"#3AC1EF\">▍ Атрибуты</font></h3><br>\r\nВ PHP 8 появились <a href=\"https://stitcher.io/blog/new-in-php-8#attributes-rfc\">атрибуты</a>, также называемые аннотациями, которые позволили разработчикам добавлять метаданные в классы, методы, свойства и прочие конструкции языка. Атрибуты могут упрощать и разгружать программу, заменяя громоздкие аннотации DocBlock и позволяя писать более выразительный код. Обычно они используются во фреймворках и библиотеках для реализации таких аспектов, как маршрутизация, валидация и внедрение зависимостей.<br>\r\n<br>\r\n<h3><font color=\"#3AC1EF\">▍ Типы объединения и прочие нововведения</font><br>\r\n</h3><br>\r\nОбъединения типов (union types) ставшие ещё одним новшеством в PHP 8, позволяют <a href=\"https://www.php.net/manual/en/language.types.declarations.php#language.types.declarations.union\">указывать несколько типов</a> для одной переменной, параметра или возвращаемого значения. Эта функция повышает эффективность подсказок при вводе кода, а также делает его более читаемым и надёжным.<br>\r\n<br>\r\nК прочим новшествам PHP 8 также относятся <a href=\"https://www.php.net/manual/en/functions.arguments.php#functions.named-arguments\">именованные аргументы</a>, <a href=\"https://stitcher.io/blog/new-in-php-8#constructor-property-promotion-rfc\">продвижение свойств конструктора</a> и <a href=\"https://www.php.net/manual/en/language.oop5.nullsafe.php\">оператор nullsafe</a>, все из которых делают PHP более современным и выразительным языком.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/webt/gz/gf/7z/gzgf7zxtg3a2muwgodwwjcjin2k.png\" data-src=\"https://habrastorage.org/webt/gz/gf/7z/gzgf7zxtg3a2muwgodwwjcjin2k.png\"><br>\r\n<br>\r\n<h2><font color=\"#3AC1EF\">Достоинства PHP</font></h2><br>\r\nНиже я в сжатой форме перечислила сильные стороны этого языка.<br>\r\n<br>\r\n<h3><font color=\"#3AC1EF\">▍ Простота и лёгкость освоения</font></h3><br>\r\nОдним из наиболее значительных преимуществ PHP является его <a href=\"https://www.cloudways.com/blog/reasons-to-choose-php/\">простота и скорость освоения</a>. Этот язык создавался с учётом доступности для начинающих и несёт в себе простой синтаксис, который позволяет быстро вникнуть в суть и начать писать функциональный код. Такой низкий порог вхождения способствовал широкому распространению PHP и его популярности среди веб-разработчиков.<br>\r\n<br>\r\n<h3><font color=\"#3AC1EF\">▍ Богатая встроенная функциональность</font></h3><br>\r\nPHP предлагает множество <a href=\"https://www.php.net/manual/en/funcref.php\">встроенных возможностей</a>, которые упрощают работу с типичными задачами вроде управления строками, вычисления даты и времени, обработки файлов. Эта функциональность уменьшает потребность во внешних библиотеках и упрощает разработку, позволяя программистам сосредотачивать усилия на реализации основных возможностей создаваемых ими приложений.<br>\r\n <br>\r\n<h3><font color=\"#3AC1EF\">▍ Обширное сообщество и огромное множество ресурсов</font></h3><br>\r\nPHP имеет большое и активное <a href=\"https://www.sitepoint.com/community/t/why-is-php-so-popular/4288\">сообщество разработчиков</a>, что подразумевает великое множество ресурсов для обучения и решения проблем, начиная с официальной документации, учебных пособий и форумов, заканчивая блогами и темами на Stack Overflow. Помимо этого, сообщество способствует развитию обширной экосистемы библиотек, фреймворков и инструментов, упрощающих разработку и повышающих общую продуктивность.<br>\r\n<br>\r\n<h3><font color=\"#3AC1EF\">▍ Множество вариантов хостинга и совместимость</font></h3><br>\r\nPHP имеет прекрасную поддержку со стороны <a href=\"https://www.sitepoint.com/community/t/why-is-php-so-popular/4288/4\">провайдеров хостинга</a>, поэтому всегда можно без проблем найти решение для размещения любого проекта на базе этого языка. За счёт широкой совместимости с различными платформами и серверами разработчики могут развёртывать приложения с минимальными усилиями. Этот широкий спектр возможностей хостинга также позволяет легко находить рентабельные решения как для малых, так и для крупных проектов.<br>\r\n<br>\r\n<h3><font color=\"#3AC1EF\">▍ Производительные фреймворки</font></h3><br>\r\nЭкосистема PHP включает несколько <a href=\"https://kinsta.com/blog/best-php-frameworks/\">производительных фреймворков</a>, которые помогают создавать надёжные, масштабируемые и удобные в обслуживании приложения. Такие решения, как Laravel, Symfony и Yii обеспечивают прочную основу для создания веб-приложений, предлагая инструменты и абстракции, которые упрощают задачи вроде маршрутизации, доступа к базам данных и обработки форм. Эти фреймворки также следуют современным практикам программирования и стандартам, помогая разработчикам писать чистый и легко обслуживаемый код.<br>\r\n<br>\r\n<h3><font color=\"#3AC1EF\">▍ Непрерывная разработка и поддержка со стороны основной команды PHP</font></h3><br>\r\nСтремление основной команды разработчиков языка к его постоянному совершенствованию является ещё одним достоинством PHP. Из предыдущего раздела видно, что за годы своего существования этот язык прошёл серьёзный эволюционный процесс. В каждом его релизе появлялись возможности, которые делали его более мощным и выразительным. Именно <a href=\"https://www.php.net/releases/\">непрерывная разработка и поддержка</a> стали причиной, по которой PHP до сих пор остаётся вполне актуальным решением для веб-разработки, поспевающим за современными технологиями и лучшими практиками. <br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/webt/jg/pv/v2/jgpvv2s8cth4c2qonzjpq3sx0d8.png\" data-src=\"https://habrastorage.org/webt/jg/pv/v2/jgpvv2s8cth4c2qonzjpq3sx0d8.png\"><br>\r\n<i><font color=\"#999999\"><a href=\"https://twitter.com/techindustan/status/1242078252874661889\">Какая у тебя группа крови? Баг-положительная.</a></font></i><br>\r\n<br>\r\n<h2><font color=\"#3AC1EF\">Недостатки PHP</font></h2><br>\r\nЕстественно, есть у этого языка и слабые стороны, которые я тоже вкратце опишу.<br>\r\n<br>\r\n<h3><font color=\"#3AC1EF\">▍ Проблемы с легаси-кодом и устаревшими практиками</font></h3><br>\r\nОдин из недостатков PHP заключается в <a href=\"https://www.sitepoint.com/phps-legacy-problem/\">проблемах с легаси-кодом и преобладании устаревших практик</a> в долгоживущих проектах. Ввиду своей длительной истории и широкого распространения PHP накопил значительный объём «плохого кода» и устаревших техник, которые присутствуют в легаси-приложениях. Новички в PHP-разработке могут сталкиваться с этими проблемами, которые определённо будут вызывать недовольство и снижать продуктивность.<br>\r\n<br>\r\n<h3><font color=\"#3AC1EF\">▍ Безопасность</font></h3><br>\r\nPHP прославился своей склонностью к уязвимостям в безопасности, хотя зачастую виной тому становится следование <a href=\"https://www.cvedetails.com/top-50-products.php?year=2020\">слабым практикам программирования</a>, а не характерные недочёты самого языка. Тем не менее изобилие устаревших проектов и широкое использование PHP в системах управления контентом вроде WordPress способствует восприятию этого языка как небезопасного. При использовании PHP разработчикам следует применять лучшие методы обеспечения безопасности, чтобы избежать внедрения в создаваемые ими приложения уязвимостей.<br>\r\n<br>\r\n<h3><font color=\"#3AC1EF\">▍ Несогласованность в именовании функций и расстановке параметров</font></h3><br>\r\nДля встроенных функций в PHP характерна <a href=\"https://www.sitepoint.com/phps-legacy-problem/\">несогласованность в именовании и расстановке параметров</a>, что может сбивать с толку. Эта несогласованность стала следствием органического развития PHP с течением лет и включения в него функций из различных источников. И хотя этот недостаток не является критическим, он всё же требует более частого обращения к документации, чем в случае с более последовательными языками.<br>\r\n<br>\r\n<h3><font color=\"#3AC1EF\">▍ Критика производительности в сравнении с более новыми языками</font></h3><br>\r\nPHP сталкивается с критикой в отношении своей производительности по сравнению с более свежими языками вроде <a href=\"https://www.toptal.com/back-end/server-side-io-performance-node-php-java-go\">Go и Node.js</a>. Несмотря на то, что быстродействие PHP за время его существования значительно повысилось, особенно с релизом PHP 7 и внедрением JIT-компилятора в PHP 8, в определённых случаях он всё равно отстаёт от более молодых языков. В случае создания приложений, опирающихся на быстродействие, для достижения желаемого результата иногда будет лучше обратиться к альтернативным языкам или технологиям.<br>\r\n<br>\r\n<h3><font color=\"#3AC1EF\">▍ Восприятие языка как устаревшего</font></h3><br>\r\nНаконец, иногда PHP воспринимается как отстающий по своим возможностям в сравнении с современными аналогами и фреймворками. Несмотря на то, что PHP проделал значительные шаги в реализации современных практик программирования и обрёл множество новых возможностей, его репутацию как «старого» языка пошатнуть сложно. Такое восприятие делает его менее привлекательным решением для некоторых разработчиков и нередко приводит к выбору более молодых языков. Тем не менее, как показали предыдущие разделы, PHP остаётся надёжным и гибким решением, которое продолжает развиваться и адаптироваться к потребностям современной веб-разработки.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/webt/op/zc/g0/opzcg0iq7abchuufwxyklsf_miy.png\" data-src=\"https://habrastorage.org/webt/op/zc/g0/opzcg0iq7abchuufwxyklsf_miy.png\"><br>\r\n<i><font color=\"#999999\"><a href=\"https://programmerhumour.tumblr.com/post/670048546537521152/its-your-choice\">Юмор на тему программирования</a></font></i><br>\r\n<br>\r\n<h2><font color=\"#3AC1EF\">Итак, кто же сегодня использует PHP?</font></h2><br>\r\nСогласно <a href=\"https://w3techs.com/technologies/details/pl-php\">W3Techs</a>, на май 2023 года PHP используется на 78,9% всех сайтов, язык бэкенда которых известен. Это показывает широкое распространение PHP в сообществе веб-разработки. Более того, он также сохраняет значительную долю на рынке среди серверных языков программирования. Об этом говорит <a href=\"https://trends.builtwith.com/framework/PHP\">статистика BuiltWith</a>, которая показывает, что PHP используется на более, чем 22 миллионах активных сайтов. <a href=\"https://insights.stackoverflow.com/survey/2021#technology-programming-scripting-and-markup-languages\">Опрос разработчиков</a>, проведённый ресурсом Stack Overflow в 2021 году, также показал, что PHP является восьмым по популярности языком, об использовании которого сообщили 26,2% всех респондентов. <br>\r\n<br>\r\nМногие известные компании и сайты в своих серверных потребностях опираются именно на него:<br>\r\n<br>\r\n<ul>\r\n<li><i>Facebook</i>: несмотря на то, что в Facebook разработали собственный производный от PHP язык Hack и среду выполнения HHVM (HipHop Virtual Machine), изначальная инфраструктура этой платформы <a href=\"https://www.zend.com/blog/facebook-php-and-hhvm\">создавалась на PHP</a>.</li>\r\n<li><i>Wikipedia</i>: эта онлайн-энциклопедия, являющаяся одним из самых посещаемых ресурсов по всему миру, работает на PHP и открытом <a href=\"https://www.mediawiki.org/wiki/MediaWiki\">ПО MediaWiki</a>.</li>\r\n<li><i>Slack</i>: <a href=\"https://stackshare.io/slack/slack\">согласно StackShare</a>, PHP является частью технологического стэка Slack и играет важнейшую роль в работе его платформы обмена сообщениями.</li>\r\n<li><i>MailChimp</i>: <a href=\"https://www.quora.com/What-programming-languages-does-MailChimp-use-for-its-backend\">как отмечается на Quora</a>, бэкенд этого популярного провайдера услуг email-маркетинга работает на PHP.</li>\r\n<li><i>Etsy</i>: <a href=\"https://stackshare.io/etsy/etsy\">согласно данным StackShare</a>, этот электронный маркетплейс по продаже товаров ручной работы и винтажных изделий также реализует свои веб-приложения на PHP.</li>\r\n</ul><br>\r\nПомимо этого, PHP широко используется в самых различных индустриях. Например:<br>\r\n<br>\r\n<ul>\r\n<li><i>Системах управления контентом</i> (CMS, Content management systems): <a href=\"https://www.wpbeginner.com/showcase/40-most-notable-big-name-brands-that-are-using-wordpress/\">как пишут на WPBeginner</a>, PHP лежит в основе популярных систем управления контентом вроде WordPress, Drupal и Joomla, на которых работают миллионы сайтов по всему миру.</li>\r\n<li><i>E-commerce</i>: <a href=\"https://www.cloudways.com/blog/top-php-ecommerce-platforms/\">по информации с Cloudways</a> основанные на PHP платформы вроде Magento, WooCommerce (плагин WordPress) и PrestaShop используются бизнес-проектами различных масштабов для создания онлайн-магазинов. </li>\r\n<li><i>Кастомных веб-приложениях</i>: разработчики используют PHP для создания веб-приложений в различных сферах, простирающихся от здравоохранения и финансов до образования и развлечений. Гибкость и надёжность этого языка делают его популярным выбором для веб-разработки.</li>\r\n</ul><br>\r\n<img src=\"https://habrastorage.org/r/w1560/webt/ns/t_/5m/nst_5mpvk5uttmnxj7tai_tjpy8.png\" data-src=\"https://habrastorage.org/webt/ns/t_/5m/nst_5mpvk5uttmnxj7tai_tjpy8.png\"><br>\r\n<i><font color=\"#999999\"><a href=\"https://aglowiditsolutions.com/blog/node-js-vs-php/\">NodeJs VS PHP: сравнение показателей, функционала и производительности на 2023 год</a></font></i><br>\r\n<br>\r\n<h2><font color=\"#3AC1EF\">Сравнение бэкенд-возможностей PHP и JavaScript</font></h2><br>\r\nБыстродействие является важнейшим аспектом любого веб-приложения. С релизом 7 и 8 версии PHP проделал значительные шаги в сторону повышения производительности, которые подробно <a href=\"https://www.php.net/archive/2020.php#2020-11-26-3\">раскрыты на PHP.net</a>. Сегодня быстродействие этого языка уже намного ближе к JS-инструментам бэкенда вроде Node.js. Тем не менее Node.js, работающий на движке JavaScript V8, зачастую обходит PHP в определённых сценариях. Как <a href=\"https://blog.risingstack.com/node-js-at-scale-understanding-node-js-event-loop/\">объясняется на RisingStack</a>, главная причина в его неблокирующемся вводе-выводе и эффективной обработке параллельных подключений. В ситуациях, связанных с высокой конкурентностью и обработкой в реальном времени Node.js зачастую окажется более удачным выбором.<br>\r\n<br>\r\nИ PHP, и JS обладают обширной экосистемой, включающей множество библиотек. В масштабном сообществе PHP постоянно создаются новые библиотеки, фреймворки и инструменты, помогающие в процессе разработки. При этом <a href=\"https://getcomposer.org/\">Composer</a> упрощает управление пакетами и зависимостями. <br>\r\n<br>\r\nВ свою очередь, JavaScript может похвастать <a href=\"https://www.npmjs.com/\">реестром npm</a>, предлагающим широкую коллекцию пакетов практически под любые нужды. И если экосистема PHP больше сосредоточена на веб-разработке, то в случае JS она оказывается шире и полноценно охватывает не только фронтенд, но и бэкенд. Это делает JS более гибким, но также повышает порог вхождения для тех, кто только начинает знакомство с этим языком.<br>\r\n<br>\r\nЧто касается синтаксиса и функциональных возможностей, то здесь PHP и JS значительно отличаются. PHP является очень зрелым языком с надёжным набором встроенных функций. За последние годы в него были внедрены современные возможности вроде <a href=\"https://www.php.net/manual/en/migration80.new-features.php\">подсказки типов при вводе</a>, <a href=\"https://www.php.net/manual/en/migration80.new-features.php\">атрибутов</a> и <a href=\"https://www.php.net/manual/en/migration80.new-features.php\">коротких стрелочных функций</a>. JS же является более динамичным и гибким языком, предоставляющим такие возможности, как функции первого класса и асинхронное программирование. Однако обширное применение в этом языке обратных вызовов и промисов может выступать как его преимуществом, так и недостатком, поскольку позволяет использовать мощные парадигмы программирования, но также ведёт к созданию сложных вложенных структур кода, известных как «ад обратных вызовов». Как бы то ни было, внедрение функционала <code>async/await</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function\">помогло противостоять этой проблеме</a>.<br>\r\n<br>\r\nРассматривая плюсы и минусы каждого из этих языков, важно оценивать их пригодность для конкретного случая. PHP зачастую лучше подойдёт для традиционных веб-приложений, систем управления контентом (например, WordPress, Drupal, Joomla) и платформ электронной коммерции (например, Magento, WooCommerce, PrestaShop). Простота и лёгкость освоения этого языка делают его прекрасным выбором для людей, только входящих в сферу веб-разработки. <br>\r\n<br>\r\nС другой стороны, предлагаемые JS инструменты бэкенда вроде Node.js больше подходят для приложений реального времени (например, чатов и онлайн-игр), одностраничников (SPA, Single Page Applications) и проектов, требующих единообразного языка для фронтенда и бэкенда. Node.js прекрасно подходит в ситуациях, где приложению требуется обрабатывать множество одновременных подключений и неблокирующиеся операции ввода-вывода.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/webt/fq/zl/sz/fqzlsz7vcww5yf-ppveffhhriy4.png\" data-src=\"https://habrastorage.org/webt/fq/zl/sz/fqzlsz7vcww5yf-ppveffhhriy4.png\"><br>\r\n<i><font color=\"#999999\">Изображение взято с <a href=\"https://www.facebook.com/FunnyDevCom/videos/\">Funny Developer</a></font></i><br>\r\n<br>\r\n<h2><font color=\"#3AC1EF\">Так заслуживает ли PHP места среди множества других решений для бэкенда?</font></h2><br>\r\nЗа свою жизнь PHP очень хорошо развился. Он впитал в себя современные практики программирования, повысил быстродействие и обрёл ряд мощных возможностей. Несмотря на свои проблемы с легаси-проектами и устаревшими практиками, PHP продолжает оставаться популярным решением для веб-разработки, лежащим в основе значительной доли сайтов интернета. Простота, низкий порог вхождения и обширная экосистема делают этот язык привлекательным выбором для разработчиков любого уровня.<br>\r\n<br>\r\nПри этом со стороны JS в качестве сильных соперников на поприще веб-разработки возникли такие инструменты, как Node.js. Эти решения отличаются высокой производительностью в определённых сценариях, разносторонней экосистемой и единообразием языка для фронтенд- и бэкенд-составляющих. И хотя освоить JS сложнее, высокая гибкость и мощные возможности делают этот язык привлекательным выбором для широкого спектра приложений.<br>\r\n<br>\r\nИтак, достоин ли PHP рассмотрения наряду со множеством других технологий для бэкенд-разработки? Ответ будет зависеть от конкретных нужд проекта, ваших навыков работы с языками и вида создаваемого продукта. PHP по-прежнему заслуживает внимания при разработке традиционных веб-приложений, систем управления контентом и платформ электронной коммерции. При этом серверные инструменты JS отличаются эффективностью в приложениях реального времени, одностраничных приложениях и сценариях, связанных с высокой конкурентностью и неблокирующимися операциями ввода-вывода.<br>\r\n<br>\r\nВ конечном счёте решение сводится к оценке компромиссов, преимуществ и недостатков каждого языка в контексте вашего проекта. Благодаря продолжающейся разработке и поддержке со стороны основной команды PHP продолжает оставаться актуальным выбором для веб-приложений, даже среди разрастающегося ландшафта новых технологий для бэкенда.<br>\r\n<br>\r\n<a href=\"http://ruvds.com/ru-rub?utm_source=habr&amp;utm_medium=article&amp;utm_campaign=Bright_Translate&amp;utm_content=kto_eti_lyudi_kotorye_do_six_por_ispolzuyut_php\"><img src=\"https://habrastorage.org/r/w780q1/webt/hc/88/sb/hc88sbzi7apcmcvqt2icby4azas.jpeg\" data-src=\"https://habrastorage.org/webt/hc/88/sb/hc88sbzi7apcmcvqt2icby4azas.jpeg\" data-blurred=\"true\"></a>', 2, '2023-06-12 21:53:41', 576018, 76, '/ru/companies/ruvds/articles/739042/', 'Разобравшись в архитектуре сервера, реализовав механизм простого расширения его функционала путем добавления пользовательского кода через WEB админ панель и игровых локаций захотелось наконец посмотреть как бы это все работало и выглядело в игре.Т. к. сервер для игры является авторитарным, то клиентская часть должна была содержать.'),
(128, 'Создание сервера для онлайн ММО игр на PHP ч. 8 — Клиентская часть на Unity', '<p>Разобравшись в <a href=\"https://habr.com/ru/articles/706678/\" rel=\"noopener noreferrer nofollow\">архитектуре сервера</a>, реализовав механизм простого расширения его функционала путем <a href=\"https://habr.com/ru/articles/705806/\" rel=\"noopener noreferrer nofollow\">добавления пользовательского кода</a> через WEB админ панель и <a href=\"https://habr.com/ru/articles/725470/\" rel=\"noopener noreferrer nofollow\">игровых локаций</a> захотелось наконец посмотреть как бы это все работало и выглядело в игре.</p><p>Т.к. сервер для игры является авторитарным то клиентская часть должна была содержать:</p><ul><li><p>интерфейс UI с разнообразными меню и кнопочками, джойстиком </p></li><li><p>клиентскую часть подключения к серверу по протоколу websocket (о котором я <a href=\"https://habr.com/ru/articles/670296/\" rel=\"noopener noreferrer nofollow\">писал ранее</a>) для отправки команд и получения ответа во время игры</p></li><li><p>возможность работать по http протоколу (для первичной регистрации, авторизации и загрузки на клиент графики и желательно асинхронно)</p></li><li><p>из желательного было так же поддержка <a href=\"https://habr.com/ru/articles/725470/\" rel=\"noopener noreferrer nofollow\">тайловых карт</a> из коробки</p></li></ul><p>Начать решил с 2D онлайн игры с перспективой перехода к 3D. Т.к. ранее я не имел дело с игровыми движками то выбрал наиболее популярный — <a href=\"https://unity.com/ru\" rel=\"noopener noreferrer nofollow\">Unity</a> который имеет хорошую документацию в т.ч. на русском языке, множество обучающих видео, да и главная страница их сайта мотивировала выбрать именно этот движок использующий язык программирования С# для написания кода помимо встроенного инструментария для работы со сценами, анимацией, картами, камерой и др.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/948/3be/c3b/9483bec3b0838018d19890cb8baa9dc3.png\" alt=\"главная страница сайта https://unity.com/ru,\" title=\"главная страница сайта https://unity.com/ru,\" width=\"1832\" height=\"992\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/948/3be/c3b/9483bec3b0838018d19890cb8baa9dc3.png\"><div><figcaption>главная страница сайта <a href=\"https://unity.com/ru\" rel=\"noopener noreferrer nofollow\">https://unity.com/ru</a>,</figcaption></figure><p>В своей <a href=\"https://habr.com/ru/articles/669996/\" rel=\"noopener noreferrer nofollow\">первой статье</a> я рассказывал, что информации о том как сделать свою онлайн игру без использования платных сервисов (Photon, FireBase, PlayFab, Mirror и др.) весьма мало, а еще меньше тех, что могут выдержать нагрузку более пары десятков человек и то что останется будет на английском языке. Так что в России я с какой то стороны первопроходец реализующий целый сервис с API и нужно не упасть в грязь лицом реализуя примеры интеграции.</p><p>Я бы хотел сказать что первым делом я разработал API, документацию по работе админ панели и на базе этого создал клиент — но это не так и по факту было в обратной последовательности: вступая на этот неизвестный путь я вообще не понимал чего следует ждать, десятки раз переделывал клиентскую и серверную часть — постоянно что то не устраивало (как по архитектуре кода, так и по скорости) и так прошло около 4х месяцев и в очередной раз сидя ночью в номере отеля в Африке я анонсировал первую <a href=\"http://my-fantasy.ru/articles/frontend/index/eyJpZCI6MTB9\" rel=\"noopener noreferrer nofollow\">рабочую версию API</a> по работе с сервером и первые примеры добавления игровых механик в сервер через WEB.</p><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/6479db574ec8c0a9140534f3\" data-style=\"\" id=\"6479db574ec8c0a9140534f3\" width=\"\"><p>Можно было создать метод API, описать через Lua, Java Script или PHP (на выбор, подробнее писал об этом <a href=\"https://habr.com/ru/articles/705806/\" rel=\"noopener noreferrer nofollow\">тут</a>) во встроенной IDE код что этот метод будет делать на сервере, сделать этот метод публичным (все это через WEB админ панель) и вызвать с клиентского приложения (который к тому моменту был никак не описан и не структурирован). Для демонстрации метод добавлял на карту Гоблина.</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/927/6b1/46c/9276b146c749d1e0bebc714554ba69dc.png\" alt=\"гоблин добавляется на сервере и в клиенте в режиме online по вызову метода API\" title=\"гоблин добавляется на сервере и в клиенте в режиме online по вызову метода API\" width=\"466\" height=\"480\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/927/6b1/46c/9276b146c749d1e0bebc714554ba69dc.png\"><div><figcaption>гоблин добавляется на сервере и в клиенте в режиме online по вызову метода API</figcaption></figure><p>Так же я заранее позаботился о том, что нужен инструмент отладки запросов по API (аналог swagger или postman, но в рамках той же админ панели), а т. к. Unity может портировать игры в том числе и на браузеры (webgl игры которые можно в т.ч. размещать на независимых от сервера сайтах) стало возможным не только слать запросы и видеть ответ, но и тут же наблюдать за тем что происходит в игре, выглядело это так:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/d8c/1a7/e33/d8c1a7e3381756a9569d10bcf86adca8.png\" alt=\"панель загрузки браузерной версии игры Unity\" title=\"панель загрузки браузерной версии игры Unity\" width=\"1694\" height=\"574\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d8c/1a7/e33/d8c1a7e3381756a9569d10bcf86adca8.png\"><div><figcaption>панель загрузки браузерной версии игры Unity</figcaption></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/dd5/c02/998/dd5c029983980e0d1715f639fbc68882.png\" alt=\"пример отладочной панели с игрой на webgl unity\" title=\"пример отладочной панели с игрой на webgl unity\" width=\"1856\" height=\"962\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/dd5/c02/998/dd5c029983980e0d1715f639fbc68882.png\"><div><figcaption>пример отладочной панели с игрой на webgl unity</figcaption></figure><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/6479deef9ac2a5a9641d20ce\" data-style=\"\" id=\"6479deef9ac2a5a9641d20ce\" width=\"\"><p>Сделав это пришла пора привести в порядок код клиентской части игры и реализовать все в виде плагина на Unity. Для себя я выделил следующие важные факторы</p><ul><li><p>Код должен представлять собой плагин для Unity и содержать функционал приемки и отправки пакетов.</p></li><li><p>Структура кода игры должна повторять структуру плагина расширяя его классы дополнительным функционалом.</p></li><li><p>Использовать ООП (объектно‑ориентированный подход) т. к. я уже привык с ним работать в PHP (хотя бы постараться его применять в коде игры).</p></li><li><p>Для описания запросов к серверу и ответов использовать «структуры» (позже из за проблем с кодированием и декодирования json <code>struct</code> пришлось переделать в обычные классы но их назначение осталось прежним).</p></li><li><p>На каждом «префабе» в Unity (то есть на любом игровом объекте с которым можно взаимодействовать) должен быть «повешен» фаил — класс который принимает от главного контроллера пакетов пакет именно этого префаба и обновляет данные (например изменение позиции, жизней, маны, запуск новой анимации и т. д).</p></li><li><p>Должны быть из коробки решены проблемы с которыми сталкиваются разработчики при разработке онлайн игры (интерполяция, экстраполяция, поддержка работы с websocket соединением в версии для пк, мобильных устройств и браузеров и связанные с последней проблемы, такие как ввод теста, изменение размера окна, потеря фокуса и т. д.).</p></li><li><p>Поддержка функционала бесшовного мира сервера и переход между локациями.</p></li><li><p>В проекте должно быть 2 сцены (сцена авторизации/регистрации и пустая сцена, где на лету меняется карта и префабы на ней).</p></li><li><p>Readme к папкам и файлам проекта.</p></li></ul><p>Клиентская часть лежит в <a href=\"http://my-fantasy.ru/articles/frontend/index/eyJpZCI6Mn0=\" rel=\"noopener noreferrer nofollow\">открытом доступе</a>, структура того что получилось изображена на скриншотах ниже.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/1ec/2e0/1d5/1ec2e01d5fc8113228ff0af39efaa1aa.png\" alt=\"пример фала readme клиентской части онлайн игры\" title=\"пример фала readme клиентской части онлайн игры\" width=\"1452\" height=\"854\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/1ec/2e0/1d5/1ec2e01d5fc8113228ff0af39efaa1aa.png\"><div><figcaption>пример фала readme клиентской части онлайн игры</figcaption></figure><p>Если кому то станет более интересна тема интеграции в Unity взаимодействия с серверным API в данной реализации я так же подготовил плейлист на своем канале Youtube где я объясняю как что работает сам плагин (хотя при разработке игры предполагается что разработчику не нужно углубляться в это).</p><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/6479ebbf9ac2a5a9641d2a52\" data-style=\"\" id=\"6479ebbf9ac2a5a9641d2a52\" width=\"\"><p>В следующих статьях я расскажу как именно реализовываются игровые механики на сервере и в клиенте, а в моем <a href=\"https://habr.com/ru/users/webrobot/posts/\" rel=\"noopener noreferrer nofollow\">профиле</a> вы найдете ссылки на другие статьи проекта <a href=\"http://my-fantasy.ru/\" rel=\"noopener noreferrer nofollow\">my-fantasy.ru</a>.</p><p></p>', 2, '2023-06-12 21:53:42', 682721, 75, '/ru/articles/739516/', 'Продолжая рассказывать о своем пути создания ПО для догружаемого контента в играх в этой статье хотел бы остановится на игровых картах (локациях). '),
(129, 'Создание сервера для онлайн ММО игр на PHP ч. 7 — Игровые локации (тайловые карты)', '<p>Продолжая рассказывать о своем <a href=\"https://habr.com/ru/users/webrobot/posts/\" rel=\"noopener noreferrer nofollow\">пути </a>создания ПО для догружаемого контента в играх в этой статье хотел бы остановится на игровых картах (локациях). </p><p>Для создания демонстрационной MMO RPG игры я выбрал самое простое как мне кажется - тайловые карты. Вся их графика разбита на квадраты из которых собирается сама карта - множество из квадратов повторяется (например земля, вода используют размноженные квадраты составляющие набор тайлов)</p><p>В интернете я нашел , что для работы с картами существует программа <a href=\"https://www.mapeditor.org/\" rel=\"noopener noreferrer nofollow\">Tiled </a>- она поддерживает изометрические (2.5D), гексогональные и ортогональные карты.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/432/89e/2ad/43289e2adfa8a29e874c9babece5007b.png\" alt=\"изометрические карты\" title=\"изометрические карты\" width=\"1920\" height=\"1080\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/432/89e/2ad/43289e2adfa8a29e874c9babece5007b.png\"><div><figcaption>изометрические карты</figcaption></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/30d/7d8/df1/30d7d8df10f97e57d02788e4f649b2eb.png\" alt=\"гексогональные карты\" title=\"гексогональные карты\" width=\"1920\" height=\"1080\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/30d/7d8/df1/30d7d8df10f97e57d02788e4f649b2eb.png\"><div><figcaption>гексогональные карты</figcaption></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/fb4/fdc/21f/fb4fdc21fecd3b8b1697edcd9fc259fc.png\" alt=\"ортогональные карты\" title=\"ортогональные карты\" width=\"1920\" height=\"1080\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/fb4/fdc/21f/fb4fdc21fecd3b8b1697edcd9fc259fc.png\"><div><figcaption>ортогональные карты</figcaption></figure><p>Мне понравилось что программа поддерживает выгрузку xml , которая  может содержать непроходимые области, VFX  эффекты анимации и инструменты благодаря которым  можно делать автоподстановку (выравнивание)  тайлов по заранее созданному алгоритму</p><details class=\"spoiler\"><summary>пример xml фаила</summary><div class=\"spoiler__content\"><pre><code>	&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n	&lt;map version=\"1.5\" tiledversion=\"1.7.1\" orientation=\"orthogonal\" renderorder=\"right-down\" width=\"100\" height=\"100\" tilewidth=\"32\" tileheight=\"32\" infinite=\"0\" nextlayerid=\"5\" nextobjectid=\"4\"&gt;\n	 &lt;tileset firstgid=\"1\" name=\"tmw_desert_spacing\" tilewidth=\"32\" tileheight=\"32\" spacing=\"1\" margin=\"1\" tilecount=\"48\" columns=\"8\"&gt;\n	  &lt;image source=\"tmw_desert_spacing.png\" trans=\"4affea\" width=\"265\" height=\"199\"/&gt;\n	 &lt;/tileset&gt;\n	 &lt;tileset firstgid=\"49\" name=\"tmw_desert_spacing2\" tilewidth=\"32\" tileheight=\"32\" spacing=\"1\" margin=\"1\" tilecount=\"48\" columns=\"8\"&gt;\n	  &lt;image source=\"tmw_desert_spacing.png\" trans=\"4affea\" width=\"265\" height=\"199\"/&gt;\n	  &lt;tile id=\"0\"&gt;\n	   &lt;objectgroup draworder=\"index\" id=\"2\"&gt;\n		&lt;object id=\"1\" x=\"5.76013\" y=\"7.63843\" width=\"16.2786\" height=\"16.9047\"/&gt;\n	   &lt;/objectgroup&gt;\n	  &lt;/tile&gt;\n	 &lt;/tileset&gt;\n	 &lt;layer id=\"1\" name=\"Слой тайлов 1\" width=\"100\" height=\"100\"&gt;\n	  &lt;data encoding=\"csv\"&gt;\n		...\n	 &lt;/data&gt;\n	 &lt;/layer&gt;\n	 &lt;objectgroup id=\"3\" name=\"Слой объектов 1\"&gt;\n	  &lt;object id=\"1\" gid=\"3221225473\" x=\"105.5\" y=\"66.5\" width=\"32\" height=\"32\" rotation=\"90\"/&gt;\n	  &lt;object id=\"2\" gid=\"3221225503\" x=\"204.639\" y=\"72.6027\" width=\"58.5\" height=\"41\" rotation=\"324.844\"/&gt;\n	 &lt;/objectgroup&gt;\n	&lt;/map&gt;</code></pre><p></p></details><p>Я придумал WEB приложение на PHP куда можно загружать файлы формата xml данной программы .</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/1fc/7e9/6c9/1fc7e96c916186cc2570159524e4d7b8.png\" alt=\"демо на сайте http://my-fantasy.ru\" title=\"демо на сайте http://my-fantasy.ru\" width=\"1920\" height=\"1080\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/1fc/7e9/6c9/1fc7e96c916186cc2570159524e4d7b8.png\"><div><figcaption>демо на сайте http://my-fantasy.ru</figcaption></figure><p>Каждый элемент карты представлял собой класс PHP (назовем их сущностями) с описанием входящих в него атрибутов и других вложенных сущностей. База данных при этом должна иметь одноименные сущностям таблицы и поля (вспоминается ORM от Doctrine).</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/3a3/6b8/e53/3a36b8e53f48c6b7bcc0cfa794466c5e.png\" alt=\"корневая сущность - карта\" title=\"корневая сущность - карта\" width=\"1856\" height=\"936\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/3a3/6b8/e53/3a36b8e53f48c6b7bcc0cfa794466c5e.png\"><div><figcaption>корневая сущность - карта</figcaption></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f91/838/192/f91838192a8ddb6975740a05218a7e3c.png\" alt=\"вложенная в карту сущность - слой карты\" title=\"вложенная в карту сущность - слой карты\" width=\"1854\" height=\"936\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f91/838/192/f91838192a8ddb6975740a05218a7e3c.png\"><div><figcaption>вложенная в карту сущность - слой карты</figcaption></figure><p>Накидав алгоритм автоматического сохранения в БД и загрузки из бд структуры xml фала основанный на reflection, XMLReader , php attribute вся загрузка xml документа свелась к вызову одной строчки в кода в php вида: </p><pre><code>(new Tiled\\Xml\\Map($id))-&gt;parse(file_get_contents(\'1.tmx\'))-&gt;save();	</code></pre><p>В случае если будут добавляться сущности или меняться их поля достаточно просто добавить или изменить классы php папках. </p><p>После я воспользовался php библиотекой GD что бы собрать картинку из данных что хранились в БД и понял что это плохая идея т.к. php на это тратит огромное количество оперативной памяти . </p><p>В перспективе я думаю сделать аналог программы Tiled, но в виде браузерной версии с возможностью редактировать карты, экспортировать в Tiled и создавать свои игровые карты прямо в приложении (осталось подучить JavaScript) и напишу об этом новую статью. Вот пару примеров, что я нашел в интернете:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/97a/aea/d76/97aaead767df42cba43c18ea1662daba.png\" alt=\"https://victorribeiro.com/tileEditor/?example=01\" title=\"https://victorribeiro.com/tileEditor/?example=01\" width=\"1920\" height=\"1080\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/97a/aea/d76/97aaead767df42cba43c18ea1662daba.png\"><div><figcaption><a href=\"https://victorribeiro.com/tileEditor/?example=01\" rel=\"noopener noreferrer nofollow\">https://victorribeiro.com/tileEditor/?example=01</a></figcaption></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/ee8/9aa/41c/ee89aa41c550e6b9f67575a46cd536a3.png\" alt=\"https://blurymind.github.io/tilemap-editor/\" title=\"https://blurymind.github.io/tilemap-editor/\" width=\"1920\" height=\"1080\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ee8/9aa/41c/ee89aa41c550e6b9f67575a46cd536a3.png\"><div><figcaption><a href=\"https://blurymind.github.io/tilemap-editor/\" rel=\"noopener noreferrer nofollow\">https://blurymind.github.io/tilemap-editor/</a></figcaption></figure><p>PS. Как я понял Tiled была создана в процессе разработки open source игры The Mana World карты которой с легкостью загрузились в web приложение </p><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/6478aca57ddf71fbc1daf74f\" data-style=\"\" id=\"6478aca57ddf71fbc1daf74f\" width=\"\"><p>В моем <a href=\"https://habr.com/ru/users/webrobot/posts/\" rel=\"noopener noreferrer nofollow\">профиле</a> вы найдете ссылки на статьи о продолжении проекта <a href=\"http://my-fantasy.ru/\" rel=\"noopener noreferrer nofollow\">http://my-fantasy.ru/</a>  </p><p></p>', 1, '2023-06-12 21:53:42', 264333, 75, '/ru/articles/725470/', 'Привет, Хабр! В статье расскажу о том, с какими трудностями можно столкнуться при разработке ORM на PHP и поделюсь опытом по их преодолению.Рассказывать буду только о том, о чём знаю сам. У вас может быть абсолютно другое мнение. Поэтому если вы нашли ошибку или хотите обсудить — свяжитесь со мной.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(130, 'Хождение по граблям PDO: что скрывают за собой современные PHP ORM', '<p>Привет, Хабр! Меня зовут Валерий Горбачев. Давно пишу на PHP, занимаюсь опенсорсом (участвую в команде разработке <a href=\"https://yiiframework.com\"><u>Yii3 Framework</u></a>), организую митапы в родном Краснодаре и выступаю с докладами на конференциях. </p><p>Эта статья написана на основе моего доклада на HighLoad++ 2022. На момент выступления на конференции я работал старшим разработчиком в Delivery Club. </p><p>Рассказывать буду только о том, о чём знаю сам. У вас может быть абсолютно другое мнение. Поэтому если вы нашли ошибку или хотите обсудить — свяжитесь со мной.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/03e/42c/212/03e42c212da64959834850205ce3996d.jpeg\" alt=\"Изображение сгенерировано с помощью нейросети Midjourney\" title=\"Изображение сгенерировано с помощью нейросети Midjourney\" width=\"780\" height=\"440\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/03e/42c/212/03e42c212da64959834850205ce3996d.jpeg\" data-blurred=\"true\"><div><figcaption>Изображение сгенерировано с помощью нейросети Midjourney</figcaption></figure><h3>Как я изучал БД и понял, что со старым кодом пора что-то делать</h3><p>Всем знакомы стадии отрицания, гнева, депрессии… Именно так часто выглядит классическая кривая обучения использованию баз данных (БД). В моей жизни всё было примерно также, но добавились ещё несколько пунктов:</p><ul><li><p>данные в файлах;</p></li><li><p>файловые БД (dbf, dBase IV);</p></li><li><p>изучение SQL (книги, документация).</p></li></ul><p>Я начал с типизированных структур, которые хранил в файлах. Затем перешёл на dbf, и только потом пришёл к SQL и начал читать книги и погружаться в документацию. Сначала казалось, что работа с базами данных — это максимально просто.</p><p>Я писал такие SQL-запросы:</p><pre><code class=\"php\">$sql = \"SELECT * FROM products WHERE id = {$id}\"</code></pre><p>Иногда «интвалил», чтобы обезопасить свои запросы:</p><pre><code class=\"php\">$sql = \'SELECT * FROM products WHERE id = \' . @intval($id);</code></pre><p>Сохранял строковые данные вот так:</p><pre><code class=\"php\">$sql = \"SELECT * FROM products WHERE name = \'{$name}\'\";</code></pre><p>А когда меня первый раз взломали, наконец узнал про SQL-уязвимости. Тогда я начал искать информацию в интернете, плюс посоветовался с коллегами и стал использовать экранирование:</p><pre><code class=\"php\">$name = mysql_real_escape_string($name);\n$sql = \"SELECT * FROM products WHERE name = \'\". $name. \"\'\";</code></pre><p>После того как модуль mysql_ задепрекейтили, задумался и о других решениях:</p><pre><code class=\"php\">$stmt = $mysqli-&gt;prepare(\"SELECT * FROM products WHERE name = ?\");\n$stmt-&gt;bind_param(\"s\", $name);</code></pre><h3>Как менялись спецификации в PHP</h3><p>Все эти изменения можно буквально расписать по годам.</p><ul><li><p>PHP 5.0 — появление ext/mysqli (2003).</p></li><li><p>PHP 5.1 — появление модуля PDO_MySQL (2005).</p></li><li><p>PHP 5.3 — появление mysqlnd с рядом интересных изменений и уходом от ограничений Oracle (2009).</p></li><li><p>PHP 5.* — переход с libmysqlclient (C++, Oracle) на mysqlnd (2013).</p></li><li><p>PHP 5.5 — модуль mysql_* помечен устаревшим и удалён в версии 7 (2013).</p></li></ul><p>Тогда я задумался, что со старым кодом пора что-то делать и версию понадобилось обновить. Передо мной стал выбор: перейти на MySQLi или начать использовать PDO. </p><p>Конечно же, сначала их нужно сравнить:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f63/82d/cc8/f6382dcc8690c30d8cfef10367afc784.png\" alt=\"Краткое сравнение возможностей MySQLi и PDO_MySQL\" title=\"Краткое сравнение возможностей MySQLi и PDO_MySQL\" width=\"1281\" height=\"558\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f63/82d/cc8/f6382dcc8690c30d8cfef10367afc784.png\"><div><figcaption>Краткое сравнение возможностей MySQLi и PDO_MySQL</figcaption></figure><p>Преимущества MySQLi несомненные, но я выбрал его в первую очередь потому, что можно было просто добавить букву i, быстро пройтись по коду и всё стало бы хорошо. Но, к сожалению, я запомнил и фразу с одного из форумов:</p><p><em>«Используя PDO, можно легко сменить используемую СУБД»</em></p><h3>И на этом можно было бы остановиться…</h3><p>Я жил в мире розовых пони, то есть фреймворков, использовал ORM, QueryBuilder’ы и делал вот так:</p><pre><code class=\"php\">$userQuery = (new Query())-&gt;select(\'id\')-&gt;from(\'user\');</code></pre><p>На старых проектах даже чуть-чуть пробовал MySQLi с биндингом:</p><pre><code class=\"php\">$stmt-&gt;bind_param(\"ssssiisississ\", $name, $title, ...);</code></pre><p>Но в биндинге можно было легко запутаться в правильном порядке букв “s”, “i”. Особенно если биндить параметр и пытаться вставить его в середину. Другое дело ORM.</p><h3>ORM — лекарство от всех проблем?</h3><p>У использования ORM много преимуществ:</p><ul><li><p>Код абстрактный и легко читается.</p></li><li><p>Нет нужды писать «сырые» запросы, ведь можно использовать QueryBuilder.</p></li><li><p>Порог вхождения гораздо ниже, потому что даже необязательно знать SQL.</p></li><li><p>Код не слишком привязан к движку БД.</p></li></ul><p>Примеры таких ORM: Eloquent, Doctrine, Cycle, Propel, RedBeanPHP, Yii DB и т.д.</p><p>Но у ORM, конечно, есть и недостатки. Чтобы обойтись без обобщений, дальше я буду опираться на опыт полученный мной из использования ORM от Yii Framework версий 1 и 2.</p><ul><li><p>Нет той же гибкости, как при написании «сырых» запросов.</p></li><li><p>Трудно писать сложные запросы.</p></li><li><p>Работает быстро, но немного медленнее нативных библиотек. Это же абстракция, поэтому на производительности придётся чуть-чуть потерять ради удобства.</p></li><li><p>Если вы обнаружили какую-то проблему, помним, что это чужой код и мейнтейнеры могут ответить, что «так сложилось» и менять ничего не будут.</p></li><li><p>MySQL-first-подход как самая большая боль — в случае если фреймворк устарел. Когда писали ORM, было важно, чтобы всё работало с MySQL, а поддержку остальных БД реализовали по принципу «чтобы как в MySQL».</p></li></ul><h3>Хождение по граблям как стиль жизни</h3><p>Небольшое отступление: мне мешают использовать ORM всю жизнь.</p><p>Например, на одном из проектов сказали, что будем ходить в БД только через API, и про ORM пришлось забыть. Писали сырые запросы и использовали через API-вызовы.</p><p>На разных работах я понемногу занимался MySQL, MSSQL, PostgreSQL, Oracle и другими менее популярными решениями. Это привело меня к текущему моменту: я осознал, что весь мой опыт работы с БД весьма поверхностен. А где это может пригодиться? Конечно же, при написании пакета для поддержки баз данных.</p><p>Именно так я и познакомился с <a href=\"https://github.com/terabytesoftw\"><u>Wilmer Arambula</u></a>, с которым мы вместе сейчас рефакторим <a href=\"https://github.com/yiisoft/db\"><u>Yii Database Library</u></a>. А в основе пакетов этой библиотеки лежит PDO…</p><h3>Скучный пересказ документации, в которой можно найти ответы на большинство вопросов</h3><p>PDO с плейсхолдерами — путь к удобной подстановке данных в запросы. В использовании PDO нет магии, и выглядит всё очень просто:</p><pre><code class=\"php\">/* Выполнение запроса с передачей ему массива параметров */\n$sql = \'SELECT name, colour, calories FROM fruit WHERE calories &lt; :calories AND colour = :colour\';\n$sth = $dbh-&gt;prepare($sql, [\'calories\' =&gt; 150, \'colour\' =&gt; \'red\']);\n$sth-&gt;execute();\n$red = $sth-&gt;fetchAll();</code></pre><p>Это пример из официальной документации: в именованные плейсхолдеры подставляем параметры и выполняем — всё красиво и безопасно.</p><p>Возможности PDO по поддержке разных БД зашкаливают:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/6c7/265/a91/6c7265a91e58aabee4935603c6ebb5d8.png\" width=\"999\" height=\"660\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/6c7/265/a91/6c7265a91e58aabee4935603c6ebb5d8.png\"></figure><p>Жёлтым я подсветил то, с чем сам работал из PHP. Но на самом деле PDO_ODBC тоже можно было подсветить, потому что периодически мы заходили в БД и через PDO_ODBC. </p><p>Впрочем, к вопросу об универсальном использовании разных DBMS с использованием PDO. Я ведь ещё помню, что PDO обещает, что это будет несложно, но даже при первых пробах проявились детали:</p><ul><li><p>Запрос запросу рознь (LIMIT 10 OFFSET 10 vs LIMIT 10, 10).</p></li><li><p>Универсального кода не бывает, универсальный код SQL тоже не универсален.</p></li><li><p>Даже если универсальный код и бывает, то иногда он работает неожиданно...</p></li></ul><p>Ещё интересности, которые мне встретились при погружении в документацию, — это обилие различных режимов выборки, которыми располагает PDO.</p><p>В основном мы используем режим для выборки FETCH_ASSOC или FETCH_OBJ:</p><pre><code class=\"php\">$sth = $dbh-&gt;prepare(\"SELECT name, colour FROM fruit\");\n$sth-&gt;execute();\n\n/* Извлечение всех оставшихся строк результирующего набора */\nprint(\"Извлечение всех оставшихся строк результирующего набора:\\n\");\n$result = $sth-&gt;fetchAll();\nprint_r($result);</code></pre><p>Складываем в ассоциативный массив или в объект и всё. Но документация подсказывает, что есть множество других интересных режимов. </p><h4>FETCH_KEY_PAIR</h4><pre><code class=\"php\">SELECT `username`, `email` FROM `users`\n\n/*\n[\n    \'login1\' =&gt; \'email1@mail.ru\',\n    \'login2\' =&gt; \'email2@mail.ru\',\n]\n*/</code></pre><p>Режим выборки в стиле \"Key-value\" следит, чтобы в выборке было только два поля и перезаписывает последним ключом. Первый параметр из SQL-запроса будет использоваться как ключ, второй — как значение.</p><h4>FETCH_UNIQUE</h4><pre><code class=\"php\">SELECT `id`, `username`, `email` FROM `users`\n\n/*\n[\n  1 =&gt; [\'username\' =&gt; \'login101\', \'email\' =&gt; \'email1@mail.ru\', ],\n  2 =&gt; [\'username\' =&gt; \'login102\', \'email\' =&gt; \'email2@mail.ru\', ],\n]\n*/</code></pre><p>Здесь всё как в предыдущем случае, только значения не одно, а массив значений. </p><h4>FETCH_GROUP</h4><pre><code class=\"php\">SELECT `group`, `id`, `username` FROM `users`\n\n/*\n[\n    \'reader\' =&gt; [\n        [\'id\' =&gt; 1, \'username\' =&gt; \'login101\'],\n        [\'id\' =&gt; 3, \'username\' =&gt; \'login103\'],\n    ],\n    \'writer\' =&gt; [\n        [\'id\' =&gt; 2, \'username\' =&gt; \'login102\'],\n        [\'id\' =&gt; 4, \'username\' =&gt; \'login104\'],\n    ],\n]\n*/</code></pre><p>Группировка по первому значению может пригодиться при построении элементарного двухуровневого меню. </p><h4>FETCH_NAMED</h4><p>FETCH_NAMED можно использовать вместо FETCH_ASSOC, если одно значение в выборке используется несколько раз, как в примере:</p><pre><code class=\"php\">SELECT u.`name`, u.`email`, g.`name`\n  FROM `users` u\n  INNER JOIN `groups` g ON g.`id` = u.`group_id`\n\n$stmt-&gt;fetch(PDO::FETCH_NAMED);\n/*\n[\n    \'name\' =&gt; [\n        0 =&gt; \'login101\',\n        1 =&gt; \'writer\',\n    ],\n    \'email\' =&gt; \'email1@mail.ru\',\n]\n*/</code></pre><p>Или, например, вы сделали SELECT *, объединили с помощью JOIN две таблицы и имена полей совпали. Благодаря FETCH_NAMED эти значения не потеряются при перезаписи. </p><p><em>Не рекомендую использовать SELECT *, но в жизни всякое бывает.</em></p><h4>FETCH_CLASSTYPE</h4><pre><code class=\"php\">SELECT\n  CONCAT(UCASE(LEFT(`group`, 1)), SUBSTRING(`group`, 2)),\n    `username`, `email`\n  FROM `users`\n\n$stmt-&gt;fetch(PDO::FETCH_CLASS | PDO::FETCH_CLASSTYPE);\n/*\nobject(Reader)#3 (1) {\n  [\"username\"] =&gt; string(8) \"login101\",\n  [\"email\"] =&gt; string(14) \"email1@mail.ru\",\n}\n*/</code></pre><p>Можно использовать первую колонку из результата запроса как класс, который PDO будет искать в PHP, создать объект класса, намаппить туда значения и получится своеобразная абстрактная фабрика. </p><p>Если вам тоже стало интересно почитать про режимы работы PDO, вот здесь об этом <a href=\"https://phpdelusions.net/pdo/fetch_modes\"><u>отлично рассказали</u></a>.</p><p>Раз мы коснулись, что всё складываем в объект, то самое время вспомнить, что начиная с PHP 8.2, с использованием динамических свойств могут начаться проблемы. До этого мы спокойно могли добавлять их в объект, а сейчас будем получать предупреждение. Начиная с PHP 9 с этим, вероятно, будут ещё бóльшие проблемы.</p><h3>А есть ли ещё «занимательные флаги»?</h3><ul><li><p>PDO::ATTR_ORACLE_NULLS —\"\" =&gt; NULL, NULL =&gt;\"\" <br>вместо пустой строки вернуть NULL, вместо NULL — пустая строка.</p></li></ul><p>На самом деле это работает не только с Oracle, я проверил это с PostgreSQL — тоже прекрасно работает.</p><ul><li><p>PDO::ATTR_CASE — регистр имён столбцов в возвращаемых данных.</p></li></ul><p>В ассоциативном массиве ключи можно вернуть в верхнем, нижнем регистре или в нативном режиме.</p><p>Прогресс не стоит на месте и в новых версиях PHP добавлены новые флаги:</p><ul><li><p>MYSQL_ATTR_LOCAL_INFILE_DIRECTORY </p></li></ul><p>Можно добавить ограничение, вроде open_basedir только для импорта ваших данных из файлов расположенных на сервере:</p><pre><code class=\"sql\">LOAD DATA LOCAL INFILE \'path/to/file/file.txt\'</code></pre><p>Есть, конечно, и «странные флаги»:</p><ul><li><p>PDO::MYSQL_ATTR_MULTI_STATEMENTS — разрешает использование многострочных SQL-выражений, с которыми все борются, а этим флагом их можно включать, но с множеством оговорок.</p></li><li><p>PDO::ATTR_FETCH_CATALOG_NAMES — добавление имени каталога БД к именам колонок в возвращаемых результатах.</p></li><li><p>PDO::ATTR_FETCH_TABLE_NAMES — добавление имени таблицы к имени колонки в возвращаемых результатах.</p></li></ul><p>Это может помочь не потерять значение колонки при повторе её имени в возвращаемых результатах. В ассоциативном массиве результатов в качестве ключа будет использовано ТАБЛИЦА.ИМЯ ПОЛЯ.</p><h3>Про ATTR_CASE</h3><p>Как-то раз к нам обратились с проблемой — перестали получать схему данных (<a href=\"https://github.com/yiisoft/yii2/issues/18171\">https://github.com/yiisoft/yii2/issues/18171</a>). Это случилось после обновления на минорную версию MySQL 8.0.21. Раньше регистр колонок указанный в запросе возвращался в результатах в том же виде. Начиная с версии MySQL 8.0.21 его начали возвращать так, как имя колонки создано в таблице БД. Как вы понимаете, в INFORMATION_SCHEMA используется верхний регистр для имён колонок, а в запросе на его получение — нижний.</p><pre><code class=\"php\">SELECT `constraint_name` from `information_schema`.`key_column_usage`;\n\n/*\nMySQL &lt; 8.0.21 fields name:\narray(1) {\n  \'constraint_name\' =&gt; \"name_of_contraint\"\n}\n\nMySQL 8.0.21 fields name:\narray(1) {\n  \'CONSTRAINT_NAME\' =&gt; \"name_of_contraint\"\n}\n*/</code></pre><p>Конечно, можно было использовать PDO::ATTR_CASE, но мы решили, что не будем изменять общее поведение при инициализации соединения, и просто добавили метод для приведения регистра имён в получаемых результатах к нижнему регистру.</p><h3>Хранение JSON в BLOB полях</h3><p>Типичная задача для человека, который пишет Role-based access control (RBAC) и сохраняет их в БД (настройки ролей, доступы и т.п.).</p><pre><code class=\"php\">$sql_insert = &lt;&lt;&lt;SQL\n    insert into `pdo_types`(`blob_col`) values(:blob_data);\nSQL;\n\n$sql_read = &lt;&lt;&lt;SQL\n    select `blob_col` from `pdo_types`;\nSQL;</code></pre><p>Лучше использовать специализированные данные, но мы попытаемся сохранить JSON в непредназначенном для этого BLOB-поле.</p><h4>MySQL</h4><p>С MySQL всё просто (пример со строкой просто для читаемости):</p><ul><li><p>Вставляем данные:</p></li></ul><pre><code class=\"php\">$blobData = \"test `s_t_r_i_n_g`\";\n$pdo-&gt;prepare($sql_insert)-&gt;execute([\':blob_data\' =&gt; $blobData]);</code></pre><ul><li><p>Читаем данные:</p></li></ul><pre><code class=\"php\">$stmt = $pdo-&gt;query($sql_read);\n$result = $stmt-&gt;fetch(PDO::FETCH_COLUMN);\nvar_dump($result);</code></pre><ul><li><p>Радуемся:</p></li></ul><pre><code class=\"powershell\">string(18) \"test `s_t_r_i_n_g`\"</code></pre><p>Подготовили типовой запрос, вставили данные, прочитали данные — и всё отлично.</p><h4>PostgreSQL</h4><ul><li><p>Вставляем данные:</p></li></ul><pre><code class=\"php\">$blobData = \"test `s_t_r_i_n_g`\";\n$pdo-&gt;prepare($sql_insert)-&gt;execute([\':blob_data\' =&gt; $blobData]);</code></pre><ul><li><p>Читаем данные:</p></li></ul><pre><code class=\"php\">$stmt = $pdo-&gt;query($sql_read);\n$result = $stmt-&gt;fetch(PDO::FETCH_COLUMN);\nvar_dump($result);</code></pre><ul><li><p>Удивляемся:</p></li></ul><pre><code class=\"powershell\">resource(9) of type (stream)</code></pre><p>Начинаются особенности — нам вернулась уже не строка. Документация подтверждает, что в некоторых случаях для бинарных данных возвращаемое значение может быть возвращено как resource. Мы не должны этому удивляться.</p><h4>Немного экзотики — Oracle</h4><p>С моим любимым Oracle у нас не получилось даже вставить данные.</p><ul><li><p>Вставляем:</p></li></ul><pre><code class=\"php\">$blobData = \"test `s_t_r_i_n_g`\";\n$pdo-&gt;prepare($sql_insert)-&gt;execute([\':blob_data\' =&gt; $blobData]);</code></pre><ul><li><p>Удивляемся:</p></li></ul><pre><code class=\"powershell\">PHP Fatal error:  Uncaught PDOException: SQLSTATE[HY000]: General error: 1465 OCIStmtExecute: ORA-01465: invalid hex number</code></pre><p>Ответ есть в документации. Нам просто нужен иной синтаксис:</p><blockquote><p><em>В случае с базами Oracle требуется несколько иной синтаксис для извлечения содержимого файла и помещения в базу. Также необходимо выполнять вставку в рамках транзакции, иначе вставленный LOB будет зафиксирован в базе с нулевой длиной, так как если не обозначить границы транзакции, изменения будут фиксироваться после каждого выполненного запроса.</em></p></blockquote><p>Если до этого нужна была маленькая строка запроса, то теперь это выглядит вот так:</p><pre><code class=\"php\">$sql_insert = &lt;&lt;&lt;SQL\n    insert into \"pdo_types\"(\"blob_col\") values(empty_blob()) returning \"blob_col\" into :blob_data\nSQL;\n\n$blobData = \"test `s_t_r_i_n_g`\";\n$fp = fopen(\'php://memory\', \'rwb\');\nfwrite($fp, $blobData);\nfseek($fp, 0);\n\n$stmt = $pdo-&gt;prepare($sql_insert);\n$pdo-&gt;beginTransaction();\n    $stmt-&gt;bindValue(\':blob_data\', $fp, PDO::PARAM_LOB);\n    $stmt-&gt;execute();\n$pdo-&gt;commit();</code></pre><p>Мы должны указать при подстановке, что будут использованы бинарные данные используя PDO::PARAM_LOB. Всё необходимо делать в транзакции, чтобы выполнение было одномоментным.</p><p>Поведение при чтении не отличается от PostgreSQL, в Oracle нам аналогично вернётся stream. </p><h4>Rewind</h4><pre><code class=\"php\">$stmt = $pdo-&gt;query($sql_read);\n$handle = $stmt-&gt;fetch(PDO::FETCH_COLUMN);\n\n$contents = \'\';\nwhile (!feof($handle)) {\n    $contents .= fread($handle, 2);\n}\nrewind($handle);\nwhile (!feof($handle)) {\n    $contents .= fread($handle, 2);\n}</code></pre><p>На всякий случай попробовал проверить возвращаемые потоки — можно ли их перематывать с помощью rewind и fseek. Проблем не увидел: они ведут себя как обычные файловые дескрипторы. Но давайте всё же посмотрим, как обойтись без всей этой сложности с транзакцией.</p><h3>Чиним BLOB поля и Oracle</h3><p>Если данные у вас не совсем бинарные (а как в нашем примере JSON/base64), то можно обойтись без транзакций и файлов. Вот такой костыль с преобразованием данных в запросе решает мою проблему — я успешно вставил данные в BLOB поле:</p><pre><code class=\"php\">$stmt = $db-&gt;prepare(\"INSERT INTO t1(blob_col) VALUES (TO_BLOB(UTL_RAW.CAST_TO_RAW(:blob_col)))\");\n$stmt-&gt;bindParam(\':blob_col\', $blobData);</code></pre><p>Но лучше всё же хранить данные в предназначенных для этого специализированных полях (base64 в CLOB, а json в JSON).</p><h3>Получение последнего вставленного ID</h3><p>Ещё одна задача, которую мы часто решаем, — получение ID только что вставленной записи. Описание метода из официальной документации:</p><pre><code class=\"php\">public PDO::lastInsertId(?string $name = null): string|false</code></pre><p>Нужный нам метод, и конечно у него есть ограничения:</p><blockquote><p><em>Замечание: </em></p><p><em>В зависимости от драйвера PDO этот метод может вообще не выдать осмысленного результата, так как база данных может не поддерживать автоматического инкремента полей или последовательностей».</em></p></blockquote><p>Не все драйверы это поддерживают, например, Microsoft SQL Server. По этому поводу даже есть пример вопроса со <a href=\"https://stackoverflow.com/questions/13747481/pdo-lastinsertid-not-working-for-ms-sql\"><u>Stackoverflow</u></a>:</p><blockquote><p><em>I am running an insert query using PDO and then getting the newly created Id with lastInsertId(). This is all working on my localhost environment. When I move the exact same code onto a server, the lastInsertId() is always returning blank, even though the insert statement works and inserts the new row into the database.</em></p></blockquote><p>Почему возвращается пустая строка? Ответ есть в документации:</p><blockquote><p><em>Remarks: </em></p><p><em>Поддержка PDO была добавлена в версии 2.0 Драйверы Microsoft SQL Server для РНР.</em></p><p><em>Между версиями 2.0 и 4.3 необязательным параметром является имя таблицы, а возвращаемым значением — идентификатор последней добавленной в указанную таблицу записи. Начиная с 5.0, как необязательный параметр рассматривается имя последовательности, а как возвращаемое значение — последовательность, которую добавили для указанного имени последовательности последней. Если имя таблицы указано для версий после 4.3, lastinsertid возвращает пустую строку. Последовательности поддерживаются только в SQL Server 2012 и более поздних версиях.</em></p></blockquote><h3>Смириться или приложить подорожник?</h3><p>Поддержка MSSQL в Yii существовала и до исправления в драйверах. Чинили это вот таким образом: мы делаем выбор из двух системных функций, и из одной из них получаем результаты. </p><pre><code class=\"php\">class mssqlPDO extends \\PDO\n{\n    /**\n     * Returns value of the last inserted ID.\n     * @param string|null $sequence the sequence name. Defaults to null.\n     * @return int last inserted ID value.\n     */\n    public function lastInsertId($sequence = null)\n    {\n        $sql = \'SELECT CAST(COALESCE(SCOPE_IDENTITY(), @@IDENTITY) AS bigint)\';\n        return $this-&gt;query($sql)-&gt;fetchColumn();\n    }\n}</code></pre><p>Конечно, у этих системных функций есть особенности: что-то работает в рамках соединения, что-то в рамках области видимости. Поэтому решение по излечению lastInsertId может работать неожиданно.</p><p>Например, у вас на базе данных висит триггер, который тоже вставляет данные только в другую таблицу БД. Вы можете из этих системных функций получить не тот ID, который вставили, а ID, вставленный в другую табличку.</p><blockquote><p><em>For example, there are two tables, T1 and T2, and an INSERT trigger is defined on T1. When a row is inserted to T1, the trigger fires and inserts a row in T2. This scenario illustrates two scopes: the insert on T1, and the insert on T2 by the trigger</em></p><p><a href=\"https://docs.microsoft.com/ru-RU/sql/t-sql/functions/scope-identity-transact-sql?view=sql-server-2016\"><em><u>https://docs.microsoft.com/ru-RU/sql/t-sql/functions/scope-identity-transact-sql?view=sql-server-2016</u></em></a></p></blockquote><ul><li><p>IDENT_CURRENT — returns the last identity value generated for a specific table in any session and any scope.</p></li><li><p>@@IDENTITY — returns the last identity value generated for any table in the current session, across all scopes.</p></li><li><p>SCOPE_IDENTITY — returns the last identity value generated for any table in the current session and the current scope.</p></li></ul><p>Я решил допроверять поведение, кто поддерживает lastInsertId, а кто нет.</p><pre><code class=\"php\">$pdo1-&gt;prepare($sql_insert)-&gt;execute([\':n\' =&gt; 101]);\n$pdo2-&gt;prepare($sql_insert)-&gt;execute([\':n\' =&gt; 102]);\n\necho \'lastInsertId1 = \'.var_export($pdo1-&gt;lastInsertId(), true).PHP_EOL;\necho \'lastInsertId2 = \'.var_export($pdo2-&gt;lastInsertId(), true).PHP_EOL;\n// lastInsertId1 = \'1\'\n// lastInsertId2 = \'2\'</code></pre><p>MySQL, PostgreSQL и MSSQL работают корректно и проблем с получением вставленных ID нет. Я создавал два соединения, вставлял в них по очереди и проверял, тот ли ID я получаю. Выглядит всё хорошо.</p><p>С Oracle я сразу получил сообщение, что драйвер не поддерживает функцию:</p><pre><code class=\"powershell\">PHP Fatal error:  Uncaught PDOException: SQLSTATE[IM001]: Driver does not support this function: driver does not support lastInsertId()</code></pre><h3>Но если очень хочется…</h3><p>Я решил поэкспериментировать и попробовать использовать системные функции по аналогии с MSSQL. Для экспериментов использовал PHP 8.0 + Oracle XE 11g r2 + instantclient21_3 и прямое обращение к sequence — в результате мы получаем нужный нам ID.</p><pre><code class=\"php\">$stmt1 = $pdo1-&gt;query(\'SELECT \"pdo_types_SEQ\".CURRVAL FROM DUAL\');\n$result1 = $stmt1-&gt;fetchColumn();\n\n$stmt2 = $pdo2-&gt;query(\'SELECT \"pdo_types_SEQ\".CURRVAL FROM DUAL\');\n$result2 = $stmt2-&gt;fetchColumn();\n\n// result1 = \'1\'\n// result2 = \'2\'</code></pre><p>Дам общую рекомендацию — не используйте PDO::lastInsertId, есть способы лучше:</p><ul><li><p>PostgreSQL — RETURNING \"id\"</p></li><li><p>MSSQL — OUTPUT <a href=\"http://INSERTED.ID\">INSERTED.ID</a> </p></li><li><p>Oracle — RETURNING id INTO :id</p></li><li><p>MariaDB (с версии 10.5.0) — RETURNING <code>id</code></p></li></ul><p>Для всех DBMS есть решения, кроме старых версий MySQL. В использовании MSSQL тоже есть особенность, связанная с таблицами имеющими триггер. </p><p>Вообще lastInsertId — интересная штука. Случай из жизни, когда заказчики попросили: «Вы нам письмо отправляете и прикладываете файлик. А можно, чтобы там была не 32 или 40-символьная UUID абракадабра, а циферки, чтобы клиенты могли их нам по телефону адекватно передавать». Даже люди вне IT, к сожалению, уже знают про наш lastInsertId.</p><h3>Ещё порция непрошенных советов</h3><ul><li><p>PDO::MYSQL_ATTR_INIT_COMMAND можно использовать для SET NAMES в сочетании с charset=utf8mb4 в DSN строке.</p></li></ul><p>Мы знаем, что для согласования кодировки в соединении и кодировки в DSN строке можно использовать SET NAMES. Когда у вас MySQL, можете использовать MYSQL_ATTR_INIT_COMMAND для вставки SET NAMES, и он выполнится при инициализации соединения.</p><ul><li><p>Выключайте PDO::ATTR_EMULATE_PREPARES. </p></li></ul><p>Я рекомендую (и не только я) выключать EMULATE_PREPARES, то есть подготовку SQL-выражения на стороне клиента. Выключайте, хоть так и можно поддерживать multi-statements. По-моему мнению, вредная штука.</p><ul><li><p>Помните, что именованные подстановки используются только один раз.</p></li></ul><p>Это произойдёт, если вы воспользуетесь предыдущим советом. Именованные подстановки с одним и тем же именем нельзя будет использовать в запросе к MySQL дважды. PDO будет ругаться, что количество параметров не совпадает.</p><ul><li><p>Не ленитесь указывать тип используемых данных:  если уж биндите данные, указывайте, какой тип данных вы хотите передать. </p></li></ul><pre><code class=\"php\">bindValue(\'attr\', $value, PDO::PARAM_INT);\n// лучше так, чем execute([\'attr\' =&gt; $value]). </code></pre><ul><li><p>MYSQL_ATTR_USE_BUFFERED_QUERY=false для больших SQL-запросов. </p></li></ul><p>Мы переехали на mysqlnd — изменился режим работы с буферизированными запросами. Сделали большой запрос — и это при получении может вызвать переполнение памяти. Выключите и получайте большие объёмы данных из соединения постепенно.</p><ul><li><p>Избегайте многострочных SQL-запросов в одном вызове. </p></li></ul><p>Не надо делать запросы через точку с запятой, но если уж так получилось стоит помнить:</p><ul><li><p>execute() сообщит об ошибке только в первом SQL‑запросе, и необходимо получать следующий resultSet, чтобы выявить там ошибку;</p></li><li><p>используйте nextRowSet() для выборки следующего набора; </p></li><li><p>nextRowSet() — может вернуть пустой результат, который нельзя выбрать (columnCount()).</p></li></ul><h3>Про nextRowSet()</h3><p>Иногда не получается избежать многострочных запросов. Как пример, тот самый случай с таблицей имеющей триггеры, когда мы хотим в результате выполнения запроса получить вставленный ID:</p><pre><code class=\"php\">$sql_insert = &lt;&lt;&lt;SQL\nSET NOCOUNT ON;\nDECLARE @tmp TABLE ([id] int);\nINSERT INTO [table]([val]) OUTPUT INSERTED.id INTO @tmp VALUES(\'12\');\nSELECT * FROM @temporary_inserted;\nSQL;\n\n$stmt = $pdo-&gt;query($sql_insert);\ndo {\n    $result = $stmt-&gt;fetch(PDO::FETCH_ASSOC);\n    echo \'columnCount = \' . var_export($stmt-&gt;columnCount(), true) . PHP_EOL;\n    echo \'result = \' . var_export($result, true) . PHP_EOL;\n} while ($stmt-&gt;nextRowset());</code></pre><p>Чтобы MSSQL не сообщал нам после каждого запроса «Я вставил одну строку», «Я изменил 0 строк» и т.д., мы выключим этот режим с помощью ‘SET NOCOUNT ON’.  Затем создадим временную таблицу, чтобы вернуть в неё вставленный данные с помощью OUTPUT INSERTED, а в завершении из неё сделаем выборку. Так мы получим последний вставленный ID. </p><p>Помня про особенности использования многострочных запросов, перебираем до первого результативного значения, именно того, которое нам необходимо.</p><h3>Особенности драйверов</h3><p>Для поддержки MSSQL в PHP существует несколько драйверов, и каждый из них имеет свои особенности. Есть официальный драйвер от Microsoft и есть DBLIB — Free TDS. Раньше часто использовали старенький драйвер с поддержкой SyBase, который, к счастью, сейчас не используют, поэтому про него говорить не будем. </p><p>Два существующих драйвера по-разному работают с примером представленным чуть ранее:</p><p>PDO_SQLSRV</p><pre><code class=\"powershell\">columnCount = 1\nresult = array (\n  \'id\' =&gt; \'4\',\n)</code></pre><p>PDO_DBLIB</p><pre><code class=\"powershell\">columnCount = 0\nresult = false\n\ncolumnCount = 0\nresult = false\n\ncolumnCount = 1\nresult = array (\n  \'id\' =&gt; 5,\n)</code></pre><p>С драйвером от Microsoft будет возвращён всего один результат, а вот в случае с DBLib их будет три. Не будет resultSet, только от декларации временной таблицы, но и так было не всегда. Раньше мы могли получить ошибку, даже при запросе nextRowSet. Вот issue по изменению данного поведения:</p><ul><li><p><a href=\"https://bugs.php.net/bug.php?id=69592\"><u>Column rowsets to be skipped automatically</u></a> </p></li><li><p><a href=\"https://github.com/FreeTDS/freetds/issues/156\"><u>Empty result set reported for TDS INFO messages</u></a></p></li></ul><h4>А вы знали, что...</h4><p>Но и это не все особенности. Знали ли вы, что используя PDO + официальный драйвер от Microsoft, вы не сможете вставить в запрос больше 2100 значений.</p><p>В официальном драйвере есть вот такое ограничение:</p><pre><code class=\"powershell\">PDOException: SQLSTATE[IMSSP]: Tried to bind parameter number 2101.  SQL Server supports a maximum of 2100 parameters.</code></pre><p>Если вы захотите сделать batch insert, именно это число будет вас ограничивать. По этому поводу есть issue: <a href=\"https://github.com/microsoft/msphpsql/issues/410\"><u>https://github.com/microsoft/msphpsql/issues/410</u></a><u>.</u></p><p>Именно это часто толкает к использованию DBLIB, хотя Microsoft не рекомендует этого делать. </p><h3>Ещё немного мелочей</h3><p>Мы продолжим искать неприятности. Что может пойти не так при обычном SELECT? Итак, у нас версия PHP 7.4/8.0, с тестами всё хорошо. </p><pre><code class=\"php\">// SELECT * FROM simple_table WHERE id=1\nvar_dump($result);\n\n/*\narray(4) {\n  \'int_col\'     =&gt; string(4) \"-123\"\n  \'bigint_col\'  =&gt; string(10) \"8817806877\"\n  \'float_col\'   =&gt; string(11) \"-12345.6789\"\n  \'numeric_col\' =&gt; string(6) \"-33.22\"\n}\n*/</code></pre><p>Но после обновления до версии 8.1 наши тесты ложатся, потому что возвращаемые значения стали более типизированными, int из таблицы БД, теперь возвращается как int, а не как строка. Это связано с тем, что флаг PDO::EMULATE_PREPARES перестал влиять на поведение (если не проинициализирован принудительно).</p><pre><code class=\"php\">// SELECT * FROM simple_table WHERE id=1\nvar_dump($result);\n\n/*\narray(4) {\n  [\"int_col\"]     =&gt; int(-123)\n  [\"bigint_col\"]  =&gt; int(8817806877)\n  [\"float_col\"]   =&gt; float(-12345.6789)\n  [\"numeric_col\"] =&gt; string(6) \"-33.22\"\n}\n*/</code></pre><p>У себя мы обошлись добавлением в инициализацию соединения флага PDO::ATTR_STRINGIFY_FETCHES и продолжили получать строки, как и было раньше.</p><pre><code class=\"php\">$pdo = new PDO(\'mysql:......;charset=utf8\', \'username\', \'password\');\n\n// для версии 8.1\n$pdo-&gt;setAttribute(PDO::ATTR_STRINGIFY_FETCHES, 1);\n\n// в драйвере до версии 8.0 флаг включен. С 8.1 флаг не влияет.\n$pdo-&gt;setAttribute(PDO::ATTR_EMULATE_PREPARES, 1);\n\n/*\narray(4) {\n  \'int_col\'     =&gt; string(4) \"-123\"\n  \'bigint_col\'  =&gt; string(10) \"8817806877\"\n  \'float_col\'   =&gt; string(11) \"-12345.6789\"\n  \'numeric_col\' =&gt; string(6) \"-33.22\"\n}\n*/</code></pre><p>Сделали костыль, всё поправили для Yii2, но любопытство меня не покинуло: а почему стало так? Я пошёл в исходники и нашёл вот такое изменение.</p><p>Как было — мы получаем все данные из БД, и если значение есть, мы вставляем его в строчку с помощью ZVAL. </p><pre><code class=\"cpp\">#if SIZEOF_ZEND_LONG==4\n    if ((L64(2147483647) &lt; (int64_t) lval) || (L64(-2147483648) &gt; (int64_t) lval)) {\n        DBG_INF(\"stringify\");\n        tmp_len = sprintf((char *)&amp;tmp, \"%\" PRIi64, lval);\n    } else\n#endif /* SIZEOF */\n    {\n        ZVAL_LONG(zv, (zend_long) lval); /* the cast is safe, we are in the range */\n    }\n}\n\nif (tmp_len) { // ВОТ ЭТО МЕСТО\n    ZVAL_STRINGL(zv, tmp, tmp_len);\n}</code></pre><p>После рефакторинга получили следующее:</p><pre><code class=\"cpp\">#if SIZEOF_ZEND_LONG==4\n    if ((L64(2147483647) &lt; (int64_t) lval) || (L64(-2147483648) &gt; (int64_t) lval)) {\n        DBG_INF(\"stringify\");\n        ZVAL_STR(zv, zend_i64_to_str(lval));\n    } else\n#endif /* SIZEOF */\n    {\n        ZVAL_LONG(zv, (zend_long) lval); /* the cast is safe, we are in the range */\n    }\n}</code></pre><p>Теперь если данные не влезут в int64, то только тогда мы преобразуем их в строку. Видимо именно эта оптимизация заставила наши тесты «краснеть».</p><h3>Слабая динамическая оптимизация.</h3><p>Я включил PDO::ATTR_EMULATE_PREPARES и использовал при получении данных флаг PDO::FETCH_BOUND (привязка переменной к получаемому результату), привязал это к переменной с типом int, но ко мне из PDO вернётся строка — вот такой простой способ получить TypeError (пример придуман специально для доклада — не делайте так). </p><pre><code class=\"php\">declare(strict_types=1);\n\nclass TypesCheck {\n    private int $n = 1;\n\n    public function check(PDO $pdo)\n    {\n        $stmt = $pdo-&gt;query(\'select int_col from pdo_types\');\n        $stmt-&gt;bindColumn(1, $this-&gt;n, PDO::PARAM_INT);\n        $this-&gt;anyWork($this-&gt;n); // int(1)\n        $stmt-&gt;fetch(PDO::FETCH_BOUND);\n        var_dump($this-&gt;n); // string(3) \"101\"\n        $this-&gt;anyWork($this-&gt;n);\n        // PHP Fatal error:  Uncaught TypeError: TypesCheck::anyWork()...\n    }\n\n    private function anyWork(int $value) { /* any actions */ }\n}</code></pre><h3>Транзакции в PDO</h3><p>И тут не удержусь от ряда простых советов:</p><ul><li><p>Следите за PDO::ATTR_ERRMODE (PDO::ERRMODE_SILENT, и т.д.). Включайте режим обработки ошибок PDO::ERRMODE_EXCEPTION, исключения перехватывайте и обрабатывайте.</p></li><li><p>DDL в транзакции поддерживают не все DBMS — будет молчаливый autocommit (MySQL, Oracle, MSSQL). </p></li><li><p>При старте PDO только проверит, что драйвер их поддерживает и нет активной транзакции. Документация обещает ошибку, если драйвер не поддерживает транзакции или нет активной транзакции. С этим тоже будут нюансы. </p></li><li><p>Вложенные транзакции не поддерживаются (касается многих DBMS). В фреймворках это обычно реализуется через savepoint. </p></li></ul><h3>Вложенные транзакции</h3><p>Свои методы для честной проверки активности транзакции с запросом состояния у сервера *_handle_in_transaction появились у PostgreSQL и MySQL, начиная с версии PHP 8.0. Они узнают о транзакции, даже если вы стартовали её через SQL. До этого изменения узнать можно было только по состоянию флага, которое изменялось помощью PDO-функций, управляющих транзакциями, например, beginTransaction.</p><pre><code class=\"cpp\">if (pdo_is_in_transaction(dbh)) {\n  zend_throw_exception_ex(php_pdo_get_exception(), 0,\n        \"There is already an active transaction\");\n  RETURN_THROWS();\n}\n\n...\n  \nstatic bool pdo_is_in_transaction(pdo_dbh_t *dbh) {\n	if (dbh-&gt;methods-&gt;in_transaction) {\n		return dbh-&gt;methods-&gt;in_transaction(dbh);\n	}\n	return dbh-&gt;in_txn; // boolean флаг\n}\n...\n// А вот метод: dbh-&gt;methods-&gt;in_transaction\nstatic bool pdo_mysql_in_transaction(pdo_dbh_t *dbh)\n{\n  pdo_mysql_db_handle *H = (pdo_mysql_db_handle *)dbh-&gt;driver_data;\n  PDO_DBG_ENTER(\"pdo_mysql_in_transaction\");\n  PDO_DBG_RETURN((pdo_mysql_get_server_status(H-&gt;server) &amp; SERVER_STATUS_IN_TRANS) != 0);\n}</code></pre><p>Выполнили PDO::beginTransaction — всё отлично. Если стартовали транзакцию с помощью SQL-запроса “begin transaction”, то драйвер об этом ранее не знал. Теперь знает, потому что мы сходили, посмотрели серверный статус и убедились — находимся мы в транзакции или нет.</p><h3>Транзакции и MyISAM</h3><p>Ещё один пример, когда вся БД имеет тип InnoDB, а одна из таблиц с типом MyISAM:</p><p>Мы стартуем транзакцию, делаем что-то и откатываем транзакцию. PDO это воспримет прекрасно — он же не знает, что используется именно эта таблица-исключение. Драйвер ограничится проверкой, что для соединения транзакции возможны, и поэтому все данные применятся. </p><pre><code class=\"php\">$pdo1-&gt;beginTransaction(); // true\n$insertResult1 = $pdo1-&gt;prepare($sql_insert)-&gt;execute([\':n\' =&gt; 111]);\n$pdo1-&gt;rollBack(); // true\n\n$st = $pdo1-&gt;prepare(\'SELECT id,int_col FROM type WHERE int_col=:n\');\n$st-&gt;execute([\'n\' =&gt; 111]);\nvar_dump($st-&gt;fetch(PDO::FETCH_ASSOC));\n\n/*\narray(2) {\n  \'id\' =&gt; string(1) \"3\"\n  \'int_col\' =&gt; string(3) \"111\"\n}\n*/</code></pre><p>Хотя документация обещает исключение в таких случаях, мы его не получим, так как драйвер ничего не знает про MyISAM-таблицу, ведь в целом то у нас InnoDB.</p><h3>Старые версии.</h3><p>Ещё немного костылей из мира старых драйверов. Раньше мы писали такой костылик для SyBase:</p><pre><code class=\"php\">$pdo = new PDO(\'dsn_string\', \'username\', \'password\');\n$pdo-&gt;exec(\'BEGIN TRANSACTION\');\n$pdo-&gt;exec(\'COMMIT TRANSACTION\');\n$pdo-&gt;exec(\'ROLLBACK TRANSACTION\');</code></pre><p>Так мы использовали SQL-запросы для управления транзакциями. С помощью таких костылей можно поддерживать вложенные транзакции (если их поддержка есть на стороне DBMS), даже несмотря на ограничения PDO.</p><h3>PDO::quote и ¿\'</h3><p>Ещё стоит рассказать историю с просторов сети интернет про PDO::quote и ¿\'. Пример о том, что если у вас соединение с кодировкой GBK, то там есть интересный перевернутый знак вопроса и кавычка, и mysql_real_escape_string вам не поможет. Ведь вся безопасность этой функции в том, что мы просто перед апострофами добавляем «\\» — обратный слэш. Там будет учтена кодировка соединения, которая может быть задана неверно. </p><pre><code class=\"cpp\">// ext/pdo_mysql/mysql_driver.c \nif (use_national_character_set) {\n    *quotedlen = mysql_real_escape_string_quote(H-&gt;server, *quoted + 2, unquoted,\n        unquotedlen, \'\\\'\');\n    (*quoted)[0] = \'N\';\n    (*quoted)[1] = \'\\\'\';\n\n    ++*quotedlen; /* N prefix */\n} else {\n    *quotedlen = mysql_real_escape_string_quote(H-&gt;server, *quoted + 1, unquoted,\n        unquotedlen, \'\\\'\');\n    (*quoted)[0] = \'\\\'\';\n}\n\n(*quoted)[++*quotedlen] = \'\\\'\';\n(*quoted)[++*quotedlen] = \'\\0\';</code></pre><h3>0x-теричная система счисления</h3><p>Можно ли вставить строку прямо в SQL-запрос без биндинга и не бояться уязвимостей? Ответ: да, если у вас MSSQL, причём нехитрым способом: </p><pre><code class=\"php\">// Данные заэкранируем хексом - фича мсскл\n$string = \'0x\' . bin2hex($value);\n$sql = \"INSERT INTO [table]([varchar_col]) VALUES($string)\";\n\n// Ну и теперь сохраняем строковые данные в BLOB поле MSSQL\nif (is_string($value)) {\n    return new Expression(\'CONVERT(VARBINARY(MAX), \'.\n            (\'0x\'. bin2hex($value)) .\')\');\n}</code></pre><p>MSSQL hex-значение декодирует и вставит. Такое решение у нас реализовано для тех самых ролевых моделей с JSON. Мы вставляем новый expression, и всё работает. Спасибо моему коллеге и другу <a href=\"https://mneti.com\"><u>Андрею Рычкову</u></a> за то, что научил этому чудесному хаку.</p><h3>Вместо вывода</h3><p>Если вы когда-нибудь решите написать свою ORM, теперь вы будете готовы. И будете знать про трудности, с которыми можете столкнуться.</p><p>Спасибо Саше Макарову, который дал мне прикоснуться ко всему этому прекрасному, и Wilmer Arambula, который терпит наш с ним рефакторинг и бесконечные споры. </p><p>И, конечно, спасибо вообще всем, кто занимается опенсорсом, потому что кто-то же должен это делать!</p><details class=\"spoiler\"><summary>Литература и материалы</summary><div class=\"spoiler__content\"><p>Странно добавлять данный раздел, но будем честны — без этого не было бы ни доклада, ни статьи</p><ul><li><p><a href=\"https://phpdelusions.net/pdo\">https://phpdelusions.net/pdo</a></p></li><li><p><a href=\"https://phpdelusions.net/pdo/fetch_modes\">https://phpdelusions.net/pdo/fetch_modes</a></p></li><li><p><a href=\"https://www.php.net/manual/ru/refs.database.php\">https://www.php.net/manual/ru/refs.database.php</a></p></li><li><p><a href=\"https://docs.microsoft.com/ru-RU/sql/t-sql/functions/scope-identity-transact-sql?view=sql-server-2016\">https://docs.microsoft.com/ru-RU/sql/t-sql/functions/scope-identity-transact-sql?view=sql-server-2016</a></p></li><li><p><a href=\"https://habr.com/ru/post/141127/\">https://habr.com/ru/post/141127/</a></p></li><li><p><a href=\"https://www.sqlitetutorial.net/sqlite-describe-table/\">https://www.sqlitetutorial.net/sqlite-describe-table/</a></p></li><li><p><a href=\"https://habr.com/ru/post/137664\">https://habr.com/ru/post/137664</a></p></li><li><p><a href=\"https://habr.com/ru/company/vk/blog/234125/\">https://habr.com/ru/company/vk/blog/234125/</a></p></li><li><p><a href=\"https://stackoverflow.com/questions/134099/are-pdo-prepared-statements-sufficient-to-prevent-sql-injection/\">https://stackoverflow.com/questions/134099/are-pdo-prepared-statements-sufficient-to-prevent-sql-injection/</a></p></li><li><p><a href=\"https://www.flaticon.com/ru/free-icons/\">https://www.flaticon.com/ru/free-icons/</a></p></li><li><p><a href=\"https://github.com/yiisoft/yii2/issues/18171\">https://github.com/yiisoft/yii2/issues/18171</a></p></li><li><p><a href=\"https://stackoverflow.com/questions/13747481/pdo-lastinsertid-not-working-for-ms-sql\">https://stackoverflow.com/questions/13747481/pdo-lastinsertid-not-working-for-ms-sql</a></p></li><li><p><a href=\"https://docs.microsoft.com/ru-RU/sql/t-sql/functions/scope-identity-transact-sql?view=sql-server-2016\">https://docs.microsoft.com/ru-RU/sql/t-sql/functions/scope-identity-transact-sql?view=sql-server-2016</a></p></li><li><p><a href=\"https://bugs.php.net/bug.php?id=69592\">https://bugs.php.net/bug.php?id=69592</a></p></li><li><p><a href=\"https://github.com/FreeTDS/freetds/issues/156\">https://github.com/FreeTDS/freetds/issues/156</a></p></li><li><p><a href=\"https://github.com/microsoft/msphpsql/issues/410\">https://github.com/microsoft/msphpsql/issues/410</a></p></li><li><p><a href=\"https://mneti.ru\">https://mneti.ru</a></p></li></ul><p>Плюс официальная документация к *sql drivers — всегда читайте документацию, в ней есть ответы на все вопросы.</p></details><p></p>', 3, '2023-06-12 21:53:43', 565277, 77, '/ru/companies/oleg-bunin/articles/727930/', 'Всем привет! Это Александр Макаров и второй выпуск Yii новостей в этом году.С момента последнего выпуска в феврале прошло 3 месяца. Мы стремились ускорить разработку Yii3, но также продолжали поддерживать Yii1 и Yii2. Несмотря на ограниченные средства для разработки, за последние несколько месяцев удалось достичь определённого прогресса. Давайте разберём более детально, что было сделано.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(131, 'Попрощайтесь с проверками на null и исключениями: использование монады Maybe в Symfony', '<h3>Введение</h3><p>Функциональное программирование появилось не вчера. Но оно так и не приобрело какой-либо дикой популярности, и, вероятно, не просто так. Иногда оно может быть довольно сложным с точки зрения понимания и использования. Но у него есть много преимуществ. Одним из них является возможность избежать проверок на null и исключений.</p><p>В этой статье мы рассмотрим монаду Maybe и то, как ее можно использовать в Symfony.</p><h3>Что из себя представляет монада Maybe?</h3><p>Начать следует с определения самой концепции монады. Монада (monad) — это структура, предназначенная для представления вычислений в виде императивной последовательности шагов. Она является обобщением концепции функции, которая принимает аргумент и возвращает результат. Монады в функциональном программировании не является чем-то новым. Они существуют с 1960-х годов.</p><p>Монада Maybe — это монада, которая инкапсулирует необязательное значение. Значение типа Maybe a содержит либо значение типа а (представленное как Just a), либо вообще ничего (представленное как Nothing). Используя монаду Maybe, мы можем избежать null и исключений.</p><h3>Как использовать монаду Maybe в Symfony?</h3><p>Для начала давайте создадим класс-монаду, который будет реализовывать монаду Maybe.</p><pre><code class=\"php\">// src/Utils/Maybe.php\n&lt;?php\n\nnamespace App\\Utils;\n\n/**\n * @template T\n */\nclass Maybe\n{\n    /**\n     * @var T|null\n     */\n    private $value;\n\n    /**\n     * @param T|null $value\n     */\n    private function __construct($value)\n    {\n        $this-&gt;value = $value;\n    }\n\n    /**\n     * @param T|null $value\n     * @return Maybe&lt;T&gt;\n     */\n    public static function just($value): Maybe\n    {\n        return new self($value);\n    }\n\n    /**\n     * @return Maybe&lt;T&gt;\n     */\n    public static function nothing(): Maybe\n    {\n        return new self(null);\n    }\n\n    /**\n     * @template U\n     * @param callable(T):U $fn\n     * @return Maybe&lt;U&gt;\n     */\n    public function map(callable $fn): Maybe\n    {\n        if ($this-&gt;value === null) {\n            return self::nothing();\n        }\n        return self::just($fn($this-&gt;value));\n    }\n\n    /**\n     * @param T $defaultValue\n     * @return T\n     */\n    public function getOrElse($defaultValue)\n    {\n        return $this-&gt;value ?? $defaultValue;\n    }\n}</code></pre><p>Класс <code>Maybe</code> содержит два статических метода: <code>just</code> и <code>nothing. just</code> метод создает объект <code>Maybe</code> со значением.</p><p>Метод <code>nothing</code> создает объект <code>Maybe</code> без значения. Метод <code>map</code> принимает в качестве аргумента функцию и применяет ее к значению внутри объекта <code>Maybe</code>. Если значение внутри объекта <code>Maybe</code> null, метод <code>map</code> возвращает <code>nothing</code>. Метод <code>getOrElse</code> возвращает значение из объекта <code>Maybe</code> или значение по умолчанию, если значение внутри объекта <code>Maybe</code> – null.</p><p>Давайте посмотрим, как его можно использовать в Symfony-приложении.</p><pre><code class=\"php\">// src/Controller/DefaultController.php\n&lt;?php\n\nnamespace App\\Controller;\n\nuse App\\Entity\\User;\nuse App\\Service\\UserSrvice;\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;\nuse Symfony\\Component\\HttpFoundation\\JsonResponse;\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Component\\Routing\\Annotation\\Route;\n\nclass DefaultController extends AbstractController\n{\n    #[Route(\'\', name: \'default\')]\n    public function getUserData(Request $request, UserSrvice $userSrvice): JsonResponse\n    {\n        $email = $request-&gt;get(\'email\');\n\n        $maybeUser = $userSrvice-&gt;getUserByEmail($email);\n\n        $userData = $maybeUser\n            -&gt;map(fn(User $user) =&gt; [\n                \'name\'  =&gt; $user-&gt;getName(),\n                \'email\' =&gt; $user-&gt;getEmail(),\n            ])\n            -&gt;getOrElse([\n                \'name\'  =&gt; \'Unknown\',\n                \'email\' =&gt; \'Unavailable\',\n            ])\n        ;\n\n\n        return $this-&gt;json($userData);\n    }\n}\n// src/Service/UserSrvice.php\n&lt;?php\n\ndeclare(strict_types=1);\n\nnamespace App\\Service;\n\nuse App\\Repository\\UserRepository;\nuse App\\Utils\\Maybe;\n\nclass UserSrvice\n{\n\n    public function __construct(private readonly UserRepository $userRepository)\n    {\n    }\n\n    public function getUserByEmail(string $email): Maybe\n    {\n        return Maybe::just($this-&gt;userRepository-&gt;getUserByEmail($email));\n    }\n}</code></pre><p>В классе <code>DefaultController</code> мы получаем электронное письмо из запроса. Затем мы определяем пользователя по этому электронному письму, используя класс <code>UserSrvice</code>.</p><p>Класс <code>UserSrvice</code> возвращает объект <code>Maybe</code>. Для получения пользовательских данных мы используем метод <code>map</code>. Если пользователь не найден, метод <code>map</code> возвращает nothing.</p><p>Затем мы используем метод <code>getOrElse</code> для получения пользовательских данных или значения по умолчанию, если пользователь не найден.</p><h3>Заключение</h3><p>В этой статье мы рассмотрели монаду Maybe и то, как ее можно использовать в Symfony. Мы создали класс <code>Maybe</code>, реализующий монаду Maybe. Мы использовали класс <code>Maybe</code> в классе <code>DefaultController</code>, чтобы избежать проверки на null и необходимости использовать исключения. Используя этот подход, мы можем избежать проверки на null и исключений почти во всем нашем Symfony-приложении, что сделает код более читабельным.</p><p>Полный код вы можете найти на <a href=\"https://github.com/akankov/php_maybe_monad_example?ref=hackernoon.com\">GitHub</a></p><hr><p>На днях пройдет <a href=\"https://otus.pw/Xad2/\">открытый урок</a> «Twig и Symfony forms: создаем полноценное веб-приложение без погружения во frontend». На нем разработаем быструю и простую административную панель штатными средствами фреймворка.</p><p>Занятие пройдет в преддверии старта курса \"Symfony Framework\". Записаться на открытый урок можно <a href=\"https://otus.pw/Xad2/\">по ссылке.</a></p><p></p>', 2, '2023-06-12 21:53:44', 759122, 75, '/ru/companies/otus/articles/737530/', 'Привет! Меня зовут Олег Мифле. Одной из команд, где удалось поработать за 7 лет с PHP, стала Customer Support. Мы автоматизировали анализ тысяч задач в день и оператору больше не нужно думать и включать голову для того, чтобы понять, какая задача прямо сейчас важна. О том, как работает приоритизация и что такое дерево игры, расскажу в статье.На старте погружу в предметную область. Она непростая, но постараюсь быстро. Эта статья по моему докладу с PHP Russia 2022. Вот запись.'),
(132, 'Лови мутанта! Мутационные тесты: зачем и как', '<figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/211/9f7/e83/2119f7e832271cd3872916c8979825d9.png\" width=\"767\" height=\"550\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/211/9f7/e83/2119f7e832271cd3872916c8979825d9.png\"></figure><p>Я очень люблю тесты и считаю, что любой код должен быть покрыт ими, желательно качественными :)   </p><p>Поэтому хочу поделиться с вами опытом внедрения мутационных тестов в проект, рассказать зачем оно нужно и какую ценность несет. Рассмотрим пример внедрения <a href=\"https://infection.github.io/\" rel=\"noopener noreferrer nofollow\"><u>Infection</u></a> в приложение на <a href=\"https://laravel.com/\" rel=\"noopener noreferrer nofollow\"><u>Laravel</u></a>. Но сначала немного теории.</p><h3>Что такое мутационные тесты?</h3><p>По факту это тесты для тестов. Все прекрасно понимают, что наличие тестов в проекте само по себе еще ничего не гарантирует: ни покрытие, ни отсутствие ошибок в коде и самих тестах. Важно качество этих тестов, что они действительно проверяют то, что должны и все дополнительные сценарии.</p><p>Работает это так: мутационный фреймворк изменяет исходный код проекта согласно определенному набору правил, например, меняет “<code>===</code>” на “<code>!==</code>” (на самом деле там <a href=\"https://infection.github.io/guide/mutators.html\" rel=\"noopener noreferrer nofollow\"><u>большой список мутаций</u></a>) и для каждого такого изменения (мутанта) прогоняет тесты. Если тесты упали, значит мутант считается убитым, если тесты не заметили изменений - мутант выжил и на него стоит посмотреть, скорее всего тест нужно доработать.<br><br>Кроме того, сразу будет видно, какие мутанты вовсе не покрыты тестами, они будут пропущены фреймворком.</p><h3>Зачем их внедрять?</h3><p>Разработчики склонны писать “позитивные” тесты, т.е. чаще проверяют, что код работает в нормальном сценарии, а не пытаются нарушить его работу некорректными данными. Получается, качество тестов сильно зависит от конкретного разработчика и качества ревью в команде. </p><p>Получается, что довольно сложно следить за качеством тестов. Частично эту проблему может решить оценка покрытия кода тестами. Но только на первых порах - то, что строка кода вызывается в тесте далеко не значит, что тест проверяет ее :)</p><p>Да и ошибки бывают не только в основном коде приложения, но и в самих тестах. Например, мне мутационные тесты помогли отловить несколько ошибок, где путались сущности в тесте. Но у них был одинаковый ID, поэтому тесты проходили, но логику проверяли неправильно. А уж сколько оказалось тестов, которые по факту не проверяли, что сущность действительно появилась в БД.. <br><br>Кроме того, мутационное тестирование наложит некоторые положительные ограничения на ваши тесты: придется писать действительно независимые друг от друга тесты с адекватной производительностью. Да и вынудят наладить возможность запускать тесты в несколько потоков, чтобы не ждать несколько часов прогона мутационных тестов. Но об этом ниже.</p><h3>Что для этого нужно?</h3><p>В первую очередь у вас должны быть тесты. Их необязательно должно быть много, и ваш проект не должен быть полностью ими покрыт. Понятно, что если тесты упорно не писались с самого начала на каждый модуль, в любом более-менее большом проекте будет куча непокрытого кода.<br><br>Но смысла прикручивать мутационные тесты к проекту с низким покрытием нет, куча мутантов будет пропущено, это мало что даст. Но тут можно схитрить и начать использовать мутационные тесты для <a href=\"https://infection.github.io/guide/command-line-options.html#filter\" rel=\"noopener noreferrer nofollow\"><u>конкретных модулей</u></a>, т.е. не анализировать весь проект, а смотреть конкретные папки, где у вас достаточное количество тестов. Это применимо к легаси проектам, где свежие модули нормально покрыты.<br><br>Мутационные тесты - это уже тяжелая артиллерия. В первую очередь рекомендую добиться хотя бы 70% покрытия тестами проекта/модуля.<br><br>Посмотреть покрытие в Laravel можно так:</p><pre><code class=\"bash\">php artisan test --parallel --coverage</code></pre><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/d61/6a1/02b/d616a102bdb60b6052f8c8e5b0e3beea.png\" width=\"2048\" height=\"1174\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d61/6a1/02b/d616a102bdb60b6052f8c8e5b0e3beea.png\"></figure><p>Вывод будет содержать список файлов и строки, непокрытые тестами. Это тоже достаточно полезно - это значит, что данные строке не вызываются при запуске тестов.</p><h3>Как писать тесты?</h3><p>Нужно принять для себя, что тесты - это тоже часть проекта. На них должны распространяться те же стандарты качества кода. Там не должно быть костылей, копипасты и прочих нехороших вещей, которые в коде приложения хороший программист себе не позволит. Но у многих к тестам снисходительное отношение - лишь бы запускались. </p><p>Лично я в первую очередь рекомендую писать функциональные тесты (тестирование черным ящиком ручек API) по нескольким причинам.</p><p>Во-первых: такие тесты менее хрупкие, и при изменении внутренностей вам не нужно переписывать тесты. Тесты переделывать придется очень редко, только когда меняется API или бизнес-требования.</p><p>Во-вторых: тесты проверяют всю функциональность целиком, включая роутинг, middleware, обработку параметров запроса и ответ приложения. Нас не сильно успокоит, что методы какого-то класса работают, если в целом метод API ломается из-за кривого роутинга, например.</p><p>Если в коде есть взаимодействие со сторонними сервисами (платежная система, например), слой взаимодействия должен реализовывать программный интерфейс и вызываться в коде через DI контейнер по нему. А для теста реализовать этот интерфейс с заранее заготовленными данными для конкретных сценариев и подменить боевую реализацию сервиса в контейнере этой заглушкой.</p><p>Ну и конечно тесты должны запускаться в CI после каждого коммита, иначе смысла в них нет.</p><h3>От теории к практике</h3><p>Посмотрим, как это все выглядит на Laravel приложении.</p><p>Сначала нужно установить мутационный фреймворк, там все очень просто: <a href=\"https://infection.github.io/guide/installation.html\" rel=\"noopener noreferrer nofollow\"><u>https://infection.github.io/guide/installation.html</u></a> </p><p>При первом запуске infection, он спросит, какие папки будем анализировать и создаст конфиг с ними.<br>Я рекомендую туда добавить пару вещей: timeout и logs.</p><pre><code class=\"json\">{\n   \"$schema\": \"https://raw.githubusercontent.com/infection/infection/0.27.0/resources/schema.json\",\n   \"source\": {\n       \"directories\": [\n           \"app\"\n       ]\n   },\n   \"timeout\": 50,\n   \"logs\": {\n       \"html\": \"infection.html\",\n   },\n   \"mutators\": {\n       \"@default\": true\n   }\n}</code></pre><p>Timeout ограничивает время обработки одного мутанта, если он будет слишком низкий часть мутантов будут пропускаться, если расчетное время их обработки больше, чем таймаут.<br><br>Logs нужен для генерации отчетов, мне очень нравится html - в итоге генерируется интерактивная страница, где можно тыкать по файлам и удобно смотреть, какие мутанты прошли. Выглядит это так:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/6a5/00a/4a6/6a500a4a64294831e48795ad77027adb.png\" width=\"2048\" height=\"1249\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/6a5/00a/4a6/6a500a4a64294831e48795ad77027adb.png\"></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/169/9d8/9a9/1699d89a90f4669d9613e61a343bc5b1.png\" width=\"2048\" height=\"903\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/169/9d8/9a9/1699d89a90f4669d9613e61a343bc5b1.png\"></figure><h3>Оптимизация</h3><p>Я думаю, вы уже поняли, что проход тестов по тысячам мутантов дело не быстрое :) </p><p>Но нам на помощь приходит распараллеливание. В первую очередь нам нужно научиться просто запускать тесты в многопоточном режиме, просто добавив флаг <code>--parallel</code> (число потоков будет равно число CPU, можно контролировать флагом <code>--processes</code>):</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/128/cfc/0ca/128cfc0ca42c04f3426d8cb7b23b4b03.png\" width=\"1622\" height=\"1522\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/128/cfc/0ca/128cfc0ca42c04f3426d8cb7b23b4b03.png\"></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/42c/93b/f05/42c93bf05c6f3142ff9f9c7ee8e8ad56.png\" width=\"1588\" height=\"452\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/42c/93b/f05/42c93bf05c6f3142ff9f9c7ee8e8ad56.png\"></figure><p>В моем случае на небольшом приложении тесты стали проходить в пять раз быстрее. На больших проектах это может существенно улучшить жизнь.</p><p>Ну и по аналогии в несколько потоков можно запускать мутационные тесты параметром <code>--threads=</code>:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/81f/c06/d89/81fc06d8978134733cee7af2b91ae522.png\" width=\"1624\" height=\"1440\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/81f/c06/d89/81fc06d8978134733cee7af2b91ae522.png\"></figure><h3>Что дальше?</h3><p>Когда у вас сгенерировался первый отчет, не надо пугаться, что 90% мутантов выживает. Тут работает правило 20/80, вы быстро сможете прикрыть незакрытые куски и найти ошибки в тестах. Да и часть мутантов можно игнорировать, например из-за особенностей Laravel проходит мутант, изменяющий видимость экшена на protected, это конечно править не нужно.<br><br>Тут должен быть здравый подход, как вы решите в своей команде. Для начала можно просто в свободное время убивать десяток мутантов день. Через пару месяцев у вас будут идеальные тесты.<br><br>Для закрепления успеха можно сделать автоматический запуск ночью с опцией <a href=\"https://infection.github.io/guide/command-line-options.html#min-msi\" rel=\"noopener noreferrer nofollow\"><u>--min-msi</u></a>, и придерживаться определенного процента мутантов.</p><h3>Выводы</h3><p>Мутационные тесты очень полезный инструмент. На мой взгляд - это единственный способ контролировать качество тестов.<br><br>И, как видно из статьи, не обязательно на него тратить огромные ресурсы, можно начинать с малого, это уже даст какой-то результат. </p><p>И чем ответственнее проект, тем важнее наличие качественных тестов. В моем случае это парольный менеджер BearPass<sup><sub>[ссылка удалена модератором]</sub></sup>, тут уж точно без хороших тестов никуда.<br><br>И прошу - пишите тесты, код без тестов сразу становится легаси!</p><p>Сергей Никитченко, SVK.Digital</p><p></p>', 1, '2023-06-12 21:53:46', 428908, 74, '/ru/articles/737278/', 'Для начала хотелось бы затронуть так называемую «микросервисную архитектуру», которая стала довольно популярной. Но называть её архитектурой не совсем корректно, как заметил Роберт Мартин в своей книге «Чистая архитектура». Микросервис — это один из способов представления компонента общего приложения. Но архитектура, взаимодействие между компонентами, при этом может остаться такой же. Под компонентом понимается наименьшая единица развёртывания — пакет, библиотека или отдельное приложение, сервис, микросервис. В книге критикуется данная «микросервисная архитектура», а точнее, неправильное и неуместное её применение, которое есть во многих случаях и влечёт за собой негативные или крайне негативные последствия для проекта, и происходит «благодаря» низкой компетентности разработчиков или управляющих, которые хотят найти несуществующую здесь «серебряную пулю».В книге «Чистая архитектура» выделяется два основных слоя: инфраструктура и бизнес-логика. В различной литературе выделяют и другие слои, но какой-то относительно чёткой информации об этом я не встречал. Под инфраструктурой будем понимать логику более характерную для многих приложений, не только для данного, какие-то конкретные интеграции со сторонними компонентами, а также подготовку данных для бизнес-логики. Под бизнес-логикой — логику более характерную для данного приложения она и представляет наибольшую ценность, её нужно стараться выделять, делать более независимой от инфраструктуры. Во-первых, чтобы было проще её читать, тестировать, модифицировать, а во-вторых, чтобы была возможность с наименьшими затратами заменить инфраструктуру или её части, если потребуется.'),
(133, 'Чистая архитектура на практике', '<p>Для начала хотелось бы затронуть так называемую «микросервисную архитектуру», которая стала довольно популярной. Однако называть её архитектурой не совсем корректно, как заметил Роберт Мартин в своей книге «Чистая архитектура». Микросервис — это один из способов представления компонента общего приложения. Но архитектура, взаимодействие между компонентами, при этом может остаться такой же. Под компонентом понимается наименьшая единица развёртывания — пакет, библиотека или отдельное приложение, сервис, микросервис. В книге критикуется данная «микросервисная архитектура», а точнее, неправильное и неуместное её применение, которое есть во многих случаях и влечёт за собой негативные или крайне негативные последствия для проекта, и происходит «благодаря» низкой компетентности разработчиков или управляющих, которые хотят найти несуществующую здесь «серебряную пулю».</p><p>В книге «Чистая архитектура» выделяется два основных слоя: инфраструктура и бизнес-логика. В различной литературе выделяют и другие слои, но какой-то относительно чёткой информации об этом я не встречал. Под инфраструктурой будем понимать логику более характерную для многих приложений, не только для данного, какие-то конкретные интеграции со сторонними компонентами, а также подготовку данных для бизнес-логики. Под бизнес-логикой — логику более характерную для данного приложения она и представляет наибольшую ценность, её нужно стараться выделять, делать более независимой от инфраструктуры. Во-первых, чтобы было проще её читать, тестировать, модифицировать, а во-вторых, чтобы была возможность с наименьшими затратами заменить инфраструктуру или её части, если потребуется.</p><p>Примеры будут для <strong>PHP</strong> и <strong>Symfony</strong>, но и для других языков и систем программирования многое может быть похожим. Примеры абстрактные, и в разных приложения может всё отличаться. В ранних версиях <strong>Symfony</strong> была рекомендация делить приложение на бандлы-плагины. Но начиная с версии 3.4 рекомендовано делить приложение через пространства имён. Это практичнее. Структура проекта будет стандартной. В <code>App\\Service\\</code>, будет находиться основная логика приложения, бизнес-логика.  </p><p>Пусть, нужно сделать возможность оформления заказа. Для этого можно создать <code>App\\Service\\Order\\Checkout\\OrderCheckoutService</code>. Здесь будет общая логика оформления заказа. Входные данные можно принимать через параметры функции, но часто удобнее передавать структуру с данными, <strong>DTO</strong>. Могут понадобиться <code>App\\Service\\Order\\Checkout\\InputDto</code>, возможно, и <code>InputDtoInterface</code>. Он может содержать массив, коллекцию, из <code>OrderInputDto</code>, если заказов сразу несколько, например.<strong> </strong>Похожим образом обстоит дело и с выходными данными.</p><p>Если в <code>OrderCheckoutService</code> много разнообразной логики, можно выносить её в другие классы с разными названиями. Чтобы следовать <strong>принципу единой ответственности</strong> можно разделить его на несколько классов, например, <code>OrderCheckoutAcmeFeature1Service</code>, <code>OrderCheckoutAcmeFeature2Service</code> и так далее.</p><p>Ещё понадобится хранить данные заказов в БД, поэтому создадим сущность по зеркальному к сервису пути <code>App\\Entity\\Order\\Order</code>. Соответственно будет создан и репозиторий <code>App\\Repository\\Order\\OrderRepository</code>. Имеет смыл делать логику независимой от <strong>Entity</strong> и <strong>Repository</strong>. Проще всего это сделать через интерфейсы в <code>App\\Service\\Order\\Checkout\\</code>:<strong> </strong><code>OrderInterface</code> (или <code>CheckoutOrderInterface</code>) и <code>OrderRepositoryInterface</code><strong> </strong>(или <code>CheckoutOrderRepositoryInterface</code>). <code>OrderInterface</code> должен содержать только геттеры и сеттеры данных, необходимых для оформления заказа. <code>OrderRepositoryInterface</code><strong> </strong>должен содержать только нужные запросы к БД и логику связанную с построением запросов. Сущность и репозиторий реализуют эти интерфейсы соответственно. Можно вместо интерфейсов использовать и промежуточную структуру, <strong>DTO</strong>, но такой способ будет более объёмным в реализации и иметь некоторые другие минусы.</p><p>Таким образом, <strong>принцип единой ответственности</strong> из <strong>SOLID</strong> можно легко реализовать не привязываясь к структуре БД. Также, реализуется <strong>принцип разделения интерфейсов</strong>: класс (сервис) не должен ничего знать о данных и функциях, которые ему не нужны. Логика не привязана к конкретной сущности, её можно применить к любым другим данным — <strong>принцип инверсии зависимости</strong>. Класс с реализацией можно легко подменить через <strong>сервис-контейнер </strong>—  <strong>принцип открытости-закрытости</strong>. Такой код проще в поддержке, каждый разработчик может выполнять свою задачу независимо от других разработчиков проекта.</p><p>Ещё понадобится фабрика или <strong>creator</strong> для создания экземпляра конкретной сущности. Для этого создадим интерфейс <code>App\\Service\\Order\\OrderFactoryInterface</code> (или <code>OrderCreatorInterface</code>, как кому нравится). Обязанность создания можно возложить, например, на класс  <code>App\\Factory\\Order\\OrderFactory</code>, реализующий этот интерфейс и другие подобные интерфейсы, если появятся. Фабрика может содержать единственный метод <code>create</code>. Фабрику можно положить и в <code>App\\Service\\Order\\OrderFactory</code>, но нужно помнить, что она относится к инфраструктуре, в отличие от интерфейса.</p><p>Надо находить наиболее важную логику приложения, так называемую бизнес-логику, и выделять её в отдельные классы, делать более независимой от других частей приложения, библиотек. Для этого понадобится делать обёртки, адаптеры, посредники, применять инверсию зависимости.</p><p>Если интерфейс реализован только в одном месте, <strong>сервис-контейнер</strong> <strong>Symfony</strong>, сам подставит соответствующую реализацию в конструктор сервиса. Если реализаций несколько, то нужно уточнить конкретную в файле конфигурации контейнера. У контейнера есть много возможностей, которые полезно знать.</p><p>И так, у нас есть <code>OrderCheckoutService</code>, содержащий бизнес-логику оформления заказа. Он может вызывать напрямую другие сервисы, выше уровнем. Или через инверсию зависимости другие, более конкретные реализации, менее важные детали. Например, может вызвать <code>App\\Service\\Order\\Delivery\\OrderDeliveryService</code><strong>, </strong>содержащий логику связанную с доставкой заказа. И эта логика может относиться не только к оформлению. В таком случае мы подразумеваем, что <code>OrderDeliveryService</code><strong> </strong>— это более важная логика, более высокого уровня, чем <code>OrderCheckoutService</code>, бизнес-логика оформления заказа зависит от бизнес-логики доставки заказа.<strong> </strong><code>OrderDeliveryService</code>,<strong> </strong>в свою очередь, может вызвать уже конкретный расчёт через сторонний <strong>API</strong>, например, с помощью <code>App\\Service\\Delivery\\DeliveryCalculatorInterface</code> с реализацией <code>App\\Service\\Delivery\\DeliveryCalculator</code>. Здесь калькулятор находится в <code>App\\Service\\Delivery</code> потому, что он содержит логику доставки, которая может быть использована отдельно от <code>Order</code>. Интерфейс использован, чтобы не было зависимости от инфраструктурного кода. Если есть какая-то общая бизнес-логика, которая относится к доставке <code>Order</code> и к доставке чего-то ещё не являющегося <code>Order</code>, что сложно представить, то можно поместить её, например, в <code>App\\Service\\Delivery\\DeliveryService</code>.</p><p>Здесь <code>DeliveryCalculator</code> зависит от бизнес-логики, он реализует её интерфейс. А если понадобится сделать калькулятор независимым от данного приложения и, возможно, вынести его в отдельный пакет и использовать в других приложениях, можно выделить его логику и поместить, например, в <code>App\\Util\\Delivery\\DeliveryCalculator</code>. А в калькуляторе приложения уже просто вызывать его. Тогда класс <code>App\\Service\\Delivery\\DeliveryCalculator</code> становится конкретной реализацией адаптера. К нему может добавиться ещё некоторая логика, тогда его уже можно назвать декоратором. А если он будет обращаться к нескольким классам, то это уже посредник. Но смысл один и тот же. Не помешает так же создать обёртки над другими сторонними компонентами, например, над <strong>EntityManager</strong>. Если есть необходимость в ещё более чётком отделении бизнес-логики, можно весь подобный инфраструктурный код, соединяющий инфраструктуру с бизнес-логикой, перенести из <code>App\\Service\\</code>, например, в <code>App\\ServiceBridge\\</code> c зеркальной к <code>App\\Service\\</code> структурой. И в <code>App\\Service\\</code> тогда останется чистая бизнес-логика.</p><p>Ещё может быть логика оформления заказа пользователем на сайте и администратором в панели управления, она может в чём-то совпадать, в чём-то отличаться. Тогда<strong> </strong>можно создать <code>App\\Service\\Order\\Checkout\\UserOrderCheckoutService</code> и <code>App\\Service\\Order\\Checkout\\AdminOrderCheckoutService</code> со своей логикой. Они могут обращаться к общему <code>OrderCheckoutService</code><strong>,</strong> который будет более важен, выше уровнем в таком случае. А могут быть и самостоятельными, тогда их следует перенести на уровень выше, например, в <code>App\\Service\\Order\\UserCheckout\\</code>. Логику, связанную с взаимодействием с пользователем, со страницей оформления заказа можно вынести в <code>App\\Service\\Order\\UserCheckout\\UserOrderCheckoutInteractor</code>, который будет обращаться к <code>UserOrderCheckoutService</code>. И уже в контроллере вызывать сервис/интерактор. Так же и с <code>AdminOrderCheckoutService</code>.</p><p>Надо следить за зависимостями, не следует допускать двухсторонних, циклических зависимостей между модулями. Иначе их не получится рассматривать каждый как отдельный компонент системы, они все вместе будут представлять собой единый компонент.</p><p>Что касается сокрытия классов, в <strong>PHP</strong> нет такой возможности. Есть какие-то сторонние решения. Но в общем случае делать этого не нужно, так как должно быть понятным из документации или из примеров, как использовать какой-либо компонент, библиотеку. Если этого нет, то это уже проблема другого уровня, профессионального, организационного, и методом сокрытия классов её не решить. Зато сокрытие классов может создать проблемы в использовании пакета. Можно помечать некоторые классы и функции, которые нежелательно переопределять, аннотацией <code>internal</code><strong>,</strong> этого должно быть достаточно. Также, при создании пакета не следует злоупотреблять <code>final</code>, и <code>private</code>, а использовать их только там, где это действительно надо, если есть другое, более правильное решение. Если <code>private</code> используется в коде самого приложения, поправить его будет легко, а вот в стороннем пакете это сделать уже сложнее. </p><p>В директории <code>config</code><strong> </strong>можно создать поддиректорию и подключить всё её содержимое в основном файле конфигурации фреймворка <code>services.yaml</code>. Тогда проще будет разделять конфигурацию на части по файлам, чтобы соотносить с частями приложения. Подобным образом следует делить и другие директории, если они есть:<strong> </strong><code>templates, translations, docs, tests, App\\Controller, App\\EventListener</code> и другие.</p><p>С возможностями современных <strong>IDE</strong> выделить какой-то определённый компонент из такой системы будет не сложно, если это, конечно, потребуется.</p>', 1, '2023-06-12 21:53:46', 805723, 76, '/ru/articles/736574/', 'Composer - это популярный менеджер пакетов для PHP, который используется для управления зависимостями в проектах. Он позволяет быстро и легко устанавливать и обновлять пакеты из публичных репозиториев Packagist. Однако, иногда бывает необходимо создать приватные репозитории Composer для хранения и управления собственными пакетами или зависимостями.В этой статье мы рассмотрим, как создать приватные репозитории Composer, используя несколько примеров.'),
(134, 'Как создать приватные репозитории composer', '<figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/850/ccd/d37/850ccdd37c853f2de1901de1aa593e47.png\" width=\"780\" height=\"440\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/850/ccd/d37/850ccdd37c853f2de1901de1aa593e47.png\"></figure><p>Composer - это популярный менеджер пакетов для PHP, который используется для управления зависимостями в проектах. Он позволяет быстро и легко устанавливать и обновлять пакеты из публичных репозиториев Packagist. Однако, иногда бывает необходимо создать приватные репозитории Composer для хранения и управления собственными пакетами или зависимостями.</p><p>В этой статье мы рассмотрим, как создать приватные репозитории Composer, используя несколько примеров.</p><h3>Шаг 1: Установка Satis</h3><p>Satis - это инструмент, который позволяет создавать приватные репозитории Composer. Он создает статические JSON-файлы для каждого пакета, которые используются для управления зависимостями. Чтобы начать использовать Satis, необходимо установить его на вашем сервере.</p><p>Сначала необходимо установить Composer, если вы еще этого не сделали. Затем можно установить Satis с помощью следующей команды:</p><pre><code class=\"bash\">composer create-project composer/satis --stability=dev --keep-vcs</code></pre><p>Эта команда создаст директорию \"satis\" со всем необходимым для работы Satis.</p><h3>Шаг 2: Создание конфигурации</h3><p>После установки Satis необходимо настроить конфигурацию. Она содержит информацию о том, какие пакеты будут добавлены в приватный репозиторий, а также о том, каким образом Satis должен сгенерировать JSON-файлы для каждого пакета.</p><p>Для этого нужно создать файл \"satis.json\" в корневой директории Satis и добавить следующий код:</p><pre><code class=\"json\">{\n    \"name\": \"My Private Repository\",\n    \"homepage\": \"https://example.com\",\n    \"repositories\": [\n        {\n            \"type\": \"vcs\",\n            \"url\": \"git@github.com:username/my-package.git\"\n        }\n    ],\n    \"require-all\": true,\n    \"output-dir\": \"web/\"\n}</code></pre><p>В этом примере мы создаем приватный репозиторий с именем \"My Private Repository\", который будет храниться на домене \"https://example.com\". Мы также добавляем репозиторий типа \"vcs\" с URL-адресом нашего пакета в GitHub. Затем мы используем параметр \"require-all\", чтобы указать Satis включить все зависимости, необходимые для нашего пакета. Наконец, мы указываем папку, в которую будут сохранены JSON-файлы для каждого пакета. </p><h3>Шаг 3: Генерация репозитория</h3><p>После настройки конфигурации вам нужно сгенерировать приватный репозиторий с помощью Satis. Для этого выполните следующую команду из директории Satis:</p><pre><code class=\"bash\">php bin/satis build satis.json web/</code></pre><p>Эта команда запускает процесс генерации JSON-файлов для каждого пакета и сохраняет их в указанную папку. В нашем примере файлы будут сохранены в папку \"web/\".</p><p>После выполнения этой команды вы можете разместить содержимое папки \"web/\" на вашем веб-сервере, чтобы приватный репозиторий был доступен через указанный домен.</p><h3>Шаг 4: Добавление приватного репозитория в проект</h3><p>Теперь, когда ваш приватный репозиторий создан, вы можете добавить его в свой проект. Для этого откройте файл composer.json вашего проекта и добавьте следующий код:</p><pre><code class=\"json\">{\n    \"repositories\": [\n        {\n            \"type\": \"composer\",\n            \"url\": \"https://example.com\"\n        }\n    ],\n    \"require\": {\n        \"username/my-package\": \"1.0.0\"\n    }\n}</code></pre><p>В этом примере мы добавляем репозиторий типа \"composer\" с URL-адресом вашего приватного репозитория. Затем мы указываем зависимость нашего пакета \"username/my-package\" версии \"1.0.0\".</p><p>Выполните команду <code>composer update</code>, чтобы Composer установил зависимости из вашего приватного репозитория.</p><p>Теперь ваш проект будет использовать пакет из приватного репозитория.</p><h3>Аутентификация для приватных репозиториев</h3><p>Чтобы предотвратить несанкционированный доступ к вашему приватному репозиторию, вам может потребоваться аутентификация. Рассмотрим два распространенных метода аутентификации для приватных репозиториев Composer.  </p><ol><li><p>SSH-аутентификация;</p></li><li><p>HTTP-аутентификация.</p></li></ol><h4>SSH-аутентификация</h4><p>Если ваш приватный репозиторий хранится на сервере Git с использованием SSH-аутентификации, вам необходимо убедиться, что ваш сервер настроен для аутентификации по SSH ключу. После этого Composer автоматически использует ваши SSH ключи для доступа к репозиторию.</p><h4>HTTP-аутентификация</h4><p><strong>Аутентификация HTTP Basic</strong></p><p>Для использования аутентификации HTTP Basic вам нужно добавить учетные данные в URL вашего приватного репозитория в файле composer.json вашего проекта. Пример:</p><pre><code class=\"json\">{\n    \"repositories\": [\n        {\n            \"type\": \"composer\",\n            \"url\": \"https://username:password@example.com\"\n        }\n    ],\n    \"require\": {\n        \"username/my-package\": \"1.0.0\"\n    }\n}</code></pre><p>В приведенном выше примере мы добавляем имя пользователя и пароль в URL вашего приватного репозитория. Затем мы указываем зависимость нашего пакета \"username/my-package\" версии \"1.0.0\".</p><p><strong>Аутентификация с помощью токена</strong></p><p>Некоторые репозитории поддерживают аутентификацию с помощью токена, чтобы предоставить доступ к приватным репозиториям. В этом случае вы должны создать токен доступа на вашем репозитории и использовать его в URL вашего приватного репозитория в файле composer.json вашего проекта. Пример:</p><pre><code class=\"json\">{\n    \"repositories\": [\n        {\n            \"type\": \"composer\",\n            \"url\": \"https://token@example.com\"\n        }\n    ],\n    \"require\": {\n        \"username/my-package\": \"1.0.0\"\n    }\n}</code></pre><p>В приведенном выше примере мы добавляем токен доступа в URL вашего приватного репозитория. Затем мы указываем зависимость нашего пакета \"username/my-package\" версии \"1.0.0\".</p><p>Обратите внимание, что использование аутентификации HTTP Basic или аутентификации с помощью токена может быть необходимо для обеспечения безопасности вашего приватного репозитория и предотвращения несанкционированного доступа.</p><h3>Заключение</h3><p>Создание приватных репозиториев Composer позволяет эффективно управлять зависимостями и облегчает распространение собственных пакетов в вашем проекте. С помощью инструментов, таких как Satis и аутентификация, вы можете создать приватные репозитории и легко интегрировать их в свои проекты. Пользуйтесь этими знаниями, чтобы оптимизировать разработку ваших PHP-проектов с использованием Composer!  </p><p></p>', 3, '2023-06-12 21:53:47', 757223, 75, '/ru/articles/736234/', 'Передо мной была поставлена задача \"чтобы посетители могли войти на сайт через Госуслуги\". Задачка не новая, давно решена. На PHP для этого используют библиотеки github.com/fr05t1k/esia и github.com/ekapusta/oauth2-esia, но есть пара оговорок.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(135, 'BALLSORT на $mol. Часть 2', '<p>Сегодня мы продолжим переписывание на $mol <a href=\"https://ballsort.sova.dev/\" rel=\"noopener noreferrer nofollow\">этой</a> демки. Кто не читал первую часть, рекомендую сначала ознакомиться с ней <a href=\"https://habr.com/ru/articles/741040\" rel=\"noopener noreferrer nofollow\">BALLSORT на $mol. Часть 1</a></p><h2>Напомню задачу</h2><figure class=\"\"><img src=\"https://habrastorage.org/getpro/habr/post_images/7a6/f0f/e7a/7a6f0fe7a5defe28bd9c776b2b2b3fda.gif\" alt=\"gif\" data-src=\"https://habrastorage.org/getpro/habr/post_images/7a6/f0f/e7a/7a6f0fe7a5defe28bd9c776b2b2b3fda.gif\"><div><figcaption>gif</figcaption></figure><h3>Экраны</h3><ul><li><p>Start - стартовый экран на котором отображается заголовок, кнопка для запуска игры, и подвал с cсылками</p></li><li><p>Game - при клике на кнопку запуска, открывается экран с игрой, на котором необходимо сортировать шарики. В хедере находятся кнопки возврата на стартовый экран и рестарта игры, а также счетчик числа сделаyных шагов. В центре трубки с шарами. В подвале те же ссылки что и на первом экране.</p></li><li><p>Finish - когда шарики отсортированы, поверх второго экрана отображается третий экран. На нем находится заголовок \"You won!\", количество сделанных шагов, и кнопка \"New game\" которая открывает стартовый экран.</p></li></ul><h3>Механика игры</h3><ol><li><p>Рисуются 6 трубок, четыре и них заполнены шарами и две пустые</p></li><li><p>В заполненных трубках находятся по 4 шара, четырех разных цветов</p></li><li><p>При клике на непустую трубку, она переходит в активное состояние </p><ul><li><p>В активном состоянии верхний шар в трубке переносится на ее крышку</p></li></ul></li><li><p>Повторный клик по активной трубке дезактивирует ее, шар переносится обратно в нее</p></li><li><p>После активации трубки, клик по другой трубке переносит шар с крышки в другую трубку при условии, что другая трубка пуста или верхний шар другой трубки такого же цвета как шар на крышке активной трубке</p></li><li><p>Когда в одной и трубок все 4 шара одного цвета она переходит в статус готово, после этого шары в нее/из нее перемещать нельзя.</p></li><li><p>Игра закончится, когда 4 трубки перейдут в статус готово.</p></li></ol><h2>Отображение</h2><p>Мы создадим отдельные модули для отображения:</p><ul><li><p>Ссылки</p></li><li><p>Кнопки</p></li><li><p>Шара</p></li><li><p>Трубки</p></li></ul><p>А затем соберем все в модуле <code>app</code>.</p><h3>link</h3><p>Создайте директорию <code>ballsort/link</code> и файл в ней <code>link.view.tree</code>.</p><pre><code>$hype_ballsort_link $mol_view\n	dom_name \\a\n	attr *\n		href &lt;= href \\\n		target &lt;= target \\_self\n	sub / &lt;= title \\\n</code></pre><blockquote><p>view.tree - это DSL, прежде чем продолжать рекомендую ознакомиться с этими трудами: <a href=\"https://mol.hyoo.ru/#!section=docs/=rv38hh_h1cjhz\" rel=\"noopener noreferrer nofollow\">Композиция компонентов</a>, <a href=\"https://mol.hyoo.ru/#!section=docs/=vv2nig_s5zr0f\" rel=\"noopener noreferrer nofollow\">Декларативная композиция компонентов</a></p></blockquote><p>После того как вы ознакомились с материалами по ссылкам выше вы понимаете, что мы описали класс <code>$hype_ballsort_link</code>, который наследуется от базового класса view-компонент <code>$mol_view</code>. Имя тега изменено на <code>a</code>, у dom-ноды установлены два аттрибута <code>href</code> и <code>target</code> на которые забиндены одноименные свойства, а в качестве ребенка dom-ноды выводим строку из свойства <code>title</code>.</p><p>Отрисуем этот компонент. Откройте в браузере ссылку <code>http://127.0.0.1:9080/hype/ballsort/app/-/test.html</code> - это модуль приложения, в котором находится файл <code>index.html</code>. На экране отображается только строка приветствия.</p><p>Отредактируйте файл <code>app/app.view.tree</code></p><pre><code>$hype_ballsort_app $mol_view\n	sub /\n		&lt;= Components $mol_list\n			rows /\n				&lt;= Link $hype_ballsort_link\n					title \\Ссылка\n					href \\example.com\n					target \\_blank\n</code></pre><blockquote><p><a href=\"https://github.com/hyoo-ru/mam_mol/tree/master/list\" rel=\"noopener noreferrer nofollow\">$mol_list</a> - это view-компонент из мола, для отображения вертикального списка, временно воспользуемся им.</p></blockquote><p>Заглянем в браузер:<br> </p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/5c2/904/c9d/5c2904c9d12b9eaee18cd6a51a294bed.png\" alt=\"ссылка\" data-src=\"https://habrastorage.org/getpro/habr/post_images/5c2/904/c9d/5c2904c9d12b9eaee18cd6a51a294bed.png\"><div><figcaption>ссылка</figcaption></figure><p>Добавим стилей, создайте в <code>link</code> файл <code>link.view.css.ts</code></p><pre><code class=\"typescript\">namespace $.$$ {\n	\n	$mol_style_define( $hype_ballsort_link, {\n		\n		color: \'lightgray\',\n		padding: [\'0.25rem\', \'1rem\'],\n		\n	} )\n	\n}\n</code></pre><blockquote><p>Про <code>css.ts</code> можно почитать тут: <a href=\"https://mol.hyoo.ru/#!section=docs/=7fbqy9_ojho3i\" rel=\"noopener noreferrer nofollow\">Каскадные стили компонент</a>, <a href=\"https://mol.hyoo.ru/#!section=docs/=xwq9q5_f966fg\" rel=\"noopener noreferrer nofollow\">Продвинутый CSS-in-TS</a>, <a href=\"https://github.com/hyoo-ru/mam_mol/blob/master/style/readme.md\" rel=\"noopener noreferrer nofollow\">$mol_style readme.md</a></p></blockquote><p>Готово, компонент ссылки теперь имеет необходимый функционал и выглядит также как в оригинальном приложении.</p><h3>button</h3><p>Проделываем все тоже самое для компонента кнопки.</p><p>Файл <code>ballsort/button/button.view.tree</code>:</p><pre><code>$hype_ballsort_button $mol_view\n	dom_name \\button\n	sub / &lt;= title \\\n	event *\n		click? &lt;=&gt; click? null\n</code></pre><p>Выводим кнопку в <code>app</code>:</p><pre><code>$hype_ballsort_app $mol_view\n	sub /\n		&lt;= Components $mol_list\n			rows /\n				&lt;= Link $hypr_ballsort_link\n					title \\Ссылка\n					href \\example.com\n					target \\_blank\n				&lt;= Button $hype_ballsort_button\n					title \\Кнопка\n</code></pre><p>Убеждаемся, что кнопка подтянулась:<br> </p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/b99/c28/f62/b99c28f62a9e01c3b0f209d65e6bd6e7.png\" alt=\"Кнопка\" data-src=\"https://habrastorage.org/getpro/habr/post_images/b99/c28/f62/b99c28f62a9e01c3b0f209d65e6bd6e7.png\"><div><figcaption>Кнопка</figcaption></figure><p>Добавляем стили в файле <code>button.view.css.ts</code>:</p><pre><code>namespace $.$$ {\n\n	$mol_style_define( $hype_ballsort_button, {\n\n		width: \'fit-content\',\n		backgroundColor: \'white\',\n		color: \'black\',\n		padding: [\'0.6rem\', \'1rem\'],\n		fontSize: \'1.3rem\',\n		margin: [0, \'0.2rem\'],\n		border: {\n			width: \'2px\',\n			style: \'solid\',\n			color: \'lightgray\',\n		},\n		cursor: \'pointer\',\n		position: \'relative\',\n\n		\':hover\': {\n			backgroundColor: \'#f1f1f1\',\n		},\n\n		\':focus\': {\n			outline: \'none\',\n			boxShadow: \'0 0 0 4px lightblue\',\n			borderColor: \'lightblue\',\n		},\n\n	} )\n\n}\n</code></pre><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/a80/d67/71b/a80d6771ba6c7f4f462a51e2394b1cc8.png\" alt=\"Кнопка со стилями\" data-src=\"https://habrastorage.org/getpro/habr/post_images/a80/d67/71b/a80d6771ba6c7f4f462a51e2394b1cc8.png\"><div><figcaption>Кнопка со стилями</figcaption></figure><h3>ball</h3><p>Теперь создадим компонент для шара. Имя <code>$hype_ballsort_ball</code> уже занято в классе модели, view-шку шара поместим в <code>$hype_ballsort_ball_view</code>.</p><p>Создайте файл <code>ballsort/ball/view/view.view.tree</code></p><blockquote><p>Комментарии во view.tree начинаются со знака минус</p></blockquote><pre><code>$hype_ballsort_ball_view $mol_view\n	- Компонент шара будет принимать модель шара, из которой он достает цвет\n	ball $hype_ballsort_ball\n	- Для раскраски шара будет использоваться радиальный градиент из двух цветов\n	style *\n		--main-color &lt;= color_main \\\n		--light-color &lt;= color_light \\\n	- Цвета заранее заготовлены в массиве, такие же как в оригинальном приложении\n	- Всего предусмотрено 12 цветов, индексы от 0 до 11\n	- цвет по индексу 0 - основной цвет - color_main\n	- цвет по индексу 0 + 1 - второй цвет - color_light\n	colors /\n		\\#8F7E22\n		\\#FFE600\n		\\#247516\n		\\#70FF00\n		\\#466799\n		\\#00B2FF\n		\\#29777C\n		\\#00FFF0\n		\\#17206F\n		\\#4A72FF\n		\\#BABABA\n		\\#FFFFFF\n		\\#4C3283\n		\\#9D50FF\n		\\#8B11C5\n		\\#FF00F5\n		\\#9D0D41\n		\\#FF60B5\n		\\#4B0000\n		\\#FF0000\n		\\#79480F\n		\\#FF7A00\n		\\#343434\n		\\#B1B1B1\n</code></pre><p>Рисуем шар в <code>app</code></p><pre><code>$hype_ballsort_app $mol_view\n	sub /\n		&lt;= Components $mol_list\n			rows /\n				&lt;= Link $hype_ballsort_link\n					title \\Ссылка\n					href \\example.com\n					target \\_blank\n				&lt;= Button $hype_ballsort_button\n					title \\Кнопка\n				&lt;= Ball $hype_ballsort_ball_view\n</code></pre><p>И не видем его, но он есть<br> </p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/0c0/332/dc5/0c0332dc5f646aeccd51828afb159ecf.png\" alt=\"Невидимый шар\" data-src=\"https://habrastorage.org/getpro/habr/post_images/0c0/332/dc5/0c0332dc5f646aeccd51828afb159ecf.png\"><div><figcaption>Невидимый шар</figcaption></figure><p> Добавим ему стилей, создайте файл <code>ball/view/view.view.css.ts</code> </p><pre><code class=\"typescript\">namespace $.$$ {\n\n	$mol_style_define( $hype_ballsort_ball_view, {\n\n		width: \'2rem\',\n		height: \'2rem\',\n		boxSizing: \'content-box\',\n\n		border: {\n			radius: \'50%\',\n			width: \'2px\',\n			style: \'solid\',\n			color: \'black\',\n		},\n\n		margin: \'1px\',\n		position: \'relative\',\n		backgroundImage: \'radial-gradient(circle at 65% 15%, white 1px, var(--light-color) 3%, var(--main-color) 60%, var(--light-color) 100%)\',\n\n	} )\n\n}\n</code></pre><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/ea5/5f7/220/ea55f72202bcd5271c58f32c09c0264e.png\" alt=\"Что-то появилось\" data-src=\"https://habrastorage.org/getpro/habr/post_images/ea5/5f7/220/ea55f72202bcd5271c58f32c09c0264e.png\"><div><figcaption>Что-то появилось</figcaption></figure><p>Теперь нужно научить шар брать нужные цвета, добавим логики. Создайте файл <code>view.view.ts</code>.</p><pre><code class=\"typescript\">namespace $.$$ {\n	export class $hype_ballsort_ball_view extends $.$hype_ballsort_ball_view {\n\n		// В свойстве ball хранится инстанс модели шара\n		// из модели достаем цвет `color()` и умножаем на 2\n		// чтобы получить правильный индекс в массиве цветов\n		color_index() {\n			return this.ball().color() * 2\n		}\n		\n		// Достаем из массива основной цвет по посчитанному индексу\n		// На случай если нам пришел индекс выходящий за массив с цветами\n		// выводим красный цвет\n		color_main() {\n			return this.colors()[ this.color_index() ] ?? \'red\'\n		}\n\n		// Достаем второй цвет по индексу + 1\n		// и устанавливаем значение по умолчанию\n		color_light() {\n			return this.colors()[ this.color_index() + 1 ] ?? \'white\'\n		}\n\n	}\n}\n\n</code></pre><p>И т.к. в модели по дефолту стоит цвет 0, видим первый цвет из массива<br> </p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/f20/365/7d0/f203657d096a1a988b1647a51d349bae.png\" alt=\"желтый\" data-src=\"https://habrastorage.org/getpro/habr/post_images/f20/365/7d0/f203657d096a1a988b1647a51d349bae.png\"><div><figcaption>желтый</figcaption></figure><h3>tube</h3><p>Нам осталось создать компонент для трубки. По аналогии с шаром, создайте файл <code>tube/view/view.view.tree</code></p><p>Сделаем его на основе <code>$mol_list</code>, т.к. он состоит из двух вертикальных частей</p><ul><li><p>крышка</p></li><li><p>сама трубка с шариками, которая тоже на <code>$mol_list</code></p></li></ul><pre><code>$hype_ballsort_tube_view $mol_list\n	tube $hype_ballsort_tube\n	active false\n	event *\n		click? &lt;=&gt; click? null\n	rows /\n		&lt;= Roof $mol_view sub / &lt;= roof null\n		&lt;= Balls $mol_list\n			style * min-height \\10rem\n			attr *\n				data-complete &lt;= complete false\n			rows &lt;= balls /\n				&lt;= Ball*0 $hype_ballsort_ball_view\n					ball &lt;= ball* $hype_ballsort_ball\n\n</code></pre><ul><li><p><code>tube $hype_ballsort_tube</code> - также, как и компонент шара, у него будет хранится модель трубки</p></li><li><p><code>active false</code> - свойство с типом <code>boolean</code> нужно для отображения активации</p></li><li><p><code>event * click? &lt;=&gt; click? null</code> - биндим свойство <code>click</code> на событие клика</p></li><li><p><code>rows /</code> - для отображения детей у <code>$mol_list</code> предусмотрено свойство <code>rows</code>, а не <code>sub</code> как у <code>$mol_view</code></p></li><li><p><code>&lt;= Roof $mol_view sub / &lt;= roof null</code> - в свойстве <code>Roof</code> будет находится подкомпонент <code>$mol_view</code>, который отображает содержимое свойства <code>roof</code> - оно по умолчанию <code>null</code>. Но при активации трубки <code>roof</code> будет возвращать view-ку шара</p></li><li><p><code>&lt;= Balls $mol_list</code> - в свойстве <code>Balls</code> подкомпонент на основе <code>$mol_list</code> будет отображать шары в трубке</p></li><li><p><code>style * min-height \\10rem</code> - минимальную высоту указываем через <code>style</code></p></li><li><p><code>attr * data-complete &lt;= complete false</code> - чтобы отобразить состояние готово будем использовать data-аттрибут</p></li><li><p><code>rows &lt;= balls /</code> - у подкомпонента <code>Balls</code> свойство <code>rows</code> заменяем на наше свойство <code>balls</code> которое будет возвращать массив view-шек шаров</p></li></ul><p>Про последнюю часть скажу отдельно.</p><pre><code>&lt;= Ball*0 $hype_ballsort_ball_view\n	ball &lt;= ball* $hype_ballsort_ball\n</code></pre><p>Свойство <code>Ball</code> - это фабрика, которая в сгенерированном классе пометиться декоратором <code>$mol_mem_key</code>. Т.е. она будет создавать и возвращать инстансы view-шек шаров точно также как мы делали это руками в <code>$hype_ballsort_game</code>. Плюс к этому, у созданного инастана будет подменено свойство <code>ball</code> на наше.</p><p>Пример из модели:</p><pre><code class=\"typescript\">		@$mol_mem_key\n		Tube( index: number ) {\n			const obj = new $hype_ballsort_tube\n			obj.size = () =&gt; this.tube_size()\n			return obj\n		}\n</code></pre><p>А это будет сгенерировано из <code>view.tree</code> описания:</p><pre><code class=\"typescript\">		@ $mol_mem_key\n		Ball(id: any) {\n			const obj = new this.$.$hype_ballsort_ball_view()\n			\n			obj.ball = () =&gt; this.ball(id)\n			\n			return obj\n		}\n</code></pre><p>Выведим трубку в <code>app</code>:</p><pre><code>$hype_ballsort_app $mol_view\n	sub /\n		&lt;= Components $mol_list\n			rows /\n				&lt;= Link $hype_ballsort_link\n					title \\Ссылка\n					href \\example.com\n					target \\_blank\n				&lt;= Button $hype_ballsort_button\n					title \\Кнопка\n				&lt;= Ball $hype_ballsort_ball_view\n				&lt;= Tube $hype_ballsort_tube_view\n					balls /\n						&lt;= Ball1 $hype_ballsort_ball_view\n							color_index 2\n						&lt;= Ball2 $hype_ballsort_ball_view\n							color_index 4\n						&lt;= Ball3 $hype_ballsort_ball_view\n							color_index 6\n</code></pre><p>И переопределим у нее свойство <code>balls</code> чтобы увидеть несколько шаров. А чтобы у шаров были разные цвета, у каждого шара переопределим свойство <code>color_index</code>.<br> </p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/17f/d0c/7a0/17fd0c7a08faef375a951e92225a75ae.png\" alt=\"На трубку не похоже\" data-src=\"https://habrastorage.org/getpro/habr/post_images/17f/d0c/7a0/17fd0c7a08faef375a951e92225a75ae.png\"><div><figcaption>На трубку не похоже</figcaption></figure><p>Создайте файл <code>tube/view/view.view.css.ts</code></p><pre><code class=\"typescript\">namespace $.$$ {\n\n	$mol_style_define( $hype_ballsort_tube_view, {\n\n		// В оригинальном приложении box-sizing = content-box\n		// а у $mol_view по дефолту стоит border-box\n		// поэтому меняем\n		boxSizing: \'content-box\',\n		width: \'fit-content\',\n\n		Roof: {\n			boxSizing: \'content-box\',\n			height: \'3rem\',\n			alignItems: \'center\',\n			justifyContent: \'center\',\n			border: {\n				bottom: {\n					style: \'solid\',\n					color: \'lightgray\',\n				},\n			},\n		},\n\n		Balls: {\n			boxSizing: \'content-box\',\n			width: \'3rem\',\n			flex: {\n				direction: \'column-reverse\',\n			},\n			justifyContent: \'flex-start\',\n			alignItems: \'center\',\n\n			border: {\n				width: \'2px\',\n				style: \'solid\',\n				color: \'lightgray\',\n			},\n\n			padding: {\n				bottom: \'0.4rem\',\n				top: \'0.4rem\',\n			},\n\n			borderRadius: \'0 0 2.4rem 2.4rem\',\n\n			\'@\': {\n				\'data-complete\': {\n					true: {\n						// Когда data-complete=true\n						backgroundColor: \'lightgray\',\n					},\n				},\n			},\n		},\n\n	} )\n\n}\n</code></pre><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/154/e1e/ce4/154e1ece4fade77c94b420fa786ae098.png\" alt=\"Теперь что-то похожее\" data-src=\"https://habrastorage.org/getpro/habr/post_images/154/e1e/ce4/154e1ece4fade77c94b420fa786ae098.png\"><div><figcaption>Теперь что-то похожее</figcaption></figure><p>В $hype_ballsort_app добавим трубке шар на крышку:</p><pre><code>				- ...\n				&lt;= Tube $hype_ballsort_tube_view\n					balls /\n						&lt;= Ball1 $hype_ballsort_ball_view\n							color_index 2\n						&lt;= Ball2 $hype_ballsort_ball_view\n							color_index 4\n						&lt;= Ball3 $hype_ballsort_ball_view\n							color_index 6\n					roof &lt;= Ball4 $hype_ballsort_ball_view\n						color_index 8\n</code></pre><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/09d/96d/50c/09d96d50c8d11e715a8d4bed32242889.png\" alt=\"Шар на крышке отображается\" data-src=\"https://habrastorage.org/getpro/habr/post_images/09d/96d/50c/09d96d50c8d11e715a8d4bed32242889.png\"><div><figcaption>Шар на крышке отображается</figcaption></figure><p>Осталось добавить только поведение, создайте файл <code>tube/view/view.view.ts</code></p><pre><code class=\"typescript\">namespace $.$$ {\n\n	export class $hype_ballsort_tube_view extends $.$hype_ballsort_tube_view {\n\n		// Шар на крышке\n		@ $mol_mem\n		roof() {\n			// Получаем индекс последнего шара, напомню что this.tube() возвращает модель трубки\n			// Через фабрику получаем инстанс компонента шара который возвращаем\n			// Или возвращаем null\n			const index = this.tube().balls().length - 1\n			return this.active() ? this.Ball( index ) : null\n		}\n\n		// Массив компонентов шаров, которые будут отображаться в трубке\n		@ $mol_mem\n		balls() {\n			// В зависимости от активности трубки получаем список моделей шаров\n			const last_ball = this.tube().balls().at(-1)\n			const list = this.active() ? [last_ball] : this.tube().balls()\n			\n			// Превращаем его в список компонентов шаров\n			return list.map((_, index) =&gt; this.Ball(index))\n		}\n\n		// Получаем модель шара по индексу\n		ball(index: number) {\n			return this.tube().balls()[index]\n		}\n\n		// Вытаскиваем из трубки состояние статуса готово\n		complete() {\n			return this.tube().complete()\n		}\n\n	}\n\n}\n</code></pre><h3>title</h3><p>Создадим подкомпонент для отображения заголовка.<br> </p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/17a/2e8/764/17a2e8764f7bceb62fb219d744e6aa0a.png\" alt=\"Сам заголовок\" data-src=\"https://habrastorage.org/getpro/habr/post_images/17a/2e8/764/17a2e8764f7bceb62fb219d744e6aa0a.png\"><div><figcaption>Сам заголовок</figcaption></figure><p>Его не будем выносить в отдельный модуль. Добавим его как подкомпонент в <code>app.view.tree</code></p><pre><code>$hype_ballsort_app $mol_view\n	sub /\n		&lt;= Components $mol_list\n			rows /\n				- ...\n				&lt;= Title $mol_view\n					dom_name \\h2\n					sub /\n						&lt;= Title_begin $mol_view sub / \\BALL\n						&lt;= Title_end $mol_view sub / \\SORT\n\n</code></pre><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/3b9/51a/b7f/3b951ab7fcb9d518bf2960d00185ae71.png\" alt=\"Посмотрим что получилось\" data-src=\"https://habrastorage.org/getpro/habr/post_images/3b9/51a/b7f/3b951ab7fcb9d518bf2960d00185ae71.png\"><div><figcaption>Посмотрим что получилось</figcaption></figure><p>Добавим ему стилей, создатйе файл <code>app.view.css.ts</code></p><pre><code class=\"typescript\">namespace $.$$ {\n\n	$mol_style_define( $hype_ballsort_app, {\n\n		Title: {\n			font: {\n				size: \'3rem\',\n				weight: 300,\n			},\n		},\n\n		Title_begin: {\n			textDecoration: \'underline\',\n		},\n\n	} )\n\n}\n\n</code></pre><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/1cc/263/6e7/1cc2636e7237388b8950dd64dd352bd5.png\" alt=\"Уже похоже\" data-src=\"https://habrastorage.org/getpro/habr/post_images/1cc/263/6e7/1cc2636e7237388b8950dd64dd352bd5.png\"><div><figcaption>Уже похоже</figcaption></figure><h3>app</h3><p>Теперь мы можем собрать экраны, удалим лишнее из <code>app.view.tree</code> и создадим основную структуру:</p><pre><code>$hype_ballsort_app $mol_view\n	game $hype_ballsort_game\n	title \\BALL SORT\n	Title $mol_view\n		dom_name \\h2\n		sub /\n			&lt;= Title_begin $mol_view sub / \\BALL\n			&lt;= Title_end $mol_view sub / \\SORT\n	sub /\n		&lt;= Start_page $mol_list\n		&lt;= Game_page $mol_list\n		&lt;= Finish_page $mol_list\n</code></pre><ul><li><p><code>game $hype_ballsort_game</code> - в свойстве <code>game</code> будем хранить инстанс текущей игры</p></li><li><p><code>title \\BALL SORT</code> - то что отобразится в заголовке вкладки</p></li><li><p><code>Start_page</code>, <code>Game_page</code>, <code>Finish_page</code> заготовки для страниц</p></li></ul><h4>Start_page</h4><p>И давайте сразу оформим стартовый экран:</p><pre><code>	- ...\n	sub /\n		&lt;= Start_page $mol_list\n			rows /\n				&lt;= Title\n				&lt;= Start $hype_ballsort_button\n					title \\Start game\n					click? &lt;=&gt; start? null\n				&lt;= Links $mol_view\n					sub /\n						&lt;= Sources $hype_ballsort_link\n							title \\Source Code\n							href \\https://github.com/PavelZubkov/ballsort\n							target \\_blank\n		&lt;= Game_page $mol_list\n		&lt;= Finish_page $mol_list\n</code></pre><ul><li><p>Первым у нас выводится <code>Title</code></p></li><li><p>Затем кнопка старта игры <code>Start</code>, клик по ней биндится на свойство <code>start</code>, которому мы добавим поведение позже</p></li><li><p>И выводится блок со ссылками в свойстве <code>Links</code></p></li></ul><p>Посмотрим как это выглядит<br> </p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/3df/ec4/43b/3dfec443b4d3c0e4512808576963ed41.png\" alt=\"Почти стартовый экран\" data-src=\"https://habrastorage.org/getpro/habr/post_images/3df/ec4/43b/3dfec443b4d3c0e4512808576963ed41.png\"><div><figcaption>Почти стартовый экран</figcaption></figure><p>Давайте добавим недостающие стили в <code>app.view.css.ts</code>, я просто тащу их из оригинального приложения.</p><pre><code class=\"typescript\">namespace $.$$ {\n\n	$mol_style_define( $hype_ballsort_app, {\n\n		fontFamily: \'system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif, BlinkMacSystemFont, Helvetica, Arial, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol\',\n		color: \'#e1e1e1\',\n		lineHeight: \'normal\',\n\n		padding: {\n			top: \'1rem\',\n		},\n\n		justifyContent: \'center\',\n\n		background: {\n			color: \'#101526\',\n		},\n\n		// Title, Title_begin ...\n\n		Links: {\n			padding: {\n				top: \'1rem\',\n			},\n			justifyContent: \'center\',\n			flex: {\n				wrap: \'wrap\',\n			},\n		},\n\n		Start_page: {\n			alignItems: \'center\',\n		},\n\n	} )\n\n}\n</code></pre><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/5f8/a52/f3d/5f8a52f3de6101ab34b8ab8762e52448.png\" alt=\"Стартовая страница\" data-src=\"https://habrastorage.org/getpro/habr/post_images/5f8/a52/f3d/5f8a52f3de6101ab34b8ab8762e52448.png\"><div><figcaption>Стартовая страница</figcaption></figure><h4>Game_page</h4><p>Перейдем к странице игры. Она состоит из трех вертикальных блоков</p><ul><li><p>Кнопки управления + вывод количества шагов</p></li><li><p>Трубки с шариками</p></li><li><p>Те же ссылки что и на главной странице</p></li></ul><p>Должно быть что-то такое:</p><pre><code>Game_page\n	Control\n		Home - кнопка возврата на стартовый экран\n		Restart - кнопка перезапуска игры\n		Move - число с количеством шагов\n	Tubes - трубки с шариками\n	Links - ссылка\n</code></pre><p>Добавим это в <code>app.view.tree</code></p><pre><code>$hype_ballsort_app $mol_view\n	- ...\n	sub /\n		&lt;= Start_page $mol_list\n			- ...\n		&lt;= Game_page $mol_list\n			rows /\n				&lt;= Control $mol_view\n					sub /\n						&lt;= Home $hype_ballsort_button\n							title \\←\n							click? &lt;=&gt; home? null\n						&lt;= Restart $hype_ballsort_button\n							title \\Restart \n							click? &lt;=&gt; start?\n				&lt;= Tubes $mol_view\n				&lt;= Links\n		&lt;= Finish_page $mol_list\n</code></pre><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/002/c12/895/002c128958db363aa6e223436dea60a1.png\" alt=\"Два экрана одномервенно\" data-src=\"https://habrastorage.org/getpro/habr/post_images/002/c12/895/002c128958db363aa6e223436dea60a1.png\"><div><figcaption>Два экрана одномервенно</figcaption></figure><h3>Как мы будем определять запущена игра или нет?</h3><p>Во view.tree у нас объявлено свойство game, которое хранит экземпляр класса игры. Во view.ts мы его переопределим, сделаем изменяемым свойством и по умолчанию оно будет возвращать <code>null</code>. Логика такая:</p><ul><li><p><code>game</code> возвращаем <code>null</code> - показываем стартовый экран</p></li><li><p><code>game</code> возвращает инстанс игры - показываем экран игры</p></li><li><p>Клик по кнопкам старт и рестарт будет помещать в свойство <code>game</code> новый экземпляр игры</p></li><li><p>Клик по кнопке назад будет помещать <code>null</code> в свойство <code>game</code></p></li><li><p>Для понимания что игра закончена, в классе игры есть свойство <code>finish</code> будем использовать его</p></li></ul><h3>Как мы будем менять экраны?</h3><p>Сейчас у нас все три экрана выведены в свойстве <code>sub</code>. Во view.ts нам надо переопределить свойство <code>sub</code>, чтобы оно в один момент времени возвращался только один, нужный экран.</p><p>Создайте файл <code>app.view.ts</code>, помните про снипеты в VSCode, тут нужен снипет <code>logic</code>.</p><pre><code class=\"typescript\">namespace $.$$ {\n\n	export class $hype_ballsort_app extends $.$hype_ballsort_app {\n\n		// Переопределяем свойство game\n		// Теперь оно изменяемое и nullable\n		@ $mol_mem\n		game(next?: $hype_ballsort_game | null) {\n			return next ?? null!\n		}\n\n		// Кнопки start и restart забиндены на свойство start\n		// Тут мы просто помещаем новый инстанс игры в свойство game\n		@ $mol_action\n		start() {\n			this.game( new $hype_ballsort_game )\n		}\n\n		// Кнопка возврата забиндена на свойство `home`\n		// Тут мы помещаем null в свойство game \n		@ $mol_action\n		home() {\n			this.game(null)\n		}\n\n		// Дети компонента $mol_view берутся из свойства sub\n		// Тут мы возвращаем нужный экран в зависимости состояния игры\n		@ $mol_mem\n		sub() {\n			if (!this.game()) return [ this.Start_page() ]\n			return [ this.game().finished() === false ? this.Game_page() : this.Finish_page() ]\n		}\n\n	}\n\n}\n</code></pre><figure class=\"\"><img src=\"https://habrastorage.org/getpro/habr/post_images/a45/45a/adc/a4545aadcadc4d43ad57973f8c8a5243.gif\" alt=\"Переходы между экранами\" data-src=\"https://habrastorage.org/getpro/habr/post_images/a45/45a/adc/a4545aadcadc4d43ad57973f8c8a5243.gif\"><div><figcaption>Переходы между экранами</figcaption></figure><h3>Трубки и шары</h3><p>Теперь пришла очередь отрисовать трубки с шарами. Нам надо взять список трубок из игры и вывести его обернув каждую модель трубки во view-компонент.</p><p>Изменим <code>app.view.tree</code></p><pre><code>$hype_ballsort_app $mol_view\n	- ...\n	sub /\n		&lt;= Start_page $mol_list\n			- ...\n		&lt;= Game_page $mol_list\n			rows /\n				&lt;= Control $mol_view\n					- ...\n				&lt;= Tubes $mol_view\n					sub &lt;= tubes /\n						&lt;= Tube*0 $hype_ballsort_tube_view\n							tube &lt;= tube* $hype_ballsort_tube\n							click? &lt;=&gt; tube_click*? null\n							active &lt;= tube_active* false\n				&lt;= Links\n		&lt;= Finish_page $mol_list\n</code></pre><p>Что тут происходит:</p><ul><li><p><code>&lt;= Tubes $mol_view</code> - мы создаем подкомпонент <code>Tubes</code> на основе базового компонента <code>$mol_view</code> и кладем его в <code>rows /</code> у объекта в свойстве <code>Game_page</code></p></li><li><p><code>sub &lt;= tubes /</code> свойство <code>sub</code> у <code>Tubes</code> заменяем на свойство <code>tubes</code> и устанавливаем ему значение по умолчанию</p></li><li><p>А в качестве значение подставляем свойство-фабрику <code>Tube</code> на основе view-компонента трубки, и тут же настраиваем его подменяя свойства <code>tube</code>, <code>click</code>, <code>active</code></p></li></ul><p>Код выше преобразуется в такой ts-код:</p><pre><code class=\"typescript\">		@ $mol_mem\n		Tubes() {\n			const obj = new this.$.$mol_view()\n			obj.sub = () =&gt; this.tubes()\n			return obj\n		}\n\n		tubes() {\n			return [\n				this.Tube(\"0\")\n			] as readonly any[]\n		}\n</code></pre><p>Нам надо переопределить <code>tubes</code>, чтобы оно брало список трубок из модели игры и оборачивало во view-компонент трубки. Изменим <code>app.view.ts</code></p><pre><code class=\"typescript\">namespace $.$$ {\n\n	export class $hype_ballsort_app extends $.$hype_ballsort_app {\n\n		// ...\n\n		@ $mol_mem\n		tubes() {\n			return this.game().tubes().map( ( _, index ) =&gt; this.Tube( index ) )\n		}\n\n	}\n\n}\n</code></pre><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/922/54f/a0f/92254fa0f6b0215f459e5b5cfa80ccb0.png\" alt=\"Кликнув на старт мы увидим заполненые трубки\" data-src=\"https://habrastorage.org/getpro/habr/post_images/922/54f/a0f/92254fa0f6b0215f459e5b5cfa80ccb0.png\"><div><figcaption>Кликнув на старт мы увидим заполненые трубки</figcaption></figure><p>Добавим реализация для свойств <code>tube</code>, <code>tube_click</code>, <code>tube_active</code>, которые мы описали во view.tree</p><pre><code>tube &lt;= tube* $hype_ballsort_tube\nclick? &lt;=&gt; tube_click*? null\nactive &lt;= tube_active* false\n</code></pre><p>Изменим <code>app.view.ts</code> еще раз:</p><pre><code>namespace $.$$ {\n\n	export class $hype_ballsort_app extends $.$hype_ballsort_app {\n\n		// ...\n\n		@ $mol_mem\n		tubes() {\n			return this.game().tubes().map( ( _, index ) =&gt; this.Tube( index ) )\n		}\n\n		// По индексу достаем инстанс модели трубки из игры\n		// декротар тут можно опустить\n		tube( index: number ) {\n			return this.game().Tube(index)\n		}\n	\n		// По клику вызываем tube_click в игре\n		// Передавая туда трубку по которой кликнули\n		@ $mol_action\n		tube_click( index: number ) {\n			this.game().tube_click( this.tube(index) )\n		}\n\n		// Проверяем активна ли текущая трубка\n		@ $mol_mem_key\n		tube_active( index: number ) {\n			return this.game().tube_active() === this.tube(index) \n		}\n	}\n\n}\n</code></pre><figure class=\"\"><img src=\"https://habrastorage.org/getpro/habr/post_images/8c3/1d2/9d0/8c31d29d00859ada1ea726a0c093200e.gif\" alt=\"Уже можем играть\" data-src=\"https://habrastorage.org/getpro/habr/post_images/8c3/1d2/9d0/8c31d29d00859ada1ea726a0c093200e.gif\"><div><figcaption>Уже можем играть</figcaption></figure><p>Давайте выведем количество шагов. Изменим <code>app.view.tree</code></p><pre><code>$hype_ballsort_app $mol_view\n	- ...\n	sub /\n		&lt;= Start_page $mol_list\n			- ...\n		&lt;= Game_page $mol_list\n			rows /\n				&lt;= Control $mol_view\n					sub /\n						&lt;= Home $hype_ballsort_button\n							title \\←\n							click? &lt;=&gt; home? null\n						&lt;= Restart $hype_ballsort_button\n							title \\Restart \n							click? &lt;=&gt; start?\n						- Тут добавим Moves\n						&lt;= Moves $mol_view\n							sub / &lt;= moves \\Moves: {count}\n				- ...\n		&lt;= Finish_page $mol_list\n</code></pre><p>А во view.ts переопределим свойство <code>moves</code> - <code>moves \\Moves: {count}</code>, чтобы оно заменяло <code>{count}</code> на число шагов</p><pre><code class=\"typescript\">namespace $.$$ {\n\n	export class $hype_ballsort_app extends $.$hype_ballsort_app {\n\n		// ...\n\n		@ $mol_mem\n		moves() {\n			return super.moves().replace( \'{count}\', `${ this.game().moves() }` )\n		}\n	}\n\n}\n</code></pre><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/573/b10/c44/573b10c443d0cdbdddef35263eb4bcaf.png\" alt=\"Отображение количества шагов\" data-src=\"https://habrastorage.org/getpro/habr/post_images/573/b10/c44/573b10c443d0cdbdddef35263eb4bcaf.png\"><div><figcaption>Отображение количества шагов</figcaption></figure><p>И добавим стилей в <code>app.view.css.ts</code></p><pre><code class=\"typescript\">namespace $.$$ {\n\n	$mol_style_define( $hype_ballsort_app, {\n\n		// ...\n\n		Moves: {\n			padding: [\'0.6rem\', \'0.4rem\'],\n			fontSize: \'1.3rem\',\n		},\n\n		Tubes: {\n			justifyContent: \'center\',\n		},\n\n		Control: {\n			justifyContent: \'center\',\n		},\n\n		Tube: {\n			margin: \'1rem\',\n		},\n\n	} )\n\n}\n</code></pre><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/39b/afd/0fb/39bafd0fb0e660d39190ccbce8495701.png\" alt=\"Экран игры\" data-src=\"https://habrastorage.org/getpro/habr/post_images/39b/afd/0fb/39bafd0fb0e660d39190ccbce8495701.png\"><div><figcaption>Экран игры</figcaption></figure><h4>Finish_page</h4><p>Осталось добавить только экран финиша. Изменим <code>app.view.tree</code>:</p><pre><code>$hype_ballsort_app $mol_view\n	- ...\n	sub /\n		- ...\n		&lt;= Finish_page $mol_list\n			rows /\n				&lt;= Control\n				&lt;= Tubes\n				&lt;= Links\n				&lt;= Finish $mol_list\n					rows /\n						&lt;= Finish_title $mol_view\n							dom_name \\h1\n							sub / \\You won!\n						&lt;= Finish_moves $mol_view\n							dom_name \\h2\n							sub / \\In 16 moves\n						&lt;= Finish_home $hype_ballsort_button\n							title \\New game\n							click? &lt;=&gt; home?\n</code></pre><p>Финишный экран, выводится поверх экрана игры. Мы также выводим <code>Control</code>, <code>Tubes</code>, <code>Links</code> и после финишные надписи и кнопку.</p><p>Сразу добавим стилей для него в <code>app.view.css.ts</code></p><pre><code class=\"typescript\">namespace $.$$ {\n\n	$mol_style_define( $hype_ballsort_app, {\n\n		Finish: {\n			position: \'fixed\',\n			bottom: 0,\n			top: 0,\n			left: 0,\n			right: 0,\n			background: {\n				color: $mol_style_func.rgba(255, 255, 255, 0.6),\n			},\n			backdropFilter: $mol_style_func.blur(\'6px\'),\n			alignItems: \'center\',\n			paddingTop: \'5rem\',\n		},\n\n		Finish_title: {\n			color: \'black\',\n			textShadow: \'0 0 2px white\',\n		},\n\n		Finish_moves: {\n			color: \'black\',\n			textShadow: \'0 0 2px white\',\n			margin: {\n				top: \'1rem\',\n			},\n		},\n\n		Finish_home: {\n			margin: {\n				top: \'1rem\',\n			},\n		},\n\n	} )\n\n}\n\n</code></pre><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/213/d96/542/213d965422b6bb93f126a312ec9ff452.png\" alt=\"Экран финиша\" data-src=\"https://habrastorage.org/getpro/habr/post_images/213/d96/542/213d965422b6bb93f126a312ec9ff452.png\"><div><figcaption>Экран финиша</figcaption></figure><h3>Тестируем приложение</h3><p>Напишем тест, чтобы убедится, что экраны у нас корректно меняются. Создайте файл <code>app.view.test.ts</code></p><pre><code class=\"typescript\">namespace $.$$ {\n	$mol_test({\n		\n		\"Screan changing\"() {\n			const app = new $hype_ballsort_app\n\n			// По умолчанию должен показываться стартовый экран\n			$mol_assert_like(app.sub(), [app.Start_page()])\n\n			// Кликаем по кнопке старта и проверяем что теперь отображается экран игры\n			app.start()\n			$mol_assert_like(app.sub(), [app.Game_page()])\n\n			// Выиграем игру, просто установим всем шарам один цвет и проверим экран\n			app.game().balls().forEach(obj =&gt; obj.color(0))\n			$mol_assert_like(app.sub(), [app.Finish_page()])\n		},\n		\n	})\n}\n</code></pre><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/352/daa/e6c/352daae6c28e4d66e63b38e1daf6af56.png\" alt=\"Смотрим консоль в поиске упавших тестов\" data-src=\"https://habrastorage.org/getpro/habr/post_images/352/daa/e6c/352daae6c28e4d66e63b38e1daf6af56.png\"><div><figcaption>Смотрим консоль в поиске упавших тестов</figcaption></figure><p>Убедимся, что тест работает, сломав его, замените <code>Finish_page</code> на <code>Game_page</code> в последнем ассерте.</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/6d6/264/14f/6d626414fecd3c28929298fa02064ac3.png\" alt=\"Тест работает\" data-src=\"https://habrastorage.org/getpro/habr/post_images/6d6/264/14f/6d626414fecd3c28929298fa02064ac3.png\"><div><figcaption>Тест работает</figcaption></figure><ul><li><p>Полные исходники можно найти <a href=\"https://github.com/PavelZubkov/ballsort\" rel=\"noopener noreferrer nofollow\">тут</a></p></li><li><p>Приложение <a href=\"https://pavelzubkov.github.io/ballsort/\" rel=\"noopener noreferrer nofollow\">здесь</a></p></li></ul><p>По всем вопросам можно идти <a href=\"https://t.me/h_y_o_o/2\" rel=\"noopener noreferrer nofollow\">сюда</a>.</p><p><a href=\"https://page.hyoo.ru/#!=z7q5o6_3k0ago\" rel=\"noopener noreferrer nofollow\">Актуальный оригинал на $hyoo_page</a></p>', 2, '2023-06-12 21:54:46', 694712, 76, '/ru/articles/741256/', 'Сегодня мы продолжим переписывание на $mol этой демки. Кто не читал первую часть, рекомендую сначала ознакомиться с ней BALLSORT на $mol. Часть 1');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(136, 'Как сделать кастомный Semi Donut Chart с помощью SVG', '<p><strong>Всем привет! </strong></p><p>Недавно мне нужно было сделать Semi Donut Chart, я поискал реализации в интернете те, которые мне подходили были в библиотеках по типу Chart.js, а библиотеки мне очень не хотелось тащить, так как они сильно влияют на размер бандла и производительность сайта.</p><p>И тут я решил сделать свою. У меня было два варианта:</p><ol><li><p>Реализовать график с помощью css</p></li><li><p>Реализовать график с помощью svg</p></li></ol><p>Так как я давно хотел попробовать на что способен svg, решил выбрать именно этот вариант. </p><p>И первое с чего я начал это посмотрел как это реализовывали другие, и вот что я увидел, люди берут &lt;circle /&gt; и с помощью наложения и частичного их заполнения делают такие графики.</p><p>Далее мне нужно было разобраться, что такое &lt;circle/&gt; и с чем его едят. Итак <strong>circle - это элемент SVG, который используется для создания круговых форм. Он определяет круг по координатам его центра и радиусу. Круг может быть заполнен цветом или градиентом, а также может иметь обводку или тень.</strong> </p><h3>Это база</h3><p>Для начала введу одну формулу, которая нам дальше понадобится:<br> <strong>C = 2 * PI * r</strong> - длина окружности</p><p>Также нужно отметить как работает длина окружности, где и какая у окружности длина, но нам нужна будет только верхняя полуокружность, на рисунке от C/2 до C.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/519/d47/f4b/519d47f4bde3111a43e853b23571185a.png\" alt=\"Где и какая длина окружности\" title=\"Где и какая длина окружности\" width=\"1050\" height=\"600\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/519/d47/f4b/519d47f4bde3111a43e853b23571185a.png\"><div><figcaption>Где и какая длина окружности</figcaption></figure><p>В нашем случае окружность будет выглядеть чуть иначе, <strong>за C мы примем C/2</strong>, чтобы проще было производить вычисления:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/2b5/e6a/fcd/2b5e6afcde46717859c73dda70ff3a33.png\" alt=\"Нужная нам полуокружность\" title=\"Нужная нам полуокружность\" width=\"1050\" height=\"600\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/2b5/e6a/fcd/2b5e6afcde46717859c73dda70ff3a33.png\"><div><figcaption>Нужная нам полуокружность</figcaption></figure><h3>Атрибуты &lt;circle /&gt;</h3><p>Теперь рассмотрим атрибуты которые есть у circle и которые мы будем использовать:</p><ul><li><p>stroke - цвет нашего stroke, можно считать что это border окружности</p></li><li><p> fill - заливка нашего circle, цвет заполняет все кроме stroke</p></li><li><p>cx - координата по x, где будет располагаться центр нашей окружности в нашей svg области</p></li><li><p>cy - координата по y, где будет располагаться центр нашей окружности в нашей svg области</p></li><li><p>r - радиус окружности</p></li><li><p>stroke-offset - откуда начнется заливка нашего stroke, считается относительно длины окружности - C</p></li><li><p>stroke-dasharray - [сколько заливать, сколько не заливать], считается относительно длины окружности - С</p></li><li><p>stroke-width - ширина stroke, свойство похоже на border-width<br></p></li></ul><p>Также хочу заметить, что z-index в svg нет, зато все элементы которые находятся выше в DOM дереве будут находится выше и на нашей страницы.</p><h3>Код на Vue 3, скриптовая часть</h3><p>Начнем с props\'ов которые понадобятся нам для конфигурации нашего графика.</p><p><em>props:</em></p><pre><code class=\"typescript\">const props = defineProps({\n  // Проценты которые нужно отразить на графике\n  percentage: {\n    type: Array as PropType&lt;number[]&gt;,\n    default: () =&gt; [],\n  },\n  // Высота нашей диаграммы\n  height: {\n    type: Number,\n    default: 128,\n  },\n  // Ширина нашей диаграммы\n  width: {\n    type: Number,\n    default: 256,\n  },\n  // Ширина сектора диаграммы, читай как border-width\n  strokeWidth: {\n    type: Number,\n    default: 30,\n  },\n  // Цвета для наших секторов\n  sectorColors: {\n    type: Array as PropType&lt;string[]&gt;,\n    default: () =&gt; [],\n  },\n  // Отступ между секторами\n  gap: {\n    type: Number,\n    default: 20,\n  },\n});</code></pre><p>Далее рассчитаем все значения которые понадобятся нам для нашего графика</p><h4>Находим координаты центра графика:</h4><h3>Они будут равны width / 2 и height / 2.</h3><pre><code class=\"typescript\">const cx = computed&lt;number&gt;(() =&gt; props.width / 2);\nconst cy = computed&lt;number&gt;(() =&gt; props.height / 2);</code></pre><h4>Находим радиус окружности:</h4><h3>Так как радиус это половина от диаметра, а диаметр это наша ширина, то делим нашу ширину пополам, а дальше вычитаем из этого ширину сектора пополам, делаем это для того, чтобы наш график ровно оставался в наших границах ширины и высоты .</h3><pre><code class=\"typescript\">const r = computed&lt;number&gt;(() =&gt; props.width / 2 - props.strokeWidth / 2);</code></pre><h4>Находим длину окружности:</h4><p>Длина окружности, рассчитанная по формуле выше, однако так как у нас не полная окружность, а полуокружность убираем коэффициент 2 из формулы.</p><pre><code class=\"typescript\">const C = computed&lt;number&gt;(() =&gt; Math.PI * r.value);</code></pre><p>Находим отступ между секторами не в процентах, а в числе относительно длины окружности, по формуле (C * процент отступа) / 100</p><pre><code class=\"typescript\">const computedGap = computed&lt;number&gt;(() =&gt; (C.value * props.gap) / 100);</code></pre><h4>Находим stroke-dasharray для всех окружностей:</h4><p>Как я уже писал ранее, первое это сколько заливаем, второе это все остальное, и тут все просто, алгоритм действий таков:</p><ol><li><p>Предварительно рассчитываем суммарный процент отступов, обозначим за <img class=\"formula inline\" source=\"sum(gapPercentage) = gap * (len(percentage) - 1) / 100\" alt=\"sum(gapPercentage) = gap * (len(percentage) - 1) / 100\" src=\"https://habrastorage.org/getpro/habr/upload_files/7db/59a/77f/7db59a77f9aa7315e1ee509f0b349988.svg\" width=\"478\" height=\"22\"></p></li><li><p>Перебираем все проценты наших секторов, обозначим за <img class=\"formula inline\" source=\"currentSectorPercentage\" alt=\"currentSectorPercentage\" src=\"https://habrastorage.org/getpro/habr/upload_files/b97/97f/be6/b9797fbe6e372952dfc6c4d53bef3337.svg\" width=\"219\" height=\"21\"></p></li><li><p>Возвращаем массив с двумя значениями, первое это сколько залить - <img class=\"formula inline\" source=\"(C * (1 - sum(gapPercentage)) * currentSectorPercentage) / 100\" alt=\"(C * (1 - sum(gapPercentage)) * currentSectorPercentage) / 100\" src=\"https://habrastorage.org/getpro/habr/upload_files/4f9/75d/2c7/4f975d2c725ce052a2b73a91d3d0d8c4.svg\" width=\"554\" height=\"22\"><br>второе это все, что осталось -  <img class=\"formula inline\" source=\"(C * (1 - (1 - sum(gapPercentage)) * (currentSectorPercentage / 100))\" alt=\"(C * (1 - (1 - sum(gapPercentage)) * (currentSectorPercentage / 100))\" src=\"https://habrastorage.org/getpro/habr/upload_files/320/1a9/004/3201a9004b4173b7b767b5199e547851.svg\" width=\"611\" height=\"22\"></p></li></ol><pre><code class=\"typescript\">const strokeDashArrays = computed&lt;number[][]&gt;(() =&gt; {\n  const sumGapPercentage = (props.gap * (props.percentage?.length - 1)) / 100;\n  return props.percentage.map((percent) =&gt; {\n    return [\n      (C.value * (1 - sumGapPercentage) * percent) / 100,\n      C.value * (1 - (percent / 100) * (1 - sumGapPercentage)),\n    ];\n  });\n});</code></pre><h4>Находим stroke-dasharray для всех окружностей:</h4><p>Как я уже говорил ранее, это начало каждого из наших секторов, алгоритм действий таков:</p><ol><li><p>Перебираем stroke-dasharray\'s полученные на предыдущем шаге</p></li><li><p><strong>Вспомним, что мы приняли текущее C, за C/2 целой окружности, а значит начало из C значит ничто иное, как начало из C/2 изначальной окружности</strong>. Возвращаем разность, которая для каждого следующего будет длина окружности за вычетом длины всех остальных секторов до этого сектора и за вычетом всех отступов до этого сектора, заметим, что для первого элемента отступ вычитать не нужно</p></li></ol><pre><code class=\"typescript\">const strokeDashOffsets = computed&lt;number[]&gt;(() =&gt; {\n  return strokeDashArrays.value.map((value, index) =&gt; {\n    return strokeDashArrays.value\n    // Берем все элементы до текущего\n      .slice(0, index)\n    // Начинаем с C, так как первый элемент должен стоять ровно в начале тоесть на C\n      .reduce((acc, item) =&gt; (index &gt;= 1 ? acc - item[0] - computedGap.value : acc - item[0]), C.value);\n  });\n});</code></pre><h4>Метод для вычисления цвета сектора:</h4><p>Тут все просто, берем из массива наших цветов, элемент с определенным индексом:</p><pre><code class=\"typescript\">const calculateColor = (index: number) =&gt; {\n  return props.sectorColors[index];\n};</code></pre><h3>Код на Vue 3, разметка</h3><p>Итак сначала нам нужна окружность, которая будет служить задним фоном для нашего графика, зачем это ? Чтобы мы могли менять цвет наших отступов, а также мы могли делать не на 100% заполненные графики.</p><p>Заполнение прозрачное, так как наш график это наш stroke, <strong>соответственно stroke даем такой цвет, который хотим, чтобы был нашим задним фоном у графика</strong>, cx, cy, r, strokeWidth, подставляем из полученных выше параметров, stroke-dashoffset <em>выставляем C, которое мы ранее приняли за C/2 изначальной окружности, т.е. это начало нашей полуокружности</em>, stroke-dasharray - заливаем ровно половину окружности, т.е. нашу верхнюю полуокружность, <em>тут тоже помним, что мы работаем с целой окружностью поэтому C заливаем и C не заливаем</em>.</p><p><em>Важно отметить, что мы ставим этот &lt;circle /&gt; первым в DOM, чтобы он был ниже всех остальных на странице.</em></p><pre><code class=\"xml\">&lt;circle\n  fill=\"transparent\"\n  stroke=\"#b9cad1\"\n  :cx=\"cx\"\n  :cy=\"cy\"\n  :r=\"r\"\n  :stroke-dasharray=\"[C, C].join(\', \')\"\n  :stroke-dashoffset=\"C\"\n  :stroke-width=\"props.strokeWidth\"\n/&gt;</code></pre><p>Далее идут все остальные наши сектора, тут все просто, перебираем все наши полученные strokeDashOffsets, и для каждого item, выставляем по стандарту fill, cx, cy, r, stroke-width, <em>stroke - цвет который мы вычисляем с помощью функции от текущего индекса, stroke-dasharray - берем из массива по индексу, stroke-dashoffset - подставляем текущий.</em></p><pre><code class=\"xml\">&lt;circle\n  v-for=\"(item, index) in strokeDashOffsets\"\n  :key=\"`${item}_${index}`\"\n  fill=\"transparent\"\n  :cx=\"cx\"\n  :cy=\"cy\"\n  :r=\"r\"\n  :stroke=\"calculateColor(index)\"\n  :stroke-dasharray=\"strokeDashArrays[index].join(\', \')\"\n  :stroke-dashoffset=\"item\"\n  :stroke-width=\"props.strokeWidth\"\n/&gt;</code></pre><p>Итого получаем вот такой компонент:</p><pre><code class=\"typescript\">&lt;script lang=\"ts\" setup&gt;\nimport { computed, PropType } from \'vue\';\n\nconst props = defineProps({\n  percentage: {\n    type: Array as PropType&lt;number[]&gt;,\n    default: () =&gt; [],\n  },\n  height: {\n    type: Number,\n    default: 128,\n  },\n  width: {\n    type: Number,\n    default: 256,\n  },\n  strokeWidth: {\n    type: Number,\n    default: 30,\n  },\n  sectorColors: {\n    type: Array as PropType&lt;string[]&gt;,\n    default: () =&gt; [],\n  },\n  gap: {\n    type: Number,\n    default: 0.4,\n  },\n});\n\nconst cx = computed&lt;number&gt;(() =&gt; props.width / 2);\nconst cy = computed&lt;number&gt;(() =&gt; props.height / 2);\nconst r = computed&lt;number&gt;(() =&gt; props.width / 2 - props.strokeWidth / 2);\nconst C = computed&lt;number&gt;(() =&gt; Math.PI * r.value);\nconst computedGap = computed&lt;number&gt;(() =&gt; (C.value * props.gap) / 100);\n\nconst strokeDashArrays = computed&lt;number[][]&gt;(() =&gt; {\n  const sumGapPercentage = (props.gap * (props.percentage?.length - 1)) / 100;\n  return props.percentage.map((percent) =&gt; {\n    return [\n      (C.value * (1 - sumGapPercentage) * percent) / 100,\n      C.value * (1 - (percent / 100) * (1 - sumGapPercentage)),\n    ];\n  });\n});\n\nconst strokeDashOffsets = computed&lt;number[]&gt;(() =&gt; {\n  return strokeDashArrays.value.map((value, index) =&gt; {\n    return strokeDashArrays.value\n      .slice(0, index)\n      .reduce((acc, item) =&gt; (index &gt;= 1 ? acc - item[0] - computedGap.value : acc - item[0]), C.value);\n  });\n});\n\nconst calculateColor = (index: number) =&gt; {\n  return props.sectorColors[index];\n};\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;div&gt;\n    &lt;svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      :height=\"props.height\"\n      :viewBox=\"`0 ${-(props.height / 2)} ${props.width} ${props.height}`\"\n      :width=\"props.width\"\n    &gt;\n      &lt;circle\n        fill=\"transparent\"\n        stroke=\"#b9cad1\"\n        :cx=\"cx\"\n        :cy=\"cy\"\n        :r=\"r\"\n        :stroke-dasharray=\"[C, C].join(\', \')\"\n        :stroke-dashoffset=\"C\"\n        :stroke-width=\"props.strokeWidth\"\n      /&gt;\n\n      &lt;circle\n        v-for=\"(item, index) in strokeDashOffsets\"\n        :key=\"`${item}_${index}`\"\n        fill=\"transparent\"\n        :cx=\"cx\"\n        :cy=\"cy\"\n        :r=\"r\"\n        :stroke=\"calculateColor(index)\"\n        :stroke-dasharray=\"strokeDashArrays[index].join(\', \')\"\n        :stroke-dashoffset=\"item\"\n        :stroke-width=\"props.strokeWidth\"\n      /&gt;\n    &lt;/svg&gt;\n  &lt;/div&gt;\n&lt;/template&gt;</code></pre><p>Полученный результат:</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a94/22c/8fc/a9422c8fcab187e1b1530c8ed8c3fb53.png\" alt=\"Ваш сочный график\" title=\"Ваш сочный график\" width=\"514\" height=\"258\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a94/22c/8fc/a9422c8fcab187e1b1530c8ed8c3fb53.png\"><div><figcaption>Ваш сочный график</figcaption></figure><p>Вот так у меня получился довольно гибкий и конфигурируемый half-donut-chart, в меньше чем 100 строк, также сюда можно прикрутить анимацию с помощью svg &lt;animate /&gt;, анимируя свойства visibility, stroke-dasharray, stroke-dashoffset.</p><p>Если статья показалась вам интересной, то у меня в планах еще много таких.</p><p>Так что, если не хотите их пропустить - буду благодарен за подписку на мой <a href=\"https://t.me/frontendforthesoul\" rel=\"noopener noreferrer nofollow\">Тг-канал</a>, там я делюсь полезными фишками, мемами и хорошим настроением!</p><p></p>', 1, '2023-06-12 21:54:47', 661411, 79, '/ru/articles/741214/', 'Я сделал конфигурируемый Semi Donut Chart на svg, и решил поделиться с вами.В этой статье вы узнаете как сделать Semi Donut Chart, гибким и конфигурируем меньше чем за 100 строк кода на Vue 3(применимо к любому другому Фреймворку).'),
(137, 'BALLSORT на $mol. Часть 1', '<p>Сегодня мы перепишем на $mol <a href=\"https://ballsort.sova.dev/\" rel=\"noopener noreferrer nofollow\">эту</a> демку почти пиксель в пиксель и напишем несколько тестов.</p><p>Демка представляет собой игру, в которой перемещаются разноцветные шарики между трубками, цель игры - отсортировать шарики по цветам за наименьшее количество шагов.</p><p>Изначально она была реализована на <a href=\"https://ballsort.sova.dev\" rel=\"noopener noreferrer nofollow\">эффекторе + react</a>, недавно несколько человек реализовали ее</p><ul><li><p>на <a href=\"https://ballsort.vercel.app\" rel=\"noopener noreferrer nofollow\">реатоме + react</a> <a href=\"https://github.com/faustienf/ballsort\" rel=\"noopener noreferrer nofollow\">исходники</a>,</p></li><li><p>на <a href=\"https://sdju.github.io/ballsort-example-vue\" rel=\"noopener noreferrer nofollow\">vue</a> <a href=\"https://github.com/Sdju/ballsort-example-vue\" rel=\"noopener noreferrer nofollow\">исходники</a></p></li><li><p>и две независимых версии на моле </p><ul><li><p><a href=\"https://lyumih.github.io/milis/ballsort/-/\" rel=\"noopener noreferrer nofollow\">первая</a></p></li><li><p><a href=\"https://pavelzubkov.github.io/ballsort\" rel=\"noopener noreferrer nofollow\">моя</a>, о ней пойдет речь</p></li></ul></li></ul><blockquote><p>Там где не указана ссылка на исходники отдельно, она есть в самой демке</p></blockquote><h2>Постановка задачи</h2><h3>Экраны</h3><ul><li><p>Start - стартовый экран на котором отображается заголовок, кнопка для запуска игры, и подвал с cсылками</p></li><li><p>Game - при клике на кнопку запуска, открывается экран с игрой, на котором необходимо сортировать шарики. В хедере находятся кнопки возврата на стартовый экран и рестарта игры, а также счетчик числа сделаyных шагов. В центре трубки с шарами. В подвале те же ссылки что и на первом экране.</p></li><li><p>Finish - когда шарики отсортированы, поверх второго экрана отображается третий экран. На нем находится заголовок \"You won!\", количество сделанных шагов, и кнопка \"New game\" которая открывает стартовый экран.</p></li></ul><h3>Механика игры</h3><figure class=\"\"><img src=\"https://habrastorage.org/getpro/habr/post_images/7a6/f0f/e7a/7a6f0fe7a5defe28bd9c776b2b2b3fda.gif\" alt=\"gif\" data-src=\"https://habrastorage.org/getpro/habr/post_images/7a6/f0f/e7a/7a6f0fe7a5defe28bd9c776b2b2b3fda.gif\"><div><figcaption>gif</figcaption></figure><ol><li><p>Рисуются 6 трубок, четыре и них заполнены шарами и две пустые</p></li><li><p>В заполненных трубках находятся по 4 шара, четырех разных цветов</p></li><li><p>При клике на непустую трубку, она переходит в активное состояние </p><ul><li><p>В активном состоянии верхний шар в трубке переносится на ее крышку</p></li></ul></li><li><p>Повторный клик по активной трубке дезактивирует ее, шар переносится обратно в нее</p></li><li><p>После активации трубки, клик по другой трубке переносит шар с крышки в другую трубку при условии, что другая трубка пуста или верхний шар другой трубки такого же цвета как шар на крышке активной трубке</p></li><li><p>Когда в одной и трубок все 4 шара одного цвета она переходит в статус готово, после этого шары в нее/из нее перемещать нельзя.</p></li><li><p>Игра закончится, когда 4 трубки перейдут в статус готово.</p></li></ol><h2>Подготовка</h2><p>Начнем с самого начала, а именно с разворачивания мола и создания репозитория под проект.</p><h3>Установка MAM-окружения</h3><p>Можно использовать <a href=\"https://gitpod.io/#https://github.com/hyoo-ru/mam\" rel=\"noopener noreferrer nofollow\">gitpod.io</a>, окружение установится автоматически, согласитесь установить плагины. Или можно установить все локально:</p><ol><li><p>Обновите NodeJS до LTS версии</p></li><li><p>Загрузите репозиторий MAM</p></li></ol><pre><code>git clone https://github.com/hyoo-ru/mam.git ./mam &amp;&amp; cd mam\n</code></pre><ol start=\"3\"><li><p>Установите зависимости, вашим пакетным менеджером</p></li></ol><pre><code>npm install\n</code></pre><ol start=\"4\"><li><p>Установите плагины для VSCode <a href=\"https://marketplace.visualstudio.com/items?itemName=EditorConfig.EditorConfig\" rel=\"noopener noreferrer nofollow\">EditorConfig</a> <a href=\"https://marketplace.visualstudio.com/items?itemName=nin-jin.vscode-language-tree\" rel=\"noopener noreferrer nofollow\">vscode-language-tree</a></p></li></ol><p>MAM-окружение достаточно установить один раз и использовать для всех проектов!</p><h3>Создание и настройка репозитория</h3><ol><li><p>Идем <a href=\"https://github.com/hyoo-ru/template\" rel=\"noopener noreferrer nofollow\">сюда</a> и нажимаем \"Use this template\" =&gt; \"Create a new repository\"</p></li><li><p>Выбираем владельца, указываем имя репозитория \"ballsort\", опционально заполняем описание, тип репозитория ставим публичным и нажимаем \"Create repository from template\"</p></li><li><p>Откройте настройки созданного репозитория нажав на \"Settings\"</p></li><li><p>В левом меню нажмите на \"Actions\" =&gt; \"General\", в разделе \"Workflow permissions\" отметьте чекбокс \"Read and Write permissions\" и нажмите \"Save\". Это нужно чтобы экшен деплоя на \"github pages\" мог задеплоить приложение.</p></li></ol><blockquote><p>В качестве неймспейса будем использовать имя \"hype\" и опустим создание репозитория под неймспейс.</p></blockquote><ol start=\"5\"><li><p>Копируем ссылку на репозиторий и клонируем его в директорию <code>mam/hype/ballsort</code></p></li></ol><pre><code>cd mam\n# Только подставьте вашу ссылку\ngit clone https://github.com/PavelZubkov/ballsort.git hype/ballsort\n</code></pre><h3>Минималное приложение</h3><ol><li><p>Запускаем дев-сервер следующей командой</p></li></ol><pre><code>yarn start\n</code></pre><ol start=\"2\"><li><p>Открываем в браузере <code>http://127.0.0.1:9080</code></p></li><li><p>Вы увидите список файлов и директорий, расположенных в директории <code>mam</code>. Нажмите на \"hyoo\", затем на \"ballsort\", затем на \"app\" - откроется белый экран, это ок т.к. в <code>app</code> присутствует только файл <code>index.html</code>.</p></li><li><p>Откройте файл <code>hype/ballsort/app/index.html</code> и укажите имя модуля который будет монтироваться в атрибуте <code>mol_view_root</code></p></li></ol><pre><code>&lt;div mol_view_root=\"$hype_ballsort_app\"&gt;&lt;/div&gt;\n</code></pre><ol start=\"5\"><li><p>В директории <code>app</code> создайте файл <code>app.view.tree</code> с содержимым ниже и сохраните его.</p></li></ol><pre><code>$hype_ballsort_app $mol_view\n	sub / \\Hello\n</code></pre><ol start=\"6\"><li><p>Вернитесь в браузер и если все верно вы увидите приветствие</p></li></ol><h3>Деплой на github</h3><blockquote><p>В <a href=\"http://readme.md\" rel=\"noopener noreferrer nofollow\">readme.md</a> есть чек лист для настройки шаблонного репозитория</p></blockquote><ol><li><p>Переименуйте файл <code>hype/ballsort/hyoo_template_app.yml</code> в <code>hype/ballsort/hype_ballsort_app.yml</code> и откройте его</p></li><li><p>Измените имя на 3 строке</p></li></ol><pre><code>name: $hype_ballsort_app\n</code></pre><ol start=\"3\"><li><p>На 19 строке укажите какой модуль будет собираться</p></li></ol><pre><code>	- uses: hyoo-ru/mam_build@master2\n	with:\n		package: \'hype/ballsort\'\n		modules: \'app\'\n</code></pre><ol start=\"4\"><li><p>Удалите блок деплоя в NPM, он начинается на 26 строке и заканчивается на 30 строке</p></li><li><p>В блоке деплоя на Github Pages измените путь до директории с бандлами</p></li></ol><pre><code>	- uses: hyoo-ru/gh-deploy@v4.4.1\n	if: github.ref == \'refs/heads/master\'\n	with:\n	folder: \'hype/ballsort/app/-\'\n</code></pre><ol start=\"6\"><li><p>Сделайте коммит и отправьте изменения в репозиторий на github</p></li><li><p>Возвращаемся в гитхаб, в разделе \"Actions\" ждем когда завершиться action \"$hyoo_ballsort_app\", и после него запуститься экшен \"pages build and deployment\"</p></li><li><p>Если второй экшен упадет, то открываем \"Settings\" =&gt; \"Pages\", в разделе \"Branch\" указываем ветку для деплоя \"gh-pages\" и нажимаем \"Save\". После этого второй экшен запуститься повторно, а после его завершения в разделе настроек \"Pages\" будет находится ссылка на приложение.</p></li><li><p>Если будут проблемы можете написать <a href=\"https://t.me/h_y_o_o/2\" rel=\"noopener noreferrer nofollow\">тут</a></p></li></ol><h2>Модель</h2><p>Сначала напишем модель игры независимо от ее view-представления, а уже после отрисуем ее.</p><p>Я разделил игру на три модуля:</p><ul><li><p>game - основная логика</p></li><li><p>ball - шар, тут только хранение цвета шаром</p></li><li><p>tube - логика трубы</p></li></ul><h3>Начнем с ball</h3><ol><li><p>Создайте директорию ball и ts-файл в ней <code>mam/hype/ballsort/ball/ball.ts</code></p></li><li><p>Для VSCode в MAM-окружении доступно несколько сниппетов </p><ul><li><p>class - шаблон для файла с классом</p></li><li><p>logic - шаблон для создания класса с логикой для view-компонента</p></li><li><p>styles - шаблон для css.ts-файла со стилями</p></li><li><p>tests - шаблон для файла с тестами</p></li></ul></li><li><p>Введите слово <code>class</code>, выберите \"MAM class definition\" и нажмите TAB или ENTER</p></li><li><p>Введите имя класса $hype_ballsort_ball и он должен наследоваться от $mol_object</p></li></ol><blockquote><p>$mol_object - это базовый класс с общей логикой, можете посмотреть его исходники самостоятельно. Т.к. имя сущности соответствует расположению сущности в исходном коде, то сможете без труда найти его. Репозиторий mol загрузился в MAM-окружение при установке сборщика. Можно просто нажать CTRL+P, ввести mol/object и нажать ENTER.</p></blockquote><p>Сейчас у вас есть пустой класс:</p><pre><code class=\"typescript\">	namespace $ {\n		export class $hoop_ballsort_ball extends $mol_object {\n	\n		}\n	}\n</code></pre><p>ball будет хранить одно состояние - цвет шара, создадим свойство для него</p><pre><code class=\"typescript\">	namespace $ {\n		export class $hype_ballsort_ball extends $mol_object {\n			\n			@ $mol_mem\n			color(next?: number) {\n				return next ?? 0\n			}	\n			\n		}\n	}\n</code></pre><p>В качестве значения цвета, мы будем использовать целые числа по порядку с 0 и далее. А при отображении view-компонент сам определит для какого числа какой цвет использовать.</p><h4>Как это работает</h4><p>При вызове метода без аргументов, он работает как геттер. При вызове с аргументом как сеттер.</p><p>Декоратор кеширует возвращенное значение из метода при первом вызове, а при повторном уже не запускает код метода, а просто возвращает значение из кеша.</p><p>Вновь код метода будет запущен только в двух случаях:</p><ul><li><p>если передали в него новое значение</p></li><li><p>если код метода использует другие методы с декоратором, то в случае изменения их значения, декоратор поймет, что закешированное значение уже неактуально и при следующем вызове запустит код метода, чтобы получить актуальное значение</p></li></ul><pre><code class=\"typescript\">	const obj = new $hype_ballsort_ball\n	obj.color() // 0\n	obj.color(1) // 1\n	obj.color() // 1\n</code></pre><h3>tube</h3><p>Создайте директорию tube и ts-файл в ней <code>mam/hype/ballsort/tube/tube.ts</code></p><p>За что будет отвечать трубка</p><ul><li><p>хранить массив шаров помещенных в нее</p></li><li><p>определять находится ли она в состоянии готово</p></li><li><p>выдавать нам верхний шар</p></li><li><p>принимать от нас шар и класть наверх</p></li></ul><p>Создайте класс, назовите его $hype_ballsort_tube и отнаследуйте от $mol_object.</p><pre><code class=\"typescript\">	namespace $ {\n		export class $hype_ballsort_tube extends $mol_object {\n			\n		}\n	}\n</code></pre><p>Добавим свойство для хранения шаров. Тут все точно также, как и у свойства <code>color</code> у шара, только в качестве значения используется массив, в котором хранятся объекты - инстансы класса $hype_ballsort_ball. По умолчанию возвращается пустой массив.</p><pre><code class=\"typescript\">	namespace $ {\n		export class $hype_ballsort_tube extends $mol_object {\n			\n			@ $mol_mem\n			balls( next?: $hype_ballsort_ball[] ) {\n				return next ?? []\n			}\n			\n		}\n	}\n</code></pre><p>Чтобы отформатировать код также как у меня, нажмите CTRL+SHIFT+P, введите \"Format\" и выберите команду \"Format document\" :)</p><p>Теперь добавим свойство для определения состояния готово. Ему нужно знать сколько шаров одного цвета должно быть в трубке для перехода в готово, для этого добавим свойство <code>size</code>, без декоратора, оно будет переопределяется при инстанцировании класса.</p><pre><code class=\"typescript\">	namespace $ {\n		export class $hype_ballsort_tube extends $mol_object {\n			//...\n\n			size() {\n				return 0\n			}\n\n			@ $mol_mem\n			complete() {\n				const [ ball, ...balls ] = this.balls()\n				return this.balls().length === this.size() &amp;&amp; balls.every( obj =&gt; obj.color() === ball.color() )\n			}\n			\n		}\n	}\n</code></pre><p>Тут мы просто отделяем первый шар от остальных, и проверяем что цвет первого шара равен цветам остальных шаров. А также проверяем что количество шаров равно нужно величине.</p><p>Декоратор тут тоже кеширует возвращаемое значение, но само свойство read-only, т.к. в нем не предусмотрена передача значения при вызове. Оно зависит от свойства <code>balls</code> и свойств <code>color</code> у шаров, когда они изменятся, оно сбросит кеш и вернет актуальное значение.</p><p>И нам осталось добавить только свойства для вытаскивания верхнего шара и для того чтобы положить шар наверх.</p><pre><code class=\"typescript\">	namespace $ {\n		export class $hype_ballsort_tube extends $mol_object {\n			//...\n\n			@ $mol_action\n			take() {\n				const next = this.balls().slice()\n				const ball = next.pop()\n				this.balls( next )\n				return ball\n			}\n\n			@ $mol_action\n			put( obj: $hype_ballsort_ball ) {\n				this.balls( [ ...this.balls(), obj ] )\n			}\n			\n		}\n	}\n</code></pre><ul><li><p>take </p><ul><li><p>берет массив из свойства <code>balls</code></p></li><li><p>создает его копию. Нельзя мутировать массив, который хранится в декораторе!</p></li><li><p>из копии вытаскивает верхний шар</p></li><li><p>записывает обратно в <code>balls</code> массив без верхнего шара</p></li><li><p>и возвращает шар</p></li></ul></li><li><p>put </p><ul><li><p>принимает шар в качестве аргумента</p></li><li><p>записывает в свойство <code>balls</code> новый массив, который создается из старого плюс принятый шар</p></li></ul></li></ul><h3>game</h3><p>Переходим к основной логике игры.</p><ol><li><p>Создайте директорию game и ts-файл в ней <code>mam/hype/ballsort/game/game.ts</code></p></li><li><p>Создайте класс, назовите его $hype_ballsort_game и отнаследуйте от $mol_object</p></li></ol><pre><code class=\"typescript\">	namespace $ {\n		export class $hype_ballsort_game extends $mol_object {\n			\n		}\n	}\n</code></pre><p>Мы не будем хардкодить сказанное в правилах, что заполненных трубок только четыре, что всего четыре цвета у шаров и т.д. Для начала создадим свойства в которых будут храниться эти константы</p><pre><code class=\"typescript\">	namespace $ {\n		export class $hype_ballsort_game extends $mol_object {\n			\n			color_count() { return 4 } // Количество цветов\n\n			// Количество шаров одного цвета\n			// которое надо собрать в трубке\n			// для перехода в состоянии готово\n			tube_size() { return 4 }\n\n			// Количество пустых трубок\n			tube_empty_count() { return 2 }\n\n			// Общее количество трубок\n			tube_count() { return this.color_count() + this.tube_empty_count() }\n\n			// Общее количество шаров\n			ball_count() { return this.tube_size() * this.color_count() }\n			\n		}\n	}\n</code></pre><p>Теперь нам нужно научиться инстанцировать шары и создать требуемое количество шаров.</p><pre><code class=\"typescript\">	namespace $ {\n		export class $hype_ballsort_game extends $mol_object {\n			//...\n\n			@ $mol_mem_key\n			Ball( index: number ) {\n				return new $hype_ballsort_ball\n			}\n			\n		}\n	}\n</code></pre><h4>Как это работает 2?</h4><p>Декоратор <code>$mol_mem_key</code> работает точно также, как и декоратор <code>$mol_mem</code>, за одним исключением - первым аргументом он всегда принимает ключ. Ключ является обязательным параметром. В итоге у нас получает набор из произвольного количества состояний, с доступом к каждому по ключу.</p><p>В данном случае свойство <code>Ball</code> является read-only свойством, т.к. у него нет второго параметра <code>next</code>. Оно возвращает инстанс класс, т.е. это свойство-фабрика. А в качестве ключей будут использоваться индексы и у шаров и у трубок, но вообще можно использовать произвольный объект.</p><p>При вызове с любым индексом, оно вернет объект и запомнит его под этим индексом, и при следующих обращениях будет возвращать уже созданный объект из кеша.</p><p>Важно: инстанцировать объекты необходимо через свойства-фабрики!</p><pre><code class=\"typescript\">	const obj = new $hype_ballsort_game\n	const ball1 = obj.Ball(0) // возвращает объект - инстанс шара\n	const ball2 = obj.Ball(1)\n	ball1 === ball2 // false - это два разных инстанса\n</code></pre><h4>Теперь создадим свойство генерирующее шары</h4><pre><code class=\"typescript\">	namespace $ {\n		export class $hoop_ballsort_game extends $mol_object {\n			//...\n\n			@$mol_mem_key\n			Ball( index: number ) {\n				return new $hype_ballsort_ball\n			}\n\n			@$mol_mem\n			balls() {\n				return Array.from( { length: this.ball_count() } ).map( ( _, index ) =&gt; {\n					const obj = this.Ball( index )\n					obj.color( index % this.tube_size() )\n					return obj\n				} )\n			}\n			\n		}\n	}\n</code></pre><ul><li><p>Свойство <code>balls</code> при первом запуске создаст массив с шарами и вернет его, а декоратор закеширует этот массив. При последующих вызовах будет возвращать массив из кеша. Работает так:</p></li></ul><ol><li><p>Создаем массив через <code>Array.from</code> с указанным количеством элементов <code>ball_count()</code></p></li><li><p>Для каждого индекса в массиве создаем шар через <code>Ball</code> и устанавливаем этому шару цвет</p></li><li><p>Возвращаем массив из свойства</p></li></ol><h4>Создаем трубки</h4><p>Трубки создаются похожим образом</p><pre><code class=\"typescript\">	namespace $ {\n		export class $hoop_ballsort_game extends $mol_object {\n			//...\n\n			@ $mol_mem_key\n			Tube( index: number ) {\n				const obj = new $hype_ballsort_tube\n				obj.size = () =&gt; this.tube_size()\n				return obj\n			}\n\n			@ $mol_mem\n			tubes() {\n				const balls = $mol_array_shuffle( this.balls() )\n				const size = this.tube_size()\n\n				return Array.from( { length: this.tube_count() } ).map( ( _, index ) =&gt; {\n					const obj = this.Tube( index )\n					const list = index &lt; this.color_count() ? balls.slice( index * size, index * size + size ) : []\n					obj.balls( list )\n					return obj\n				} )\n			}\n			\n		}\n	}\n</code></pre><ul><li><p>Свойство-фабрика <code>Tube</code> работает аналогичным образом, как и <code>Ball</code>, только оно после создания объекта устанавливает ему <code>size</code>, мы говорили про это выше - оно нужно трубке чтобы определить готовность.</p></li><li><p>Свойство <code>tubes</code> </p><ol><li><p>Получает шары и перемешивает их через <code>$mol_array_shuffle</code></p></li><li><p>Кладет в переменную <code>size</code>, для более короткой записи при использовании</p></li><li><p>Через  <code>Array.from</code> создает массив, длина которого сразу учитывает и пустые трубки</p></li><li><p>Для каждого элемента мы создаем трубку</p></li><li><p>Устанавливаем шары для не пустой трубке или пустой массив если трубка должна быть пустой</p></li><li><p>И возвращаем полученный массив трубок</p></li></ol></li></ul><h4>Дело за малым</h4><p>Нам потребуется свойства <code>moves</code> в котором будем хранить число шагов и увеличивать с каждым ходом.</p><pre><code class=\"typescript\">	namespace $ {\n		export class $hoop_ballsort_game extends $mol_object {\n			//...\n\n			@$mol_mem\n			moves( next?: number ) {\n				return next ?? 0\n			}\n			\n		}\n	}\n</code></pre><p>Нам понадобится свойство для хранения активной трубки. Напомню: при клике пользователя по трубке, она становится активной.</p><pre><code class=\"typescript\">	namespace $ {\n		export class $hoop_ballsort_game extends $mol_object {\n			//...\n			\n			@ $mol_mem\n			tube_active( next?: $hype_ballsort_tube | null ) {\n				if (next?.balls().length === 0) return null\n				if (next?.complete()) return null\n				return next ?? null\n			}\n			\n		}\n	}\n</code></pre><p>Это изменяемое свойство - у него есть параметр <code>next</code>, хранит оно объект активной трубки. А также оно принимает значение <code>null</code>, оно туда будет передаваться, когда необходимо дезактивировать трубку.</p><p>А также</p><ul><li><p>Если в трубке шаров нет - то ее нельзя активировать</p></li><li><p>Если трубка уже в состоянии готово - ее тоже нельзя активировать</p></li></ul><p>Теперь напишем свойство, которое будет переносить шар из активной трубки <code>from</code>, в нужную <code>to</code>.</p><pre><code class=\"typescript\">	namespace $ {\n		export class $hoop_ballsort_game extends $mol_object {\n			//...\n			\n			@ $mol_action\n			ball_move( to: $hype_ballsort_tube ) {\n				const from = this.tube_active()\n\n				if (to === from || !from) return this.tube_active(null)\n\n				const from_color = from?.balls().at(-1)?.color()\n				const to_color = to.balls().at(-1)?.color()\n				if (to.balls().length &amp;&amp; from_color !== to_color) return\n\n				const ball = from.take()!\n				to.put( ball )\n\n				this.moves( this.moves() + 1 )\n				this.tube_active( null )\n			}\n			\n		}\n	}\n</code></pre><ol><li><p>На вход принимаем объект трубки, в которую будем переносить шар из активной трубки</p></li><li><p>Если активной трубки нет или активная трубка и трубка, в которую переносим это одна трубка - снимаем с трубки активность и выходим</p></li><li><p>Проверяем что цвета верхних шаров в обоих трубках совпадают, т.к. друг на друга можно класть шары только одого цвета</p></li><li><p>Если все ок, то методами <code>take</code> и <code>put</code> достаем шар из одной и кладем в другую</p></li><li><p>Увеличиваем счетчик шагов <code>moves</code></p></li><li><p>Дезактивируем трубку</p></li></ol><h4>Предпоследний штрих</h4><p>Чтобы не сваливать на view-компонент задачу поочередного вызывания <code>tube_active</code> и <code>ball_move</code>, добавим свойство <code>tube_click</code>.</p><pre><code class=\"typescript\">	namespace $ {\n		export class $hoop_ballsort_game extends $mol_object {\n			//...\n			\n			@ $mol_action\n			tube_click( tube: $hype_ballsort_tube ) {\n				const tube_active = this.tube_active()\n\n				tube_active === null ? this.tube_active( tube ) : this.ball_move( tube )\n			}\n			\n		}\n	}\n</code></pre><p>View-компонент будет вызывать этой свойство, передавая туда трубку по которой кликнул пользователь.<br> Логика проста:</p><ul><li><p>Если при клике активной трубки нет, то делаем активной переданную трубку</p></li><li><p>Если активная трубка уже есть, то вызываем <code>ball_move</code>, что бы шар переместился из активной в переданную трубку</p></li></ul><h4>Последний штрих</h4><p>Нам нужно свойство, которое будет сигнализировать о том, что игра закончена.</p><pre><code class=\"typescript\">	namespace $ {\n		export class $hoop_ballsort_game extends $mol_object {\n			//...\n			\n			@ $mol_mem\n			finished() {\n				return this.tubes().every( tube =&gt; tube.complete() || tube.balls().length === 0 )\n			}\n			\n		}\n	}\n</code></pre><p>Игра заканчивается, когда каждая трубка в статусе готово или у нее нет шаров.</p><p>Мы тут специально не обрабатываем некоторые случаи, например в активации трубы нет проверки на то что игра закончена, т.к. предполагаем что интерфейс не будет обрабатывать клики на трубки после окончания игры.</p><h3>Время тестов</h3><p>Создайте файл <code>game.test.ts</code> в директории <code>hype/ballsort/game</code>, и выполните сниппет <code>tests</code>.</p><pre><code class=\"typescript\">	namespace $.$$ {\n		$mol_test({\n			\n			\"\"( $ ) {\n				\n			},\n			\n		})\n	}\n</code></pre><h4>Как это работает 3?</h4><p>Для описания тестов есть функция <code>$mol_test</code>, она принимает объект с тестами. Каждый тест - это метод на этом объекте. Имя метода - название теста, а код метода - это код теста. Так же в метод при запуске передается контекст, но <a href=\"https://mol.hyoo.ru/#!section=docs/=9q9dv3_fgxjsf\" rel=\"noopener noreferrer nofollow\">это</a> уже <a href=\"https://page.hyoo.ru/#!=z90h0r_m6qkvl\" rel=\"noopener noreferrer nofollow\">совсем другая история</a>.</p><p>Сначала напишем простой демо-тест.</p><pre><code class=\"typescript\">	namespace $.$$ {\n		$mol_test({\n			\n			\"Moves initially zero\"() {\n				const obj = new $hype_ballsort_game\n\n				$mol_assert_equal(obj.moves(), 0)\n			},\n			\n		})\n	}\n</code></pre><p>Чтобы запустить тесты, обычно ничего делать не надо, когда мы открываем в браузере какое-то приложение, dev-сервер собирает отдельный бандл с тестами, который содержит тесты всех модулей от которых зависит приложение.</p><p>Можно заметить, что в урле запрашивается файл <code>test.html</code>, в него сборщик добавляет загрузку бандла с тестами. Тесты прогоняются при каждой перезагрузке страницы.</p><p>Но у нас пока в приложении выводится только приветствие, мы можем попросить dev-сервер отдать нам <code>test.html</code> модуля <code>game</code>, он положит туда тест, который мы написали.</p><p>Откройте ссылку <code>http://127.0.0.1:9080/hoop/ballsort/game/-/test.html</code> - вы увидите белый экран, в <code>game</code> нет view-компонентов. Откройте консоль в девтулзах.<br> </p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/d7e/8b1/082/d7e8b1082a8861c7c2675d6407fb1ac2.png\" alt=\"консоль с репортом о прошедших тестах\" data-src=\"https://habrastorage.org/getpro/habr/post_images/d7e/8b1/082/d7e8b1082a8861c7c2675d6407fb1ac2.png\"><div><figcaption>консоль с репортом о прошедших тестах</figcaption></figure><p>Зеленьким \"All test passed\" - ни один тест не упал. Число 92 - количество запущеных тестов, это тесты модулей от которых зависит наш код.</p><p>Сломайте тест, вместо 0 поставив 1, сохраните и загляните в консоль. Тест упал:<br> </p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/215/af4/f01/215af4f0162214a6b8cc98ee0d13cfa0.png\" alt=\"консоль с репортом о фейле теста\" data-src=\"https://habrastorage.org/getpro/habr/post_images/215/af4/f01/215af4f0162214a6b8cc98ee0d13cfa0.png\"><div><figcaption>консоль с репортом о фейле теста</figcaption></figure><p>Можете удалить демо-тест.</p><h4>Переход трубок в состояние готово</h4><p>Для начала проверим что трубка корректно переходит в состояние готово.<br> Нам нужно:</p><ol><li><p>Создать игру</p></li><li><p>Достать заполненную трубку</p></li><li><p>На всякий случай убедимся, что изначально нет трубок в состоянии готово</p></li><li><p>Установим всем шарам одинаковый цвет</p></li><li><p>Убедимся, что трубка перешла в состояние готово</p></li></ol><pre><code class=\"typescript\">	namespace $ {\n\n		$mol_test( {\n\n			\'tube completing\'() {\n\n				const game = new $hype_ballsort_game // 1\n				const tube = game.tubes().find( obj =&gt; obj.balls().length &gt; 0 )! // 2\n				$mol_assert_not( tube.complete() ) // 3\n\n				tube.balls().forEach( ball =&gt; ball.color( 0 ) ) // 4\n\n				$mol_assert_ok( tube.complete() ) //5\n\n			}\n\n		} )\n	}\n</code></pre><h4>Проверим что трубка в состоянии готово не активируется</h4><pre><code class=\"typescript\">	namespace $ {\n\n		$mol_test( {\n			//...\n\n			\'completed tube non activation\'() {\n				// Создаем игру и берем трубку с шарами\n				const game = new $hype_ballsort_game\n				const tube = game.tubes().find( obj =&gt; obj.balls().length &gt; 0 )!\n\n				$mol_assert_not(game.tube_active()) // Активных нет\n\n				tube.balls().map(obj =&gt; obj.color(0)) // Красим шары \n\n				game.tube_click(tube) // Кликаем по трубке\n				$mol_assert_not(game.tube_active()) // Активных трубок все еще нет\n			},\n\n		} )\n	}\n</code></pre><h4>Проверим что пустая трубка не активируется</h4><pre><code class=\"typescript\">	namespace $ {\n\n		$mol_test( {\n			//...\n\n			\'empty tube non activation\'() {\n				const game = new $hype_ballsort_game\n				// Берем пустую трубку\n				const tube = game.tubes().find( obj =&gt; obj.balls().length === 0 )!\n\n				$mol_assert_not(game.tube_active())\n\n				// Кликаем и убеждаемся что активных трубок нет\n				game.tube_click(tube)\n				$mol_assert_not(game.tube_active())\n			},\n\n		} )\n	}\n</code></pre><h4>Проверим активацию трубок</h4><p>Для этого нам надо:</p><ol><li><p>Создать инстанс игры</p></li><li><p>Взять из него трубку с шариками и пустую трубку</p></li><li><p>На всякий случай убедимся, что активных трубок нет</p></li><li><p>Кликнем по заполненной трубке, проверим что она активна</p></li><li><p>Кликнем по пустой трубке и проверим что активных трубок снова нет</p></li><li><p>Кликнем на трубку, в которую положили шар и убедимся, что она активировалась</p></li></ol><pre><code class=\"typescript\">	namespace $ {\n\n		$mol_test( {\n			//...\n\n			\'tube activation\'() {\n				const game = new $hype_ballsort_game\n				const tube_filled = game.tubes().find( obj =&gt; obj.balls().length &gt; 0 )!\n				const tube_empty = game.tubes().find( obj =&gt; obj.balls().length === 0 )!\n\n				$mol_assert_not(game.tube_active())\n\n				game.tube_click(tube_filled)\n				$mol_assert_equal(tube_filled, game.tube_active())\n\n				game.tube_click(tube_empty)\n				$mol_assert_not(game.tube_active())\n\n				game.tube_click(tube_empty)\n				$mol_assert_equal(tube_empty, game.tube_active())\n			},\n\n		} )\n	}\n</code></pre><h4>Попробуем переместить шар</h4><pre><code class=\"typescript\">	namespace $ {\n\n		$mol_test( {\n			//...\n			\n			\'ball moving\'() {\n				const game = new $hype_ballsort_game\n\n				// Берем заполненную и пустую трубки, а также шар который будет перемещаться\n				const tube_filled = game.tubes().find( obj =&gt; obj.balls().length &gt; 0 )!\n				const tube_empty = game.tubes().find( obj =&gt; obj.balls().length === 0 )!\n				const ball_moving = tube_filled.balls().at( -1 )!\n\n				// Кликаем на заполненую трубку и на пусую\n				game.tube_click( tube_filled )\n				game.tube_click( tube_empty )\n\n				// Убеждаемся что именно этот шар убыл из одной трубки и прибыл в другую\n				$mol_assert_equal( tube_filled.balls().length, game.tube_size() - 1 )\n				$mol_assert_not( tube_filled.balls().includes( ball_moving ) )\n\n				$mol_assert_equal( tube_empty.balls().length, 1 )\n				$mol_assert_ok( tube_empty.balls().includes( ball_moving ) )\n			},\n\n\n		} )\n	}\n</code></pre><h4>Проверим что счетчик увеличивается при перемещении шара</h4><pre><code class=\"typescript\">	namespace $ {\n\n		$mol_test( {\n			//...\n			\n			\'moves increment\'() {\n				const game = new $hype_ballsort_game\n				const tube_filled = game.tubes().find( obj =&gt; obj.balls().length &gt; 0 )!\n				const tube_empty = game.tubes().find( obj =&gt; obj.balls().length === 0 )!\n\n				game.tube_click( tube_filled )\n				game.tube_click( tube_empty )\n				$mol_assert_equal( game.moves(), 1 )\n			},\n\n\n		} )\n	}\n</code></pre><h4>Проверим что игра заканчивается</h4><pre><code class=\"typescript\">	namespace $ {\n\n		$mol_test( {\n			//...\n			\n			\'game finish\'() {\n				const game = new $hype_ballsort_game\n\n				$mol_assert_not( game.finished() )\n\n				game.balls().forEach( ball =&gt; ball.color( 0 ) )\n				$mol_assert_ok( game.finished() )\n			},\n\n\n		} )\n	}\n</code></pre><h3>Что дальше?</h3><p>Продолжение с pixel perfect версткой будет в следующей части. А также напишем тестов для проверки всего приложения.</p><p>А пока можете разобраться в моделях/view-моделях других реализация:</p><ul><li><p><a href=\"https://github.com/sergeysova/ballsort/blob/master/src/pages/home/model.ts\" rel=\"noopener noreferrer nofollow\">Effector</a></p></li><li><p><a href=\"https://github.com/faustienf/ballsort/blob/main/src/app/model.ts\" rel=\"noopener noreferrer nofollow\">Reatom</a></p></li><li><p><a href=\"https://github.com/Sdju/ballsort-example-vue/blob/main/src/components/TheGame.vue\" rel=\"noopener noreferrer nofollow\">Vue</a></p></li><li><p><a href=\"https://github.com/Lyumih/milis/blob/main/ballsort/board/board.ts\" rel=\"noopener noreferrer nofollow\">$mol другая реализация</a></p></li><li><p>Весь код из статьи в <a href=\"https://github.com/PavelZubkov/ballsort/blob/only_model/game/game.ts\" rel=\"noopener noreferrer nofollow\">этом репозитории</a></p></li></ul><p><a href=\"https://habr.com/ru/articles/741256/\" rel=\"noopener noreferrer nofollow\">Часть 2</a></p><p>По всем вопросам можно идти <a href=\"https://t.me/h_y_o_o/2\" rel=\"noopener noreferrer nofollow\">сюда</a>.</p>', 2, '2023-06-12 21:54:48', 313670, 76, '/ru/articles/741040/', 'Сегодня мы перепишем на $mol эту демку почти пиксель в пиксель и напишем несколько тестов.Демка представляет собой игру, в которой перемещаются разноцветные шарики между трубками, цель игры - отсортировать шарики по цветам за наименьшее количество шагов.Изначально она была реализована на эффекторе + react, недавно несколько человек реализовали ее на реатоме + react исходники, на vue исходники и две независимых версии на моле: первая и моя о ней пойдет речь.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(138, 'Парсинг, хранение и отображение логов 3-х разных агентов доставки электронной почты. MTA Log Parser', '<p>Эта моя первая коротенькая статейка на Хабре в попытке сделать проект, который делал для себя в целях самообразования и применения на работе, полезным кому-то еще. Можно было бы написать больше букв, но ввиду особенностей профессиональной деятельности, времени на это мягко говоря не очень много. Кто заинтересуется всегда может подробности почерпнуть самостоятельно на гитхабе.</p><h3>Предыстория</h3><p>Помнится, лет 10 назад хотелось мне найти удобный GUI просмотрщик почтовых логов с фильтрами по времени и разным ключевым полям для Exim, причем желательно с возможностью автоматической очистки от устаревших записей. Чтение лог файлов - это, конечно, хорошо, но не очень быстро и удобно, особенно когда над тобой стоит человек (или висит на телефонной линии), которому «вотпрямщас» надо узнать, почему же не пришло важнейшее письмо из какой-нибудь ООО «Рога и копыта». Да и вопросы хранения логов за какой-то бОльший, чем неделя, срок и обращения к ним, так же стояли остро.</p><p>Такой GUI просмотрщик был впоследствии найден в лице старенького, но очень даже эффективного <a href=\"https://duncanthrax.net/exilog/\" rel=\"noopener noreferrer nofollow\"><u>exilog</u></a>. Однако со временем в хозяйстве начали появляться почтовики на базе Postfix (как правило в составе комбайнов типа mailcow) и вот для них ничего современного, молодежного и главное простого и быстрого в развертке найти не удалось.</p><p>Затем появился ELK и были мои вполне успешные попытки прикрутить парсинг, хранение и отображение всех логов (не только почтовых) к этому стеку. Но оставалось стойкое желание иметь конкретно для почты что-то отдельное, более легковесное, менее ресурсозатратное  и универсальное.</p><p>Примерно в это время на гитхабе я наткнулся на замечательный проект <a href=\"https://github.com/Privex/postfix-parser\" rel=\"noopener noreferrer nofollow\"><u>Privex Postfix Log parser</u></a>.</p><p>В нем мне сразу понравился подход и возникло желание проект развить, сделав удобнее и расширив область применения, т.к. хотелок у меня было много, а проект казался каким-то незавершенным и подзаброшенным.</p><p>Итак, встречайте, <a href=\"https://github.com/drlight17/mta-log-parser\" rel=\"noopener noreferrer nofollow\"><u>MTA Log Parser</u></a>.</p><h3>Собственно сабж</h3><p>Программист из меня так себе, поскольку это не моё основное направление деятельности, но получилось, что получилось. Просьба за исходный код сильно не ругать и тапками не бить.</p><p><a href=\"https://github.com/Privex/postfix-parser\" rel=\"noopener noreferrer nofollow\"><u>Изначальный проект </u></a>на Quart (бэкенд) и VueJS (фронтэнд) был мной доработан, адаптирован под более актуальный vue 3. В качестве СУБД в изначальном проекте используется rethinkdb и миграцию на что-то другое, либо поддержку чего-то другого я пока не делал из соображения - работает - не трогай. Если есть аргументированное мнение, почему стоит переделать СУБД бэкенд на что-то другое - пишите в комментариях, будет интересно почитать.</p><p>Список изменений по сравнению с исходным проектом довольно большой и его можно посмотреть в <a href=\"https://raw.githubusercontent.com/drlight17/mta-log-parser/master/CHANGES.md\" rel=\"noopener noreferrer nofollow\">CHANGES.md</a>. Здесь же напишу самое основное на данный момент (v.1.1.2):</p><ul><li><p>Поддержка 3-х самых популярных (по версии некоторых ресурсов) MTA - Exim, Postfix и Sendmail</p></li><li><p>Докеризация - существенно упрощает и ускоряет развертку в любой продакшен</p></li><li><p>Более развитый GUI с бОльшим количеством фильтров</p></li><li><p>Локализация GUI (пока поддерживаются русская и английская локали, но добавить поддержку других возможно)</p></li><li><p>Ротация логов (удаление устаревших) по количеству дней</p></li></ul><p>В планах всякие свистелки-перделки, поддержка нескольких одновременных фильтров (сейчас одновременно накладываются только один текстовый фильтр по выбранному полю и фильтр по времени) и рефакторинг кода, т.к. сделанное мной весьма ужасно с точки зрения кода.</p><p>Принимаются критика, PR’ы и просто советы от гуру программирования =)</p><p>Ну и парочка скриншотов для затравки:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/getpro/habr/upload_files/45f/db1/a21/45fdb1a21fbdc329a20ff27e56ff4942.JPG\" alt=\"Основное окно с таблицей текущего обработанного лога\" title=\"Основное окно с таблицей текущего обработанного лога\" width=\"1173\" height=\"948\"><div><figcaption>Основное окно с таблицей текущего обработанного лога</figcaption></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/getpro/habr/upload_files/a7e/de6/3f7/a7ede63f72c529c6337330621ca6be1c.JPG\" alt=\"Модальное окно с подробностями о доставке выбранного письма\" title=\"Модальное окно с подробностями о доставке выбранного письма\" width=\"877\" height=\"856\"><div><figcaption>Модальное окно с подробностями о доставке выбранного письма</figcaption></figure><p></p>', 3, '2023-06-12 21:54:48', 395854, 73, '/ru/articles/740288/', 'Эта моя первая коротенькая статейка на Хабре в попытке сделать проект, который делал для себя в целях самообразования и применения на работе, полезным кому-то еще. Можно было бы написать больше букв, но ввиду особенностей профессиональной деятельности, времени на это мягко говоря не очень много. Кто заинтересуется, всегда может подробности почерпнуть самостоятельно на гитхабе.'),
(139, 'Делюсь опытом участия в хакатоне от Совкомбанка', '<figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/327/37b/fdd/32737bfdd03257005aff1f43f91c4567.jpg\" alt=\"Сколково изнутри в 17:00\" title=\"Сколково изнутри в 17:00\" width=\"960\" height=\"1280\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/327/37b/fdd/32737bfdd03257005aff1f43f91c4567.jpg\" data-blurred=\"true\"><div><figcaption>Сколково изнутри в 17:00</figcaption></figure><p>Сегодня, я хочу поделиться опытом и рассказать про участие в командном <a href=\"https://scbteamchallenge.sk.ru/\" rel=\"noopener noreferrer nofollow\">хакатоне от совкомбанка</a>. Вкратце опишу задачу — командой до 5 человек сделать внутренний сервис для подбора персонала и ведения HR деятельности. Кому интересен опыт участия и немного изнанки хакатонов — прошу под кат).</p><h2>Подготовка — пол дела</h2><p>На первом этапе команду я решил собирать из участников прошлого хакатона в котором участвовал (<a href=\"https://webislife.ru/strokoff/hakaton-datsart-obzor-i-opyt-uchastiya/\" rel=\"noopener noreferrer nofollow\">DatsArt занял 46из340место</a>) и кинул клич в телеграм чате, сразу состав получился следующий: 2 frontend + 2 python + 1 java разработчики. Т.к мы собирались писать http приложение и в наши планы не входило писать REST API на java spring или python, я переключился на роль бекендера, который сделает апишки для веб мордочки и CRUD операциями над БД на php 8.2 + symfony, фронт сделает интерфейсы на vue 3.3 + TS + pinia, питонисты будут отвечать за алгоритм нахождения и подсчет релевантности в представленных резюме, а джавист напишет прослойку которая будет искать резюме на сторонних сайтах типа hh или superjob. Дополнительные сервисы планировались как отдельные HTTP сервисы в своих контейнерах. Об этом позже.</p><p>Перед хакатоном было достаточно времени, чтобы подготовиться, я немного успел почитать про разработку на Symfony и примерить на себя роль бекенд разработчика (кто со мной знаком, в курсе, что последние 10 лет я работаю фронтенд разработчиком\\тимлидом и для меня должность бекенд разработчика на симфони в новинку) Почему я не выбрал почти родной мне js\\ts? — цель хакатона не просто показать «смотри как могу на ноде» но и предоставить рабочий проект, который не стыдно будет поддерживать в ентерпрайзе и собеседовать людей не на свой велосипед на ноде, так что Symfony с ее документацией, доктриной и остальными возможностями — мне показались отличным вариантом. Также каждому разработчику я приобрел VDS на время хакатона + mysql бд как сервис.</p><h2>Веселые старты</h2><p>Не считая непривычной мне роли. На последней QA сессии перед хакатоном, организаторы донесли мысль, что Д<u>ИЗАЙН ПРЕЗЕНТАЦИИ ОЧЕНЬ ВАЖЕН</u> и я как капитан команды, принял неудобное для одного из разработчиков python решение — заменить на дизайнера. Добровольно никто место не хотел сдавать, а проигрывать мне не хотелось и пришлось принимать решение такое. Так к нам присоединился дизайнер интерфейсов, который подавал заявку на платформе CodenRock по нашему объявлению. </p><h2>Пол пути к победе</h2><p>В первый же день начала хакатона, после прочтения задания (а оно совпадало на 90% со спойлером задания) второй python разработчик говорит нам, что не хочет подвести команду и не вывезет и покидает нас) Я прошу организаторов конкурса вернуть нам первого python разработчика, такая вот сантабарбара) Но мы все же в полном составе проходим на старте хакатона.</p><p>Основные сущности в нашем проекте были Вакансии, Резюме, События (встречи, собеседования), заявки на согласование</p><ul><li><p>Вакансии — кого, куда, за сколько ищем</p></li><li><p>Резюме — складируем резюме кандидатов в свою БД для ведения отчетности и архива, позволяем выбирать кандидатов на вакансию из доступных резюме</p></li><li><p>События — абстрактные события — дата начала, участники, тип события (встреча, переговоры, собеседование)</p></li><li><p>Департаменты — сущность с title и возможностью прикреплять к ней учетки пользователей</p></li><li><p>Навыки — ключевые навыки которые проходят как теги сквозь пользователей, вакансии, резюме</p></li><li><p>Пользователи — с ролями и уровнями доступа, указанием в каком департаменте работает и какие навыки имеет.</p></li></ul><p>Логика работы очень простая, заводим вакансию, назначаем ответственного, ответственный добавляет резюме, отбирает кандидатов, назначает встречи и согласования + строим графики и всякие отчетики сколько успеем для красивого дешборда.</p><h2>На пол пути к победе</h2><p>На третий день хакатона мы имели рабочий <a href=\"https://mehunt.ru/api/doc\" rel=\"noopener noreferrer nofollow\">swagger</a> основные экраны для CRUD операций над сущностями, в сумме проработав часов 8 над кодом. Ниже приведу пример контроллера который у меня получался (они все одинаковые получились почти). Больше работать не получалось т. к. я не брал выходных на хакатон и полноценно работал на основной работе полный рабочий день. </p><details class=\"spoiler\"><summary>Пример ApiSkillsController.php</summary><div class=\"spoiler__content\"><pre><code class=\"php\">&lt;?php\n\nnamespace App\\Controller;\n\nuse App\\Entity\\Skill;\nuse Doctrine\\ORM\\EntityManagerInterface;\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;\nuse Symfony\\Component\\HttpFoundation\\JsonResponse;\nuse Symfony\\Component\\Routing\\Annotation\\Route;\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse OpenApi\\Attributes as OAT;\nuse Symfony\\Component\\Validator\\Validator\\ValidatorInterface;\nuse Symfony\\Component\\Security\\Http\\Attribute\\IsGranted;\nuse App\\Service\\ApiFrontendService;\n\nclass ApiSkillsController extends AbstractController\n{\n    private ApiFrontendService $apiFrontendService;\n    public function __construct(EntityManagerInterface $entityManager, ValidatorInterface $validator) {\n        $this-&gt;apiFrontendService = new ApiFrontendService($entityManager, $validator);\n    }\n    /**\n     * Список навыков\n     */\n    #[OAT\\Get(\n        path: \'/api/skills\',\n        security: [\'X-AUTH-TOKEN\'],\n        operationId: \'app_api_skill\',\n        description: \'Список всех навыков\',\n        tags: [\'Skills\'],\n        responses: [\n            new OAT\\Response(\n                response: 200,\n                description: \'All skills\',\n                content: new OAT\\JsonContent(\n                    type: \'array\',\n                    items: new OAT\\Items(ref: \"#/components/schemas/Skill\")\n                )\n            ),\n        ]\n    )]\n    #[IsGranted(\'ROLE_USER\')]\n    #[Route(\'/api/skills\', name: \'app_api_skill\', methods: [\'GET\'])]\n    public function index(): JsonResponse\n    {\n        return $this-&gt;apiFrontendService-&gt;getAllEntity(\'App\\Entity\\Skill\');\n    }\n\n    /**\n     * Создание навыка.\n     */\n    #[OAT\\Post(\n        path: \'/api/skills\',\n        security: [\'X-AUTH-TOKEN\'],\n        operationId: \'app_api_skill_create\',\n        description: \'Заведение нового навыка\',\n        tags: [\'Skills\'],\n        parameters: [\n            new OAT\\RequestBody(\n                required: true,\n                content: new OAT\\JsonContent(ref: \"#/components/schemas/Skill\")\n                   \n            )],\n        responses: [\n            new OAT\\Response(\n                response: 200,\n                description: \'Entity созданного навыка\',\n                content: new OAT\\JsonContent(\n                    type: \'array\',\n                    items: new OAT\\Items(ref: \"#/components/schemas/Skill\")\n                )\n            ),\n        ]\n    )\n    ]\n    #[IsGranted(\'ROLE_USER\')]\n    #[Route(\'/api/skills\', name: \'app_api_skill_create\', methods: [\'POST\'])]\n    public function create(Request $request, EntityManagerInterface $em, ValidatorInterface $validator): JsonResponse\n    {\n        $rq = json_decode($request-&gt;getContent());\n        $skill = new Skill();\n        $skill-&gt;setTitle($rq-&gt;title);\n       \n        $errors = $validator-&gt;validate($skill);\n        if (count($errors) &gt; 0) {\n            return new JsonResponse([\n                \'errors\' =&gt; array_map(function ($error) {\n                    return [\n                        \'property\' =&gt; $error-&gt;getPropertyPath(),\n                        \'message\' =&gt; $error-&gt;getMessage()\n                    ];\n                }, iterator_to_array($errors))\n            ]);\n        }\n        $em-&gt;getRepository(Skill::class)-&gt;save($skill, true);\n\n        return new JsonResponse([\n            \'data\' =&gt; $skill-&gt;asArray(),\n            \'errors\' =&gt; []\n        ]);\n    }\n\n    /**\n     * Редактирование навыка.\n     */\n    #[OAT\\Put(\n        path: \'/api/skills/{id}\',\n        security: [\'X-AUTH-TOKEN\'],\n        operationId: \'app_api_skill_edit\',\n        description: \'Редактирование навыка\',\n        tags: [\'Skills\'],\n        parameters: [\n            new OAT\\RequestBody(\n                required: true,\n                content: new OAT\\JsonContent(ref: \"#/components/schemas/Skill\")\n                   \n            )],\n        responses: [\n            new OAT\\Response(\n                response: 200,\n                description: \'Entity навыка\',\n                content: new OAT\\JsonContent(\n                    type: \'array\',\n                    items: new OAT\\Items(ref: \"#/components/schemas/Skill\")\n                )\n            ),\n        ]\n    )]\n    #[IsGranted(\'ROLE_USER\')]\n    #[Route(\'/api/skills/{id}\', name: \'app_api_skill_edit\', methods: [\'PUT\'])]\n    public function editDepartament(int $id, Request $request, EntityManagerInterface $em, ValidatorInterface $validator): JsonResponse\n    {\n        $rq = json_decode($request-&gt;getContent());\n        $repo = $em-&gt;getRepository(Skill::class);\n        $departament = $repo-&gt;findOneBy([\n            \'id\' =&gt; $id\n        ]);\n        if(!$departament) {\n            return new JsonResponse([\n                \'errors\' =&gt; [\'Invalid ID\']\n            ]);\n        }\n        $departament-&gt;setTitle($rq-&gt;title);\n        $errors = $validator-&gt;validate($departament);\n        if (count($errors) &gt; 0) {\n            return new JsonResponse([\n                \'errors\' =&gt; array_map(function ($error) {\n                    return [\n                        \'property\' =&gt; $error-&gt;getPropertyPath(),\n                        \'message\' =&gt; $error-&gt;getMessage()\n                    ];\n                }, iterator_to_array($errors))\n            ]);\n        }\n        $repo-&gt;save($departament, true);\n        \n        return new JsonResponse([\n            \'data\' =&gt; $departament-&gt;asArray(),\n            \'errors\' =&gt; []\n        ]);\n    }\n\n    /**\n     * Получение навыка по ID\n     */\n    #[OAT\\Get(\n        path: \'/api/skills/{id}\',\n        description: \'Получение навыка по ID\',\n        tags: [\'Skills\'],\n        responses: [\n            new OAT\\Response(\n                response: 200,\n                description: \'Departament entity\',\n                content: new OAT\\JsonContent(ref: \"#/components/schemas/Skill\")\n            ),\n        ]\n    )]\n    #[IsGranted(\'ROLE_USER\')]\n    #[Route(\'/api/skills/{id}\', methods: [\'GET\'])]\n    public function get(int $id): JsonResponse\n    {\n        return $this-&gt;apiFrontendService-&gt;getEntityById(\'App\\Entity\\Skill\', $id);\n    }\n}\n</code></pre><p></p></details><p>Очень понравилось использовать <code>OpenApi\\Attributes</code> — прописываешь атрибуты прямо рядом с кодом и документация строится сама! Очень круто! Если кто подскажет на хабре, как сделать так чтобы <code>Shemas</code> генерировались с <code>Entity</code> и их не приходилось писать в <code>nelmio_api_doc.yaml</code>, будет очень хорошо) Также для уменьшения кода я сделал простенький сервис для типовых операций</p><details class=\"spoiler\"><summary>ApiFrontendService.php</summary><div class=\"spoiler__content\"><pre><code class=\"php\">&lt;?php\nnamespace App\\Service;\nuse Doctrine\\ORM\\EntityManagerInterface;\nuse Symfony\\Component\\HttpFoundation\\JsonResponse;\nuse Symfony\\Component\\Validator\\Validator\\ValidatorInterface;\n\n/**\n * Frontend сервис для унификации ответов JSON\n */\nclass ApiFrontendService\n{\n    private EntityManagerInterface $entityManager;\n    private ValidatorInterface $validator;\n    \n    public function __construct(EntityManagerInterface $entityManager, ValidatorInterface $validator)\n    {\n        $this-&gt;entityManager = $entityManager;\n        $this-&gt;validator = $validator;\n    }\n\n    /**\n     * Получение Entity по Entity.ID\n     * @return JsonResponse(Entity[])\n     */\n    public function getAllEntity(string $className): JsonResponse\n    {\n        return new JsonResponse(\n            array_map(function($entity) {\n                return $entity-&gt;asArray();\n            }, $this-&gt;entityManager-&gt;getRepository($className)-&gt;findAll())\n        );\n    }\n\n    /**\n     * Получение Entity по критерию\n     * @return JsonResponse(Entity[])\n     */\n    public function getEntityListByCriteria(string $className, array $criteria): JsonResponse\n    {\n        return new JsonResponse(\n            array_map(function($entity) {\n                return $entity-&gt;asArray();\n            }, $this-&gt;entityManager-&gt;getRepository($className)-&gt;findBy($criteria))\n        );\n    }\n\n    /**\n     * Получение Entity по наличию memberValue в memberProp \n     * @return JsonResponse(Entity[])\n     */\n    public function getEntityMembersColllection(string $className, string $propName, int $memberValue): JsonResponse\n    {\n        $members = $this-&gt;entityManager-&gt;getRepository($className)-&gt;createQueryBuilder(\'e\')\n            -&gt;where(\':memeber_value MEMBER OF e.\'.$propName)\n            -&gt;setParameter(\'memeber_value\', $memberValue)\n            -&gt;getQuery()\n            -&gt;getResult();\n        if(!$members) {\n            return new JsonResponse(null, 200);\n        }\n        return new JsonResponse(array_map(function($entity) {\n            return $entity-&gt;asArray();\n        }, $members));\n    }\n\n    /**\n     * Получение Entity по Entity.ID\n     * @return JsonResponse(Entity)\n     */\n    public function getEntityById(string $className, int $id): JsonResponse\n    {\n        $entity = $this-&gt;entityManager-&gt;getRepository($className)-&gt;findOneBy([\n            \'id\' =&gt; $id\n        ]);\n        if (!$entity) {\n            return new JsonResponse(null, 404);\n        }\n        return new JsonResponse($entity-&gt;asArray());\n    }\n\n    /**\n     * Сохранние сущности\n     * @return JsonResponse(Entity|Errors[{property:string,message:string}])\n     */\n    public function saveEntity(string $className, $entity): JsonResponse\n    {\n        $errors = $this-&gt;validator-&gt;validate($entity);\n\n        if (count($errors) &gt; 0) {\n            return new JsonResponse([\n                \'errors\' =&gt; array_map(function ($error) {\n                    return [\n                        \'property\' =&gt; $error-&gt;getPropertyPath(),\n                        \'message\' =&gt; $error-&gt;getMessage()\n                    ];\n                }, iterator_to_array($errors))\n            ], 400);\n        }\n        \n        $this-&gt;entityManager-&gt;getRepository($className)-&gt;save($entity, true);\n\n        return new JsonResponse($entity-&gt;asArray(), 200);\n    }\n}</code></pre><p></p></details><p>Был еще вариант использовать <a href=\"https://symfony.com/doc/current/the-fast-track/ru/26-api.html\" rel=\"noopener noreferrer nofollow\">api‑platform</a>, но меня он испугал своими правилами для его кастомизации помимо CRUD, уж слишком много кода чтобы описать 1 action для API, профит с генерацией CRUD не перебивает оверхед с возней с этим бандлом в дальнейшем, по крайней мере во время хакатона у меня)</p><p>На фронте помимо формочек, все работало через набор pinia stores, пример одного из сторов на фронте. В остальном же обычный бутстрап, не вижу смысла показывать листинг. Ссылка покликать наш результат есть в конце статьи.</p><details class=\"spoiler\"><summary>UsersStore.ts</summary><div class=\"spoiler__content\"><pre><code class=\"typescript\">import { ref } from \'vue\'\nimport { defineStore } from \'pinia\'\nimport http from \'@/http\';\nexport const useUsersStore = defineStore(\'users\', () =&gt; {\n    /**\n     * Список пользователей\n     */\n    const list = ref([] as any[]);\n\n    /**\n     * Загрузка списка пользователей\n     * @returns Promise&lt;AxiosResponse&gt; with Users[] entity\n     */\n    const fetchList = async function fetchList():Promise&lt;any[]&gt; {\n        const response = await http.get(\'/api/users\');\n        if(response.status === 200 &amp;&amp; response.data) {\n            list.value = response.data;\n        }\n        return response.data;\n    };\n\n    /**\n     * Получение профиля пользователя по ID\n     * @param id User.id\n     * @returns Promise&lt;AxiosResponse&gt; with User entity\n     */\n    const fetchUser = async function fetchUser(id:number):Promise&lt;any&gt; {\n        return await http.get(`/api/user/${id}`);\n    };\n    \n    /**\n     * Создание нового пользователя\n     * @param user object\n     * @returns Promise&lt;AxiosResponse&gt; with User entity\n     */\n    const create = async (user:any):Promise&lt;any&gt; =&gt; await http.post(\'/api/users/new\', user);\n\n    /**\n     * Редактирование пользователя\n     * @param id number\n     * @param user object\n     * @returns Promise&lt;AxiosResponse&gt; with User entity\n     */\n    const update = async (id:number, user:any):Promise&lt;any&gt; =&gt; await http.put(`/api/users/${id}`, user);\n\n    /**\n     * Фильтр по пользователю\n     * @param id number userId\n     * @returns Users[]\n     */\n    const getUserById = (id:Number) =&gt; {\n        return list.value.filter(u =&gt; u.id === id)[0];\n    }\n\n  return { list, fetchList, fetchUser, create, update, getUserById }\n});\n</code></pre><p></p></details><p>Первые 3 дня я не особо синхронизировался с командой, делая упор на выдачу документации к API и скорейшей интеграции с их сервисами. На третий день, интересуясь, что сделали ребята (python и java) я выясняю, что сделали — ничего. И ничего делать в целом не будут.Причины я выяснять не стал, как и обсуждать их решение. В этот момент я понимаю, что нас теперь условно трое) дизайнер, фронтенд и я. Принимаю решение продолжать работу, но уже беру на себя часть интерфейсов связанных с созданием вакансии и их наполнением фикстурами переключаю свое внимание на то, чтобы хотябы экраны в минимальном виде у нас все были и работали или что‑то показывали. В место внешнего сервиса на python, берем моки с stats.hh.ru и строим псевдоаналитику уже, частично на моках и частично на реальных данных (что мы сами добавили в сервис).</p><h2>День перед финалом</h2><p>За день до окончания хакатона, у нас было готово все в очень сыром виде, из неготовых частей оставлась ролевая модель (разграничить доступы для пользователей т.к. весь хакатон просидели под админом), нужно было сделать мини сводку (воронку) на странице вакансии.</p><details class=\"spoiler\"><summary>Пример просмотра вакансии</summary><div class=\"spoiler__content\"><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/905/9cf/6ab/9059cf6ab998591633d5879a998155e0.png\" alt=\"Экран просмотра вакансии\" title=\"Экран просмотра вакансии\" width=\"2880\" height=\"1588\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/905/9cf/6ab/9059cf6ab998591633d5879a998155e0.png\"><div><figcaption>Экран просмотра вакансии</figcaption></figure><p>Список резюме:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/99d/4ef/aab/99d4efaabcc7f370da672e1177481358.png\" alt=\"Экран со списком резюме\" title=\"Экран со списком резюме\" width=\"2870\" height=\"1562\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/99d/4ef/aab/99d4efaabcc7f370da672e1177481358.png\"><div><figcaption>Экран со списком резюме</figcaption></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/863/f03/180/863f0318059e1d7ecba617025eb1f92e.png\" alt=\"Стартовый экран пользователя\" title=\"Стартовый экран пользователя\" width=\"2874\" height=\"1548\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/863/f03/180/863f0318059e1d7ecba617025eb1f92e.png\"><div><figcaption>Стартовый экран пользователя</figcaption></figure><p></p></details><p>Дизайнер за время хакатона нарисовал SVG-логотип и подготовил пачку аватарок нагенерированных нейросетью. Весь остальной дизайн это просто bootstrap.</p><h2>Финал и подведение итогов</h2><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/25d/449/39a/25d44939add3748241f5cbb229becbc9.png\" alt=\"Краткая статистика хакатона\" title=\"Краткая статистика хакатона\" width=\"1348\" height=\"592\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/25d/449/39a/25d44939add3748241f5cbb229becbc9.png\"><div><figcaption>Краткая статистика хакатона</figcaption></figure><p>Из 216 команд, которые в итоге осилили 42 решений, в финал прошли 13, а наше решение попало в ТОП 10 на 9 место. Из сильных сторон нашего решения отметили легкость поднятия проекта (<code>npm run dev</code>на фронте и <code>symfony server:start</code>для бекенда) Наличие `docker‑compose` файла для деплоя и <code>taskfile.yaml</code> как общий набор команд для репозитория. Также отметили подход к авторизации через <code>X-AUTH-TOKEN</code> в заголовках, саму реализацию токена мы вынесли за рамки проекта и подразумевали, что нам токен отдаст внешний сервис авторизации внутри банковской системы. Из слабых — общая недоделанность аналитики и воронки кандидатов, слабая проработка ролевой модели. Потыкать интерфейсы можно на демо стенде <a href=\"https://mehunt.ru\" rel=\"noopener noreferrer nofollow\">mehunt.ru</a>. Из подарков для топ 10 участников презентовали набор мерча — толстовка\\рюкзак\\сумка на пояс и футболка — но по факту дали всем только сумки на пояс и футболки + грамота и пакет) вроде и мелочи, но это в целом единственный момент который меня смутил в организации. Еще смутило само Сколково, такой огромный город который типа заброшенного, только не заброшенный, просто пустой ТЦ с редкими зеваками, но это к самому хакатону отношения не имеет.</p><p>Пару слов о команде победителей — на мой взгляд заслуженные и единственные участники, кто настолько серьезно подошел к решению задачи и выполнили все в срок с кучей фишек. Ребята брали отпуска с основной работы, много хакатонили и мало спали) + были сработаны в других хакатонах. Так что заслуженное первое место с приличным отрывом.</p><p>Выводы которые я сделал для себя</p><ol><li><p>Лучше готовиться с командой, не просто обсудить, но и тестово что‑то поделать.</p></li><li><p>Как капитан команды больше уделять времени пояснениям и составлению ТЗ для менее опытных коллег, чтобы они не простаивали</p></li><li><p>Постоянная связь и поддержка внутри команды очень важны</p></li><li><p>Иметь заготовки для типичных и операций, а также базовые докер контейнеры — очень полезно</p></li><li><p>Больше внимания уделять самой аналитике и консультациям со специалистами по теме хакатона, это сильно помогает.</p></li><li><p>Если серьезно рассчитываешь на победу, нужно брать отгул на основной работе в таких хакатонах, иначе по времени просто не вывезешь.</p></li></ol><p>Буду рад ответить на ваши вопросы и комментарии) а также найти желающих принимать совместное участие в хакатонах в любой роли, ну или я готов присоединиться к вам ) welcome in tg @dstrokov</p><p><strong>P. S.</strong> Пост про релиз веб‑компонента wc‑wysiwyg будет совсем скоро, публичный черновик поста уже доступен на webislife.ru, а сам релиз в гите уже 1.0.4:) </p><p></p>', 3, '2023-06-12 21:54:49', 296554, 76, '/ru/articles/739350/', 'Сегодня, я хочу поделиться опытом и рассказать про участие в хакатоне от совкомбанка. Подробнее про хакатон можно почитать тут. Для лл я вкратце опишу задачу — командой до 5 человек сделать внутренний сервис для подбора персонала и ведения HR деятельности.'),
(140, 'Свой NPM репозитарий Verdaccio + GitLab + Docker', '<h2>С чего все началось</h2><p>Требовалось кешировать используемые в разных проектах NPM пакеты (+ хранить свои) на отдельном сервере. </p><p>Было решено делать это с помощью репозитария Verdaccio (по нему есть достаточно хорошая офф. дока), крутиться это все должно в Docker, а разворачиваться GitLab CI/CD.</p><p>Т.к. реализация данной схемы заняла у меня некоторое время (Хотелось бы и по меньше), решил написать короткий туториал по этой теме, с описание нюансов, которые для меня казались не очевидными.</p><h2>Цель</h2><ul><li><p>Бесперебойная работа разработчиков над приложениями. Вне зависимости от внешних обстоятельств.</p></li><li><p>Сборка проектов по CI/CD должна происходить с использование локального NPM репозитария</p></li></ul><p>И так приступим.</p><h2>Что нам понадобится</h2><ul><li><p>Сервер на котором будет крутиться наш Verdaccio (Ubuntu, Docker, Docker-compose), он же целевой сервер</p></li><li><p>Сервер с GitLab (В нашем случае отдельный, там хранится собранный образ Verdaccio с нашими Конфигами)</p></li></ul><p>Описание Установки Docker + Docker-compose опущу намеренно, ибо описание данного процесса великое множество, в том числе и на Хабре.</p><h2>Далее пошагово </h2><p><strong><u>Шаг первый</u></strong></p><p>Создаем проект Verdaccio, создаем структуру и файлы.</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/4f2/3ed/412/4f23ed4122fce75ed4e95b77f18b383a.png\" alt=\"Структура проект\" title=\"Структура проект\" width=\"260\" height=\"129\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/4f2/3ed/412/4f23ed4122fce75ed4e95b77f18b383a.png\"><div><figcaption>Структура проект</figcaption></figure><p><strong>.gitlab-ci.yml</strong> - конфигурация pipeline для Build и Deploy нашего образа Docker Verdaccio на целевой сервер.</p><p><strong>Verdaccio/config.yaml</strong> - свой конфиг файл, со следующим содержанием</p><pre><code class=\"yaml\">storage: /verdaccio/storage/data # Где хранинится КЕШ пакетов и собственные пакеты\nplugins: /verdaccio/plugins # Где хранинятся Плагины к Verdaccio, у нас не используются\nweb:\n  title: Verdaccio\nauth:\n  htpasswd:\n    file: /verdaccio/storage/htpasswd # Тут хранятся логины и пароли(в кодировке) все пользователей\n    max_users: 100\nuplinks:\n  npmjs:\n    url: https://registry.npmjs.org/\n    cache: true\npackages:\n  \"@*/*\":\n    access: $all\n    publish: $authenticated\n    unpublish: $authenticated\n    proxy: npmjs\n  \"**\":\n    access: $all\n    publish: $authenticated\n    unpublish: $authenticated\n    proxy: npmjs\nserver:\n  keepAliveTimeout: 60\nmiddlewares:\n  audit:\n    enabled: true\nlog: { type: stdout, format: pretty, level: http }\n</code></pre><p><strong>Verdaccio/docker-compose.yml</strong> - файл для развертывания в docker через docker-compose</p><pre><code class=\"yaml\">version: \"3.7\"\nservices:\n  verdaccio:\n    container_name: \'verdaccio\'\n    image: yourGitLabServer.com:5050/verdaccio:vedaccio # подготовленный Image\n    restart: unless-stopped\n    networks:\n      - node-network\n    environment:\n      - VERDACCIO_PORT=4873 #порт на котором работает Verdaccio можно менять\n    ports:\n      - 4873:4873 #порт Verdaccio внутренний : порт по которому он будет доступен из вне\n    volumes:\n      - /var/verdaccio/storage:/verdaccio/storage \nnetworks:\n  node-network:\n    driver: bridge\n</code></pre><p>Тут /var/verdaccio/storage - Нужно предварительно создать каталог на целевом сервере и назначить на него владельца и группу, в противном случае будет ошибка прав.</p><pre><code>chown -R 10001:65533 /var/verdaccio/storage</code></pre><p><strong>Verdaccio/Dockerfile </strong>- Докер файл по которому Билдим свой образ Verdaccio</p><p>Тут все просто, офф образ Verdaccio + копируем свой конфиг</p><pre><code>FROM verdaccio/verdaccio:5.6.0\nADD config.yaml /verdaccio/conf/config.yaml</code></pre><p><strong><u>Шаг второй</u></strong></p><p>Развертывание проекта на целевом сервере</p><p>Далее схематично опишу, весь процесс:</p><ol><li><p>Заливаем наш проект на GitLab</p></li><li><p>Запускаем сборку образа (Build) </p></li><li><p>Деплоим наш образ Verdaccio на целевой сервер</p></li><li><p>В каталоге <strong>/var/verdaccio/ </strong>выполняем команду </p></li></ol><pre><code>docker-compose up -d</code></pre><p>Переходим в браузере по пути <strong>http://IP Вашего целевого сервера:4873/</strong></p><p>И наблюдаем интерфейс</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/31e/bdd/68e/31ebdd68e11ee754d5d1c6906ff7a902.png\" width=\"813\" height=\"485\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/31e/bdd/68e/31ebdd68e11ee754d5d1c6906ff7a902.png\"></figure><p><strong>Шаг третий</strong></p><p>Настраиваем наш проект, что бы он работал через наш Verdaccio, для этого в проекте в терминале выполняем команду:</p><pre><code>npm set registry http://10.0.1.149:7777/ --location project</code></pre><p>Или</p><p>Создать/редактировать в проекте файл <strong>.npmrc </strong>(Расположение рядом с файлом <em>package.json</em> и где формируется папка <em>node_modules</em>)в нем должна быть строка: <strong>registry=http://IP Вашего целевого сервера:4873/</strong></p><p>Далее чистим Кеш NPM на локальном компе, что бы пакеты подгрузились в Verdaccio, для этого выполняем команду </p><pre><code>npm cache clean --force</code></pre><p>Удаляем папку <strong>node_modules если </strong>она имеется, и выполняем <strong>npm install</strong></p><p>После загрузки пакетов, они так же будут загружены в кеш Verdaccio по пути: <strong>целевой сервер  - var/verdaccio/storage/data</strong></p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/9da/fdf/3cd/9dafdf3cd1bd1549e2bd518fd8938ec5.png\" width=\"668\" height=\"662\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/9da/fdf/3cd/9dafdf3cd1bd1549e2bd518fd8938ec5.png\"></figure><h2>Выводы</h2><p>При такой организации, все проекты которые разрабатываются на локальных компах разработчиков, собираются и деплоятсяпо CI/CD будут работать через наш Verdaccio, что поможет нам избежать проблем с возможной временной недоступностью пакетов.</p><p>П.С.</p><p>Для развертывания всего выше описанного использовались материалы:</p><p><a href=\"https://verdaccio.org/ru-RU/docs/what-is-verdaccio\" rel=\"noopener noreferrer nofollow\">Официальной документации Verdaccio </a></p><p>Так же статей с Хабры, за что огромное им спасибо:</p><p><a href=\"https://habr.com/ru/articles/427069/\" rel=\"noopener noreferrer nofollow\">https://habr.com/ru/articles/427069/</a></p><p><a href=\"https://habr.com/ru/articles/453614/\" rel=\"noopener noreferrer nofollow\">https://habr.com/ru/articles/453614/</a></p><p><a href=\"https://habr.com/ru/articles/657881/\" rel=\"noopener noreferrer nofollow\">https://habr.com/ru/articles/657881/</a></p><p>К сожалению в вышеуказанных статьях не нашел исчерпывающего ответа на свои вопросы, по этому написана текущая статья.</p><p></p>', 1, '2023-06-12 21:54:49', 878112, 76, '/ru/articles/739298/', 'Требовалось кешировать используемые в разных проектах NPM пакеты (+ хранить свои пакеты) на отдельном сервере. Было решено делать это с помощью репозитария Verdaccio (по нему есть достаточно хорошая офф. дока), крутится это все должно в Docker, а разворачиваться на отдельном сервере через GitLab CI/CD.Т.к. реализация данной схемы заняла у меня некоторое время (Хотелось бы и по меньше), решил написать короткий туториал по этой теме, с описание нюансов, которые для меня казались не очевидными.'),
(141, '[Разбор резюме] Фронтенд-разработчик: как не утопить рекрутера в технологиях и не потерять фокус', '<figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/d9d/fb2/97a/d9dfb297a188f69e85f7d74a7740f00f.png\" width=\"768\" height=\"461\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d9d/fb2/97a/d9dfb297a188f69e85f7d74a7740f00f.png\"></figure><p>Это вторая статья из нашей рубрики «Разбор резюме». В первой <a href=\"https://habr.com/ru/companies/getmatch/articles/737810/\">мы разбирали резюме бэкендера</a>, а здесь нам прислал свое CV фронтендер. Давайте посмотрим и разберем, что в нем можно улучшить: почему это резюме вообще лучше бы превратить в несколько, стоит ли включать в список навыков «опытный пользователь ПК» и как определяется уровень владения той или иной технологией.</p><p>Резюме достаточно длинное, так что разбирать мы его будем поэтапно.</p><h4>Опыт работы</h4><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/bc3/0a7/888/bc30a788872c94124d5f91ee4ba20b2d.png\" alt=\"\" title=\"\" width=\"1299\" height=\"1442\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/bc3/0a7/888/bc30a788872c94124d5f91ee4ba20b2d.png\"></figure><p>Здесь сразу стоит сказать, что описания того, чем именно вы занимаетесь, важно делать намного более <strong>четкими и конкретными</strong>. Что такое «веб-приложение для внутреннего использования»? «Небольшая команда разработчиков» — это какая? «Лидер» — это техлид или полноценный менеджер, который занимается людьми в команде? После описания остается слишком много вопросов.</p><p>Здорово будет указать, не что делала команда в целом, а что делали <strong>конкретно вы</strong>. Какие задачи решали, над какими фичами работали, что конкретно удалось сделать и чего добиться. Здесь достижения точно должны быть, потому что специалист трудился 4 года над одним приложением, и за это время что-нибудь значимое должно было получиться. Очень круто будет это упомянуть, иначе возникает вопрос: а что именно человек делал все это время?</p><p>Еще хорошо бы <strong>группировать описание по смыслу</strong>. Если упоминается лидовая позиция — указывать про декомпозицию и оценку. А технологии писать рядом с технологическими задачами, чтобы все воспринималось более цельно и последовательно.</p><p>Если это не закрытая информация, можно указать <strong>масштабы приложения</strong>: высоконагруженное оно, рядовое или вообще MVP с минимумом пользователей. Это лучше продемонстрирует работодателю конкретный опыт.</p><p>Также тут пока создается некоторая путаница. Многие технологии, упомянутые в опыте, связаны скорее с бэкендом, чем с фронтендом. Нужно как-то кратко пояснить их связь с фронтендом, потому что рекрутеру, которые увидит это резюме, будет не совсем понятно, что происходит, чем человек занимался и в чем у него реально есть опыт.</p><blockquote><p>Может показаться, что место для описаний ограничено, и это все — лишние подробности. Но на самом деле без хотя бы кратких конкретных описаний этот текст вообще не имеет смысла: он не демонстрирует, что именно человек делал, в чем он разбирается и в каких задачах у него есть опыт. А без этого рекрутер не сможет еще на этапе резюме понять, подходит вообще человек для проекта или нет.</p></blockquote><h4>Ключевые навыки</h4><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/c97/937/d6a/c97937d6abd4ebeda8dc071ae3c772b0.png\" alt=\"\" title=\"\" width=\"1110\" height=\"292\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/c97/937/d6a/c97937d6abd4ebeda8dc071ae3c772b0.png\"></figure><p>Этот набор вообще смотрится достаточно хаотично. По идее, он нужен для двух вещей:</p><ul><li><p>Чтобы резюме можно было быстро найти по ключевым словам через поиск.</p></li><li><p>Чтобы при просмотре конкретно этого резюме стало понятно, что важного и существенного человек умеет.</p></li></ul><p>Из-за этого требования к данному списку достаточно простые:</p><ul><li><p>Не больше 5–7 самых важных навыков.</p></li><li><p>То, чем человек реально владеет, и что подтверждается его опытом.</p></li><li><p>То, что актуально для конкретной позиции, на которую человек претендует.</p></li></ul><p>Здесь есть проблемы сразу по всем пунктам:</p><ul><li><p>Навыков слишком много, и сформировать по ним четкое впечатление сложно. Это не «ключевые», а просто навыки — а лучше указывать именно самые важные. Плюс есть некоторое дублирование вроде «HTML» и «HTML5», которое замусоривает четкий и короткий список.</p></li><li><p>Есть отдельные навыки вроде С++, которые никак не подтверждены опытом. Если резюме найдут по ключевому запросу «С++», будет непонятно, почему оно вообще появилось в поиске, при чем тут Frontend-разработчик и где релевантный опыт.</p></li><li><p>Навыки Python, C#, C++, базы данных и другие слабо относятся к фронтенд-разработчику. Кажется, что здесь перечислено вообще все, что человек хоть немного умеет в IT, но к конкретной позиции, на которую человек претендует, это не относится.</p></li></ul><blockquote><p>Навык «уверенный пользователь ПК» вообще нужен не для IT-специалистов, а для других профессий. Здесь он смотрится слишком неуместно.</p></blockquote><h4>Обо мне</h4><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/6d7/201/d48/6d7201d480d54f8825e1043cb5a2d4d4.png\" alt=\"\" title=\"\" width=\"876\" height=\"887\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/6d7/201/d48/6d7201d480d54f8825e1043cb5a2d4d4.png\"></figure><p>Этот блок начинается с перечисления большого числа технологий. С ним есть несколько проблем:</p><ul><li><p>Технологии дублируют слова из опыта работы и ключевых навыков.</p></li><li><p>В самом начале стоят HTML и CSS, хотя разумнее было бы поставить более серьезные технологии, начиная с JS и переходя к фреймворкам.</p></li><li><p>Слова «продвинутый», «средний» и «базовый» в контексте уровня владения совершенно непонятны. Что они значат? Какой это опыт? Какие конкретно задачи человек может решать?</p></li><li><p>Многие навыки «базового» уровня вообще не относятся к фронтенду, и не совсем понятно, зачем они здесь упомянуты. Дальше есть информация о готовности изучить тот или иной язык, но работодателю это часто не очень интересно. Ему важны все-таки конкретные практические навыки.</p></li></ul><p>Дальше идет уже просто текстовое описание:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/43d/9e6/110/43d9e61103e1a9c13243c8fa28abde21.png\" alt=\"\" title=\"\" width=\"1600\" height=\"1103\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/43d/9e6/110/43d9e61103e1a9c13243c8fa28abde21.png\"></figure><p>Здесь первая проблема в том, что оно опять же<strong> дублирует то, что прописано в опыте</strong>. И при этом снова без достаточной конкретики, то есть числа человек в команде, сложности приложения, описания того, что именно человек на проекте делал, какие задачи решал, чего конкретно достиг.</p><p>Вторая проблема — в отсутствии <strong>фокуса</strong>. То есть это резюме на фронтенд-разработчика, но задачи и технологии прописаны все подряд, и многие — именно для бэкенда. В итоге непонятно, человек хочет заниматься фронтендом, бэкендом или всем сразу? К чему у него есть интерес? В чем он действительно разбирается?</p><h4>Что с этим всем можно сделать</h4><ul><li><p>Главное, на что обращает внимание рекрутер при просмотре резюме — именно раздел с опытом работы. Лучше вынести туда все ключевые моменты, описать конкретные задачи и тот опыт, который человек получил в процессе работы. HR может просто не долистать до описания «О себе», если раздел с опытом покажется ему слабым и непонятным.</p></li><li><p>Если нет четкой определенности, чем именно хочется заниматься — лучше завести несколько резюме. Одно — на фронтендера, второе — на бэкендера, третье — на фулстакера. И в каждом указать конкретный, релевантный опыт, определенные ключевые навыки и четкое описание. А не пытаться сложить все в одну кучу.</p></li><li><p>В ключевых навыках лучше оставить то, чем человек действительно владеет хорошо и глубоко. Не нужно прописывать, что вы готовы изучать — если понадобится, конечно, изучите. Но работодатель ищет того, кто уже это знает.</p></li></ul><blockquote><p>Обязательно подписывайтесь на наш <a href=\"https://t.me/g_jobbot?start=u_habr270\">телеграм-бот с вакансиями getmatch</a>. Там мы присылаем персонализированные подборки вакансий, без спама. Как раз чтобы вам было куда отправить свое составленное по всем правилам резюме =)</p></blockquote><h2>Что ещё почитать</h2><ul><li><p><a href=\"https://habr.com/ru/company/gms/blog/527916/\"><u>Собеседование для QA: резюме, вопросы на интервью, переговоры о зарплате + полезные ссылки</u></a></p></li><li><p><a href=\"https://habr.com/ru/company/gms/blog/520570/\"><u>Как выглядят интервью дизайнеров и UX-специалистов в топовых ИТ-компаниях</u></a></p></li><li><p><a href=\"https://habr.com/ru/company/gms/blog/516718/\"><u>Netflix за 45 минут: Краткий рассказ о system design-интервью, чего ожидать + подборка полезных ссылок</u></a></p></li><li><p><a href=\"https://habr.com/ru/company/getmatch/blog/685200/\"><u>Главное: что нужно знать, чтобы найти работу, пройти собеседование и выбрать оффер</u></a></p></li><li><p><a href=\"https://habr.com/ru/companies/getmatch/articles/732332/\"><u>Как торговаться на собеседовании, чтобы получить максимум и не потерять оффер</u></a></p></li></ul><p></p>', 1, '2023-06-12 21:54:50', 601366, 79, '/ru/companies/getmatch/articles/739218/', 'Это вторая статья из нашей рубрики «Разбор резюме». В первой мы разбирали резюме бэкендера, а здесь нам прислал свое CV фронтендер. Давайте посмотрим и разберем, что в нем можно улучшить: почему это резюме вообще лучше бы превратить в несколько, стоит ли включать в список навыков «опытный пользователь ПК» и как определяется уровень владения той или иной технологией.Резюме достаточно длинное, так что разбирать мы его будем поэтапно.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(142, 'Миграция на Vue 2.7', '<p>Здравствуйте! В данной статье я бы хотел поделиться своим опытом обновления проекта, написанного на Vue 2.6. Помимо обновления самого vue и компонентов, я на примерах покажу как мне удалось обновить другие зависимости проекта и адаптировать их для работы с <strong>Composition API</strong>, среди них: <strong>Vuex</strong>, <strong>BootstrapVue</strong>, <strong>AgGrid</strong> и <strong>VueFormGenerator.</strong></p><h2>История Composition API во Vue</h2><h3>React</h3><p>Как ни странно, но данному нововведению мы обязаны React-у, а точнее представленной в 2018 году концепции react-хуков.</p><figure class=\"bordered full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/25a/575/73f/25a57573facfccf3b28ece92a8f0073b.png\" alt=\"Создатель vue, Эван Ю о реакт хуках\" title=\"Создатель vue, Эван Ю о реакт хуках\" width=\"610\" height=\"256\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/25a/575/73f/25a57573facfccf3b28ece92a8f0073b.png\"><div><figcaption>Создатель vue, Эван Ю о реакт хуках</figcaption></figure><p>Я никогда не трогал React, лишь бегло прочитал его документацию, поэтому не могу объективно высказаться об этой возможности библиотеки, однако почти все React-разработчики заявляют что хуки позволяют в значительной мере упростить разработку и создавать переиспользуемый код; более того функциональные компоненты с использованием хуков это уже стандарт разработки на React.</p><h3>Vue 3</h3><p>С выходом vue 3-ей версии, разработчикам стал доступен новый подход к созданию компонентов, схожий с функциональными компонентами реакта - <strong>Composition API</strong>: метод <em>setup</em> и &lt;<em>script setup&gt; </em>для использования в однофайловых компонентах.</p><p>Сравнивая composition API с options API, в качестве его преимуществ обычно перечисляют:</p><ul><li><p>простота и лаконичность </p></li><li><p>возможность создавать переиспользуемые куски логики (вместо миксинов)</p></li><li><p>улучшенная поддержка TypeScrit</p></li><li><p>б<strong><em>о</em></strong>льшая производительность (по заявлениям создателей)</p></li></ul><p>Стоит также учесть и критические оценки такого подхода:</p><details class=\"spoiler\"><summary>Источники</summary><div class=\"spoiler__content\"><p><a href=\"https://tproger.ru/video/composition-api-in-vue/\" rel=\"noopener noreferrer nofollow\">Composition API во Vue 3 — плюсы, минусы и опыт использования</a></p><p><a href=\"https://tproger.ru/articles/obzor-vue-composition-api-realnost-okazalas-slozhnee/\" rel=\"noopener noreferrer nofollow\">Обзор Vue Composition API. Реальность оказалась сложнее</a></p></details><p>В целом можно заметить что все недостатки или опасения по поводу использования composition API упираются в опыт и знания разработчика: composition API предоставляет гораздо больше инструментов для работы с реактивностью, что естественно требует некоторых усилий для понимания и осторожности, особенно если разработчик привык к <strong>options</strong> или <strong>class</strong> <strong>API</strong>.</p><h3>Vue 2.7</h3><p>В июле 2022 года вышел релиз vue 2.7, в котором composition API было добавлено из коробки (ранее для этого требовалась библиотека <a href=\"https://www.npmjs.com/package/@vue/composition-api\" rel=\"noopener noreferrer nofollow\"><em>@vue/composition-api</em></a>), и добавлена возможность использовать <em>&lt;script setup&gt;</em>.</p><p>И несмотря на то, что vue 2.6 уже официально не поддерживается, а поддержка vue 2.7 прекратится в декабре 2023 года, библиотеки на vue 2, судя по данным с <em>npm</em> до сих пор очень часто скачиваются и используются.</p><figure class=\"bordered full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/d00/2c7/040/d002c7040c53c784c0572b15c9e940d6.png\" alt=\"vue-class-component\" title=\"vue-class-component\" width=\"1393\" height=\"559\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d00/2c7/040/d002c7040c53c784c0572b15c9e940d6.png\"><div><figcaption><a href=\"https://www.npmjs.com/package/vue-class-component\" rel=\"noopener noreferrer nofollow\">vue-class-component</a></figcaption></figure><figure class=\"bordered full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/5af/f73/f4e/5aff73f4e4eaaa8bb3119d036a31ed0a.png\" alt=\"bootstrap-vue\" title=\"bootstrap-vue\" width=\"1266\" height=\"549\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/5af/f73/f4e/5aff73f4e4eaaa8bb3119d036a31ed0a.png\"><div><figcaption><a href=\"https://www.npmjs.com/package/bootstrap-vue\" rel=\"noopener noreferrer nofollow\">bootstrap-vue</a></figcaption></figure><p>Из этого следует что миграция на vue 3 прошла не совсем безболезненно, а некоторые библиотеки (например <a href=\"https://www.npmjs.com/package/bootstrap-vue\" rel=\"noopener noreferrer nofollow\">bootstrap-vue</a>) до сих пор <strong>не</strong> портированы на vue 3. Также стоит учесть что vue 3 использует систему реактивности основанную на <em>Proxy</em>, которые <strong>не</strong> поддерживаются старыми браузерами.</p><p>Поэтому vue 2.7, на мой взгляд, это относительно безболезненный способ использовать основную фичу vue 3 - Composition API, в своих приложениях, не переписывая при этом абсолютно весь код и не переходя на другие библиотеки.</p><h2>Мотивация</h2><p>В нашей компании не раз поднимался вопрос о переходе на vue 3, однако основная библиотека для наших интерфейсов - bootstrap-vue всё ещё стабильно существует только для vue 2-ой версии.</p><h3>BootstrapVue: @vue/compat</h3><p>С версии <a href=\"https://bootstrap-vue.org/vue3\" rel=\"noopener noreferrer nofollow\">2.23.0</a> в bootstrap-vue доступен так называемый билд миграции. Я попробовал запустить пример проекта на bootstrap-vue и @vue/compat от самих разработчиков, и получил целый список предупреждений от vue.</p><figure class=\"bordered full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/0b7/d19/34c/0b7d1934c4d76c856098642aa5e76254.png\" alt=\"\" title=\"\" width=\"1372\" height=\"429\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/0b7/d19/34c/0b7d1934c4d76c856098642aa5e76254.png\"></figure><p>Это одна из причин почему я не стал использовать bootstrap-vue в <em>compat</em> режиме, другая же причина: <a href=\"https://v3-migration.vuejs.org/migration-build.html\" rel=\"noopener noreferrer nofollow\"><strong><em>migration build</em></strong></a><strong><em> </em></strong>нужен всё же для миграции проекта, то есть постепенной замены его модулей и переписывания на vue 3, но не для разработки новых продуктов на нём.</p><p>Спустя пол года полноценного релиза bootstrap-vue для vue 3 так и нет, а разрабатывать и поддерживать проекты надо.</p><h3>Class API</h3><p>Для поддержки typescript во vue 2 команда разработчиков vue создала библиотеку <a href=\"https://class-component.vuejs.org/\" rel=\"noopener noreferrer nofollow\"><em>vue-class-component</em></a>.<em> </em>А с использованием библиотеки <a href=\"https://www.npmjs.com/package/vue-property-decorator?activeTab=readme\" rel=\"noopener noreferrer nofollow\"><em>vue-property-decorator</em></a>, можно в декораторном стиле объявлять пропсы, рефы и эмиты и типизировать их.</p><p>Однако у Class API есть ряд существенных недостатков, о которых <a href=\"https://github.com/vuejs/rfcs/pull/17#issuecomment-494242121\" rel=\"noopener noreferrer nofollow\">писал сам Эван Ю</a>:</p><ol><li><p>Он не достигает своей основной цели (лучшая поддержка TypeScript) </p></li><li><p>Усложняет внутреннюю реализацию </p></li><li><p>Не приносит улучшений в логическую композицию</p></li></ol><p>От себя ещё добавлю: компоненты - это <strong>не</strong> классы. Это довольно субъективно, но мне кажется что мы обманываем себя когда называем компонент классом, потому что большинство правил и паттерннов ООП просто не получится применить к ним.</p><h4>Типизация</h4><p>Также для того чтобы добиться типизации приходится писать <em>очень </em>много лишнего кода, вот пример хранилища с использованием <a href=\"https://github.com/ktsn/vuex-smart-module\" rel=\"noopener noreferrer nofollow\">VuexSmartModule</a>.</p><details class=\"spoiler\"><summary>toasts_store.ts</summary><div class=\"spoiler__content\"><pre><code class=\"typescript\">// ...\nclass ToastState {\n  count = 0\n  toasts: Toast[] = []\n}\n\nclass ToastGetters extends Getters&lt;ToastState&gt; {\n  get toasts() {\n    return this.state.toasts\n  }\n  get count() {\n    return this.state.count\n  }\n}\n\nclass ToastMutations extends Mutations&lt;ToastState&gt; {\n  pushToast(toast: Toast) {\n    this.state.toasts.push(toast)\n  }\n\n  spliceToast(id: number) {\n    this.state.toasts = this.state.toasts.filter(p =&gt; p.id !== id)\n  }\n\n  incCount() {\n    this.state.count++\n  }\n}\n\nclass ToastActions extends Actions&lt;\n  ToastState,\n  ToastGetters,\n  ToastMutations,\n  ToastActions\n&gt; {\n  async pushToast(toast: Toast) {\n    toast.id = this.state.count\n    this.mutations.incCount()\n    this.mutations.pushToast(toast)\n  }\n  async delToast(id: number) {\n    this.mutations.spliceToast(id)\n  }\n}\n\nexport const toast = new Module({\n  state: ToastState,\n  getters: ToastGetters,\n  mutations: ToastMutations,\n  actions: ToastActions\n})\n\nexport const toastMapper = createMapper(toast)</code></pre><p></p></details><p>Страшновато не правда ли? Чуть дальше покажу как это выглядит на <a href=\"https://pinia.vuejs.org/\" rel=\"noopener noreferrer nofollow\"><strong>pinia</strong></a>.</p><h4>Сложность реализации</h4><p>Во <em>vue-class-component</em> есть ещё одна ловушка, <strong>this </strong>на этапе создания класса это <strong>не</strong> тот же <strong>this</strong>, что и в компоненте, всё потому что наш класс сначала из класса преобразуется в <strong>объект</strong> понятный для vue и только после этого создаётся компонент, можете проверить это следующим образом:</p><pre><code class=\"typescript\">&lt;script lang=\"ts\"&gt;\nimport { Vue, Component } from \'vue-property-decorator\'\n\n@Component({})\nexport default class Test extends Vue {\n  self: Test | null = null\n  constructor() {\n    super()\n    this.self = this\n    console.log(\'constructor:\', this.self == this)\n  }\n  \n  created() {\n    console.log(\'created:\', this == this.self)\n  }\n}\n&lt;/script&gt;</code></pre><p>Получите следующую картину:<br><code>constructor: true</code> <br><code>created: false</code></p><p>Это относится и к функциям в объектах, объявленным в классе, вы просто не имеете доступ к актуальному состоянию объекта (this в данном случае всё ещё тот объект полученный из класса). </p><pre><code class=\"typescript\">// ...\n  obj = {\n    f: () =&gt; {\n      // this != контекст компонента\n    }\n  }\n// ...</code></pre><p>Поэтому в таких случаях приходилось создавать отдельный метод в классе и передавать уже его, даже если требовалось просто изменить какое-то одно поле в объекте, или что-то сэмитить.</p><pre><code class=\"typescript\">// ...\n  private schema: FormSchema&lt;SelectData&gt; = {\n    fields: [\n      {\n        // ...\n        onChanged: this.onSelected\n      },\n      {\n        // ...\n        onChanged: this.onSelected\n      }\n    ]\n  }\n// ...\n  private async onSelected() {\n    // Какая-то логика\n  }\n// ...</code></pre><p>Однако до vue 2.7 внутри объектов можно было обращаться к пропсам и сторам (если смаппить их в <em>methods</em>).</p><pre><code class=\"typescript\">&lt;script lang=\"ts\"&gt;\nimport { Vue, Component, Prop } from \'vue-property-decorator\'\n\nconst Mappers = Vue.extend({\n  methods: {\n    ...mobileWidthMapper.mapGetters([\'isMobile\'])\n  }\n})\n\n@Component({})\nexport default class Test extends Mappers {\n  @Prop({ required: true }) a!: number\n  @Prop({ required: true }) b!: string\n  \n  obj = {\n    a: this.a,\n    b: this.b\n    c: this.isMobile()\n  }\n\n  created() {\n    console.log(this.obj) // получим корректные значения\n  }\n}\n&lt;/script&gt;</code></pre><h4>Логическая композиция</h4><p>До появления composition API единственным способом создать переиспользуемую логику компонентов были миксины, у них есть существенные недостатки:</p><ul><li><p>Пересечение пространств имён</p></li><li><p>Сложность типизации</p></li><li><p>Непрозрачность требований (например если миксин требует наличия определённых пропсов или методов у компонента)</p></li><li><p>Сложность понимания и отладки: когда вы обращаетесь ко всем методам и объектам через <strong>this</strong>, может быть затруднительно понять откуда он взялся: из самого объекта, из стора или из какого-то миксина.</p></li></ul><p>Только в одном случае миксины могут дать некоторое преимущество: если требуется создать переиспользуемые пропсы/эмиты, вот тут решение с composable будет слегка сложнее,  далее я покажу эту проблему на примере библиотеки <a href=\"https://www.npmjs.com/package/vue-form-generator\" rel=\"noopener noreferrer nofollow\"><em>vue-form-generator</em></a><em>.</em></p><h2>Шаги для миграции</h2><h3>Обновление vue</h3><p>В первую очередь я обновил сам vue до версии 2.7, и сразу у меня перестала работать часть компонентов, в которых использовались пропсы при объявлении внутренних объектов, как в примере выше. Я решил сразу переписать такие компоненты на composition API, но можно и попробовать забирать нужные пропсы в хуках жизненного цикла.</p><h3>Vuex / pinia</h3><p>На очереди хранилище, в целом тут не возникло особых сложностей, я подключил pinia и постепенно переписал все модули vuex. Если вы тоже использовали VuexSmartModule и не хотите переписывать все компоненты, то pinia сторы тоже можно смаппить следующим образом:</p><pre><code class=\"typescript\">const Mappers = Vue.extend({\n  computed: {\n    // Либо mapState/mapActions из pinia\n    ...mapStores(useUserStore /*, и другие*/)\n  }\n})\n\n@Component\nexport default class SomeComponent extends Mappers {\n// ...\n}</code></pre><p>Для сравнения покажу вышеописанный стор для тостов, теперь уже на pinia.</p><details class=\"spoiler\"><summary>toasts_store.ts</summary><div class=\"spoiler__content\"><pre><code class=\"typescript\">...\nexport const useToastStore = defineStore(\'toast\', () =&gt; {\n  const count = ref(0),\n    toasts = ref&lt;ToastInner[]&gt;([])\n\n  function pushToast(toast: Toast) {\n    toasts.value.push({ ...toast, id: count.value++ })\n  }\n  \n  function delToast(id: number) {\n    toasts.value = toasts.value.filter((p) =&gt; p.id !== id)\n  }\n\n  return {\n    count,\n    toasts,\n    pushToast,\n    delToast\n  }\n})\n</code></pre><p></p></details><p>Единственной проблемой стала необходимость доступа к сторам в роутере, а точнее в нашем проекте для запуска приложения использовался следующий кусок кода:</p><pre><code class=\"typescript\">store.dispatch(\'user/fetchCurrentUser\').then(() =&gt; {\n  new Vue({\n    router,\n    store,\n    // прочие плагины\n    render: h =&gt; h(App)\n  }).$mount(\'#app\')\n})</code></pre><p>То есть до начала работы приложения требовалось получить данные пользователя для использования их в роутере.</p><p>Возможно правильнее было бы вынести загрузку пользователя в middleware роутера, но оказалось что у нас много где данные хранилищ используются ещё и в <strong>redirect </strong>хуках роутера, которые <strong>не</strong> могут быть асинхронными, соответственно там загружать данные не получится.</p><p>Я выкрутился из этого следующим образом: до создания основного инстанса Vue с корневым компонентом приложения создал пустой инстанс с одной лишь <strong>pinia</strong>.</p><pre><code class=\"typescript\">// Всё это внутри асинхронной функции\n\nconst pinia = createPinia()\n\n// Фиктивный инстанс vue для инициализации хранилища\nconst piniaLoadApp = new Vue({ pinia })\n\nawait useUserStore().fetchCurrentUser()\n\nnew Vue({\n  pinia,\n  router,\n  i18n,\n  render: (h) =&gt; h(App)\n}).$mount(\'#app\')\n\npiniaLoadApp.$destroy()</code></pre><p>Соответственно после этого мы получим доступ ко всем сторам.</p><h3>BootstrapVue</h3><p>В целом работа с данной библиотекой не изменилась, а чтобы получить доступ к объектам $bvToast и $bvModal в <em>&lt;script setup&gt;</em> я создал простые composable</p><pre><code class=\"typescript\">// ...\nexport function useBVModal() {\n  return getCurrentInstance()?.proxy.$bvModal\n}\n\nexport function useBVToast() {\n  return getCurrentInstance()?.proxy.$bvToast\n}</code></pre><h3>AgGrid</h3><p><a href=\"https://www.ag-grid.com/vue-data-grid/\" rel=\"noopener noreferrer nofollow\">AgGrid</a> это очень мощная и одна из самых популярных библиотек для работы с таблицами, в наших проектах она широко используется. После её обновления я столкнулся с некоторыми deprecated ворнингами. Однако, если следовать тому что в них написано, то можно всё корректно обновить без особых изменений, в основном это просто другие названия для полей в объектах настроек.</p><p>Но я обнаружил одну проблему, скорее всего баг самой библиотеки (на момент написания статьи она все ещё не устранена, но issue я уже отправил). Если вы в column-defs объявляете колонку с собственным рендерером (компонентом), например так:</p><pre><code class=\"typescript\">import CustomRenderer from \'.../CustomRenderer.vue\'\n// ...\nconst colDefs: ColDef[] = [\n// ...\n  {\n    // ...\n    cellRenderer: CustomRenderer,\n  }\n// ...\n]</code></pre><p>Скорее всего у вас будет что-то подобное </p><figure class=\"bordered full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/5c5/c81/cea/5c5c81cea0b7221f7b54525a77e25428.png\" width=\"755\" height=\"282\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/5c5/c81/cea/5c5c81cea0b7221f7b54525a77e25428.png\"></figure><p>При этом забавно, но если написать вместо <code>cellRenderer</code> - <code>cellRendererFramework</code>, то вы получите deprecated ворнинг от библиотеки, но всё будет работать.</p><p>Можно было бы попробовать передать в <code>cellRenderer</code> строку вместо компонента, но это тоже не получится, так как в <em>&lt;scirpt setup&gt; </em>импортированные компоненты не регистрируются. Для этого я создал ещё один <em>&lt;script&gt;</em>, где уже в options API зарегистрировал нужный компонент.</p><pre><code class=\"typescript\">&lt;script lang=\"ts\"&gt;\nimport CustomRenderer from \'.../CustomRenderer.vue\'\nimport { defineComponent } from \'vue\'\n\nexport default defineComponent({\n  // eslint-disable-next-line vue/no-unused-components\n  components: { CustomRenderer }\n})\n&lt;/script&gt;\n\n&lt;script setup lang=\"ts\"&gt;\n// ...\nconst colDefs: ColDef[] = [\n// ...\n  {\n    // ...\n    cellRenderer: \'CustomRenderer\',\n  }\n// ...\n]\n&lt;/script&gt;</code></pre><h3>VueFormGenerator</h3><p><a href=\"https://www.npmjs.com/package/vue-form-generator\" rel=\"noopener noreferrer nofollow\">VueFormGenerator</a> - небольшая библиотека для генерации форм с помощью JSON схем, она больше не поддерживается разработчиками и в целом мне не очень нравится, но выкинуть из проектов её пока что не получилось, так как на ней у нас сделаны все формы.</p><p>Для её адаптации к composition API пришлось сделать громоздкий composable на основе их миксина <em>abstractField</em>, а для переиспользования пропсов и эмитов я сделал объекты, передаваемые в <em>defineProps</em> и <em>defineEmits</em>. Кода там много, поэтому просто оставлю <a href=\"https://gist.github.com/vladDotH/6672e6ccde143a97fa49f7976fde2e4b\" rel=\"noopener noreferrer nofollow\">ссылку на gist</a>. </p><p>Простейшее кастомное поле (обычный лэйбл) с использованием данного composable:</p><pre><code class=\"typescript\">&lt;template&gt;\n  &lt;span&gt;\n    {{ value }}\n  &lt;/span&gt;\n&lt;/template&gt;\n\n&lt;script setup lang=\"ts\"&gt;\nimport { useField } from \".../use-field\";\nimport { FieldPropsObject, FieldEmitsObject, FieldExpose } from \".../types\";\n\nconst props = defineProps(FieldPropsObject);\nconst emit = defineEmits(FieldEmitsObject);\n\nconst { clearValidationErrors, validate, value } = useField(\n  props,\n  emit\n);\n\ndefineExpose&lt;FieldExpose&gt;({ validate, clearValidationErrors });\n&lt;/script&gt;</code></pre><h2>Чего мы добились</h2><p>Несмотря на все сложности, которые пришлось преодолеть, на данный момент моё мнение однозначно: оно того стоило, мы получили гораздо более компактный, понятный, более поддерживаемый код, при этом не потеряв типизацию.</p><p>Особым приятным бонусом стала возможность использовать библиотеку <a href=\"https://vueuse.org/\" rel=\"noopener noreferrer nofollow\">VueUse</a>, с помощью которой например получилось заменить стор для размера окна и миксин для отслеживания изменения его размера, всего одной функцией <em>useWindowSize.</em></p><p>Чуть больше про сам процесс миграции можете прочитать в <a href=\"https://habr.com/ru/articles/694960/\" rel=\"noopener noreferrer nofollow\">этой статье</a>.</p><p></p>', 3, '2023-06-12 21:54:50', 591552, 79, '/ru/articles/738032/', 'Здравствуйте! В данной статье я бы хотел поделиться своим опытом обновления проекта, написанного на Vue 2.6. Помимо обновления самого vue и компонентов, я на примерах покажу как мне удалось обновить другие зависимости проекта и адаптировать их для работы с Composition API. '),
(143, 'Детокс для i18n', '<p>NPM библиотека для интернационализации и локализации <code>i18n</code> очень популярна, однако за последние годы она сильно располнела. В ней много возможностей для локализации дат, чисел, установки нужных склонений, поддержки RTL языков, загрузки локалей с сервера и кучи еще чего. На сайте <a href=\"https://www.i18next.com/\" rel=\"noopener noreferrer nofollow\">i18next </a>она называется уже даже \"<em>интернационализационным фреймворком</em>\".</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/986/186/20f/98618620f077bc2f4431284ff4d535a8.png\" width=\"541\" height=\"301\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/986/186/20f/98618620f077bc2f4431284ff4d535a8.png\"></figure><details class=\"spoiler\"><summary>в тему</summary><div class=\"spoiler__content\"><p>Новый авиалайнер. Входит стюардесса в пассажирский салон: </p><p>— Вы находитесь на нашем новом авиалайнере. В носовой части самолета у нас находится кинозал, в хвостовой — зал игровых автоматов, на нижней палубе — бассейн, на верхней — сауна. А теперь, уважаемые господа, пристегните ремни, и мы со всей этой хренотенью попробуем взлететь.</p></details><p>В то же время часто для локализации сайта в большинстве случаев требуются очень простые вещи, занимающие всего пару процентов от всего функционала тяжеловеса i18n.</p><p>В частности лично мне обычно нужны:</p><ol><li><p>Нахождение перевода по составному ключу -<code>t(\"finance.transactions.deposit\")</code></p></li><li><p>Перевод с параметром - <code>t(\"hello-message\", \"Вася\")</code></p></li><li><p>Массивы для списков или параграфов текста</p></li></ol><p>На примере Vue 3 я покажу как можно избавиться от <code>i18next</code> без потери функционала в данном случае, не только облегчая js бандл, но и сокращая код, при этом с сохранением реактивности (смена языка сайта налету).</p><p>Простоту и элегантность нижеописанного рефакторинга обеспечит Vue 3 Composition API, но в целом данная методика должна подойти для любого реактивного фреймворка.</p><h3>Свой i18n</h3><p>Вот чистая реализация вышеуказанного функционала в 30 строчек супротив полутора мегабайт без каких-либо зависимостей - <a href=\"https://stackblitz.com/edit/i18n-detox?file=src%2FApp.vue\" rel=\"noopener noreferrer nofollow\">https://stackblitz.com/edit/i18n-detox?file=src%2FApp.vue</a></p><h3>Проект Vue 3 с i18next</h3><p>Стандартно в проекте с Composition API подключение и использование i18next происходят примерно следующим образом:</p><details class=\"spoiler\"><summary>До</summary><div class=\"spoiler__content\"><pre><code class=\"javascript\">// main.js\nimport { i18n, useI18n } from  \"@/app/composables/i18n\";\nconst { initI18n } =  useI18n();\n\ninitI18n();\napp.use(i18n);\n\n\n// useI18n.js\nimport { ref } from  \"vue\";\nimport { api } from  \"@/services\";\nimport { createI18n } from  \"vue-i18n\";\nconst  locales  = [\n  {\n   code:  \"en\",\n   name:  \"English\",\n   flag:  \"england\",\n  },\n  {\n   code:  \"ru\",\n   name:  \"Pусский\",\n   flag:  \"russian\",\n  },\n];\nconst locale  =  ref();\nexport const i18n  =  createI18n({\n I18nScope:  \"global\",\n globalInjection:  true,\n legacy:  false,\n allowComposition:  true,\n fallbackLocale:  import.meta.env.VITE_I18N_FALLBACK_LOCALE  ||  \"en\",\n formatFallbackMessages:  true,\n});\n\nexport  function  useI18n() {\n  \n function  initI18n() {\n   const  lang  =\n   localStorage.getItem(import.meta.env.VITE_APP_NAME  +  \"_lang\") ??\n        (import.meta.env.VITE_DEFAULT_LOCALE  ||  \"en\");\n   loadLanguage(lang);\n  }\n  \n async  function  loadLanguage(lang) {\n   if (i18n.global.locale  !==  lang) {\n     locale.value  =  locales.find((l) =&gt;  l.code  ===  lang);\n     const  data  =  await  api.utils.downloadLanguage(lang);\n     i18n.global.setLocaleMessage(lang, data[lang]);\n     i18n.global.locale.value  =  lang;\n     localStorage.setItem(import.meta.env.VITE_APP_NAME  +  \"_lang\", lang);\n    }\n  }\n return {\n   i18n,\n   locale,\n   locales,\n   initI18n,\n   loadLanguage,\n  };\n};\n\n\n// Использование в компонентах Composition API\nimport { useI18n } from  \"vue-i18n\";\nconst { t } =  useI18n();\nt(\"finance.transactions.deposit\"),\n\n// Использование в js файлах\nimport { i18n } from  \"@/app/composables/i18n\";\ni18n.global.t(\"finance.transactions.deposit\")</code></pre><p></p></details><p>Всё, что нужно для избавления от <code>i18next</code>, это задать явно объект <code>messages</code> для хранения всех локалей, и добавить в <code>useI18n()</code> реактивную функцию <code>t()</code>, которая как раз и будет обрабатывать составной ключ, параметр и массив.</p><p>После этого можно закомментировать всё использование библиотеки <code>vue-i18n</code></p><details class=\"spoiler\"><summary>После</summary><div class=\"spoiler__content\"><pre><code class=\"javascript\">// main.js\nimport { useI18n } from  \"@/app/composables/i18n\";\nconst { initI18n } =  useI18n();\n\ninitI18n();\n// app.use(i18n);\n\n\n// useI18n.js\nimport { ref } from \"vue\";\nimport { api } from \"@/services\";\n\n// import { createI18n } from \"vue-i18n\";\n\nconst locales = [\n  {\n    code: \"en\",\n    name: \"English\",\n    flag: \"england\",\n  },\n  {\n    code: \"ru\",\n    name: \"Pусский\",\n    flag: \"russian\",\n  },\n];\n// export const i18n = createI18n({\n//   I18nScope: \"global\",\n//   globalInjection: true,\n//   legacy: false,\n//   allowComposition: true,\n//   fallbackLocale: import.meta.env.VITE_I18N_FALLBACK_LOCALE || \"en\",\n//   formatFallbackMessages: true,\n//   // messages: { en: messages }\n// });\n\nconst locale = ref();\nlet messages;\n\n// Делаем доступ для использования в js модулях\nexport const t = useI18n().t;\n\nexport function useI18n() {\n  function initI18n() {\n    messages = [];\n    const lang =\n      localStorage.getItem(import.meta.env.VITE_APP_NAME + \"_lang\") ??\n      (import.meta.env.VITE_APP_DEFAULT_LOCALE || \"en\");\n    loadLanguage(lang);\n  }\n\n  async function loadLanguage(lang) {\n    if (locale.value !== lang) {\n      const localeMessages = await api.utils.downloadLanguage(lang);\n      messages[lang] = localeMessages[lang];\n      locale.value = locales.find((l) =&gt; l.code === lang);\n      // i18n.global.setLocaleMessage(lang, localeMessages[lang]);\n      // i18n.global.locale.value = lang;\n      localStorage.setItem(import.meta.env.VITE_APP_NAME + \"_lang\", lang);\n    }\n  }\n\n  function t(msg, param = null) {\n    let val = msg.split(\".\").reduce((val, part) =&gt; val[part], messages[locale.value.code]);\n    if (param) {\n      val = val.replace(\"{0}\", param);\n    }\n    return val;\n  }\n\n  return {\n    t,\n    // i18n,\n    locale,\n    locales,\n    initI18n,\n    loadLanguage,\n  };\n}\n\n\n// Использование в компонентах Composition API\nimport { useI18n } from  \"@/app/composables/i18n\";\nconst { t } =  useI18n();\nt(\"finance.transactions.deposit\"),\n\n// ИЛИ\n\nimport { t } from  \"@/app/composables/i18n\";\nt(\"finance.transactions.deposit\")\n\n// Использование в js файлах\nimport { t } from  \"@/app/composables/i18n\";\nt(\"finance.transactions.deposit\")\n</code></pre><p></p></details><p>В данном примере перевод для конкретной локали грузится с сервера по запросу, но объект <code>messages</code> можно иметь на клиенте сразу.</p><p>Alias <code>export const t = useI18n().t;</code> позволяет использовать один синтаксис и в компонентах, и в js модулях.</p><h3>I18next расширения</h3><p>У <code>I18next</code> есть расширение для `Vue DevTools` (довольно бесполезное), и есть расширение <a href=\"https://marketplace.visualstudio.com/items?itemName=Lokalise.i18n-ally\" rel=\"noopener noreferrer nofollow\">I18next Ally</a> для MS VS Code (весьма полезное). Так вот <code>I18next Ally</code> работает с новой реализацией если в package.json будет прописан пакет <code>vue-i18n</code> в dependencies (в коде подключать его не надо). Рекомендую. Оба расширения, впрочем, неплохо едят ресурсы, так что пользоваться ими лучше по надобности.</p><h3>Итого</h3><p>Мы закомментировали больше строк, чем добавили, и JavaScript бандл после билда уменьшился на 50 Кб. Функционал остался. Реактивный. </p><p>До (vue 3, vue-router, toaster, vue-i18n)</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f61/46f/13d/f6146f13d051fbca870e67756b1361e7.png\" width=\"635\" height=\"163\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f61/46f/13d/f6146f13d051fbca870e67756b1361e7.png\"></figure><p>После (vue 3, vue-router, toaster)</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e0b/fbc/2ee/e0bfbc2eea62a11117d695bf2a8076e2.png\" width=\"642\" height=\"161\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e0b/fbc/2ee/e0bfbc2eea62a11117d695bf2a8076e2.png\"></figure><p>Спасибо, I18next, и до свидания.</p><p>Другая моя статья по теме - \"<a href=\"https://habr.com/ru/articles/718990/\" rel=\"noopener noreferrer nofollow\">Работа с i18n — автоматизация Google Translate и другие полезные советы</a>\".</p><p></p>', 3, '2023-06-12 21:54:51', 639919, 76, '/ru/articles/736530/', 'NPM библиотека для интернационализации и локализации i18n очень популярна, однако за последние годы она сильно располнела. В ней много возможностей для локализации дат, чисел, установки нужных склонений, поддержки RTL языков, загрузки локалей с сервера и кучи еще чего. На сайте i18next она называется уже даже \"интернационализационным фреймворком\".В то же время часто для локализации сайта нужны очень простые вещи, занимающие всего пару процентов от всего функционала тяжеловеса i18n. Ниже будет описана несложная процедура избавления от i18next-ной зависимости в данном случае.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(144, 'Как заставить бэкендера писать фронтенд', '<figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/6f3/a7a/17b/6f3a7a17bda5ee181645d4de77072a49.png\" alt=\"\" title=\"\" width=\"960\" height=\"651\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/6f3/a7a/17b/6f3a7a17bda5ee181645d4de77072a49.png\"></figure><p>Всем привет! Меня зовут Иван Ситкин, я бэкенд-разработчик в Едадиле. Сегодня я хочу поделиться с вами историей написания очередной панели администрирования и как из этого мы собрали подходящие подходы и практики.</p><p>Для начала давайте вспомним, что же это за панели. Панель администрирования (или админка) — это приложение, которое используется для управления и настройки приложения. То есть это такой продукт для продукта. Панели администрирования нужны для различных целей, например, для создания и редактирования контента, настройки параметров продукта или управления пользователями.</p><p>Но иногда в проектах важна скорость и ресурсов на создание админки с привлечением команды фронтенда откровенно не хватает. И тогда бэкендеру приходится брать процесс в свои руки.</p><p>А теперь вы готовы погрузиться в эту кроличью нору.</p><blockquote><p><strong>Внимание!</strong></p><p>Эта статья не является призывом отменить существующие методологии разработки приложений на стыке фронтенда и бэкенда. Это статья о том, как мы пришли к нестандартной организации проектов, которая помогает нам быстро создавать и сопровождать наши элементы управления продуктом.</p></blockquote><h2>Точка отсчёта</h2><p>Наша команда в большинстве случаев использует Python, поэтому неудивительно, что в своё время для админок был выбран Flask вместе с Flask-Admin. Это лёгкие и доступные инструменты с достаточно богатым набором примеров, документацией, сообществом, а также с открытым исходным кодом.</p><p>Админки в нашем понимании — это набор страниц, которые формируют интерфейс для выполнения типичных операций над объектами, то есть создание, чтение, обновление и удаление (CRUD). Но со временем стало заметно, что такие проекты команде стало дорого сопровождать, так как требовалось прикладывать намного больше усилий для составления логики поведения страницы. Например, добавлять поле с выбором объектов из нового API. Тогда мы решили посмотреть, как такую проблему решают другие команды и комьюнити.</p><h3>В интернете пишут, что правильно вот так</h3><p>Вы наверняка знаете, что есть такой подход к проектированию веб-приложений — API First . Если коротко, то это означает, что сначала разработчики формируют набор контрактов, или какую-то спецификацию API, а потом все вместе реализуют её как на бэкенде, так и на фронтенде.</p><p>Разумеется, такой подход имеет ряд преимуществ:</p><ul><li><p>Единоразовая разработка бэкенда, которую можно использовать многократно для создания фронтенда на различных платформах, таких как веб-браузер или мобильные приложения.</p></li><li><p>Возможность предоставить доступ к API третьим лицам. Например, разработчикам сторонних продуктов для интеграции с вашим приложением.</p></li></ul><p>Однако, у этого подхода есть ряд серьёзных ограничений:</p><ul><li><p>Очень сложно менять контракт и спецификацию API.</p></li><li><p>Если понадобится, придётся поддерживать несколько версий API, чтобы не нарушить существующие интеграции.</p></li><li><p>Необходимо поддерживать и развивать две отдельные части — бэкенд и фронтенд.</p></li></ul><p>Именно из-за этих ограничений цена разработки сильно возрастает. Ниже попробую показать почему.</p><h3>Давайте пофантазируем о том, как именно это бывает</h3><p>Есть две команды: фронтенд и бэкенд. Давайте, для нашего карикатурного примера назовём их «Хищники» и «<s>Травоядные</s> Чужие». Работают они по SCRUM, используют API First. Так как основной продукт — приложение на iOS, Android и Web, этот подход отлично работает. Зачем нам изобретать велосипед — давайте и админки писать точно так же.</p><p>Итак, команде «Чужих» ставим задачу на спринт: сделать спецификацию API. В особо удачных случаях команда дизайна успела нарисовать макет и согласовать его у ответственного за UX.</p><p>Разработчик целую неделю проектирует на Swagger. Смотрит в СУБД проекта, а там не хватает пару полей. «Чужой» заводит задачу на миграцию в следующий спринт (этот-то уже битком). Потом делает спецификацию API, отдаёт её на ревью своей команде. Разумеется, очень опытный коллега находит, скажем, шесть мест, где могут возникнуть проблемы с безопасностью. После пары часов обсуждений задачу закрывают, но заводят ещё три задачи в бэклог: на починку потенциальных и сугубо теоретических проблем в безопасности ещё нереализованного API и собственно на реализацию самого API.</p><p>Прошёл спринт, задачи закрыты, все молодцы. Отдаём Swagger команде «Хищников». Разработчик с их стороны через пару дней закончил писать абстрактный класс клиента и тесты к нему. Наконец, можно открывать макет и начинать верстать!</p><p>Не буду тут ударяться в подробности, скажу лишь, что в Swagger-API, например, нет поля, по которому фронтендер будет сортировать результаты. Ну и обязательно найдутся ещё какие-нибудь неочевидные штуки.</p><p>И что же мы имеем по истечении двух недель:</p><ul><li><p>задачи на безопасность, миграцию данных, само API и «ещё что-нибудь» в бэклоге «Чужих»; </p></li><li><p>задачи на сборку фронта и деплой ноды у «Хищников»;</p></li><li><p>макет от дизайнеров;</p></li><li><p>пачка задач от главного за UX.</p></li></ul><p>И главное: бэкенд не готов, фронтенд не готов.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/9d4/ed3/f55/9d4ed3f5574dbcdae4bc996400972483.png\" alt=\"\" title=\"\" width=\"1000\" height=\"662\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/9d4/ed3/f55/9d4ed3f5574dbcdae4bc996400972483.png\"></figure><p>Если серьёзно, то пример выдуман для подчёркивания проблем, так что любые совпадения с реальными персонажами — чистая случайность. Но вы можете написать в комментариях, было у вас что-то такое или нет.</p><h3>Что же тут пошло не так</h3><p>Всё же требования к основному продукту значительно отличаются от требований к админке, как минимум в таких критериях:</p><ul><li><p>Сроки релиза. Надо сделать админку намного быстрее, чем основной продукт.</p></li><li><p>Требования по поддержке платформ. Можно забить на IE9, а в особо запущенных случаях вообще сказать всем сотрудникам поставить определённый браузер только для этой админки, или привезти им «правильный браузер» через AD-профиль. На бизнес это никак не повлияет, но мы делать этого, конечно же, не будем.</p></li><li><p>Требования к качеству. Если не работает кнопка сортировки, клиент не уйдёт к конкурентам (потому что чаще всего это наш сотрудник).</p></li><li><p>Требования к поддержке. В случае основного продукта <em>/api/v1/</em> надо поддерживать до тех пор, пока есть хотя бы один клиент, использующий его. Но в случае админок нужен только самый актуальный клиент.</p></li></ul><h3>Как исправить ситуацию</h3><p>Так как мы всё-таки инженеры, давайте сформируем требования и критерии успеха. Да и вообще, что мы будем делать и как оценивать результат.</p><ul><li><p>Выкатывать на прод новую форму админки в среднем за день.</p></li><li><p>Приложение корректно работает в современных браузерах: Safari, Firefox и весь Chrome-based.</p></li><li><p>Та часть админки на Python, с которой взаимодействует JS, покрыта тестами.</p></li><li><p>В JS-части должно быть минимум логики, тесты на JS мы писать не хотим (в идеале, конечно, совсем не писать на JS, но это по ситуации).</p></li><li><p>Можно быстро ломать API, но при этом не ломать клиент.</p></li></ul><p>Наш идеальный мир — это отдельный микросервис, который раздаёт JS-код, а он, в свою очередь, и является его админкой. То есть первый критерий успеха — когда коды клиента и бэкенда мирно сосуществуют в одном репозитории (это необязательно, но было бы приятным бонусом).</p><p>Так как бэкенд у нас на Python, а фронтенд — на JS, то отказ от транспиляции и сборки приложения в бандл, кажется логичным. То есть как в нулевых:</p><pre><code class=\"xml\">&lt;script src=\"/static/myframework.js\"&gt;&lt;/script&gt;\n\n&lt;script src=\"/static/app.js\"&gt;&lt;/script&gt; </code></pre><p>При этом, конечно, никакой <em>myframework.js</em> мы писать не хотим. Мы хотим подобрать такой, который может работать без транспиляции. А <em>app.js</em> — это не минифицированный код нашей админки. Таким образом наш бекенд на Python сможет раздавать приложение как обычную статику, а вместо минификации просто будем раздавать gzip-файлы.</p><p>Однако есть небольшая проблема:<strong> в современной индустрии фронтенда так не принято</strong>.</p><h2>API Last</h2><p>Поразмыслив над всем этим, мы изобрели (может, и не мы) обратный путь. Встречайте – <strong>API Last</strong>. Вот что мы вкладываем в этот подход:</p><ul><li><p>Клиент останется только один. Для нас это <s>Дункан МакКлауд</s> JS-клиент в браузере.</p></li><li><p>Если нам понадобится второй клиент, напишем для него отдельный микросервис. <em>Спойлер: в случае админок такого ещё не случалось.</em></p></li><li><p>Мы не публикуем контракт, а пишем UI-часть вместе с бэкенд-частью. В идеале прямо в одном репозитории.</p></li></ul><p>Так как мы не хотим использовать полноценную сборку, значит, фреймворк-дистрибутив должен быть собран под браузер и иметь возможность использовать бо́льшую часть фичей фреймворка в рантайме, например, шаблоны.</p><p>На дворе был 2019 год. На тот момент было три популярных фреймворка: React, Angular и Vue. </p><ul><li><p>React можно собрать под браузер, а в коде приложений использовать не JSX, а VDOM API. Но код админки будет выглядеть сложным и трудночитаемым.</p></li><li><p>В Angular все примеры в документации были на TS, а рантайм интерпретатора нет. Да и через 4 года мало что изменилось.</p></li><li><p>У Vue есть сборка под браузер. Можно использовать как VDOM API, так и компилировать шаблоны в рантайме. Как раз то, что нам и нужно.</p></li></ul><h3>Первый полёт</h3><p>Для эксперимента собрали тестовый проект. В нашем случае это был простенький веб-сервер на <a href=\"https://docs.aiohttp.org/\"><u>aiohttp</u></a>, который раздаёт html-страницу и немного статики.</p><p>Мы взяли уже подготовленный Vue c <a href=\"https://unpkg.com/vue@2.7.14/dist/vue.js\"><u>unpkg</u></a>, добавили его в <em>index.html</em> и начали раздавать его бэкендом. Выглядел он примерно вот так:</p><pre><code class=\"xml\">&lt;head&gt;\n  &lt;script src=\"https://unpkg.com/vue@2.7.14/dist/vue.js\"&gt;&lt;/script&gt;\n  {% for component in components %}\n    {{ component }}\n  {% endfor %}\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;div id=\"app\"&gt;&lt;/div&gt;\n&lt;/body&gt;</code></pre><p>Как можно заметить, мы вставляли компоненты прямо в <em>index.html</em>, используя Jinja. Но мы быстро поняли, что для компонент нужна топологическая сортировка, так как они могут быть зависимыми друг от друга в неочевидном порядке.</p><p>Формировать её на бэкенде, то есть парсить код компонентов и сортировать, очень не хотелось. Поэтому для загрузки компонент мы собрали скрипт, который загружает их в порядке, указанном в <em>index.html</em>. Топологическую сортировку приходилось поддерживать самостоятельно — конечно, это зло, но меньшее.</p><p>Затем пришло понимание, что нам мало одного Vue. Не вопрос, добавили ещё один скрипт из unpkg. Но чтобы не тянуть сорок мульёнов зависимостей, пришёл мой коллега <a class=\"mention\" href=\"/users/orlovdl\">@orlovdl</a> и написал скрипт, который качает из unpkg библиотеки и пакует в один жирный <em>vendor.js</em>. А так как набор библиотек меняется не так часто, то и <em>vendor.js</em> (а в последствии <em>vendor.js.gz</em>), мы решили хранить прямо в репозитории.</p><p>На этом этапе у нас уже появилась возможность собирать SPA-приложение без сборки, писать код, перезагружать страницу в браузере и видеть результат.</p><p>Оригинальные проекты для сравнения, конечно же, растворились в пучине времени. Тем не менее идея была проста: понять, проседаем ли мы по производительности без использования сборки. По ощущениям — да, безусловно, но те же ощущения, подсказывали что на наших небольших приложениях это будет почти незаметно.</p><p>Кому интересны детали, милости просим <a href=\"https://github.com/Alviner/vue-comparison#vue-2\"><u>ворваться вот сюда</u></a>. В этом репозитории представлены аналоги наших первых прототипов.</p><p>Затем встал важный вопрос про взаимодействие бэкенда и фронтенда. Нам было важно сделать настолько тонкий клиент, насколько это возможно, так как мы не хотели писать на него тесты. Это значит, что самым простым вариантом будет программировать всю логику на бэкенде, а клиент использовать только для отображения результатов вызова методов. Ой, а ведь это уже очень похоже на какой-нибудь RPC...</p><p>Конечно, можно использовать обычный REST API в формате json, а уже на стороне клиента вызывать API, десериализовать json в объекты и обрабатывать ошибки. Но наш подход – если можно не писать JS, то мы и не будем. А для aiohttp есть полноценный пакет, который мы и решили использовать — <a href=\"https://wsrpc.readthedocs.io/\"><u>wsrpc-aiohttp</u></a>.</p><p>Эксперимент посчитали успешным и решили попробовать его на новой админке. Конечно, умение писать, как в нулевых, требует определённой сноровки, но команде такой подход зашёл, ведь у него достаточно низкий порог входа. В дальнейшем мы собрали <strong>десяток админок</strong> на этих рельсах.</p><h3>Промежуточные результаты</h3><p>Теперь можно проверить, каких целей, которые мы обозначили для себя выше, удалось достичь:</p><ul><li><p>Выкатываем на прод новую форму админки буквально за пару часов. Зависит, конечно, от сложности формы, но скорость разработки теперь хотя бы прогнозируемая.</p></li><li><p>Приложение корректно работает в современных браузерах.</p></li><li><p>Часть на Python, с которой взаимодействует JS, покрыта тестами, как и любой другой наш API.</p></li><li><p>В клиенте минимум логики, так как он только и делает, что вызывает RPC и просто мапит полученный результат в поля компонентов.</p></li><li><p>Можно быстро ломать API и тут же чинить клиент или дописывать новый RPC-вызов, а старый просто убрать. И теперь <strong>нет нужды поддерживать устаревший код</strong>.</p></li></ul><p>Но, конечно, не всё так радужно. Есть и менее приятные моменты:</p><ul><li><p>Нужно писать компоненты в старом стиле. (такие модули используют особенность языка, где <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/IIFE\">создается замыкание и тут же вызывается</a> для изменения глобальной области видимости)</p></li><li><p>Нужно поддерживать топологическую сортировку руками.</p></li><li><p>Не все библиотеки собраны под браузер.</p></li><li><p>Область видимости модулей доступна прямо из консоли.</p></li></ul><p>Если вам интересно, поднять свою песочницу можно через этот <a href=\"https://github.com/Alviner/vuefy/tree/v0.1.0\"><u>шаблон</u></a>.</p><h3>Также, но по-новому</h3><p>Во второй половине 2020 года вышел Vue3. И, конечно же, мы захотели на него перейти.</p><p>В один из дней мозгового штурма пришёл <u><a class=\"mention\" href=\"/users/dizballanze\">@dizballanze</a> </u>и рассказал про появление нескольких CDN: например, <a href=\"https://esm.sh/\"><u>esm.sh</u></a>, которая предоставляет библиотеки аналогично unpkg, <a href=\"https://frontender.info/es6-modules/\">но в формате esm</a>. А его вполне поддерживают современные браузеры. Ко всему прочему, новая версия Vue уже шла со сборкой в этом формате. Нормальные импорты слишком сильно манили нас в очередное подземелье, но не тут-то было...</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f75/a97/c0f/f75a97c0ff86bb27d851745e9cd60aaf.png\" alt=\"\" title=\"\" width=\"1000\" height=\"668\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f75/a97/c0f/f75a97c0ff86bb27d851745e9cd60aaf.png\"></figure><p>Мы обнаружили главную проблему – <strong>Vue Single-File компоненты требуют определённой предобработки</strong>. Фактически нам нужно повторить наш загрузчик, который разбивал SFC на блоки: шаблон, стиль, скрипт. Но, само собой, кастомный <em>fetch</em> браузеры не поддерживают и мы взяли перерыв на очередные исследования.</p><p>В качестве решения мы нашли <a href=\"https://github.com/guybedford/es-module-shims\"><u>es-module-shims</u></a>, который расширяет поддержку в браузерах, а также в режиме <em>shim</em> позволяет использовать кастомный <em>fetch</em>. Это дало нам возможность переиспользовать загрузчик и продолжать использовать Single-File компоненты (ну, нравятся они нам).</p><p>Теперь дело за малым: собрать <em>vendor</em> в нужном формате, так как тянуть библиотеки с CDN через <em>importmap</em> не даёт нужного управления кэшем и контентом. В очередной раз мы пошли шерстить интернет в поисках подходящего инструмента. Наткнулись на быстрый-модный-молодежный <a href=\"https://github.com/evanw/esbuild\"><u>esbuild</u></a> и решили попробовать на нём.</p><p>Теперь сборка зависимостей выглядит следующим образом:</p><ol><li><p>Управляем зависимостями стандартным образом — у нас <em>yarn</em> (но можно, при желании и <em>npm</em>).</p></li><li><p>Указываем нужные нам объекты в файле <em>vendor.js</em>.</p></li><li><p>Собираем его через <em>esbuild</em>, сжимаем gzip и так же храним в репозитории.</p></li><li><p>Повторяем всё с шага 1, когда обновляем зависимости.</p></li></ol><p>Последний пункт на практике нужен довольно редко: разработчик 98% времени пишет саму админку, а не зовёт <em>yarn</em>, <em>npm</em> или <em>webpack</em>, как это было бы при стандартном подходе. Лишь иногда отдельным PR обновляется <em>vendor</em> и коммитится в репозиторий. Более того, у новичков может быть даже не установлен ни <em>npm</em>, ни <em>yarn</em>, ни даже <em>node — </em>просто делаешь:</p><pre><code class=\"bash\"> git clone $projectUrl</code></pre><p>и пишешь формы, потому что все зависимости к тебе уже приехали собранными.</p><p>В итоге концептуально всё осталось прежним: тонкий клиент, который раздаётся бэкендом напрямую без сборки после каждого Merge Request. Однако есть несколько изменений:</p><ul><li><p>Мы не сильно проиграли в скорости работы на наших небольших SPA. Убедились в этом, измерив в песочнице.</p></li><li><p>Используем современные модули, которые даже визуально чище старых, а также позволяют управлять областью видимости тех или иных объектов.</p></li><li><p>Теперь не нужно поддерживать топологическую сортировку, ведь она сама размотается через <em>import </em>или <em>export</em>. </p></li></ul><p>В итоге мы сохранили все плюсы и получили парочку бенефитов.</p><p>На текущий момент мы используем именно этот вариант для наших админок. Если вам интересно пощупать это нечто, пример этого монстра в зародыше есть <a href=\"https://github.com/Alviner/vue-comparison/tree/main/challengers/vue3/shim\"><u>вот тут</u></a>, а свою песочницу поднять можно через <a href=\"https://github.com/Alviner/vuefy/tree/v0.2.0\"><u>cookiecutter-шаблон</u></a>. А если вам интересна отдельная статья на тему того, как стартовать проект, используя наш шаблон, не забудьте написать об этом в комментариях.</p><p>Само собой, мы регулярно оглядываемся на то, что происходит в индустрии. Мы не отменяем сборку как идею, скорее мы нашли способ организации проекта и взаимодействия между элементами, который позволяет нам быстро и без большой боли собирать инструмент для управления продуктом. Если у вас схожи потребности, то, может быть, такой подход поможет и вам.</p><h2>Вместо заключения</h2><p>Так как всё же заставить бэкендера писать фронтенд? Краткий ответ звучит так — никак.</p><p>Критически важно избегать ситуации, когда добавление простой формы приводит к панике и необходимости быстро освоить десяток новых инструментов.</p><p>Вместо этого необходимо сделать процесс создания админок настолько простым, насколько это вообще возможно. Чтобы человек мог оставаться в своей роли в команде и жил по принципу: «Я так-то бэкендер, а написание формочек это так, для души».</p><p></p>', 3, '2023-06-12 21:54:52', 704816, 76, '/ru/companies/yandex/articles/736006/', 'Всем привет! Меня зовут Иван Ситкин, я бэкенд-разработчик в Едадиле. Сегодня я хочу поделиться с вами историей написания очередной панели администрирования и как из этого мы собрали подходящие подходы и практики.Для начала давайте вспомним, что же это за панели. Панель администрирования (или админка) — это приложение, которое используется для управления и настройки приложения. То есть это такой продукт для продукта. Панели администрирования нужны для различных целей, например, для создания и редактирования контента, настройки параметров продукта или управления пользователями.Но иногда в проектах важна скорость и ресурсов на создание админки с привлечением команды фронтенда откровенно не хватает. И тогда бэкендеру приходится брать процесс в свои руки.А теперь вы готовы погрузиться в эту кроличью нору.'),
(145, 'Представляем вам Vue 3.3', '<p>Эта статья — перевод оригинальной статьи  \"<a href=\"https://blog.vuejs.org/posts/vue-3-3\" rel=\"noopener noreferrer nofollow\">Announcing Vue 3.3</a>\".</p><p>Также я веду телеграм канал “<a href=\"https://t.me/frontend_pasta\" rel=\"noopener noreferrer nofollow\"><u>Frontend по-флотски</u></a>”, где рассказываю про интересные вещи из мира разработки интерфейсов.</p><h2>Вступление</h2><p>Сегодня мы рады объявить о релизе Vue 3.3 \"Rurouni Kenshin\"!</p><p>Этот выпуск сосредоточен на улучшении опыта разработки - в частности, на использовании SFC <code>&lt;script setup&gt;</code> с TypeScript. Вместе с релизом 1.6 <a href=\"https://github.com/vuejs/language-tools/\" rel=\"noopener noreferrer nofollow\">Vue Language Tools</a> (ранее известного как Volar) мы решили многие давние проблемы при использовании Vue с TypeScript.</p><p>В этом посте представлен обзор основных возможностей версии 3.3. Для получения полного списка изменений, пожалуйста, ознакомьтесь с <a href=\"https://github.com/vuejs/core/blob/main/CHANGELOG.md#330-2023-05-08\" rel=\"noopener noreferrer nofollow\">полным журналом изменений на GitHub</a>.</p><h2>&lt;script setup&gt; + Улучшения TypeScript DX</h2><h3>Поддержка импортированных и сложных типов в макросах</h3><p>Ранее типы, используемые в параметре типа в <code>defineProps</code> и <code>defineEmits</code>, были ограничены локальными типами и поддерживали только литералы типов и интерфейсы. Это связано с тем, что Vue должен иметь возможность анализировать свойства интерфейса props для генерации соответствующих опций во время выполнения.</p><p>Теперь это ограничение устранено в версии 3.3. Компилятор теперь может разрешать импортированные типы и поддерживает ограниченный набор сложных типов:</p><pre><code class=\"javascript\">&lt;script setup lang=\"ts\"&gt;\nimport type { Props } from \'./foo\'\n\n// imported + intersection type\ndefineProps&lt;Props &amp; { extraProp?: string }&gt;()\n&lt;/script&gt;</code></pre><p>Обратите внимание, что поддержка сложных типов основана на AST и поэтому не является на 100% полной. Некоторые сложные типы, требующие фактического анализа типа, например, условные типы, не поддерживаются. Вы можете использовать условные типы для определения типа отдельного параметра, но не всего объекта параметров.</p><p>Подробнее: <a href=\"https://github.com/vuejs/core/pull/8083\" rel=\"noopener noreferrer nofollow\"><u>PR#8083</u></a></p><h3>Обобщенные компоненты</h3><p>Компоненты, использующие <code>&lt;script setup&gt;</code>, теперь могут принимать параметры обобщенных типов через атрибут generic:</p><pre><code class=\"javascript\">&lt;script setup lang=\"ts\" generic=\"T\"&gt;\ndefineProps&lt;{\n  items: T[]\n  selected: T\n}&gt;()\n&lt;/script&gt;</code></pre><p>Значение generic работает точно так же, как список параметров между &lt;...&gt; в TypeScript. Например, можно использовать множественные параметры, ограничения extends, типы по умолчанию и ссылочные импортированные типы:</p><pre><code class=\"javascript\">&lt;script setup lang=\"ts\" generic=\"T extends string | number, U extends Item\"&gt;\nimport type { Item } from \'./types\'\ndefineProps&lt;{\n  id: T\n  list: U[]\n}&gt;()\n&lt;/script&gt;</code></pre><p>Ранее эта функция требовала явного согласия пользователя, но теперь она включена по умолчанию в последней версии volar / vue-tsc.</p><ul><li><p>Обсуждение: <a href=\"https://github.com/vuejs/rfcs/discussions/436\" rel=\"noopener noreferrer nofollow\"><u>RFC#436</u></a></p></li><li><p>Относится к <a href=\"https://github.com/vuejs/core/pull/7963\" rel=\"noopener noreferrer nofollow\">generic defineComponent() - PR#7963</a></p></li></ul><h3>Более эргономичный defineEmits</h3><p>Ранее параметр типа для <code>defineEmits</code> поддерживал только синтаксис сигнатуры вызова:</p><pre><code class=\"javascript\">// Раньше\nconst emit = defineEmits&lt;{\n  (e: \'foo\', id: number): void\n  (e: \'bar\', name: string, ...rest: any[]): void\n}&gt;()</code></pre><p>Тип совпадает с типом возврата для <code>emit</code>, но он немного многословен и неудобен в написании. В версии 3.3 представлен более эргономичный способ объявления эмитов с помощью типов:</p><pre><code class=\"javascript\">// Теперь\nconst emit = defineEmits&lt;{\n  foo: [id: number]\n  bar: [name: string, ...rest: any[]]\n}&gt;()</code></pre><p>В литерале типа ключом является имя события, а значением - тип массива, определяющий дополнительные аргументы. Хотя это не обязательно, вы можете использовать <a href=\"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-4-0.html#labeled-tuple-elements\" rel=\"noopener noreferrer nofollow\">помеченные элементы кортежа</a> для ясности, как в примере выше.</p><p>Синтаксис сигнатуры вызова по-прежнему поддерживается.</p><h3>Типизированные слоты с defineSlots</h3><p>Новый макрос defineSlots можно использовать для объявления ожидаемых слотов и соответствующих им параметров:</p><pre><code class=\"javascript\">&lt;script setup lang=\"ts\"&gt;\ndefineSlots&lt;{\n  default?: (props: { msg: string }) =&gt; any\n  item?: (props: { id: number }) =&gt; any\n}&gt;()\n&lt;/script&gt;</code></pre><p><code>defineSlots()</code> принимает только параметр типа и никаких рантайм аргументов. Параметр типа должен быть литералом типа, где ключ свойства - имя слота, а значение - функция слота. Первым аргументом функции является проп, который слот ожидает получить, и его тип будет использоваться для пропсов слота в шаблоне. Возвращаемое значение <code>defineSlots</code> - это тот же объект слота, который возвращается из <code>useSlots</code>.</p><p>Некоторые текущие ограничения:</p><ul><li><p>Проверка требуемых слотов пока не реализована в volar / vue-tsc.</p></li><li><p>Тип возврата функции слота в настоящее время игнорируется и может быть <code>any</code>, но мы можем использовать его для проверки содержимого слота в будущем.</p></li></ul><p>Существует также соответствующая опция слотов для использования <code>defineComponent</code>. Оба API не имеют последствий во время выполнения и служат исключительно в качестве подсказок типов для IDE и vue-tsc.</p><p>Подробнее: <a href=\"https://github.com/vuejs/core/issues/7982\" rel=\"noopener noreferrer nofollow\"><u>PR#7982</u></a></p><h2>Экспериментальные возможности</h2><h3>Реактивная деструктуризация пропсов</h3><p>Ранее являвшаяся частью исчезнувшего Reactivity Transform, реактивная деструктуризация пропсов была выделена в отдельную функцию.</p><p>Эта функция позволяет деструктурированным пропсам сохранять реактивность и обеспечивает более эргономичный способ объявления значений пропсов по умолчанию:</p><pre><code class=\"javascript\">&lt;script setup&gt;\nimport { watchEffect } from \'vue\'\n\nconst { msg = \'hello\' } = defineProps([\'msg\'])\n\nwatchEffect(() =&gt; {\n  // accessing `msg` in watchers and computed getters\n  // tracks it as a dependency, just like accessing `props.msg`\n  console.log(`msg is: ${msg}`)\n})\n&lt;/script&gt;\n\n&lt;template&gt;{{ msg }}&lt;/template&gt;</code></pre><p>Эта функция является экспериментальной и требует явного согласия.</p><p>Подробнее: <a href=\"https://github.com/vuejs/rfcs/discussions/502\" rel=\"noopener noreferrer nofollow\"><u>RFC#502</u></a></p><h3>defineModel</h3><p>Ранее, чтобы компонент поддерживал двустороннее связывание с v-model, он должен был (1) объявить пропс и (2) вызвать соответствующее событие update:propName, когда он намеревался обновить пропс:</p><pre><code class=\"javascript\">&lt;!-- ДО --&gt;\n&lt;script setup&gt;\nconst props = defineProps([\'modelValue\'])\nconst emit = defineEmits([\'update:modelValue\'])\nconsole.log(props.modelValue)\n\nfunction onInput(e) {\n  emit(\'update:modelValue\', e.target.value)\n}\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;input :value=\"modelValue\" @input=\"onInput\" /&gt;\n&lt;/template&gt;</code></pre><p>3.3 упрощает использование с помощью нового макроса defineModel. Макрос автоматически регистрирует проп и возвращает ref, который может быть непосредственно изменен:</p><pre><code class=\"javascript\">&lt;!-- ПОСЛЕ --&gt;\n&lt;script setup&gt;\nconst modelValue = defineModel()\nconsole.log(modelValue.value)\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;input v-model=\"modelValue\" /&gt;\n&lt;/template&gt;</code></pre><p>Эта функция является экспериментальной и требует явного согласия.</p><p>Подробнее: <a href=\"https://github.com/vuejs/rfcs/discussions/503\" rel=\"noopener noreferrer nofollow\"><u>RFC#503</u></a></p><h2>Другие примечательные возможности</h2><h3>defineOptions</h3><p>Новый макрос <code>defineOptions</code> позволяет объявлять опции компонента непосредственно в <code>&lt;script setup&gt;</code>, не требуя отдельного блока <code>&lt;script&gt;:</code></p><pre><code class=\"javascript\">&lt;script setup&gt;\ndefineOptions({ inheritAttrs: false })\n&lt;/script&gt;</code></pre><h3>Улучшенная поддержка геттеров с помощью toRef и toValue</h3><p><code>toRef</code> был улучшен для поддержки нормализации значений / геттеров / существующих refs внутри refs:</p><pre><code class=\"javascript\">// Равносильно ref(1)\ntoRef(1)\n// создает readonly ref, который вызывает getter при доступе к .value\ntoRef(() =&gt; props.foo)\n// Возвращает существующий refs как есть\ntoRef(existingRef)</code></pre><p>Вызов <code>toRef</code> с геттером аналогичен computed, но может быть более эффективным, если геттер просто выполняет доступ к свойству без дорогостоящих вычислений.</p><p>Новый метод toValue обеспечивает обратное, нормализуя значения/геттеры/рефы в значения:</p><pre><code class=\"javascript\">toValue(1) //       --&gt; 1\ntoValue(ref(1)) //  --&gt; 1\ntoValue(() =&gt; 1) // --&gt; 1</code></pre><p><code>toValue</code> можно использовать в составных элементах вместо <code>unref</code>, чтобы ваш составной элемент мог принимать геттеры в качестве реактивных источников данных:</p><pre><code class=\"javascript\">// до: выделение ненужных промежуточных ссылок\nuseFeature(computed(() =&gt; props.foo))\nuseFeature(toRef(props, \'foo\'))\n\n// после: более эффективно и лаконично\nuseFeature(() =&gt; props.foo)</code></pre><p>Отношения между <code>toRef</code> и <code>toValue</code> аналогичны отношениям между <code>ref</code> и <code>unref</code>, основное отличие заключается в особой обработке функций getter.</p><p>Подробнее: <a href=\"https://github.com/vuejs/core/pull/7997\" rel=\"noopener noreferrer nofollow\"><u>PR#7997</u></a></p><h3>Поддержка импорта исходного кода JSX</h3><p>В настоящее время типы Vue автоматически регистрируют глобальную JSX-типизацию. Это может привести к конфликту при использовании вместе с другими библиотеками, которым необходим вывод типов JSX, в частности React.</p><p>Начиная с версии 3.3, Vue поддерживает указание пространства имен JSX через опцию <a href=\"https://www.typescriptlang.org/tsconfig#jsxImportSource\" rel=\"noopener noreferrer nofollow\">jsxImportSource </a>в TypeScript. Это позволяет пользователям выбирать глобальный или индивидуальный выбор файла в зависимости от их сценария использования.</p><p>Для обратной совместимости в версии 3.3 пространство имен JSX по-прежнему регистрируется глобально. <code>Мы планируем убрать глобальную регистрацию по умолчанию</code> в версии 3.4. Если вы используете TSX с Vue, вам следует добавить явный <code>jsxImportSource</code> в <code>tsconfig.json</code> после обновления до 3.3, чтобы избежать поломки в 3.4.</p><h2>Улучшение инфраструктуры поддержки</h2><p>Этот релиз основан на многочисленных улучшениях инфраструктуры поддержки, которые позволяют нам двигаться быстрее и увереннее:</p><ul><li><p>Сборка в 10 раз быстрее благодаря отделению проверки типов от сборки rollup и переходу от <code>rollup-plugin-typescript2</code> к <code>rollup-plugin-esbuild</code>.</p></li><li><p>Более быстрые тесты благодаря переходу от Jest к <a href=\"https://vitest.dev/\" rel=\"noopener noreferrer nofollow\">Vitest</a>.</p></li><li><p>Более быстрая генерация типов за счет перехода от <code>@microsoft/api-extractor</code> к <code>rollup-plugin-dts</code>.</p></li><li><p>Комплексные регрессионные тесты с помощью <a href=\"https://github.com/vuejs/ecosystem-ci\" rel=\"noopener noreferrer nofollow\">ecosystem-ci</a> - отлавливают регрессии в основных зависимых компонентах экосистемы до выпуска релизов!</p></li></ul><p>Как и планировалось, в 2023 году мы намерены начать выпускать более мелкие и частые релизы функций. Следите за новостями!</p><p></p>', 3, '2023-06-12 21:54:52', 380810, 79, '/ru/articles/735086/', 'Сегодня мы рады объявить о релизе Vue 3.3 \"Rurouni Kenshin\"!Этот выпуск сосредоточен на улучшении опыта разработки - в частности, на использовании SFC <script setup> с TypeScript. Вместе с релизом 1.6 Vue Language Tools (ранее известного как Volar) мы решили многие давние проблемы при использовании Vue с TypeScript.В этом посте представлен обзор основных возможностей версии 3.3. Для получения полного списка изменений, пожалуйста, ознакомьтесь с полным журналом изменений на GitHub.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(146, 'Как я сделал SPA в два раза быстрее', '<figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/57a/98e/617/57a98e617420b72f29051da1bc4ce000.png\" width=\"1564\" height=\"1224\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/57a/98e/617/57a98e617420b72f29051da1bc4ce000.png\"></figure><p>Существует огромное множество статей про оптимизацию загрузки веб-сайтов, но часто они обходятся лишь общими советами или абстрактными примерами. В этой статье я хочу поделиться своим опытом комплексной оптимизации реального проекта с конкретными примерами, в данном случае SPA, написанном на Vue 3 с использованием Vuetify для части UI компонентов и Firebase для авторизации.</p><p>Немного контекста: я работаю frontend-разработчиком в компании, которая в основном занимается разработкой MVP (Minimum Viable Product), но так же и разработкой и поддержкой долгоживущих продуктов. Как раз у MVP бывает много проблем, потому что минимум времени уделяется под рефакторинг и оптимизацию, а проблемы между проектами повторяются, потому что часто используется один стартовый шаблон.</p><p>Возможность долго и планомерно заниматься оптимизацией у меня появилась на волонтерском проекте компании - combat-sport.club, которому можно было уделять сколько угодно свободного времени. Так что в данной статье идет речь именно о нем, но решения с него мы переносили и на другие проекты компании, т.к. стэк технологий и проблемы были одинаковые.</p><h2>Оцениваем Performance</h2><p>Все начинается с метрик - чтобы что-то сделать лучше, надо понять, а как было «до». Для измерений я использовал три инструмента - <a href=\"https://pagespeed.web.dev/\" rel=\"noopener noreferrer nofollow\">PageSpeed</a>, Lighthouse и <a href=\"https://www.npmjs.com/package/rollup-plugin-visualizer\" rel=\"noopener noreferrer nofollow\">rollup-plugin-visualizer</a> (у нас проект на Vite).</p><p>Казалось бы, PageSpeed и Lighthouse это одно и то же, используется один движок, но на практике выдают они относительно разные результаты показателя Performance (или Производительность). Например, в моем случае PageSpeed всегда выдавал результат на 20 баллов хуже, чем Lighthouse. Тогда кому же из них верить?</p><p>И в этом заключается первая проблема - любая метрика Performance это всегда симуляция, а не реальность. Ваш сайт может прекрасно работать на устройствах реальных пользователей, но метрики движка Lighthouse будут показывать обратное. И наоборот.<br><br>Но если ваш сайт находится в продакшене и имеет достаточный трафик, то на помощь придет PageSpeed, где есть блок, который показывает фактическую производительность на основе данных от реальных пользователей.</p><p>Вот пример фактических данных, тогда как сам же PageSpeed через свою оценку выдавал результат в районе 45-55 баллов, оценив каждый из показателей заметно хуже:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a51/b5c/70c/a51b5c70c56fce3f44f35db4a1351e5d.png\" alt=\"\" title=\"\" width=\"1600\" height=\"910\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a51/b5c/70c/a51b5c70c56fce3f44f35db4a1351e5d.png\"></figure><p>Поэтому считаю важным заглядывать и на PageSpeed и на Lighthouse в DevTools, потому что так вы получите гораздо больше информации и представления о том, что то и другое лишь примерно оценивает Performance на основе симуляции определенного железа и сети, оказываясь например под влиянием того, где физически находится сервер.</p><p>Следующий инструмент - плагин rollup-plugin-visualizer, который визуально показывает из чего состоит ваш бандл, есть ли там что-то, чего вы не хотите видеть, и сколько что весит. Им я пользовался лишь потому, что Lighthouse не показывает дерево бандла для Vite (в отличие от VueCLI с webpack).</p><p>Итак, вот что мы имеем в начале:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/5b4/fcc/a77/5b4fcca7713726cf9e578df1cd023276.png\" alt=\"\" title=\"\" width=\"1600\" height=\"1300\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/5b4/fcc/a77/5b4fcca7713726cf9e578df1cd023276.png\"></figure><h2>Оптимизируем шрифты и иконки</h2><p>Наибольшее влияние на скорость загрузки сайта оказывает то, что блокирует отрисовку страницы. Это могут быть скрипты, стили или шрифты, которые подключаются в head и блокируют рендер, пока они не загрузятся и не выполнятся.</p><p>В нашем случае, среди всего прочего, заметный эффект оказывали шрифты и библиотека иконок mdi (material design icons).</p><p>Шрифты подключены вот так:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/2d1/bea/9c4/2d1bea9c4320279c3c503c78c461adca.png\" alt=\"\" title=\"\" width=\"1999\" height=\"330\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/2d1/bea/9c4/2d1bea9c4320279c3c503c78c461adca.png\"></figure><p>Разбираемся что с ними не так:</p><ol><li><p>Загружаются все возможные начертания от 100 до 900, хотя на сайте используется лишь 400, 500, 600 и 700.</p></li><li><p>Не указано правило display=swap, чтобы была возможность использовать fallback шрифт и показывать его, пока загружается наш основной шрифт (в ином случае пользователи не видели бы контент, пока шрифт не загрузится).</p></li><li><p>Шрифт загружается с внешнего ресурса Google Fonts, поэтому неплохо было бы добавить preconnect к этим ресурсам, чтобы сделать DNS/TCP/TLS соединения заранее.<br><br>В нашем случае запросы будут к<a href=\"https://fonts.googleapis.com\" rel=\"noopener noreferrer nofollow\"> <u>https://fonts.googleapis.com</u></a> и <a href=\"https://fonts.gstatic.com\" rel=\"noopener noreferrer nofollow\">https://fonts.gstatic.com</a>. Для внешнего ресурса, с которого будет происходить загрузка шрифта, необходимо добавить атрибут crossorigin (для Google Fonts это<a href=\"https://fonts.gstatic.com\" rel=\"noopener noreferrer nofollow\"> <u>https://fonts.gstatic.com</u></a>), иначе preconnect будет выполнять только соединение с DNS.<br><br>Кстати, сейчас Google Fonts предлагают все это по умолчанию, но видимо наш проект создавался задолго до этого.</p></li><li><p>Можно делать preload, чтобы запросить шрифт в самом начале критического пути рендера страницы, не дожидаясь пока построится CSSOM (по умолчанию, браузер загружает шрифт только после того как построит CSSOM). Так как в этом случае шрифт загружается не после парсинга HTML и CSS, то может оказаться так, что нам даже не потребуется fallback шрифт, что сведет на нет сдвиг контента (Layout Shift), который возникает если эти шрифты не совпадают по размерам.<br><br>Но с preload нужно быть осторожным, так как мы откладываем загрузку и парсинг других ресурсов, а также загружаем шрифт в любом случае, даже если дальше он не используется на странице, поэтому нужно оценивать его влияние на скорость загрузки и отрисовки страницы и взвешивать, стоит ли оно того.</p></li></ol><p>В итоге получаем такой код: </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/752/5f6/8ef/7525f68ef0d02be7e59a30e40b196adc.png\" alt=\"\" title=\"\" width=\"1999\" height=\"390\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/752/5f6/8ef/7525f68ef0d02be7e59a30e40b196adc.png\"></figure><p>Следующая возможность для оптимизации это использование вариативного шрифта. Если кратко, то вариативные шрифты - это условно “программируемые” шрифты, которые можно очень гибко настраивать по разным параметрам, при этом не загружая все это изначально по отдельности, как это приходится делать с обычными шрифтами, тем самым увеличивая количество запросов и объем загружаемых данных.</p><p>На Google Fonts уже есть вариативный шрифт Roboto, который называется Roboto-flex, подключим его:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/027/ea2/e0a/027ea2e0a49b174da8fd75fcae1b9aa2.png\" alt=\"\" title=\"\" width=\"1999\" height=\"307\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/027/ea2/e0a/027ea2e0a49b174da8fd75fcae1b9aa2.png\"></figure><p>Для наглядности, столько запросов было при использовании обычного Roboto:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/08f/22e/2b6/08f22e2b6060240876de3e5e6ee2a98b.png\" alt=\"\" title=\"\" width=\"1958\" height=\"362\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/08f/22e/2b6/08f22e2b6060240876de3e5e6ee2a98b.png\"></figure><p>А столько при использовании Roboto-flex, благодаря тому что не нужно загружать разные начертания отдельно: </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/533/259/723/5332597237b5dd20fddaf8a9c732e793.png\" alt=\"\" title=\"\" width=\"1958\" height=\"362\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/533/259/723/5332597237b5dd20fddaf8a9c732e793.png\"></figure><p>Далее разбираемся с библиотекой иконок. Подключена она так:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f4b/cf9/edd/f4bcf9eddf05c903447f4fe57a296119.png\" alt=\"\" title=\"\" width=\"1999\" height=\"311\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f4b/cf9/edd/f4bcf9eddf05c903447f4fe57a296119.png\"></figure><p>В чем проблема здесь? Загружается файл, который содержит в себе все иконки библиотеки, хотя подавляющее большинство из них даже не используется на проекте.</p><p>Решение проблемы довольно простое: вместо использования CDN подключаем библиотеку <a href=\"https://www.npmjs.com/package/@mdi/js\" rel=\"noopener noreferrer nofollow\">mdi/js</a>, с помощью которой можно импортировать только используемые иконки, так что в итоговый бандл попадают только они.</p><p>Пример использования с Vuetify: </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/2f4/b3d/f3a/2f4b3df3a7aa392f675bad9dbbf6a397.png\" alt=\"\" title=\"\" width=\"1644\" height=\"1676\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/2f4/b3d/f3a/2f4b3df3a7aa392f675bad9dbbf6a397.png\"></figure><h2>Первые результаты</h2><p>Итак, на данный момент мы всего лишь оптимизировали подключение шрифтов и иконок, но именно они вносили немалый вклад в показатель Total Blocking Time. Снова сделаем замеры Performance и сравним это с изначальным результатом:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/8ab/64d/0ff/8ab64d0ffc96e0561b84b6532ce77a64.png\" alt=\"Было\" title=\"Было\" width=\"1424\" height=\"1126\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/8ab/64d/0ff/8ab64d0ffc96e0561b84b6532ce77a64.png\"><div><figcaption>Было</figcaption></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/26b/fb4/6f0/26bfb46f095231b876a250c84f56a3e3.png\" alt=\"Стало\" title=\"Стало\" width=\"1600\" height=\"1308\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/26b/fb4/6f0/26bfb46f095231b876a250c84f56a3e3.png\"><div><figcaption>Стало</figcaption></figure><p>Получили прирост в 10 баллов и заметно снизили Total Blocking Time. Но это лишь первые шаги, так что движемся дальше.</p><h2>Устраняем Layout Shift</h2><p>Как я уже упоминал ранее в разделе про шрифты, Layout Shift - это, простыми словами, сдвиг контента веб-сайта, когда какие-то данные и части контента подгружаются с задержкой или меняют размер и сдвигают окружающий контент. Звучит как что-то, что вообще не относится к скорости загрузки, но начиная с 10 версии движка Lighthouse этот параметр <a href=\"https://developer.chrome.com/en/docs/lighthouse/performance/performance-scoring/#lighthouse-10\" rel=\"noopener noreferrer nofollow\">вносит аж 25%</a> (к слову, на первом месте Total Blocking Time с 30%) в общий показатель Performance, поэтому игнорировать его нельзя.</p><p>На данный момент этот показатель находится в красной зоне со значением около 0.5, а таймлайн загрузки страницы выглядит вот так:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/4a4/adc/e44/4a4adce449e6cd1ca22273cf7f8448ac.png\" alt=\"\" title=\"\" width=\"874\" height=\"362\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/4a4/adc/e44/4a4adce449e6cd1ca22273cf7f8448ac.png\"></figure><p>Видим, что в первые секунды загрузки пользователь видит футер веб-сайта, а уже затем все резко встает на свои места… Это происходит из-за того, что между шапкой сайта, баннером с текстом и футером находится контент, который подгружается и отображается динамически. И пока его нет, то его место занимает футер.</p><p>Самым простым (но не всегда оптимальным, так как футер будет скрыт за скроллом внизу экрана, даже если основной контент занимает не всю высоту) решением будет добавить минимальную высоту основному контенту, который почти всегда динамический, например, 100vh, так чтобы он занимал всю доступную высоту экрана:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/c7e/f4b/a87/c7ef4ba871518fb11bcb1113fb79273a.png\" alt=\"\" title=\"\" width=\"1999\" height=\"1395\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/c7e/f4b/a87/c7ef4ba871518fb11bcb1113fb79273a.png\"></figure><p>Проверяем, какое влияние это оказало на Layout Shift:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e5e/1e7/026/e5e1e70268eac874d05c9d8b52535f84.png\" alt=\"\" title=\"\" width=\"1600\" height=\"1480\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e5e/1e7/026/e5e1e70268eac874d05c9d8b52535f84.png\"></figure><p>Мы свели его к 0, а общий результат стал 56 баллов, то есть получили прирост примерно в 10 баллов за счет одного небольшого изменения! И действительно, внизу на таймлайне видно, что в первые секунды загрузки сайта теперь не видно футер и все находится на своих местах.</p><h2>Firebase</h2><p>Если говорить о проблеме кратко:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/81f/bd2/36c/81fbd236c730052dd8dc41df8d871190.png\" alt=\"\" title=\"\" width=\"1846\" height=\"1344\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/81f/bd2/36c/81fbd236c730052dd8dc41df8d871190.png\"></figure><p>Почти 2Mb JavaScript, которые занимают 70% бандла. Но причина здесь проста - мы используем Firebase 8 версии, в которой не поддерживается импорт только нужных модулей, в отличие от актуальной 9 версии.</p><p>Обновляем Firebase до 9 версии и переписываем наш код в соответствии с изменениями, снова смотрим на наш бандл и… мы уменьшили размер с 1.78Mb до 310Kb. Все еще много, но уже в 6 раз лучше.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/956/f77/6ec/956f776ecbd2a006e702eadd865ec091.png\" alt=\"\" title=\"\" width=\"648\" height=\"212\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/956/f77/6ec/956f776ecbd2a006e702eadd865ec091.png\"></figure><p>Но это еще не все. Еще раз смотрим что у нас загружается и видим некий iframe.js от Firebase, который весит 279Kb. После небольшого расследования выясняется, что это нужно только для определенных видов авторизации, например, при использовании метода signInWithPopup для входа с аккаунта Google или Facebook. У нас этот метод не используется и получается весь этот код висит мертвым грузом на всякий случай, поэтому неплохо было бы это убрать.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/984/ac6/3a6/984ac63a6c669fc32d88756f82f0a1d6.png\" alt=\"\" title=\"\" width=\"1668\" height=\"1392\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/984/ac6/3a6/984ac63a6c669fc32d88756f82f0a1d6.png\"></figure><p>Изначально имеем такой код, в котором используется метод <code>getAuth()</code>, содержащий в себе <a href=\"https://firebase.google.com/docs/auth/web/custom-dependencies\" rel=\"noopener noreferrer nofollow\">много неиспользуемого кода</a>:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e20/f16/0dc/e20f160dcb7f8e079988d68cd1a4b888.png\" alt=\"\" title=\"\" width=\"1999\" height=\"1563\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e20/f16/0dc/e20f160dcb7f8e079988d68cd1a4b888.png\"></figure><p>Переписываем его и теперь вместо <code>getAuth()</code> используем <code>initializeAuth()</code> с только необходимым набором импортов, заодно оставляя комментарий потомкам, что нужно быть осторожным при использовании методов, для которых был нужен тот iframe.js:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/acd/75b/50a/acd75b50a0c516704afb39e436023385.png\" alt=\"\" title=\"\" width=\"1980\" height=\"1999\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/acd/75b/50a/acd75b50a0c516704afb39e436023385.png\"></figure><p>Еще раз проверяем наш бандл и видим что теперь в нем нет ничего ненужного:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/183/095/676/1830956765bc1d177f5306d3bdb891e1.png\" alt=\"\" title=\"\" width=\"1999\" height=\"1007\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/183/095/676/1830956765bc1d177f5306d3bdb891e1.png\"></figure><h2>Промежуточные результаты</h2><p>В последний раз мы остановились на достигнутой оценке Performance в 56, теперь же, после оптимизации Firebase, имеем уже 75:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/951/1d0/043/9511d00437e89abd9aa9b15da489cbe1.png\" alt=\"\" title=\"\" width=\"2000\" height=\"1640\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/951/1d0/043/9511d00437e89abd9aa9b15da489cbe1.png\"></figure><h2>Асинхронные компоненты и роуты</h2><p>Если посмотреть на итоговый банлд, то можно заметить, что, хотя мы находимся на главной странице, в нем находятся другие страницы, которые нам сейчас не нужны - NotFoundPage и TermsPage: </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/73e/e92/65a/73ee9265a39c94d4ec87cc71668e8a3a.png\" alt=\"\" title=\"\" width=\"1999\" height=\"1025\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/73e/e92/65a/73ee9265a39c94d4ec87cc71668e8a3a.png\"></figure><p>К счастью, Vue Router поддерживает динамические импорты из коробки, благодаря чему ненужные страницы будут выделены в отдельные чанки и запрашиваться только тогда, когда они нужны, не попадая в общий бандл. И да, все другие страницы подключены именно так, видимо про эти две просто забыли или не доглядели.<br><br>Правим наш файл router.js, убирая статические импорты и заменяя их на динамические:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/7e0/354/4f3/7e03544f33a3767b8ec4f0431ff12d19.png\" alt=\"\" title=\"\" width=\"1999\" height=\"1370\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/7e0/354/4f3/7e03544f33a3767b8ec4f0431ff12d19.png\"></figure><p>К слову, когда проект был на Vue CLI, то следствием динамических импортов было то, что каждый такой чанк создавал prefetch и тем самым, если их было достаточно много, оказывалось влияние на скорость загрузки сайта, потому что браузеру нужно было сделать много лишних запросов, которые не нужны здесь и сейчас:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/fa0/d0b/a97/fa0d0ba97000a063408f6e3eab6bd668.png\" alt=\"\" title=\"\" width=\"974\" height=\"936\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/fa0/d0b/a97/fa0d0ba97000a063408f6e3eab6bd668.png\"></figure><p>Чтобы этого не происходило, я настраивал webpack так, чтобы он не делал prefetch:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f88/239/aed/f88239aedf3b9c1cb85390d377478504.png\" alt=\"\" title=\"\" width=\"1752\" height=\"836\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f88/239/aed/f88239aedf3b9c1cb85390d377478504.png\"></figure><p>Если же нужно сохранить prefetch для каких-то отдельных роутов, то можно настроить это именно для них, добавив комментарий <code>webpackPrefetch: true</code> к динамическому импорту: <code>import(/* webpackPrefetch: true */ \'./somePage.vue\')</code></p><p>Другой проблемой с динамическими роутами было то, что если в компоненте была какая-то логика привязанная к информации о роуте (например, чтобы по <code>$route.name</code> определять, что мы находимся на странице логина, поэтому надо скрыть футер), то это могло работать неправильно из-за того, что в момент проверки условия на <code>$route.name</code> сам роут мог еще не подгрузится.<br><br>Поэтому в подобных местах приходилось писать такие условия, чтобы компонент или его часть рендерились только тогда, когда роут загружен и соответственно имеет свойство name, а уже затем отрабатывала логика, завязанная на это:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/5d1/585/b9f/5d1585b9f9e166247a38e4efb17fad74.png\" alt=\"\" title=\"\" width=\"1999\" height=\"958\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/5d1/585/b9f/5d1585b9f9e166247a38e4efb17fad74.png\"></figure><p>Теперь перейдем к асинхронным компонентам, с ними суть примерно та же, что и с роутами - мы можем загружать их только тогда, когда они нам нужны. Правда, этим мы стали пользоваться лишь после перехода на Vue 3, так как там это делается довольно просто и удобно.<br><br>Например, у нас есть глобальный компонент для уведомлений об ошибках, который большую часть времени никак не используется, а нужен только тогда, когда возникла ошибка (то же может касаться и многих модальных окон). Вполне подходящий случай для того, чтобы использовать асинхронный компонент.</p><p>Перепишем его импорт, используя метод <code>defineAsyncComponent</code>:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b62/320/f15/b62320f15149d003a2fc7820b209a9d0.png\" alt=\"\" title=\"\" width=\"1999\" height=\"913\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b62/320/f15/b62320f15149d003a2fc7820b209a9d0.png\"></figure><p>К слову, после всех этих изменений итоговая оценка Performance не изменилась, поэтому тут показывать нечего. Но это лишь потому, что мы убрали всего парочку легких роутов и один небольшой компонент, так что тут чем больше и сложнее проект, тем больше может оказаться выгода от использования этих возможностей Vue и Vue Router.</p><h2>Оптимизация запросов</h2><p>Помимо всего прочего, мы можем сократить общее количество и объем запросов.<br><br>Например, на страницах, где выводится список спортсменов или тренеров на платформе, запрашивалось по 50 человек на одну страницу с пагинацией, хотя по факту, зайдя на эти страницы с телефона, пользователь сможет изначально увидеть лишь 3-5 карточек, а с десктопа 10-15, в зависимости от размера экрана. Напрашивается очевидное решение - сокращаем количество запрашиваемых спортсменов и тренеров до 15 на страницу:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a46/f65/e81/a46f65e81a313a56c1b377bf0fbc13ea.png\" width=\"1752\" height=\"1256\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a46/f65/e81/a46f65e81a313a56c1b377bf0fbc13ea.png\"></figure><p>Следующий момент, что на сайте очень много изображений (фотографии с соревнований и их превью, аватары пользователей), поэтому для изображений, которые не видны на экране при загрузке или там где есть пагинация, добавляю атрибут <code>loading=”lazy”</code>. У нас есть общий компонент для изображений, меняю его:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/0ab/c35/d0d/0abc35d0d8e523207c55266cc07740ca.png\" width=\"2180\" height=\"1844\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/0ab/c35/d0d/0abc35d0d8e523207c55266cc07740ca.png\"></figure><p>Я решил не использовать специальные библиотеки для “ленивой” подгрузки картинок, потому что поддержка этого атрибута уже достигает <a href=\"https://caniuse.com/loading-lazy-attr\" rel=\"noopener noreferrer nofollow\">практически 93%</a>.</p><p>Также с целью оптимизации количества запросов к изображениям можно добавить SVG Sprite, так как помимо иконок из библиотеки mdi, у нас есть много своих кастомных иконок. Но пока что задача по добавлению спрайта находится в процессе реализации.<br><br>Далее проходимся по коду проекта и смотрим где есть цепочки запросов с использованием <code>await</code>, когда каждый запрос ждет, пока выполнится предыдущий, хотя в некоторых случаях эти запросы не зависят друг от друга, а следовательно - могут выполняться параллельно с использованием <code>Promise.all()</code>:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/def/1e7/78b/def1e778b635931b8b5f59b5cb2f2119.png\" width=\"2752\" height=\"1172\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/def/1e7/78b/def1e778b635931b8b5f59b5cb2f2119.png\"></figure><p>Не менее важно смотреть на содержимое ответов с бэкенда и общаться с бэкенд разработчиками, чтобы сообщать им, когда в запросах есть неиспользуемые поля, которые утяжеляют запрос, или же вовсе предложить разделить какие-то большие эндпоинты на несколько более мелких, если позволяет ситуация. </p><h2>Vue 3</h2><p>Одним из улучшений показателя Performance также оказалась миграция проекта с Vue 2 на Vue 3, поэтому если вы все еще принимаете решение о таком переходе, то дополнительным аргументом “за” может быть и это.<br><br>Информацию по разнице в скорости версий Vue я нашел <a href=\"https://geckodynamics.com/blog/vue2-vs-vue3\" rel=\"noopener noreferrer nofollow\">здесь</a>. Для нас же на практике разница в Performance оказалась в 10-15 баллов в пользу Vue 3. Уверен, что у всех будут разные результаты, но таков именно наш опыт перехода.</p><h2>Редизайн</h2><p>Свой вклад в оптимизацию внесло и то, что не зависело от меня, а именно - редизайн главной страницы (будем учитывать, что очевидно на других страницах показатель Performance от этого не изменился). Вместо одного большого баннера сверху на странице появилось несколько небольших более легких изображений, которые к тому же можно загружать с помощью <code>loading=\"lazy\"</code>. Это дало еще примерно +-10 баллов:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f71/fed/cf9/f71fedcf96aee22b60aa26dd655baf3e.png\" width=\"1564\" height=\"1224\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f71/fed/cf9/f71fedcf96aee22b60aa26dd655baf3e.png\"></figure><h2>Подводим итоги</h2><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b11/969/98a/b1196998aafd6bb72fecd1dca770b371.png\" width=\"1800\" height=\"636\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b11/969/98a/b1196998aafd6bb72fecd1dca770b371.png\"></figure><p>Итак, подводим итоги и делаем выводы из проделанной работы по оптимизации:</p><ol><li><p>Получили двукратный прирост Performance (c 30-40 до 70-80 баллов).</p></li><li><p>Самый заметный результат дало грамотное подключение шрифтов (в том числе использование вариативного шрифта), библиотеки иконок и использование модульного Firebase 9.</p></li><li><p>Учитывая значимость шрифтов, нужно заранее обсуждать эту тему с дизайнером, чтобы по возможности он использовал вариативные шрифты.</p></li><li><p>Layout Shift является важным фактором в оценке Performance и сведение его к 0 дает значимый прирост этого показателя, а также улучшает опыт взаимодействия с вебсайтом для пользователей.</p></li><li><p>Довольно неплохой прирост дал Vue 3, что является еще одним аргументом в пользу миграции с Vue 2.</p></li><li><p>Async components, async routes, lazy loading, SVG sprite, оптимизация запросов - дают достаточно ограниченный результат, но тем больше, чем больше и сложнее проект.</p></li><li><p>Иногда для оптимизации достаточно и изменить дизайн, сделав его более облегченным. Но важно учитывать это изначально, иногда предостерегая дизайнера от использования, например, больших изображений.</p></li></ol><p></p>', 3, '2023-06-12 21:54:54', 964423, 76, '/ru/articles/732406/', 'Существует огромное множество статей про оптимизацию загрузки веб-сайтов, но часто они обходятся лишь общими советами или абстрактными примерами. В этой статье я хочу поделиться своим опытом комплексной оптимизации реального проекта с конкретными примерами, в данном случае SPA, написанном на Vue 3 с использованием Vuetify для части UI компонентов и Firebase для авторизации.Немного контекста: я работаю frontend-разработчиком в компании, которая в основном занимается разработкой MVP (Minimum Viable Product), но так же и разработкой и поддержкой долгоживущих продуктов. Как раз у MVP бывает много проблем, потому что минимум времени уделяется под рефакторинг и оптимизацию, а проблемы между проектами повторяются, потому что часто используется один стартовый шаблон.Возможность долго и планомерно заниматься оптимизацией у меня появилась на волонтерском проекте компании - combat-sport.club, которому можно было уделять сколько угодно свободного времени. Так что в данной статье идет речь именно о нем, но решения с него мы переносили и на другие проекты компании, т.к. стэк технологий и проблемы были одинаковые.'),
(147, 'Расширенный мониторинг производительности Vue.js', '<p>Даже самые лучшие разработчики сталкиваются с проблемами производительности своих приложений и сайтов. Бывает, мы настолько сосредоточены на создании новой фичи, что теряем из виду, какова производительность этих новых фрагментов кода. Обычное дело.</p><p>Как мы можем отслеживать производительность в динамике? Каковы должны быть наши цели? Несем ли мы, разработчики Vue.js, ответственность за все проблемы с производительностью?</p><p>Эта статья является продолжением нашего руководства <a href=\"https://madewithvuejs.com/blog/vuejs-performance-guide\">Vue.js Performance Guide</a>, в котором рассматриваются основы оптимизации производительности. Она поможет вам разобраться с мониторингом производительности и ее наиболее важными метриками.</p><h2>Обзор метрик производительности</h2><p>У каждой метрики есть свои плюсы и минусы. Мы можем собрать множество данных, но при этом неплохо бы знать их допустимые ограничения. Нужно подобрать комбинацию метрик из различных категорий, чтобы охватить процесс мониторинга производительности со всех сторон.</p><h4>Метрики производительности на основе правил (rule-based)</h4><p>Метрики, основанные на правилах, рассчитывают показатели производительности исходя из взвешенного набора измерений, как, например, показатели Lighthouse или PageSpeed.</p><p><strong>Плюсы:</strong></p><ul><li><p>Вы получаете простую метрику, которая легко может быть передана вашей команде</p></li><li><p>Это одна/несколько комбинированных метрик, которые легко отслеживать.</p></li></ul><p><strong>Минусы:</strong></p><ul><li><p>Большинство из этих показателей не основаны на реальном опыте ваших пользователей</p></li><li><p>Построение усредненной комбинированной метрики означает, что мы (чрезмерно) упрощаем ситуацию</p></li><li><p>Они вообще не применимы для использования</p></li></ul><h4>Метрики производительности, основанные на количестве</h4><p>Другая группа метрик включает в себя все, что вы можете непосредственно посчитать: Размер вашего пакета или количество запросов.</p><p><strong>Плюсы:</strong></p><ul><li><p>Данные метрики могут быстро оповестить вас о конкретных проблемах (например, о несжатых изображениях или слишком “тяжелых” сторонних пакетах) — сверх действенные [им можно доверять и на их основе принимать решения].</p></li></ul><p><strong>Минусы:</strong></p><ul><li><p>Большинство этих показателей лишь теоретически связаны с реальным пользовательским опытом.</p></li></ul><h4>Метрики производительности, ориентированные на пользователя</h4><p>Третья группа метрик показывает воспринимаемую производительность сайта, измеряя скорость загрузки, быстроту отклика и плавность.</p><p>К важным метрикам относятся, например, время отрисовки самой большой и видимой части содержимого на первом экране вашего сайта (Largest Contentful Paint, LCP), задержка первого ввода (First Input Delay, FID) и совокупное смещение макета (Cumulative Layout Shift, CLS), о которых вы можете знать в качестве показателей <a href=\"https://web.dev/vitals/?ref=madewithvuejs.com\"><strong>Google Web Vitals</strong></a>.</p><p><strong>Плюсы:</strong></p><ul><li><p>Эти метрики описывают опыт вашего пользователя, включая то, как он реагирует на взаимодействия.</p></li><li><p>Они учитывают различный опыт ваших пользователей, принимая во внимание быстрые или медленные сети, маломощные или мощные устройства...</p></li></ul><p><strong>Минусы:</strong></p><ul><li><p>Эти показатели сами по себе не настолько практичны и для улучшения результатов часто требуется метод проб и ошибок.</p></li></ul><h3>На каких показателях эффективности мне следует сосредоточиться?</h3><p>Существуют тысячи отдельных показателей, которые вы можете измерить самостоятельно, но за последние несколько лет было предпринято много усилий по стандартизации.</p><p>Хорошей отправной точкой являются показатели <a href=\"https://web.dev/vitals/?ref=madewithvuejs.com\">Google Web Vitals</a>. Чтобы помочь вам принять собственное решение, я расскажу, на что именно мы обращаем внимание в наших проектах и почему.</p><p>Для нас наиболее важными из показателей считаются те, которые основаны на пользовательском опыте. Очевидно, что мы хотим создать хороший опыт, но такой подход также неплохо зарекомендовал себя в отношении наших поисковых рейтингов. Результаты ваших Web Vitals также учитываются в рейтинге вашей страницы!</p><p><strong>Показатели, на которые мы регулярно обращаем внимание, следующие:</strong></p><ul><li><p><a href=\"https://web.dev/performance-scoring/?ref=madewithvuejs.com\">Показатель производительности Lighthouse</a>: одно очень простое значение, которое объединяет важные (ориентированные на пользователя) показатели и работает для нас как высокоуровневое саммари.</p></li><li><p><a href=\"https://web.dev/ttfb/?ref=madewithvuejs.com\">TTFB – Время до первого байта</a>: Этот показатель измеряет, сколько времени требуется пользователю для получения первого байта нашего контента. Это помогает нам выявлять проблемы, связанные с медленным временем отклика сервера.</p></li><li><p><a href=\"https://web.dev/lcp/?ref=madewithvuejs.com\">LCP – Отрисовка крупного контента</a>: Этот показатель является частью основных показателей Web Vitals. Он описывает, когда пользователям становится виден наибольший блок контента. Это важный этап в восприятии эффективности.</p></li><li><p><a href=\"https://web.dev/fid/?ref=madewithvuejs.com\">FID — задержка первого ввода</a>: Также является частью Core Web Vitals и описывает время отклика, когда пользователи пытаются впервые взаимодействовать с нашим приложением. Медленное время отклика и проблемы с интерактивностью являются непосредственным фактором разочарования пользователей. Поскольку эта метрика может быть измерена только при реальном взаимодействии с пользователем, мы используем <a href=\"https://web.dev/tbt/?ref=madewithvuejs.com\">TBT — Total Blocking Time</a> [суммарное время абсолютно всех интервалов от первой отрисовки контента до полной загрузки страницы] для проверки и отладки без данных пользователя.</p></li><li><p><a href=\"https://web.dev/cls/?ref=madewithvuejs.com\">CLS — совокупное смещение контента</a>: Третий показатель Core Web Vital измеряет визуальную стабильность страницы при ее загрузке. Например, сильно ли она прыгает при загрузке изображений?</p></li></ul><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/75c/bb0/1a4/75cbb01a4a4bd94ebaea01fe4302cfc9.png\" alt=\"\" title=\"\" width=\"1600\" height=\"1452\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/75c/bb0/1a4/75cbb01a4a4bd94ebaea01fe4302cfc9.png\"></figure><p>Это хороший набор для того, чтобы начать, который можно легко проверить как вручную с помощью встроенных инструментов разработчика devtools, так и с помощью автоматизированных рабочих процессов:</p><ul><li><p><a href=\"https://web.dev/lighthouse-ci/?ref=madewithvuejs.com\">Выполняйте аудит Lighthouse программно с помощью Lighthouse CI</a></p></li><li><p><a href=\"https://web.dev/incorporate-performance-budgets-into-your-build-tools/?ref=madewithvuejs.com\">Проверяйте код на соответствие целям производительности в процессе сборки</a></p></li><li><p><a href=\"https://github.com/WPO-Foundation/webpagetest-docs/blob/main/src/scripting.md?ref=madewithvuejs.com\">Планируйте взаимодействия со страницами с помощью WebPageTest для создания многоэтапных тестов</a></p></li><li><p>Используйте <a href=\"https://www.sitespeed.io/?ref=madewithvuejs.com\">бесплатные инструменты с открытым исходным кодом от sitespeed.io</a> для непрерывного измерения показателей веб-производительности и отображения данных на дашборде</p></li></ul><p>Лично мы используем некоторые автоматизированные \"лабораторные\" проверки при разработке, но при этом отслеживаем нашу реальную производительность в динамике с помощью нашего решения для мониторинга Sentry.</p><p><a href=\"https://madewithvuejs.com/sentry-for-vue\"><strong>Sentry for Vue — Vue Error &amp; Performance Monitoring — Made with Vue.js</strong></a></p><p><em>Дисклеймер:</em> Sentry является спонсором сообщества MadeWithVueJS, но мы сотрудничаем с ними, потому что сами являемся активными пользователями!</p><p>Данные на нашем дашборде Sentry собираются в \"поле\": оно логирует все взаимодействия пользователей с нашими приложениями, что позволяет нам получить некоторые интересные сведения о производительности:</p><ul><li><p><strong>Разочарование пользователя (User misery):</strong> пользовательская метрика Sentry, которая подсчитывает количество пользователей, которые были разочарованы из-за неудовлетворительного времени отклика. Это помогает нам быстро выявлять и устранять проблемы, имеющие большое значение для наших пользователей.</p></li><li><p><strong>Apdex: Apdex (Application Performance Index): </strong>стандартная отраслевая метрика для измерения общей удовлетворенности пользователей временем отклика приложения, рассчитывающая соотношение удовлетворительного и неудовлетворительного опыта. Она не имеет практического значения, но все же это неплохой высокоуровневый показатель для отслеживания.</p></li><li><p><strong>Тренды (Trends) / Наиболее регрессивные транзакции:</strong> Мы получаем список транзакций, которые раньше были более производительными, но в последнее время регрессировали. Поскольку мы постоянно осуществляем деплой, это помогает нам отслеживать проблемы, возникающие в новых релизах.</p></li></ul><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/c6f/4e4/5c4/c6f4e45c4218bcce78a6b16a4d097245.png\" alt=\"\" title=\"\" width=\"1600\" height=\"955\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/c6f/4e4/5c4/c6f4e45c4218bcce78a6b16a4d097245.png\"></figure><h3>Преимущества инструментов мониторинга производительности</h3><p>По правде говоря, мы — небольшая прагматичная команда. И используем инструмент мониторинга не потому, что нам нравится просматривать данные, а по причине, что это облегчает нашу жизнь и улучшает пользовательский опыт.</p><ul><li><p>Уведомления о проблемах UX и производительности: Мы настроили оповещения, когда ключевые показатели для важных страниц / транзакций начинают ухудшаться.</p></li><li><p>Информация о сквозной отладке: Мы можем отслеживать проблемы по всему нашему стеку (Vue.js + Laravel), а также видеть информацию о недостатках, специфичных для фреймворка / Vue. (Прочитайте нашу статью о том, <a href=\"https://madewithvuejs.com/blog/how-we-debugged-a-vue-error-by-tracing-it-to-a-backend-problem\">как мы отследили проблему производительности от фронтенда до бэкенда</a>, чтобы представить, как это происходит).</p></li><li><p>Качество данных: Данные от <em>наших </em>пользователей и клиентов, по нашему мнению, являются наиболее значимыми и надежными.</p></li></ul><p>Независимо от того, какой инструмент мониторинга производительности вы выберете, большинство из них довольно просто настроить под ваши приложения. Это стоит того — ради душевного спокойствия, которое вы получите!</p><h3>Отслеживание производительности Vue.js в devtools</h3><p>Если вы хотите более подробно промониторить процессы загрузки вашего приложения Vue, активируйте режим производительности (performance). Установив для параметра <code>app.config.performance</code> в приложениях Vue значение <code>true</code>, вы увидите временную шкалу на вкладке производительности / панели временной шкалы. (Примечание: это работает только в режиме dev!)</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/822/dfd/f1a/822dfdf1a4c01454386b3bb166a33da5.png\" alt=\"\" title=\"\" width=\"1600\" height=\"666\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/822/dfd/f1a/822dfdf1a4c01454386b3bb166a33da5.png\"></figure><p>Он показывает, когда каждый компонент был инициирован (создан экземпляр), отрендерен (создана структура VDom) и запатчен (структура VDom была добавлена в реальный DOM). Это может помочь вам определить, какой из компонентов может быть причиной снижения производительности вашего приложения, и сохранить душевное равновесие во время его отладки.</p><h2>Цели и бюджеты производительности</h2><p>Прежде чем приступить к измерениям и мониторингу, неплохо бы определить некоторые целевые значения. Мы хотим, чтобы наше приложение загружалось быстро, но в каких случаях мы считаем его \"медленным\"? Когда мы проваливаем тест, и когда мы хотим получить предупреждение?</p><p>Примеры целей могут выглядеть следующим образом:</p><ul><li><p>Страницы наших продуктов должны иметь &gt; 90 баллов по результатам аудита производительности Lighthouse</p></li><li><p>Дашборд нашего приложения должен быть готов к использованию (полностью загружен и интерактивен) менее чем за 5 секунд</p></li><li><p>Наша стартовая страница должна быть визуально готова менее чем за 4 секунды</p></li><li><p>…</p></li></ul><p>Этот набор ограничений для наших показателей производительности также называется бюджетом производительности.</p><h3>Как определить бюджет производительности для моего приложения?</h3><p>Ограничения и метрики в вашем бюджете будут уникальными, так как это зависит от типа приложения, которое вы создаете. Нужно ли вам загружать много данных и изображений, или оно ориентировано на текст? Нужно ли вам загружать контент в режиме реального времени или вы будете отображать только статичные списки?</p><p>Для составления первого бюджета производительности определите основные страницы, такие как стартовая страница, важные целевые страницы, дашборд вашего приложения, корзина, страницы продуктов и т.д.</p><p>Затем вы можете попробовать эти стратегии:</p><ul><li><p>Ориентируйтесь на рекомендуемые значения / бенчмарки для ваших показателей (см., например, <a href=\"https://web.dev/defining-core-web-vitals-thresholds/?ref=madewithvuejs.com\">рекомендуемые пороговые значения для Core Web Vitals</a>)</p></li><li><p>Измерьте свой статус-кво и постарайтесь улучшить результат на 20%</p></li><li><p>Измерьте своих конкурентов и постарайтесь улучшить результат на 20%</p></li></ul><p>Если вы ничего не измеряли раньше, то обычно не составляет труда добиться оптимизации результатов на 20% (см. основные стратегии в нашем <a href=\"https://madewithvuejs.com/blog/vuejs-performance-guide\">руководстве по производительности Vue.js</a>). Затем постарайтесь оставаться в рамках этого бюджета в течение долгого времени!</p><h3>Нужен ли мне бюджет производительности как разработчику Vue?</h3><p>Ваш фронтенд Vue — это только одна часть, которая вносит свой вклад в хорошую производительность. Бюджет производительности также расходуется при выборе шрифтов вашими дизайнерами, потребности вашего менеджера по маркетингу в виджете чата и производительности API вашего бэкенд-инженера.</p><p>Тем не менее, JavaScript — одна из самых дорогих частей вашего бюджета, особенно если вы создаете SPA (Single-Page Applications. Одностраничные приложения). Ваше влияние на производительность очень велико!</p><p>Бюджет производительности — это отличный способ взять на себя свою часть ответственности и начать диалог с коллегами о производительности.</p><p>Вы можете поделиться некоторыми <a href=\"https://wpostats.com/?ref=madewithvuejs.com\">тематическими исследованиями, показывающими влияние оптимизации показателей производительности на бизнес</a>, или обсудить <a href=\"https://web.dev/patterns/web-vitals-patterns/?ref=madewithvuejs.com\">шаблоны UX, оптимизированные для Core Web Vitals</a>.</p><p>Производительность — это всегда непрерывная командная работа.</p><hr><p>Материал подготовлен в преддверии старта <a href=\"https://otus.pw/rOSR/\">онлайн-курса «Vue.js разработчик».</a></p><p></p>', 3, '2023-06-12 21:54:55', 514769, 80, '/ru/companies/otus/articles/730762/', 'Даже самые лучшие разработчики сталкиваются с проблемами производительности своих приложений и сайтов. Бывает, мы настолько сосредоточены на создании новой фичи, что теряем из виду, какова производительность этих новых фрагментов кода. Обычное дело.Как мы можем отслеживать производительность в динамике? Каковы должны быть наши цели? Несем ли мы, разработчики Vue.js, ответственность за все проблемы с производительностью?Эта статья является продолжением нашего руководства Vue.js Performance Guide, в котором рассматриваются основы оптимизации производительности. Она поможет вам разобраться с мониторингом производительности и ее наиболее важными метриками.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(148, 'Улучшение реактивности с помощью VueUse', '<p><a href=\"https://vueuse.org/\">VueUse</a> — это библиотека из более чем 200 служебных функций, которые можно использовать для взаимодействия с целым рядом API, включая интерфейсы для браузера, состояния, сети, анимации и времени. Эти функции позволяют разработчикам легко добавлять реактивные возможности в свои проекты Vue.js, помогая им с легкостью создавать мощные и отзывчивые пользовательские интерфейсы.</p><p>Одна из самых интересных фич VueUse — поддержка прямого манипулирования реактивными данными. Это означает, что разработчики могут запросто обновлять данные в режиме реального времени, не используя сложный и подверженный ошибкам код. Благодаря этому легко создавать приложения, которые могут реагировать на изменения в данных и соответствующим образом обновлять пользовательский интерфейс без необходимости ручного вмешательства.</p><p>Цель этой статьи — изучить некоторые утилиты VueUse, которые помогут нам улучшить реактивность в нашем приложении Vue 3.</p><p>Давайте начнем!</p><h3>Инсталляция</h3><p>Чтобы начать, давайте настроим среду разработки Vue.js. В этом руководстве мы будем использовать Vue.js 3 и composition API (API композиции), поэтому если вы до сих с ним еще не знакомы, вам повезло. Исчерпывающий курс от Vue School поможет вам начать работу и почувствовать себя уверенно при использовании <a href=\"https://vueschool.io/courses/vue-3-composition-api\">composition AP</a>I.</p><pre><code class=\"javascript\">//create vue project with Vite\nnpm create vite@latest reactivity-project -- --template vue\n\ncd reactivity-project\n\n//install dependencies\nnpm install\n\n//Start dev server\nnpm run dev</code></pre><p>Теперь наш проект Vue.js запущен и работает. Давайте инсталлируем библиотеку VueUse, выполнив следующую команду:</p><pre><code>npm install vueuse</code></pre><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/cba/f9f/539/cbaf9f5396d38a9a89d69c5c4f8f0de1.png\" alt=\"\" title=\"\" width=\"1333\" height=\"928\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/cba/f9f/539/cbaf9f5396d38a9a89d69c5c4f8f0de1.png\"></figure><p>Установив VueUse, можно начать изучение некоторых утилит VueUse.</p><h3>refDebounced</h3><p>Используя функцию <code>refDebounced</code>, вы можете создать “отложенную” (debounced) версию ref (cсылки), которая будет обновлять свое value (значение) только после определенного времени, прошедшего без каких-либо новых изменений в значении ref. Это может быть полезно в случаях, когда вы хотите отложить обновление значения ref, чтобы избежать ненужных апдейтов, а также при выполнении ajax-запроса (например, при вводе поиска) или для повышения производительности.</p><p>Теперь давайте посмотрим, как мы можем использовать <code>refDebounced</code> на примере.</p><pre><code class=\"javascript\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;input type=\"text\" v-model=\"myText\" /&gt;\n    &lt;p&gt;{{ debounced }}&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref } from \"vue\";\nimport { refDebounced } from \"@vueuse/core\";\nconst myText = ref(\"hello\");\nconst debounced = refDebounced(myText, 1000);\n&lt;/script&gt;</code></pre><p>Теперь при изменении значения <code>myText</code> значение <code>debounced</code> не будет обновляться до тех пор, пока не пройдет хотя бы 1 секунда без каких-либо дальнейших коррекций значения  <code>myText</code>.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/getpro/habr/upload_files/370/c90/be5/370c90be53b13d09bfb8b2bbbf8f170a.gif\" width=\"938\" height=\"518\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/370/c90/be5/370c90be53b13d09bfb8b2bbbf8f170a.gif\"></figure><h3>useRefHistory</h3><p>Утилита \"useRefHistory\"  это составляющая VueUse, которая позволяет отслеживать историю значения ref (ссылки). Она обеспечивает доступ к предыдущим значениям ref, а также к ее текущему значению.</p><p>Используя функцию <code>useRefHistory</code>, вы можете легко реализовать в своем приложении Vue.js такие фичи, как undo/redo (отмена/повтор) или time travel debugging (обратная отладка).</p><p>Давайте попробуем рассмотреть базовый пример.</p><pre><code class=\"javascript\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;form action=\"#\" @submit.prevent=\"changeText()\"&gt;\n      &lt;input type=\"text\" v-model=\"inputText\" /&gt; &lt;button&gt;Submit&lt;/button&gt;\n    &lt;/form&gt;\n    &lt;p&gt;{{ myText }}&lt;/p&gt;\n    &lt;button @click=\"undo\"&gt;Undo&lt;/button&gt;\n    &lt;button @click=\"redo\"&gt;Redo&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref } from \"vue\";\nimport { useRefHistory } from \"@vueuse/core\";\nconst myText = ref(\"hello\");\nconst inputText = ref(\"\");\nconst { history, undo, redo } = useRefHistory(myText);\n\nconst changeText = () =&gt; {\n  myText.value = inputText.value;\n};\n\n&lt;/script&gt;</code></pre><p>В приведенном выше примере у нас есть базовая форма для изменения текста hello на любой вводимый в форму. Затем мы связываем состояние <code>myText</code> с функцией <code>useRefHistory</code>, которая может отслеживать историю состояния <code>myText</code>. Вставляем кнопки redo и undo, чтобы откатится во времени по нашей истории и просматривать прошлые значения.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/getpro/habr/upload_files/86f/b9a/4d4/86fb9a4d42168d73647f7a1fbac744e3.gif\" width=\"938\" height=\"518\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/86f/b9a/4d4/86fb9a4d42168d73647f7a1fbac744e3.gif\"></figure><h3>refAutoReset</h3><p>Используя composable (компонуемую) функцию <code>refAutoReset</code>, вы можете создавать ссылки, которые автоматически сбрасываются до значения по умолчанию после некоторого периода бездействия, что может быть полезно в случаях, когда вы хотите предотвратить отображение устаревших данных или сбросить входы формы по истечении определенного времени.</p><p>Давайте рассмотрим пример.</p><pre><code class=\"javascript\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;form action=\"#\" @submit.prevent=\"changeText()\"&gt;\n      &lt;input type=\"text\" v-model=\"myText\" /&gt; &lt;button&gt;Submit&lt;/button&gt;\n    &lt;/form&gt;\n    &lt;p&gt;{{ message }}&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref } from \"vue\";\nimport { refAutoReset } from \"@vueuse/core\";\nconst myText = ref(\"\");\nconst message = refAutoReset(\"default message\", 5000);\n\nconst changeText = () =&gt; {\n  message.value = myText.value;\n};\n&lt;/script&gt;</code></pre><p>Теперь при каждом изменении значения message (сообщение) отсчет времени на сброс значения до 0 будет прекращен. Если пройдет 5 секунд без каких-либо изменений значения <code>message</code>, то оно будет сброшено до <code>default message</code> (по умолчанию).</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/getpro/habr/upload_files/47b/921/ca9/47b921ca97ee784abf1a5f9b3253cdb9.gif\" width=\"938\" height=\"518\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/47b/921/ca9/47b921ca97ee784abf1a5f9b3253cdb9.gif\"></figure><h3>refDefault</h3><p>С помощью <code>composable refDefault</code> вы можете создавать ссылки, которые имеют дефолтное значение, используемое, когда значение ссылки <code>undefined</code> (не определено), что может быть полезно в случаях, если необходимо обеспечить, чтобы ref всегда имела значение или предоставить значение по умолчанию для ввода формы.</p><pre><code class=\"javascript\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;input type=\"text\" v-model=\"myText\" /&gt;\n    &lt;p&gt;{{ myText }}&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { refDefault } from \"@vueuse/core\";\nconst myText = refDefault(\"hello\");\n&lt;/script&gt;</code></pre><p>В нашем примере, когда значение <code>myText</code> становится <code>undefined</code>, она переключается на <code>hello</code>.</p><h3>ComputedEager</h3><p>Иногда использование вычисляемого свойства может оказаться неподходящим инструментом, поскольку его ленивая оценка может ухудшить производительность. Давайте рассмотрим наглядный пример.</p><pre><code class=\"javascript\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;p&gt;{{ counter }}&lt;/p&gt;\n    &lt;button @click=\"counter++\"&gt;Increase&lt;/button&gt;\n    &lt;p&gt;Greater than 100: {{checkCount}} &lt;/p&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref, computed } from \"vue\";\n\nconst counter = ref(0)\n\nconst checkCount = computed(() =&gt; {\n    return this.counter &gt;  5\n})\n&lt;/script&gt;</code></pre><p>В нашем примере мы видим, что для того, чтобы значение <code>checkCount</code> было истинным, нам придется кликнуть по кнопке increase (увеличить) 6 раз. Может показаться, что состояние <code>checkCount</code> отображается только дважды, то есть при загрузке страницы и когда значение <code>counter.value</code> достигает 6, но это не так. Каждый раз, когда мы запускаем вычисляемую функцию, наше состояние рендерится заново, то есть состояние <code>checkCount</code> рендерится 6 раз, что иногда влияет на производительность.</p><p>Именно здесь нам на помощь приходит <code>computedEager</code>. <code>ComputedEager</code> повторно рендерит наше обновленное состояние только тогда, когда это необходимо.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/getpro/habr/upload_files/9e1/659/864/9e1659864787caefe364b03cfe21cf2a.gif\" width=\"938\" height=\"518\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/9e1/659/864/9e1659864787caefe364b03cfe21cf2a.gif\"></figure><p>Теперь давайте проведем усовершенствование нашего примера с помощью <code>computedEager</code>.</p><pre><code class=\"javascript\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;p&gt;{{ counter }}&lt;/p&gt;\n    &lt;button @click=\"counter--\"&gt;Undo&lt;/button&gt;\n    &lt;p&gt;Greater than 5: {{checkCount}} &lt;/p&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref } from \"vue\";\nimport { computedEager } from \'@vueuse/core\'\n\nconst counter = ref(0)\n\nconst checkCount = computedEager(() =&gt; {\n  return this.counter &gt;  5\n})\n\nwatchEffect(() =&gt; {\n  console.log(checkCount.value);\n  render.value++;\n});\n&lt;/script&gt;</code></pre><p>Теперь наш checkCount выполняет повторный рендеринг только тогда, когда счетчик больше 5.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/getpro/habr/upload_files/109/46b/6df/10946b6dfc0fc4efa38da4d3472de715.gif\" width=\"876\" height=\"334\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/109/46b/6df/10946b6dfc0fc4efa38da4d3472de715.gif\"></figure><h3>Заключение</h3><p>В целом, VueUse — это набор служебных функций, которые могут значительно повысить реактивность ваших проектов Vue.js. Существует множество других функций, помимо упомянутых здесь, поэтому обязательно изучите <a href=\"https://vueuse.org/\">официальную документацию</a>, чтобы узнать обо всех возможностях. Кроме того, если вы хотите получить практическое руководство по использованию VueUse, онлайн-курс <a href=\"https://vueschool.io/courses/vueuse-for-everyone\">VueUse для всех</a> от Vue School — отличный ресурс для начала работы.</p><p>С помощью VueUse вы можете легко отслеживать и управлять состоянием приложения, создавать реактивные вычисляемые свойства и выполнять сложные операции с минимальным количеством кода. Они [набор служебных функций VueUse] являются жизненно важным компонентом экосистемы Vue.js и могут значительно повысить эффективность и эксплуатационную надежность ваших проектов.</p><hr><p>AstroJS — это JS фреймворк, который может работать как SSG (генератор статических сайтов) так обеспечивать SSR (рендеринг на стороне сервера). Это универсальный инструмент для создания быстрых, контентных веб‑сайтов на популярных фронтенд фреймворках типа Vue, React, Svelte.</p><p>Как начать использовать Astro c Vue.js? Поговорим на <a href=\"https://otus.pw/igFs/\">открытом уроке</a> 20 апреля, который пройдет в рамках онлайн-курса «Vue.js разработчик». На этом уроке посмотрим на фактическое использование компонентов Vue в AstroJS.</p><ul><li><p><a href=\"https://otus.pw/igFs/\">Записаться на открытый урок</a></p></li></ul><p></p>', 2, '2023-06-12 21:54:55', 612713, 80, '/ru/companies/otus/articles/728068/', 'VueUse — это библиотека из более чем 200 служебных функций, которые можно использовать для взаимодействия с целым рядом API, включая интерфейсы для браузера, состояния, сети, анимации и времени. Эти функции позволяют разработчикам легко добавлять реактивные возможности в свои проекты Vue.js, помогая им с легкостью создавать мощные и отзывчивые пользовательские интерфейсы.Одна из самых интересных фич VueUse — поддержка прямого манипулирования реактивными данными. Это означает, что разработчики могут запросто обновлять данные в режиме реального времени, не используя сложный и подверженный ошибкам код. Благодаря этому легко создавать приложения, которые могут реагировать на изменения в данных и соответствующим образом обновлять пользовательский интерфейс без необходимости ручного вмешательства.Цель этой статьи — изучить некоторые утилиты VueUse, которые помогут нам улучшить реактивность в нашем приложении Vue 3.'),
(149, 'Pinia scoped store', '<h2>Проблема</h2><p>На сегодняшний день все стейт-менеджеры экосистемы Vue (изначально Vuex, впоследствии Pinia, на примере которой и будет рассмотрена проблема) предоставляют глобальное централизованное хранилище, привязанное к корню приложения. И это замечательно: думаю, практически каждый читатель пользовался бенефитами данного подхода, будь то доступ к стору на любом уровне вложенности или переиспользование данных между различными блоками страницы. Однако у текущей системы есть одно важное ограничение - глобальные модули Pinia стора не позволяют создавать независимые состояния для <strong>инстансов</strong> одного компонента/модуля. Приведу несколько примеров.</p><p>Мы в YCLIENTS столкнулись с этой проблемой, когда пытались переиспользовать крупный и сложный модуль оплат между вкладками одного модального окна. В окне одновременно могут сосуществовать несколько инстансов модуля, состояния которых хранятся в сторе и должны быть полностью независимы друг от друга, что в разрез с концепцией единого глобального хранилища из Pinia.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/getpro/habr/upload_files/b21/d50/775/b21d50775bb2d3a729a43fa9c525ff1f.gif\" alt=\"\" title=\"\" width=\"800\" height=\"395\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b21/d50/775/b21d50775bb2d3a729a43fa9c525ff1f.gif\"></figure><p>С похожей проблемой столкнулись <a href=\"https://github.com/vuejs/pinia/discussions/840\" rel=\"noopener noreferrer nofollow\"><u>пользователи Pinia на GitHub</u></a>:</p><blockquote><p>Cуществуют кейсы, когда на одной странице необходимо отобразить несколько датагридов (к примеру, сравнение различных наборов данных). Таким образом, состояния деревьев компонентов каждого датагрида должны быть независимы друг от друга</p></blockquote><p>Также стоит отметить, что во frontend-разработке нет единых правил по работе со сторами. В них хранят совершенно разные по типу и объемам данные. Мне встречались проекты, где даже небольшие переиспользуемые компоненты/блоки имели свои сторы. В целом сторов становится всё больше — одним из трендов последнего времени является переход от единого монолита к работе с множеством маленьких, специализированных хранилищ (Pinia и Effector яркий тому пример). Всё это (тенденции индустрии и разнообразие подходов к работе со сторами) делает проблему значительно более актуальной.</p><h3>Решения от сообщества</h3><p>В комментариях под дискуссией сообщество (при содействии одного из мейнтенеров Pinia) предложило несколько решений (<a href=\"https://github.com/vuejs/pinia/discussions/840?sort=old#discussioncomment-2784643\" rel=\"noopener noreferrer nofollow\"><u>раз</u></a> и <a href=\"https://github.com/vuejs/pinia/discussions/840?sort=old#discussioncomment-3210443\" rel=\"noopener noreferrer nofollow\"><u>два</u></a>). Однако их все объединяет одна главная особенность — использование кастомного идентификатора для доступа к стору (в решениях выше это tableId или listViewId). Без идентификатора сторонние компоненты не смогут получить доступ к нужному модулю Pinia. Следовательно, необходимо реализовать механизм хранения и передачи кастомных идентификаторов (ведь подобных сторов может быть несколько) всем использующим данный модуль компонентам, в том числе компонентам-потомкам. Решив одну проблему, мы получили другую.</p><p>Отдельного внимания заслуживает библиотека <a href=\"https://github.com/ccqgithub/pinia-di\" rel=\"noopener noreferrer nofollow\"><u>pinia-di</u></a>. С ее помощью можно решить вышеописанную проблему, но представленный подход значительно сложнее подхода Pinia. Скорее всего, команде потребуется время на его изучение и внедрение. Фактически авторы предлагают новый синтаксис работы со стором, который во многом идет вразрез с главными преимуществами и принципами Pinia: простотой и доступностью. Кажется необходимо решение, которое будет больше похоже на оригинальный синтаксис.</p><h2>Мой вариант решения</h2><p>Pinia стор, привязанный к скоупу (или <strong>Pinia scoped стор</strong>). В данном случае скоупом (или областью видимости) является инстанс компонента, который первым в иерархии использовал данный стор. Все дочерние компоненты данного инстанса получают доступ к нужному стору автоматически, <strong>передача идентификатора скоупа происходит под капотом</strong>, разработчику не нужно продумывать этот механизм или менять стандартный подход к работе со сторами. При использовании модуля в параллельной иерархии создается новый, независимый стор, доступ к которому потомки также получат автоматически.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/284/359/1af/2843591af54984450dd39bd39103d67c.png\" alt=\"\" title=\"\" width=\"1600\" height=\"705\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/284/359/1af/2843591af54984450dd39bd39103d67c.png\"></figure><p>В итоге в каждой иерархии будет использоваться свой отдельный стор (storeModuleName/3 и storeModuleName/6 на картинке выше), скоупом которого является инстанс инициализирующего компонента.</p><p>Этого удалось добиться за счет двух важных концепций:</p><ol><li><p>Создание стора (вызов оригинального defineStore()) происходит в момент непосредственного использования, что позволяет привязаться к скоупу(инстансу компонента)</p></li><li><p>Для передачи идентификатора компонентам скоупа используется provide/inject. При этом получение и отправка идентификатора происходят под капотом, внутри функции useStore</p></li></ol><p>Теперь перейдем к реализации. За основу взят <a href=\"https://github.com/vuejs/pinia/blob/v2/packages/pinia/src/store.ts#L852\" rel=\"noopener noreferrer nofollow\"><u>source код функции defineStore</u></a>. Типизация практически полностью скопирована из оригинала (Vue core team активно используют as и any, поэтому и я не стал их избегать). В комментарии добавлены пояснения по каждому важному шагу:</p><pre><code class=\"typescript\">import {defineStore, Pinia, StoreDefinition, StoreGeneric, getActivePinia} from \'pinia\'\nimport {inject, getCurrentInstance, onUnmounted, ComponentInternalInstance, InjectionKey} from \'vue\'\n\n// id и piniaId.\n// id - это первый аргумент функции defineScopeYcStore. К примеру, RecordAcquiringPaymentRedesign.\n// piniaId - id стора в pinia, содержит в себе идентификтор скоупа. К примеру, RecordAcquiringPaymentRedesign/123124123123123, где 123124123123123 - идентификатор скоупа(в качестве идентификатора скоупа используется uid первого компонента иерархии, в котором использовался стор)\n//\n// scopedStoresIdsByScope содержит информацию о том, в каких скоупах(scopeId) и какие именно сторы(id и piniaId) создавались.\n// Позволяет для данного скоупа(scopeId) получить id и piniaId всех созданных в данном скоупе сторов. Используется для предотвращения повторного создания сторов с одниковым скоупом\ntype ScopedStoresIds = {[id in string]: string} // {RecordAcquiringPaymentRedesign: \'RecordAcquiringPaymentRedesign/123124123123123\', ...}\nconst scopedStoresIdsByScope: {[scopeId in string]: ScopedStoresIds} = {} // {123123: {RecordAcquiringPaymentRedesign: \'RecordAcquiringPaymentRedesign/123124123123123\', ...}}\n\n//  Содержит ссылки на созданные ранее scoped сторы. Ключом является piniaId, значением - стор\nconst scopedStoresByPiniaId: {[piniaId in string]: ReturnType&lt;typeof defineStore&gt;} = {}\n\nexport const defineScopedStore: typeof defineStore = function( // Сигнатуру функции скопировал из сорсов defineStore (https://github.com/vuejs/pinia/blob/v2/packages/pinia/src/store.ts#L852)\n  idOrOptions: any,\n  setup?: any,\n  setupOptions?: any,\n): StoreDefinition {\n  let id\n  let options\n  // На основе входящи параметров выделяем id и options. Скопировал из сорсов defineStore\n  const isSetupStore = typeof setup === \'function\'\n  if (typeof idOrOptions === \'string\') {\n    id = idOrOptions\n    options = isSetupStore ? setupOptions : setup\n  } else {\n    options = idOrOptions\n    id = idOrOptions.id\n  }\n\n  function useStore(pinia?: Pinia | null | undefined, hot?: StoreGeneric): StoreGeneric {\n    const currentInstance = getCurrentInstance()\n    if (currentInstance === null) {\n      throw new Error(\'Scoped stores can not be used outside of Vue component\')\n    }\n\n    const scopeId = currentInstance.uid // Если опасаетесь использовать uid компонента в качестве идентификатора скоупа - можно самостоятельно проставлять всем компонентам уникальный id с помощью простенького плагина(https://github.com/vuejs/vue/issues/5886#issuecomment-308647738) и опираться на него\n    let piniaId: string | undefined // Id нужного нам scoped стора в pinia\n\n    // Проверяем, создавался ли ранее нужный нам стор в текущем компоненте или компонентах-предках. Пытаемся получить piniaId scoped стора\n    if (scopedStoresIdsByScope?.[scopeId]?.[id]) {\n      piniaId = scopedStoresIdsByScope[scopeId][id]\n    } else {\n      piniaId = inject&lt;string&gt;(id)\n    }\n\n    // Если scoped стор уже создан(удалось получить piniaId) - возвращаем его\n    if (piniaId &amp;&amp; scopedStoresByPiniaId[piniaId]) {\n      return scopedStoresByPiniaId[piniaId](pinia, hot)\n    }\n\n    // Если выяснилось, что scoped стор еще не создавался(не удалось получить piniaId) - создаем его\n    // piniaId = id стора + идентификатор скоупа\n    piniaId = `${id}/${scopeId}`\n\n    // Создаем стор и сохраняем на него ссылку в scopedStoresByPiniaId\n    if (isSetupStore) {\n      scopedStoresByPiniaId[piniaId] = defineStore(piniaId, setup, options)\n    } else {\n      scopedStoresByPiniaId[piniaId] = defineStore(piniaId, options)\n    }\n\n    // Сохраняем piniaId и id стора в scopedStoresIdsByScopeId\n    scopedStoresIdsByScope[scopeId] = scopedStoresIdsByScope[scopeId] ?? {}\n    scopedStoresIdsByScope[scopeId][id] = piniaId\n\n    // После создания стора провайдим его piniaId всем потомкам. Так они смогут получить к нему доступ\n    // Для совместимости с Options API и map-фукнциями пришлось добавить в provide возможность задавать извне инстанс компонента-провайдера. Подробнее ниже\n    // Важно! Если работаете только в Composition API - лучше заменить на обычный provide\n    provideInInstance(id, piniaId, currentInstance)\n\n    // Удаляем стор при удалении скоупа. Нет скоупа - нет scoped стора\n    onUnmounted(() =&gt; {\n      const pinia = getActivePinia()\n\n      if (!pinia || !piniaId) return\n\n      delete pinia.state.value[piniaId] // Взял из api документации pinia (https://pinia.vuejs.org/api/interfaces/pinia._StoreWithState.html#Methods-$dispose)\n      delete scopedStoresByPiniaId[piniaId]\n      delete scopedStoresIdsByScope[scopeId]\n    }, currentInstance)\n\n    // Возвращаем созданный стор\n    return scopedStoresByPiniaId[piniaId](pinia, hot)\n  }\n\n  useStore.$id = String(Date.now()) // В scoped сторах id присваивается позже, в момент использования стора. Нужно лишь для типизации\n\n  return useStore\n}\n\n// Vue core team убрали provides из общедоступного типа ComponentInternalInstance, пришлось его вернуть. Типизацию скопировал из сорсов ComponentInternalInstance (https://github.com/vuejs/core/blob/98f1934811d8c8774cd01d18fa36ea3ec68a0a54/packages/runtime-core/src/component.ts#L245)\ntype ComponentInternalInstanceWithProvides = ComponentInternalInstance &amp; {provides?: Record&lt;string, unknown&gt;}\n\n// Пришлось добавить в provide возможность задавать извне инстанс компонента-провайдера. Код практически полностью скопировал из сорсов provide, единственное отличие - currentInstance передается аргументом извне (https://github.com/vuejs/core/blob/98f1934811d8c8774cd01d18fa36ea3ec68a0a54/packages/runtime-core/src/apiInject.ts#L8)\nconst provideInInstance = &lt;T&gt;(key: InjectionKey&lt;T&gt; | string | number, value: T, instance: ComponentInternalInstanceWithProvides) =&gt; {\n  let provides = instance.provides!\n\n  const parentProvides =\n    instance.parent &amp;&amp; (instance.parent as ComponentInternalInstanceWithProvides).provides\n  if (parentProvides === provides) {\n    provides = instance.provides = Object.create(parentProvides)\n  }\n\n  provides[key as string] = value\n}</code></pre><p><a href=\"https://github.com/knerok/defineScopedStore/blob/main/defineScopedStore.ts\" rel=\"noopener noreferrer nofollow\"><u>Версия без комментариев</u></a></p><p>Текущее решение работает как в Compotition API, так и в Options API (совместимо с  mapState, mapWritableState, mapGetters и mapActions). Сигнатура функции defineScopedStore полностью соответствует сигнатуре оригинальной defineStore.</p><p>Обратите внимание на функцию provideInInstance. Если работаете только в Composition API или не пользуетесь map-функциями, лучше заменить её на стандартный provide.</p><details class=\"spoiler\"><summary>Подробнее о замене provide</summary><div class=\"spoiler__content\"><p>Проблема заключается в том, что currentInstance для provide сетится во время вызова setup-функции, а вызов некоторых map-функций(например, mapState) происходит <strong>перед</strong> вызовом setup. В итоге в некоторых map-функциях provide не работает, так как не может найти currentInstance. Пришлось передавать currentInstance напрямую</p></details><h2>Пример из нашей практики</h2><p>Рассмотрим использование scoped-стора в продуктовом коде YCLIENTS на примере модуля оплаты. Первым шагом создадим модуль scoped стора recordPayment (синтаксис и набор опций полностью идентичны стандартному стору Pinia):</p><pre><code class=\"typescript\">export const useRecordPaymentStore = defineScopeYcStore(\'RecordPayment\', { // можно использовать любой поддерживаемый Pinia синтаксис \n state: () =&gt; ({\n   isPaid: false,\n }),\n actions: {\n   setIsPaid(val: boolean) {\n     this.isPaid = val\n   },\n },\n})</code></pre><p>Переходим к компонентам. Точкой входа в модуль оплаты является компонент VPayment.vue. Именно в нем впервые используется и инициируется scoped стор recordPayment:</p><pre><code class=\"typescript\">export default defineComponent({\n name: \'VPayment\',\n setup() {\n  …\n\n  return {\n   recordPaymentStore: useRecordPaymentStore(),\n  }\n },\n})\n</code></pre><p>Дочерние компоненты (в данном примере компонент VPaymentLoyaltyMethod.vue) модуля VPayment.vue обращаются к стору recordPayment точно также, как если бы это был стандартный Pinia стор:</p><pre><code class=\"typescript\">export default defineComponent({\n name: \'VPaymentLoyaltyMethod\',\n setup() {\n  ...\n\n  return {\n   recordPaymentStore: useRecordPaymentStore(),\n  }\n },\n})</code></pre><p>Сам модуль оплаты используется в нескольких компонентах-вкладках одного модального окна. В итоге в каждой вкладке модального окна у модуля VPayment будет собственное, независимое состояние, к которому все компоненты модуля могут получить доступ автоматически.</p><p>Как видно по коду, используется стандартный синтаксис Pinia, ничего нового. Для использования scoped-сторов команде нет необходимости менять устоявшиеся подходы.</p><p>При этом сторы становятся более инкапсулированными и независимыми, что значительно расширяет их область применения и позволяет справиться с описанными выше проблемами. Текущее решение также не мешает нам использовать вложенные сторы, всё будет работать из коробки. Однако привязка к скоупу влечет за собой ряд ограничений.</p><h2>Ограничения</h2><ul><li><p>Scoped-сторы можно использовать только внутри компонентов или в функциях, вызываемых из компонентов. Нет инстанса компонента — нет скоупа — нет стора</p></li><li><p>Умирает скоуп (unmount инстанса компонента в котором впервые был использован стор) — умирает и стор</p></li><li><p>Для совместимости с map-функциями mapState, mapWritableState, mapGetters и mapActions пришлось использовать скрытый API инстанса компонента (currentInstance.provides). Но добиться совместимости с функцией mapStores так и не удалось</p></li></ul><h2>Где может быть применимо? </h2><p>Главный кейс применения — сосуществование на одной странице нескольких инстансов компонента/модуля со стором, состояния которых должны быть независимы. Приведу несколько примеров: </p><ul><li><p>Крупный модуль, переиспользуемый между вкладки одного окна (пример из статьи) или же между несколькими табами в рамках одной страницы. Подходит любой модуль со стором, инстансы которого должны быть независимы (в нашем случае это модуль оплат)</p></li><li><p>Несколько таблиц со сторами на странице (пример из дискуссии на GitHub)</p></li><li><p>Фильтры. К примеру, если есть несколько наборов фильтров и у каждого из них своё уникальное состояние</p></li><li><p>Сложный контролл, состояние которого хранится в сторе, переиспользуемый в разных частых страницы </p></li></ul><p>Подходы Pinia подталкивают нас к созданию маленьких и узконаправленных сторов, в противовес массивным и многофукнциональным модулям из Vuex. Кроме того, смещается фокус с их привязки к глобальному контексту: если раньше инициализировать стор приходилось самостоятельно во время инита всего приложения, то теперь этот процесс происходит автоматически. Всё это отлично согласуется с концепцией scoped-сторов — узконаправленных, локальных сторов, привязанных к конкретному инстансу модуля.</p><p></p>', 2, '2023-06-12 21:54:57', 676574, 79, '/ru/articles/726452/', 'На сегодняшний день все стейт-менеджеры экосистемы Vue предоставляют глобальное централизованное хранилище, привязанное к корню приложения. Однако у текущей системы есть одно важное ограничение - глобальные модули стора не позволяют создавать независимые состояния для инстансов одного компонента/модуля.Предлагаемое автором решение - узконаправленные, локальные сторы, привязанных к конкретному инстансу модуля или просто Pinia scoped store.'),
(150, 'Как мы увеличили скорость работы сайта в 10 раз', '<p><em>Полностью обновили код и разработали дизайн сайта alta-profil.ru. Сделали его удобнее, быстрее и информативнее для пользователей.</em>  </p><p>«Альта Профиль» — производитель отделочных материалов из полимеров, с которым мы работаем уже много лет по разным направлениям. </p><p>В этом кейсе рассказали об обновлении сайта: с какими проблемами столкнулись и как их решали.</p><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/64256a98a0a2e96fdf4e0909\" data-style=\"\" id=\"64256a98a0a2e96fdf4e0909\" width=\"\"><p>Главный запрос на старте — актуализация стека технологий и фокус на пользовательский опыт в плане доставки данных — бесшовное использование сайта. С ресурсом давно не работали, он устарел с точки зрения дизайна и технологий, что влияло на скорость загрузки и удовлетворенность пользователей.</p><p>Мы предложили провести рефакторинг с переходом на реактивный фреймворк, когда верстка и дизайн сайта рендерятся на стороне пользователя.  За счет этого загрузка происходит практически мгновенно, а у пользователя складывается впечатление, что он пользуется приложением, а не сайтом. </p><blockquote><p>Рефакторинг – процесс улучшения кода и архитектуры для увеличения его производительности. Проводится для оптимизации сайта под поисковые системы, улучшения пользовательского опыта, улучшения скорости загрузки и улучшения кода, что делает его более понятным для дальнейшей разработки.</p><p>Рефакторинг не является процессом создания нового функционала или исправления ошибок на сайте, это улучшение уже существующего кода</p></blockquote><p>Изначально мы планировали остановиться на обновлении кода и архитектуры сайта,  но впоследствии параллельно провели редизайн и доработали интерфейс.</p><p>В техническом плане перед нами стояли 3 задачи:</p><ul><li><p>Переход на реактивный фреймворк, в нашем случае Vue.js </p></li><li><p>Серверный рендеринг, чтобы не потерять позиции в SEO при переходе на Vue.js</p></li><li><p>Корректная маршрутизация </p></li></ul><p>Теперь подробнее о решении каждой из них.</p><h3>Переход на реактивный фреймворк: почему Vue.js </h3><p>Реактивный фреймворк позволяет создавать динамические пользовательские интерфейсы, которые реагируют на изменения данных в реальном времени и автоматически меняются вместе с изменением данных.</p><blockquote><p>Классическая архитектура сайта подразумевает, что каждая страница формируется заново, это и увеличивает скорость загрузки. При использовании реактивных фреймворков страница формируется (рендерится) только один раз, а остальные элементы подгружаются в нужный момент по запросу пользователя.</p></blockquote><p><em> </em>На рынке сейчас два основных фреймворка:</p><p><strong> Vue.js —  </strong>использует систему шаблонов и двустороннюю привязку данных, чтобы позволить разработчикам создавать динамические пользовательские интерфейсы и управлять состоянием приложения.</p><p><strong>React — </strong> реактивный фреймворк от компании Meta* (запрещенной на территории РФ), основанный на управлении компонентами.  Компонентный подход — ключевая особенность React, которая позволяет создавать переиспользуемые компоненты для отображения интерфейса.</p><p>Для решения нашей задачи мы предпочли Vue.js, так как фреймворк:</p><ul><li><p><strong>Легкий в  использовании </strong>благодаря интуитивно понятным API и документации. Это упрощает работу с ним для разработчика, так как его легко интегрировать в любой проект.</p></li></ul><ul><li><p><strong>Позволяет быстро создавать прототипы</strong> из-за его естественного и простого API, умной системы компонентов и возможности решать специфичные задачи с минимальным количеством кода. Для нас это важно, так как каждый наш проект — кастомный, требующий индивидуальных решений, которые можно быстро реализовать.</p><p></p></li></ul><h2>Серверный рендеринг: как не потерять позиции при переходе на Vue.js</h2><p>Переход на Vue.js — только одна часть работы над сайтом, которая обеспечивает быструю загрузку за счет рендеринга страниц на стороне пользователя, о чем мы говорили выше. </p><p>Возникает другая проблема — при обходе страниц сайта поисковыми роботами сервер отдает им пустой html, а пользователи видят контент благодаря JS-приложению в браузере. Поэтому, чтобы не потерять позиции в выдаче, нужен был серверный рендеринг, который позволит передавать поисковым роботам данные страниц полностью. </p><blockquote><p>Для решения этой задачи мы использовали Nuxt.js — фреймворк на основе Vue.js, который обеспечивает серверный рендеринг</p></blockquote><p> Расширение закрыло все наши задачи в рамках разработки, о которых мы говорили выше:</p><h4>Серверный рендеринг</h4><p>Расширение запускается, как серверная часть, генерирует HTML-код и отправляет его браузеру. Если запрос приходит от поискового робота, то он отправляет полную версию страницы, при запросе от пользователя он передает «незаполненную верстку», а остальные динамичные данные рендерятся уже на стороне самого пользователя.</p><p>Технология выглядит как клоакинг, когда контент, отображаемый поисковой системе, отличается от контента, который видят обычные пользователи. В нашем случае — контент, который в итоге видит пользователь и поисковый робот — одинаковый</p><h4>Роутинг</h4><p>Маршрутизация внутри проекта — все, что связано с движением пользователя по сайту.</p><p>Роутинг  —  навигация между разными страницами сайта, позволяет пользователям перемещаться по сайту без необходимости загружать каждую страницу заново и  упрощает процесс использования сайта.  </p><p>Nuxt.js предоставляет роутинг «из коробки» — его не нужно настраивать отдельно. В расширении используется файловая система для автоматического генерирования роутов на основе структуры файлов и каталогов, которая выглядит примерно так:</p><pre><code>pages/\n--| index.vue\n--| about.vue\n--| contact/\n-----| index.vue\n-----| email.vue</code></pre><p>Как видно из приведенного выше примера, файлы Vue-component располагаются в директории <em>pages</em>. Каждый файл — маршрут, соответствующий URL-адресу. Таким образом, <em>index.vue</em> соответствует корневому маршруту (`/`), `about.vue` – маршруту `/about`, а `contact/index.vue` – маршруту `/contact/`.</p><blockquote><p>Стоит отметить поддержку динамического роутинга для произвольных сегментов URI, например, страниц товаров. Когда  предусмотреть под каждый товар отдельную страницу невозможно, на помощь приходит динамический роутинг. При этом в компонент страницы передается динамический сегмент, используя который можно и  собрать информацию с бэкенда, адаптировать отображение, то есть определенным образом отобразить уникальный контент для данного роута.</p></blockquote><h4>Работа с метатегами</h4><p>Nuxt.js позволяет управлять метатегами, автоматически генерируя их на основе текущего маршрута и текста страницы.  Также их можно установить вручную:</p><p><strong>Глобальный &lt;head&gt;. </strong>Nuxt.js предоставляет &lt;head&gt; объект в файле `nuxt.config.js`, который используется для установки глобальных метатегов для всего сайта:</p><pre><code>// nuxt.config.js\nexport default {\n  head: {\n    title: \'My Website\',\n    meta: [\n      { charset: \'utf-8\' },\n      { name: \'viewport\', content: \'width=device-width, initial-scale=1\' }</code></pre><blockquote><p>Помимо дефолтных метатегов, кодировки и отображения видимой области в данном блоке настроек можно, например, внедрить различные сторонние скрипты: GTM, метрики, live-чаты и т. д.  </p></blockquote><p><strong>Локальный &lt;head&gt;</strong>. Локальные метатеги для каждой страницы через компонент Vue.js.  Устанавливаются метатеги для любой страницы при добавлении объекта &lt;head&gt; в компонент:</p><pre><code>&lt;script&gt;\nexport default {\n  data() {\n    return {\n      title: \'My Page\',\n      description: \'This is my page description\'\n    }\n  },\n  head() {\n    return {\n      title: this.title,\n      meta: [\n        { hid: \'description\', name: \'description\', content: this.description },\n      ]\n    }\n  }\n}\n&lt;/script&gt;</code></pre><p>В этом примере мы устанавливаем <em>title</em> и <em>description</em> метатеги для локальной страницы. Значение <em>`hid`</em> используется для предотвращения дублирования тега на странице.</p><p>Чтобы определить общие метатеги для всех страниц сайта, можно создать <em>`layout`</em> компонент и определить глобальные метатеги в нем.</p><p><strong>Динамические метатеги. </strong>Основанные на динамических маршрутах. Для этого обычно используется  <em>asyncData</em>  для получения дополнительных данных, таких как <em>title</em> и <em>description</em>. В нашем случае, мы использовали <em>fetch</em> – более современное решение асинхронного получения данных, которое не ограничено компонентами страниц. При этом метод<em> fetch</em> расширяется свойством <em>fetchOnServer</em>,  указывающим  необходим ли вызов fetch при рендеринге на сервере. Тут происходит магия — для поисковых роботов <em>fetchOnServer</em> всегда возвращает <em>true</em>, а для пользователей —  значение зависит от значимости контента и требований к его показу.</p><p>Вот пример использования `fetchOnServer` в Nuxt.js:</p><pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;h2&gt;{{ post.title }}&lt;/h2&gt;\n    &lt;p&gt;{{ post.body }}&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  head () {\n    return this.post\n  },\n  fetchOnServer () {\n    return this.isSearchBot()\n  },\n  async fetch () {\n    // Выполнение запроса и предварительное заполнение vuex store\n    const post = await this.$axios.$get(`https://jsonplaceholder.typicode.com/posts/${this.$route.params.postId}`)\n    this.$store.commit(\'setPost\', post)\n  },\n  computed: {\n    post() {\n      return this.$store.state.post\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre><p>В этом примере мы определяем метод <em>fetch</em>, выполняется на сервере, до того, как компонент будет отрендерен, или на клиенте — в зависимости от состояния возвращаемого fetchOnServer, результат которого зависит от того, кто открывает страницу: поисковый робот или пользователь. Внутри метода мы используем `$axios` для выполнения запроса к API \"jsonplaceholder\". Полученные данные сохраняются в Vuex Store с помощью `store.commit`. </p><p>Получив данные, мы можем использовать их для отображения в шаблоне Vue.js внутри метода `computed`.</p><blockquote><p>Мы рефакторили сайт на Bitrix, где уже были настроены все метаданные. Чтобы их не потерять, мы написали отдельный API — метод, который по роуту генерирует и возвращает ранее сформированные шаблоны метатегов. Так мы перенесли все старые метатеги на новый сайт</p></blockquote><p>Таким образом, нам удалось решить сразу несколько задач и во всех смыслах переработать ресурс клиента. Если сайт работает быстро, то вероятность, что пользователь останется и совершит целевое действие — выше. В рамках работы над сайтом мы уделяем внимание всем факторам, которые влияют на его работоспособность и конверсию.</p><p></p>', 1, '2023-06-12 21:54:58', 796514, 81, '/ru/articles/725880/', 'Полностью обновили код и разработали дизайн сайта alta-profil.ru. Сделали его удобнее, быстрее и информативнее для пользователей. В этом кейсе расскажем об обновлении сайта: что делали, с какими проблемами столкнулись и как их решали.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(151, 'Я — айтишник, я не хочу много знать', '<p>За последнее время мне довелось провести немало технических собеседований на позицию DevOps инженера, в связи с чем появилась идея формализовать полученные выводы в этой статье. Хочу поделиться своими наблюдениями, субъективным мнением, и задать самому себе вопросы, ответы на которые, возможно, мне помогут получить читатели данной статьи. </p><p>Я понимаю, что под определение так называемого DevOps инженера от компании к компании подпадает очень разный набор навыков, следовательно, требования также будут заметно варьироваться. Поэтому попробую описать что такое DevOps инженер, или SRE (как мне привычнее) для меня в рамках нынешней организации: специалист, поддерживающий инфраструктуру проекта на всех уровнях, реализующий автоматизацию инфраструктуры, процессов разработки и тестирования, в некоторой степени DBA, конечно SRE и евангелист DevOps культуры. Так как цель статьи в другом, то не хотелось бы тут размышлять на тему того, кто такой DevOps инженер, существует ли он, маркетинговый ли это термин и вот это вот всё, оставим этот холивар. Я думаю, что в основном понятно, о каких специалистах я говорю.</p><p>Я являюсь тимлидом команды именно таких инженеров. Мы не профилируемся внутри команды по направлениям, каждый занимается бóльшей частью из перечисленного.</p><h2>Пару слов о кандидатах</h2><p>Встречают по одежке. Одежкой в нашем случае является резюме соискателя.</p><p>Просматривая резюме, полученные от HR, которые прошли первичные фильтры и соответствуют корпоративным нормам, глаз радуется, представляется, если не полностью, то очень сильно удовлетворяющий ожиданиям кандидат. Ощущается прилив радости, и появляется настрой на интересный продуктивный для обеих сторон разговор. </p><p>Как правило, кандидаты - это люди разных возрастов и из разных стран, имеющих опыт работы в компаниях разного размера и рода деятельности, иногда с немалым опытом администрирования различных nix систем, с опытом автоматизации инфраструктуры и процессов разработки/тестирования, взаимодействия с базами данных, кластерными системами, и, конечно же, с серьезными ожиданиями по заработной плате (серьёзность запросов по ЗП относительна, имеются в виду мощные запросы в рамках условного грейда). Многие не хотят участвовать в мелком предварительном тестировании, обосновывая это неприемлемой тратой времени.</p><p>Немного о первичном отборе. Он представляет из себя традиционное вводное знакомство с HR. HR не проводит предварительного технического интервью, а лишь субъективно оценивает опыт кандидата, стремясь удовлетворить пожеланиям команды, находящейся в процессе поиска.</p><p>В рамках технического интервью, проводимых для поиска новых специалистов, я общаюсь с кандидатами, разделяя разговор на два больших блока: фундаментальные темы (операционные системы, сети, базы данных, методологии, точечно прочие компьютерные науки) и инструментарий (здесь может быть всё что угодно, Ansible, Terraform, Helm, Kubernetes, контейнеры, скриптинг, реализация конкретной небольшой задачи в определенных условиях и так далее). В среднем, общаемся в районе полутора часов, за которые я прихожу всё чаще к тем выводам, о которых буду рассказывать далее, и которые подчеркивают тему данной статьи.</p><p>Ниже приведу несколько вопросов и частые ответы кандидатов. Замечу, что среди отвечающих были преподаватели онлайн школ и сертифицированные специалисты по разным технологиям/облакам/методологиям.</p><h2>Зачем мне что-то знать про память, всё же в кубере</h2><p>Это та мысль, которую в разных формулировках я слышу очень часто от соискателей. Приходим мы к этому умозаключению после того, как я задаю свой первый вопрос, про то, сколько памяти занимает процесс с указанным PID (кандидату демонстрируется скриншот или экран с выводом top). 80% соискателей с опытом администрирования nix систем не знают ответ, теряются или говорят очень странные вещи, 10% без объяснения выбора способны указать на колонку RES, и оставшиеся с разным успехом могут поговорить и порассуждать про виртуальное адресное пространство, разделяемую память, OOM, оверкоммиты, стэки, кучи и так далее.</p><p>Приведенный вопрос, как и любой другой в рамках собеседования, может получить множественное развитие как в глубину, так и в ширину, но происходит это крайне редко. Не совсем понятно, каким образом такой инженер выставляет адекватные реквесты/лимиты приложению в кубере, каким образом задаёт max-old-space-size для V8 (и делает ли это вообще). Может быть вопрос действительно лишний (пусть не всё, но большинство приложений же в кубере) и морально устарел?</p><h2>Сети... Это всегда было не моё, а в облаках оно вообще не актуально</h2><p>Следующая частая формулировка, которая появляется после вопросов про понимание, например, маски подсети или TCP-сессии. То есть инженер работает с кластерными системами, с кубером, наливает ансиблом большие группы узлов, а сети, получается, это что-то лишнее, недосягаемое? Видимо, во всем многообразии \"сетевых\" процессов вряд ли что-то может пойти не так, а в случае чего, лучше, наверное, нанять отдельного специалиста, который умеет запускать ping, traceroute и dig, да ещё и понимать их выхлоп.</p><p>Вряд ли же придётся заниматься дебагом NAT в облаках при множественных подключениях изнутри (при наличии единственного IP адреса на облачном маршрутизаторе), вряд ли нужно будет разбираться, почему пакетики из одного региона страны не доходят в облако до приложения, вряд ли понадобится VPN до API облачного кубера. И ведь действительно, вопросы сетевого взаимодействия в 2023-ем уже могли изжить себя?</p><h2>HTTP GET используется только для получения информации</h2><p>Это 90% ответов на просьбу сравнить GET и POST методы. Мы говорим тут про GET и POST как таковые, не привязываясь, например, к CRUD для REST. Возможно, понимать суть и отличие данных методов сегодня действительно не нужно, ведь всегда есть документация к API, а разработчик никогда не реализует метод против стандартов?</p><h2>Почему у вас нет Argo CD?</h2><p>Встречный вопрос, который я получаю в контексте беседы про GitOps как в нашей реализации, так и в целом. То есть для многих соискателей есть прямая и неразрывная связь между GitOps подходом и инструментом, реализующим его, при этом беседа про абстрактный GitOps, не привязанный к инструментам, вызывает бурю негодований и странное предвзятое отношение.</p><p>Другим ярчайшим и популярным примером про неразрывность инструментов и методологий, как мне кажется, является разговор про CI/CD. Зачастую, CI/CD - это Gitlab CI, Teamcity или Jenkins, а не методологии, решающие конкретный список проблем/задач в процессах разработки, для удобной реализации которых есть готовые, ранее перечисленные инструменты. Кажется, пришло время внедрять Argo CD, мы же GitOps делаем?</p><p><br></p><p>Приведенные примеры подчеркивают нежелание большого количества нынешних специалистов погружаться в вопрос и разбираться в теме, что не может радовать. Бывали случаи, когда кандидаты не просто показывали незнание по тому или иному вопросу, а вступали в конфликт о том, что не должно быть таких, как мы задаём, глубоких вопросов на собеседовании DevOps инженеров, не должно быть бóльшей части затронутых тем. И всё бы ничего, но расстраивает факт отстранения работников интеллектуального труда от своей непосредственной деятельности, не желая о ней думать. Такое происходит конечно же не только в рамках DevOps инженеров, а распространяется и на другие направления, что я могу наблюдать, общаясь с соискателями на позиции бэкенд разработчиков и тестировщиков. </p><p>По описанным выше вопросам становится понятно, что ничего из ряда вон мы не требуем, нормальные инженерные вопросы, которые с разных сторон пытаются раскрыть кандидата. Мы не гоняем по алгоритмам, не просим спроектировать нагруженный онлайн видео сервис в масштабах планеты (хотя, системный дизайн был бы классным модулем), да и не просим тонко под задачу затюнить СУБД, но как ни крути, только лишь опыт использования облачного K8s вместе с Ansible на несколько узлов и деплой всего через Gitlab CI, не является для нас достаточным, как уже должно быть понятно из описания в начале статьи.</p><p>Я понимаю, что далеко не везде желаемые мной запросы к кандидатам. На рынке немало мест, на которых поверхностное понимание инструментария является достаточным, а какие-то более глубокие проблемы решают местные гуру. Может ли это говорить о том, что ИТ как сфера приходит к более четкому квалификационному разделению? Может ли это говорить о том, что насыщения рынка соискателями, владеющих лишь инструментарием, станет со временем трендом и стоит ли переживать на этот счет?  И да, ни в коем случае не хочу сказать, что я тут один тут стою в пальто белом, я всего лишь рассуждаю “вслух” о сложившейся вокруг меня ситуации.</p><h2>Выводы</h2><ul><li><p>Резюме не имеет ничего общего с реальными знаниями и навыками соискателя.</p></li><li><p>Многих интересуют только зарплаты, без реального увлечения технологиями.</p></li><li><p>Фундаментальные, нетленные знания пугают соискателей, всерьёз не воспринимаются как необходимые, иногда вызывают улыбки.</p></li><li><p>Большинство соискателей видят роль DevOps инженера следующим образом: YAML, какая-нибудь технология контейнеризации (на уровне пользователя), какая-нибудь система оркестрации (на уровне пользователя), Terraform, Ansible.</p></li><li><p>Эти же соискатели не согласны с тем, что DevOps инженер это: основы операционных систем, основы баз данных, основы сетей, основы распределенных систем, любые другие основы, не связанные с верхнеуровневым инструментарием и перекладыванием конфигов, для получения очередной абстракции.</p></li></ul><h2>В чем я могу ошибаться</h2><ul><li><p>Я считаю себя энтузиастом в ИТ, для меня это не только работа, но и одно из увлечений, в связи с чем могут проявляться завышенные ожидания к соискателям.</p></li><li><p>Субъективное ощущение реальности и рынка, выстраивают неверный набор запросов и уровень ожидаемых ответов. Мой личный и сторонний (коллеги, статьи и т. п.) опыт собеседований в крупные и небольшие ИТ компании, склоняет меня в сторону тех примеров, в которых присутствовал более жесткий отбор с более высокими требованиями.</p></li><li><p>Наличие слишком малой, нерепрезентативной выборки, приводящей к ошибочным умозаключениям о соискателях.</p></li></ul><h2>Вопросы без ответа</h2><ul><li><p>Не слишком ли широкий спектр обязанностей падает на каждого инженера в нашей команде, может быть нужно делиться по профилям?</p></li><li><p>Может быть я неправильно (или крайне неудачно) подобрал блоки вопросов для собеседования?</p></li><li><p>Что мы можем улучшить, как ужесточить фильтр на этапе отбора резюме и первичного общения с HR для обеспечения наиболее продуктивного общения на всех последующих этапах, но при этом не отпугнуть кандидата?</p></li></ul><p></p>', 3, '2023-06-12 21:55:58', 218432, 73, '/ru/articles/739452/', 'За последнее время мне довелось провести немало технических собеседований на позицию DevOps инженера, в связи с чем появилась идея формализовать полученные выводы в этой статье. Хочу поделиться своими наблюдениями, субъективным мнением, и задать самому себе вопросы, ответы на которые, возможно, мне помогут получить читатели данной статьи. '),
(152, 'Собеседование наоборот: МойОфис, Банк РНКБ, Альфа Банк, билайн', '<figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b2e/35b/16d/b2e35b16d5f33c23c86c365553d366dc.png\" width=\"1480\" height=\"840\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b2e/35b/16d/b2e35b16d5f33c23c86c365553d366dc.png\"></figure><p>В апреле на Хабр Карьере проходила карьерная неделя тестировщиков. Карьерная неделя — это что-то вроде дня открытых дверей, который длится всю неделю. За специалистов боролись <a href=\"https://career.habr.com/companies/alfabank\"><u>Альфа-Банк</u></a>, <a href=\"https://career.habr.com/companies/myoffice\"><u>МойОфис</u></a>, <a href=\"https://career.habr.com/companies/rncb\"><u>Банк РНКБ</u></a> и <a href=\"https://career.habr.com/companies/beeline\"><u>билайн</u></a>.</p><p>В конце недели специалисты задают вопросы представителям компаний-работодателей, а мы выбираем самые интересные из тех, что не успели обсудить, и отправляем спикерам. </p><p>Спросили про трудоустройство, карьеру джунов, технологии и отношения к трендам. Если интересно почитать о внутренней жизни компаний — приглашаем в статью. </p><h2>Кто отвечал на вопросы</h2><div class=\"persona\" persona=\"true\"><img persona=\"true\" class=\"image persona__image\" src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/7b1/5c9/d32/7b15c9d32b05de66cb4c6c04edd1a736.jpg\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/7b1/5c9/d32/7b15c9d32b05de66cb4c6c04edd1a736.jpg\" data-blurred=\"true\"><h5 class=\"persona__heading\" persona=\"true\">Владимир Ананьев</h5><p>Руководитель группы автоматизации и тестирования в отделе технического контроля РНКБ Банка</p><div class=\"persona\" persona=\"true\"><img persona=\"true\" class=\"image persona__image\" src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/6a2/6db/58d/6a26db58d02da381107fcefded2a8398.jpeg\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/6a2/6db/58d/6a26db58d02da381107fcefded2a8398.jpeg\" data-blurred=\"true\"><h5 class=\"persona__heading\" persona=\"true\">Василий Сидоренко</h5><p>Начальник отдела технического контроля в Банке РНКБ</p><div class=\"persona\" persona=\"true\"><img persona=\"true\" class=\"image persona__image\" src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/14e/d76/a9c/14ed76a9ca9130026f4bfad8dd47225b.jpg\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/14e/d76/a9c/14ed76a9ca9130026f4bfad8dd47225b.jpg\" data-blurred=\"true\"><h5 class=\"persona__heading\" persona=\"true\">Айнур Мустафаева</h5><p>Главный специалист по тестированию в Альфа Банке</p><div class=\"persona\" persona=\"true\"><img persona=\"true\" class=\"image persona__image\" src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/026/4d0/5ca/0264d05ca592724c24bef1a13ecafa1e.jpg\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/026/4d0/5ca/0264d05ca592724c24bef1a13ecafa1e.jpg\" data-blurred=\"true\"><h5 class=\"persona__heading\" persona=\"true\">Антон Дикин</h5><p>Руководитель по тестированию в билайне</p><div class=\"persona\" persona=\"true\"><img persona=\"true\" class=\"image persona__image\" src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/c19/736/a56/c19736a56aacf83f58f1485630b29d17.jpg\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/c19/736/a56/c19736a56aacf83f58f1485630b29d17.jpg\" data-blurred=\"true\"><h5 class=\"persona__heading\" persona=\"true\">Виктория Кондратьева</h5><p>Руководитель тестирования группы общей разработки компании-разработчика ПО МойОфис </p><hr><h2>Трудоустройство</h2><h3>Обязательно ли язык написания E2E автотестов должен совпадать с языком написания продукта в вашей компании?</h3><p><strong>Владимир Ананьев, Банк РНКБ: </strong>Нет, необязательно. Более того, часто язык написания автотестов не совпадает с языком разработки продукта. Это связано с тем, что мы заинтересованы в развитии компетенции и обмене знаниями внутри группы по автоматизации тестирования, что проще делать с использованием одного языка программирования.</p><p><strong>Айнур Мустафаева, Альфа Банк: </strong>Нет, необязательно. Как правило, создается отдельный проект, в котором пишутся E2E тесты. </p><p><strong>Виктория Кондратьева, МойОфис:</strong> Нет, необязательно, потому что это не всегда целесообразно. В том числе имеет значение, кто будет писать и поддерживать автотесты — наличие компетенций у команды и высота порога вхождения. Иногда тесты для разных продуктов могут быть написаны на разных языках, и ни один из них не соответствует языку продуктов. Но мы не разводим «зоопарк» из разных инструментов без объективных причин.</p><h3>Учитывается ли работа на фрилансе, как коммерческий опыт?</h3><p><strong>Владимир Ананьев, Банк РНКБ: </strong>Да, учитывается. Наибольшее значение имеет то, какие задачи решал кандидат и насколько успешно он с ними справился.</p><p><strong>Айнур Мустафаева, Альфа Банк: </strong>При просмотре резюме мы, безусловно, смотрим на опыт работы, стек технологий. Как правило, если кандидат сильный, то никого работа на фрилансе не смущает. </p><p><strong>Виктория Кондратьева, МойОфис: </strong>Такой опыт — лучше, чем ничего. Думаю, стоит честно указать его в резюме, описав вашу зону ответственности и выполненные задачи на каждом из проектов. </p><h3>5 пунктов, по которым вы понимаете, что кандидат отлично подойдет для вашей компании?</h3><p><strong>Владимир Ананьев, Банк РНКБ:</strong></p><ol><li><p>Способность развиваться и приобретать знания для решения поставленных задач. </p></li><li><p>Умение работать в коллективе и отстаивать свои интересы.</p></li><li><p>Владение инструментами, которые необходимы для выполнения обязанностей в рамках текущей вакансии.</p></li><li><p>Знание теории тестирования.</p></li><li><p>Широкий технический кругозор, глубокое понимание принципов работы Web-приложений.</p></li></ol><p><strong>Айнур Мустафаева, Альфа Банк: </strong></p><ol><li><p>Стек технологий. Как правило, кандидатов, которые работали с похожим стеком, легче ввести в курс дела, и за две недели работы они уже полноценно могут самостоятельно без помощи наставника во всем разобраться. </p></li></ol><ol start=\"2\"><li><p>Глубина знаний. Важно на собеседовании не <strong>«</strong>лить воду<strong>»</strong>, а отвечать содержательно на те вопросы, которые тебе задают. Я очень люблю вопросы, отвечая на которые, сразу видно, понимает кандидат, что и зачем используется или нет. </p></li></ol><ol start=\"3\"><li><p>Понимание клиентской боли. Так как мы работаем по большей части на клиентов, кандидат должен понимать, какой кейс может вызвать у них дискомфорт.</p></li></ol><ol start=\"4\"><li><p>Во время проведения собеседований, как правило, дается задачка на выстраивание процессов. Если кандидат выстраивает похожий процесс, как у нас в команде на текущий момент — это повышает его шансы пройти. </p></li></ol><ol start=\"5\"><li><p>Общее впечатление о кандидате также важно. Сразу видно, готовился ли он к собеседованию, насколько ответственно подошел к вопросу. </p></li></ol><ol start=\"6\"><li><p>Коммуникабельность и уверенность в своем ответе.<br></p></li></ol><p><strong>Виктория Кондратьева: </strong>Не в порядке значимости: </p><ul><li><p>Наличие специфических для вакансии навыков и опыта;</p></li><li><p>Общая техническая грамотность;</p></li><li><p>Готовность учиться и заинтересованность в росте;</p></li><li><p>Умение работать в команде и принимать общие цели;</p></li><li><p>Ответственность, открытость, честность, конструктивность в общении.</p></li></ul><h3>Можно ли работать у компаний-участников, не находясь в РФ?</h3><p><strong>Василий Сидоренко, Банк РНКБ: </strong>На данный момент нет.</p><h3>А вы работаете удаленно? </h3><p><strong>Василий Сидоренко, Банк РНКБ: </strong>Да. Возможен как полностью удаленный, так и гибридный формат — с появлением в офисе 1-3 раза в месяц. Для нас непринципиален формат работы, главное, чтобы задачи выполнялись качественно и в срок. Наши сотрудники работают не только в регионах присутствия Банка, но и по всей России, а если сотрудник захочет, то наши коллеги из HR помогут с релокацией в Крым. </p><p><strong>Айнур Мустафаева, Альфа Банк: </strong>В Альфе можно работать удаленно, но я больше люблю ходить в офис. </p><p><strong>Виктория Кондратьева: </strong>Зависит от конкретной позиции. У нас есть дистанционные сотрудники, но при желании или необходимости посетить офис можно всегда. Помогаем коллегам с релокацией, если они готовы переехать в города присутствия компании. Мы сразу указываем в описании вакансии, какой формат работы предполагается. </p><h3>Как вы оформляете сотрудников (ТК РФ, ИП РФ, самозанятость, ИП иностранного гос-ва). Пожалуйста, ответьте по пунктам в формате: вот так оформляем, а вот так точно не оформляем.</h3><p><strong>Василий Сидоренко, Банк РНКБ:</strong> Оформляем согласно ТК РФ. </p><h2>Процессы</h2><h3>Насколько чисто выстроен процесс грейдов у вас в компании? Насколько прозрачно происходит повышение?</h3><p><strong>Владимир Ананьев, Банк РНКБ: </strong>В компании была проведена значительная работа по выстраиванию процесса грейдирования. Сейчас у нас оцениваются как soft skills, так и hard skills. На основе полученных оценок формируется индивидуальный план развития и уже принимается решение о дальнейшем повышении сотрудника. </p><p><strong>Айнур Мустафаева, Альфа Банк: </strong>Как правило, один-два раза в год проводится ассессмент по запросу. Собирается обратная связь от коллег, проводится оценка навыков вместе с другими лидами QA. После чего принимается решение и дальнейший план.</p><p><strong>Антон Дикин, билайн: </strong>Повышение в Билайне происходит максимально прозрачно: проводится оценка профессиональных компетенций сотрудников в области IT, целью которой является определение их текущего уровня, сильных и слабых сторон, а также перспективных возможностей для карьерного и финансового роста.  </p><h3>Проводите мероприятия по повышению квалификации специалистов? Если да, то какие?</h3><p><strong>Айнур Мустафаева, Альфа Банк: </strong>Да. Мы активно развиваем коллег, отправляем на различные конференции и поддерживаем мотивацию учиться. </p><p><strong>Виктория Кондратьева, МойОфис: </strong>Проводим внутренние курсы и вебинары, ведем базу рекомендованных учебных материалов. Например, прямо сейчас проходит внутренний курс повышения квалификации для начинающих руководителей — вебинары, практикумы, обмен опытом. Внешние курсы и конференции тоже активно используем.</p><p><strong>Антон Дикин, билайн: </strong>Являясь высокотехнологичной компанией, Билайн использует свои компетенции для улучшения качества жизни сотрудников, повышения их мотивации и продуктивности работы. В компании есть собственный корпоративный университет, кадровый резерв и различные программы, способствующие развитию карьеры: мы обучаем коллег новому, проводим полезные митапы, активно интегрируемся в профильные конференции и пишем статьи на Хабр.</p><h3>Как у вас происходит рассмотрение идей по введению новых тулов, каких-то новых механик в рабочие процессы? Есть ли кейсы, когда кто-то рядовой предложил попробовать тулу\\механику и это в итоге было принято на уровне команды\\компании?</h3><p><strong>Василий Сидоренко, Банк РНКБ:</strong> Мы не ставим «рамки» и всегда готовы выслушать предложение любого участника команды. Если идея действительно интересная, мы её поддержим и возьмем к реализации.</p><p><strong>Айнур Мустафаева, Альфа Банк: </strong>У нас это приветствуют, и, как правило, охотно подхватывают новые идеи. Обычно это озвучивается на созвоне. Это оценивается. Да здравствует холивар! Затем один из коллег, обычно кто проявил инициативу, берет на себя квартальную задачу, реализует свою идею, после чего рассказывает всем остальным участникам команды. Мы применяем любую технологию в течение какого-то промежутка времени и делаем пилотные версии. Если всех устраивает, то несем дальше в массы. </p><p><strong>Виктория Кондратьева, МойОфис: </strong>Можно и нужно просто поделиться с командой идеей в любое время и любой форме. С небольшими изменениями в рамках команды всё просто: обсуждаем, развиваем и корректируем, если нужно, затем выделяем время и пробуем, делимся результатами с коллегами из других отделов.</p><p>Мы внедряли идеи инженеров по улучшению организации документации, корректировали процессы в рамках отдела; инженеры по автоматизации свободно предлагают и внедряют решения (использование новых библиотек, новые вспомогательные скрипты и т.п.).  </p><p>С рассмотрением и согласованием масштабных или затратных изменений поможет непосредственный руководитель. Если идея не про вашу, а про любую другую команду или продукт — можно написать в общий чат, они увидят и обсудят.</p><h3>Как вы стимулируете развитие и поддерживаете сотрудников?</h3><p><strong>Василий Сидоренко, Банк РНКБ:</strong> Если у сотрудника есть интересная идея для развития проекта, мы можем выделить ему время и ресурс на реализацию, а также поддержим активность материально.</p><h3>Каким образом в вашей компании происходит начало работы тестировщиком: сразу с боевых задач или сначала необходимо вникнуть в проект по документации? В какой баг-трекинг системе фиксируются отчеты о дефектах?</h3><p><strong>Владимир Ананьев, Банк РНКБ: </strong>В качестве баг-трекинг системы мы используем аналог Jira. Работа тестировщика начинается с онбординга: он включает в себя комплекс обучающих материалов от службы обучения, который позволяет познакомиться с внутренней структурой банка и основными системами, которые необходимы для работы. Параллельно сотрудник приступает к знакомству с продуктом путём консультаций с лидом и коллегами, по документации и проходя часть регресс-плана.</p><p><strong>Айнур Мустафаева, Альфа Банк: </strong>Да, сразу боевые задачи идут в ход. Jira всегда и везде. </p><p><strong>Виктория Кондратьева, МойОфис: </strong>Срок перехода к реальным задачам зависит от сложности продукта и уровня новичка. </p><p>В моем отделе первые два-три дня выделяем на знакомство с командой, процессами и документацией, еще два-три дня — на настройку рабочего окружения и знакомство с продуктом. Примерно со второй недели начинаем подключать к боевым задачам.</p><p>Во всей компании принята практика выделения ментора для новичка. Ментор ведет человека весь испытательный срок, всё рассказывает и показывает, дает обратную связь. Это либо инженер из команды, либо руководитель, но последний в любом случае помогает влиться в процессы. </p><h3>На какие инструменты-аналоги вы перешли/планируете перейти всвязи с санкциями? Насколько активно разрабатываете внутри команды тестирования собственные инструменты (на каком языке, для каких задач)? Выделите от одного до трех решений, которые помогают вашей команде тестировать продукт лучше, чем ваши прямые конкуренты.</h3><p><strong>Виктория Кондратьева, МойОфис: </strong>Мы активно использовали и используем вне зависимости от санкций собственные продукты: редакторы документов, таблиц и презентаций, почтовые клиенты и календарь, единое цифровое рабочее пространство Squadus. Из стороннего — перешли на отечественные системы управления тестированием. </p><h2>О старте карьеры и найме джунов</h2><h3>На что обращают внимание hr при поиске тестировщика без опыта работы? Можно ли устроиться на работу тестировщиком после прохождения курса по тестированию?</h3><p><strong>Виктория Кондратьева, МойОфис: </strong>На данный момент у нас нет вакансий для специалистов без опыта работы. В целом обращаем внимание на образование и грамотность составления резюме, грамотность речи при живом общении, честность, готовность учиться. После прохождения курсов можно претендовать на позицию стажера.</p><p><strong>Антон Дикин, билайн:</strong> Говоря про наём, в билайне мы оцениваем кандидатов по навыкам, а не по «корочке»: если он соответствует требованиям, может вписаться в нашу культуру, имеет желание учиться и развиваться, мы обязательно дадим шанс и обеспечим мягкий онбординг. Для того, чтобы усилить знания, которые специалисты получают на «свободных» площадках и подготовить их к специфике работы в цифровой компании, мы интегрируем экспертов в образовательной процесс и предоставляем им возможность применить их знания на реальных кейсах и задачах.</p><h3>Можно ли устроиться на работу тестировщиком после прохождения курса по тестированию?</h3><p><strong>Ананьев Владимир, Банк РНКБ: </strong>Да, можно. Имеют значение ваши реальные знания и опыт, а не то, где вы обучались тестированию.</p><p><strong>Айнур Мустафаева, Альфа Банк: </strong>Да, после курсов можно. Многое зависит от самого кандидата и от требований к кандидату. </p><h3>Кто для вас идеальный кандидат уровня Junior, которого вы бы взяли не раздумывая? Что должен точно уметь делать, с чем должен быть точно знаком и что было бы огромным плюсом?</h3><p><strong>Владимир Ананьев, Банк РНКБ: </strong>Кандидат уровня Junior должен знать теорию тестирования, уметь пользоваться инструментами для тестирования, знать основы работы протокола HTTP и владеть инструментами для его тестирования (например, Postman).</p><p><strong>Айнур Мустафаева, Альфа Банк: </strong>От кандидата уровня Junior требуются уверенные знания теории, которые он смело может применять на практике. Плюсом будет совпадение стека, который принят и используется в компании.</p><p><strong>Виктория Кондратьева, МойОфис: </strong>Для позиции Junior мы подразумеваем наличие минимального опыта работы. Технические навыки, обязательные и которые были бы плюсом, зависят от проекта: мобильное тестирование, веб, настольные приложения, мы всё это указываем в описании вакансий. </p><p>Для ручного тестировщика плюсом будут навыки программирования. Общее обязательное для всех — знание теории тестирования, умение составлять грамотные тест-кейсы и баг-репорты, базовые знания об архитектуре ПО. </p><h3>Периодически смотрю интервью с приглашенными руководящими лицами компаний. Им задают вопрос: «Как вы выбираете кандидатов на вакансию?», большинство отвечают, что они хотят видеть в своей компании сотрудников с «горящими глазами». Что подразумевается под этим выражением?</h3><p><strong>Виктория Кондратьева, МойОфис: </strong>Мы это выражение стараемся не использовать — формулируем более конкретный профиль кандидата. Думаю, чаще всего подразумевается интерес к задачам и искреннее желание работать, готовность учиться новому, проактивность.</p><h3>Как можно самостоятельно проверять себя в тестировании, до трудоустройства на работу?</h3><p><strong>Виктория Кондратьева, МойОфис: </strong>Попробуйте составить чек-лист, тест-кейсы и баг-репорты для любого приложения. Можно попробовать найти проект для краудтестинга. Посетите профильные конференции или послушайте подкасты — понимаете ли вы хотя бы в общих чертах, о чем идет речь в большинстве докладов?</p><h3>В чем интерес компании при приеме на работу стажера?</h3><p><strong>Василий Сидоренко, Банк РНКБ: </strong>Поэтапное развитие профессионала, который заточен на процессы и проекты Банка, исключая пробелы и проблемы, которые мы замечаем даже у опытных кандидатов.</p><h3>Топ-3 инструмента, которыми стоит научиться пользоваться начинающему специалисту?</h3><p><strong>Владимир Ананьев, Банк РНКБ: </strong>Всё зависит от того, что мы тестируем: фронтенд или условный бэкенд. Для фронтенда основными инструментами я бы назвал Devtools, Fiddler и Mockoon.</p><p>Для тестирования бэкенда — Postman, инструменты командной строки для чтения логов (grep, head, tail и т.д.). </p><p><strong>Айнур Мустафаева, Альфа Банк: </strong>Postman, DevTools, Kibana.</p><h2>О карьере	</h2><h3>Чем кардинально отличаются задачи и обязанности автотестировщика от обычного тестировщика?</h3><p><strong>Айнур Мустафаева, Альфа Банк: </strong>На мой взгляд, очень сильно зависит от компании и от команды. Где-то тестировщик full-stack, то есть пишет автотесты и проверяет вручную. Где-то есть команда, которая отдельно занимается автоматизацией тестирования, и им поступают кейсы от тестировщиков, которые смотрят все вручную. </p><p><strong>Виктория Кондратьева, МойОфис: </strong>Чаще всего автотестировщик пишет код по подготовленным ручными тестировщиками сценариям, а ручной тестировщик код не пишет. Но на практике бывает по-разному. У нас есть универсальные специалисты: и пишут код, и составляют сценарии, и тестируют руками. Есть и выделенные ручные тестировщики, и автотестировщики, и SDET-ы, которые только пишут код и решают относительно сложные задачи, связанные с автоматизацией процессов. </p><h3>Какие учебные материалы посоветуете для старта в тестировании безопасности?</h3><p><strong>Виктория Кондратьева, МойОфис: </strong>Рекомендации по тестированию от OWASP. На <a href=\"https://owasp.org/)\"><u>их сайте</u></a> есть гайды по тестированию веб- и мобильных приложений. Можно начать с любых базовых курсов, где охватывается тема penetration testing.</p><p><strong>Антон Дикин, билайн:</strong> Лучше всего, конечно, учиться «на кошках»: принимать участие в проектах, где есть возможность попробовать новые технологии. Практика — самая эффективная учёба, не нужно бояться браться за новое, нужно творить, мы в каком-то смысле художники. </p><h2>О меняющих сферу деятельности и возрасте </h2><h3>Несколько раз встречался с эйджизмом, как с этим бороться?</h3><p><strong>Василий Сидоренко, Банк РНКБ</strong>: У нас таких проблем нет. Для нас идеальная команда — это симбиоз опыта и активности/молодости. Мы прекрасно совмещаем в командах ребят 18-25 лет и опытных специалистов 35-50 лет.</p><p><strong>Виктория Кондратьева, МойОфис: </strong>Если вы грамотно составили резюме и ваши навыки нам подходят — мы вас пригласим на интервью. Если вы успешно пройдете интервью — пригласим на работу.</p><p>Нет смысла скрывать возраст в резюме. Некоторые скрывают, но при этом оставляют опыт работы с датами и даты окончания университета — это выглядит странно. У нас нет фильтра на возраст, мы смотрим на профессиональные и личностные качества. </p><h2>О технологиях и трендах </h2><h3>Пользуются ли ChatGPT в работе? Какие реалии для тестировщиков в связи с гонкой развития ИИ?</h3><p><strong>Владимир Ананьев, Банк РНКБ: </strong>На наш взгляд, недавно появившиеся инструменты не решают задачи, связанные с непосредственной проверкой работы продукта. ChatGPT или аналогичные боты нами не применялись, но думаю, что они могут неплохо справиться с задачами составления тест-кейсов по имеющейся документации. Однако любое средство автоматизации упирается в необходимость качественных входных данных. В случае отсутствия таковых, ручной тестировщик всё ещё далеко впереди любого ИИ, т.к. тестировщик может более гибко подходить к решению задач.</p><h3>Как ИИ помогает в тестировании?</h3><p><strong>Виктория Кондратьева, МойОфис: </strong>ИИ может помочь с генерацией тестовых данных и тест-кейсов, генерацией кода, объяснением и дебагом кода, с анализом информации. В общем, может ускорить работу, если правильно использовать инструмент и интерпретировать результаты. Как говорится, ИИ многое знает, но мало понимает. </p><p><strong>Антон Дикин, билайн: </strong>У билайна амбициозные планы в области реализации продуктов и услуг, основанных на развитии цифровых решений, искусственного интеллекта и больших данных. Конкретно в тестировании мы используем ИИ для технического анализа проведенных тестов. Надеюсь, что в ближайшее время ИИ заберет море рутинной работы. </p><h3>Умрет ли профессия мануального тестировщика?</h3><p><strong>Владимир Ананьев, Банк РНКБ: </strong>Нет, скорее эволюционирует.</p><p><strong>Виктория Кондратьева, МойОфис: </strong>Профессия развивается и трансформируется, теснее переплетается с профессией разработчика. Но дело не только в автоматизации — продукты создаются для людей, и полностью заменить человеческий взгляд автотестами не получится. Если понимать под ручным тестированием проверку уже готового кода на соответствие спецификации, то такая узкая специализация уже не совсем актуальна. Если говорить об обеспечении качества в более широком смысле, пока нет предпосылок смерти профессии. </p><hr><h2>Что почитать</h2><p>Список книг, ссылок, статей, подкастов, курсов и всего остального, что обязательно нужно прочитать тестировщику. </p><p><strong>Айнур Мустафаева, Альфа Банк:</strong></p><ul><li><p>Рекс Блэк <strong>«</strong>Ключевые процессы тестирования». Училась по этой книге, периодически до сих пор перечитываю и нахожу что-то новое. </p></li><li><p>Дж. Уиттакер <strong>«</strong>Как тестируют в Google». Посоветовал книгу мой наставник, когда в свое время проходила стажировку. Достаточно интересная и полезная, чтобы иметь представление о том, на чем строится тестирование. </p></li><li><p>Джанет Грегори <strong>«</strong>Agile-тестирование». Помогает посмотреть на процессы в команде под другим углом. </p></li></ul><p><em>Курсы:</em><strong> </strong></p><ul><li><p>Alfa-Campus. Была ментором в школе тестирования от «Альфа-Банка». На мой взгляд, подается достаточно структурированная и полезная информация, которую можно применять в работе. </p></li></ul><p><br><strong>Виктория Кондратьева, МойОфис:</strong><br><br>Не считаю, что есть обязательный и универсальный список. Источников информации много, и они разные. Для формирования базовых представлений можно ознакомиться с классикой жанра, но будьте готовы фильтровать некоторую устаревшую информацию: </p><ul><li><p>Сэм Канер, Джек Фолк, Енг Кек Нгуен «Тестирование программного обеспечения».</p></li><li><p>Эндрю Таненбаум, Херберт Бос «Современные операционные системы».</p></li><li><p>Если владеете английским — Lee Copeland \'A Practitioner\'s Guide to Software Test Design\'.</p></li></ul><p></p>', 3, '2023-06-12 21:55:59', 287473, 83, '/ru/companies/habr_career/articles/741010/', 'В апреле на Хабр Карьере проходила карьерная неделя тестировщиков. Карьерная неделя — это что-то вроде дня открытых дверей, который длится всю неделю. За специалистов боролись Альфа-Банк, МойОфис, Банк РНКБ и билайн.В конце недели специалисты задают вопросы представителям компаний-работодателей, а мы выбираем самые интересные из тех, что не успели обсудить, и отправляем спикерам. Спросили про трудоустройство, карьеру джунов, технологии и отношения к трендам. Если интересно почитать о внутренней жизни компаний — приглашаем в статью. ');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(153, 'Как удержать айтишника: высокая зарплата, бесплатное пиво или миссия?', '<p>В мире информационных технологий, который продолжает стремительно развиваться, важно знать, как найти и удержать ценные кадры. Что сегодня мотивирует опытного айтишника — высокая зарплата, бесплатное пиво или миссия компании? Индустрия IT-услуг уже достигла объема в 1,2 триллиона долларов США, показав рост на 8,7% в 2022 году. С увеличением числа IT-специалистов, превышающего 20 миллионов человек по всему миру, актуальность вопросов об удержании и развитии профессионалов только возрастает. Мы поговорили с экспертами, чтобы понять, какие факторы оказывают наибольшее влияние на решение сотрудников остаться в компании или сменить место работы. Мы попытаемся разобраться в этом вопросе, оценив важность таких составляющих как заработная плата, дополнительные бонусы и привлекательность миссии компании.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/7db/e50/a60/7dbe50a60d83d5d385c705b26d85f372.jpg\" width=\"1280\" height=\"853\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/7db/e50/a60/7dbe50a60d83d5d385c705b26d85f372.jpg\" data-blurred=\"true\"></figure><p><a href=\"https://www.youtube.com/live/APirUiZDg8Q?feature=share\"><strong>Видео-версию дискуссии можно посмотреть тут </strong></a></p><h3>«Есть цель — взращивать специалистов и не допускать их хантинга»  </h3><p>В последнее время многие IT-компании в России заняли круговую оборону на кадровом рынке и вкладывают деньги в привлечение сотрудников и их удержание. Очевидно, что специалистов на рынке, особенно с опытом, в последнее время не хватает.</p><p>Об этом говорит Scrum-мастер <a href=\"https://www.comindware.ru/?utm_source=habr&amp;utm_medium=blog&amp;utm_campaign=article\"><u>Comindware</u></a> <strong>Алина Балашова</strong>. По ее словам, на российском рынке труда наметилась серьезная нехватка опытных разработчиков программного обеспечения. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/fbf/2c6/718/fbf2c67188c626f0ab0586706046a24c.jpg\" alt=\"Алина Балашова\" title=\"Алина Балашова\" width=\"1020\" height=\"585\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/fbf/2c6/718/fbf2c67188c626f0ab0586706046a24c.jpg\" data-blurred=\"true\"><div><figcaption>Алина Балашова</figcaption></figure><p>«Это проблема, которую мы видим не только в Comindware, но и во всей индустрии. В соответствии с последними статистическими данными, только 10% из общего числа специалистов, которые ищут работу, имеют более 6 лет опыта разработки ПО. Часто мы видим, что многие разработчики находятся в начале своей карьеры, и хотя это отлично для внедрения свежих идей, опытные разработчики играют ключевую роль в формировании культуры качества и передачи навыков младшим специалистам». И по словам эксперта, за кадры идет серьезная борьба на рынке.</p><p>Это подтверждает и <strong>Ольга Звагольская</strong>,<strong> </strong>руководитель инсорсинговых направлений ГК ITGLOBAL.COM</p><p>«В 2023 году мы заметили тенденцию к перетягиванию IT-специалистов в другие компании из-за их дефицита на рынке труда. Поэтому сейчас мы сосредоточились на нематериальной мотивации сотрудников и уделяем большое внимание развитию корпоративной культуры. У нас есть цель — развивать и взращивать наших специалистов и не допускать их хантинга. Поэтому считаю важным, чтобы сотрудник был предпринимателем в своей роли и четко понимал, как он будет развиваться и расти», — отмечает она.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/e1c/437/6e4/e1c4376e4e2e6b8dda73a20158c165db.jpg\" alt=\"Ольга Звагольская\" title=\"Ольга Звагольская\" width=\"1020\" height=\"585\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e1c/437/6e4/e1c4376e4e2e6b8dda73a20158c165db.jpg\" data-blurred=\"true\"><div><figcaption>Ольга Звагольская</figcaption></figure><p>О том, что нужно не допускать ухода специалистов говорит и <strong>София Воронцова, </strong>директор по персоналу QTIM.</p><p>«Специалисты сейчас очень важны и нужны, и за них идет борьба. Мы стараемся предоставлять нашим сотрудникам всевозможный выбор инструментов для комфортной работы. В QTIM есть своя корпоративная культура, которая заключается в создании полноценной экосистемы ценностей, заботы и благополучия. Каждый сотрудник, который работает в команде, не только чувствует себя частью единого рабочего процесса, но и получает возможность внести свой вклад в развитие компании, при этом не теряя свои ценностные качества. Выстраивание такой культуры очень сильно помогает нам привлекать специалистов», — отмечает она. </p><h3>«Хантинг актуален для специалистов высокого уровня»  </h3><p>Увы, но большого спроса на начинающих разработчиков, которых готовят на многочисленных курсах на ИТ-рынке нет. Компании сфокусированы на поиске опытных специалистов.</p><p>По словам<strong> Ольги Моисеенко, </strong>HR в IT-компании Outlines Tech,<strong> </strong>после существенного снижения количества вакансий в прошлом году, сейчас наблюдается их рост в области IT. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/528/9bb/5fd/5289bb5fd779da53db3c7515a312b3bb.jpg\" alt=\"Ольга Моисеенко\" title=\"Ольга Моисеенко\" width=\"1020\" height=\"585\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/528/9bb/5fd/5289bb5fd779da53db3c7515a312b3bb.jpg\" data-blurred=\"true\"><div><figcaption>Ольга Моисеенко</figcaption></figure><p>«После существенного снижения количества вакансий в области IT в прошлом году, сейчас наблюдается их рост. Специалисты все еще востребованы, и спрос на них не снижается, несмотря на изменения на рынке. Однако, судя по статистике с портала HeadHunter, количество IT-специалистов, ищущих работу, увеличилось в 3,5 раза по сравнению с количеством открытых вакансий. На сегодня хантинг актуален для специалистов высокого экспертного уровня, таких как старшие разработчики и solution архитекторы. Что касается специалистов среднего уровня (middle), имеющих 2-4 года опыта работы, на рынке труда идет глобальный отсев. Это не означает, что middle-специалисты не востребованы, на самом деле, среди них наблюдается самое активное движение на рынке труда. Однако не каждый опыт, имеющий длительность 4 года, одинаково подходит под требования проектов. Компании среди middle-специалистов ищут тех, кто максимально сможет принести пользу здесь и сейчас», — отмечает она. </p><p>По словам Scrum-мастера <a href=\"https://www.comindware.ru/?utm_source=habr&amp;utm_medium=blog&amp;utm_campaign=article\"><u>Comindware</u></a> <strong>Алины Балашовой</strong>, опытные разработчики уже имеют обширные навыки и знания, необходимые для выполнения работы. Они знают, как решать различные проблемы, которые могут возникнуть в процессе разработки, и они способны делать это быстро и эффективно.</p><p>«Новички могут потребовать значительного времени и ресурсов на обучение, прежде чем они смогут работать на том же уровне.Кроме того, опытные разработчики могут принести большую ценность в виде Наконец, найм опытных разработчиков может привести к более быстрому времени выхода на рынок. Опытные разработчики способны работать быстро и эффективно, что позволяет выпускать новые продукты и функции быстрее. Это, конечно, не означает, что мы должны полностью отказаться от найма и обучения новичков. Важно найти баланс между наймом опытных разработчиков и обучением новых талантов, чтобы обеспечить устойчивое будущее нашей индустрии», — говорит Scrum-мастер <a href=\"https://www.comindware.ru/?utm_source=habr&amp;utm_medium=blog&amp;utm_campaign=article\"><u>Comindware</u></a><strong>. </strong></p><h3>«Если человек работает удаленно, другие рекрутеры могут пытаться привлечь его на парт-тайм» </h3><p>Однако, даже если отбросить проблемы с поиском и наймом специалистов, то у компаний болит голова и о том, как в условиях удаленной работы обеспечить фокус работника только на рабочих задачах.</p><p>Как сказала <strong>Мария Орловская, </strong>основатель и управляющий партнер TeamSonance, командный и executive коуч PCC ICF, ex-CEO Oracle в России,<strong> </strong>после пандемии многие компании не вернулись к офисной работе, и это в особенности относится к IT-компаниям. Многие команды работают удаленно, что предоставляет преимущества для специалистов и работодателей, так как теперь они могут нанимать специалистов из других городов.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/703/86c/226/70386c226fc0480ab27c48a16f7a5c53.jpg\" alt=\"Мария Орловская\" title=\"Мария Орловская\" width=\"1020\" height=\"585\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/703/86c/226/70386c226fc0480ab27c48a16f7a5c53.jpg\" data-blurred=\"true\"><div><figcaption>Мария Орловская</figcaption></figure><p>«Возможно, рост количества вакансий связан именно с этим, поскольку люди ищут работу не только в своем регионе, но и в других местах. С другой стороны, удаленная работа позволяет специалистам работать на нескольких работодателей одновременно, что заставляет компании конкурировать за хороших сотрудников не только на этапе рекрутмента, но и в процессе работы», — отметила она. </p><p>«Привлекая специалистов на проекты, работодатели сталкиваются с борьбой за кадры не только на этапе найма, но и в процессе их работы в компании. Если человек работает удаленно, другие рекрутеры и компании могут пытаться привлечь его на парт-тайм или временные проекты. Ранее был доступен Upwork, на котором можно было официально работать с гарантиями от международных компаний», — говорит <strong>Руслан Абишев, </strong>ментор/коуч в IT.</p><p>По его словам, действительно, тренд на «многостаночную» работу на удаленке существует. </p><p>«Специалисты ищут подработки, потому что на основном месте работы процессы могут быть не оптимизированны, и специалисту не хватает интересных задач. Это может быть связано с проблемами в процессах и нематериальными активами, такими как мотивация и лояльность», — подчеркнул эксперт.</p><h3>«Эффективный способ удержать людей на удаленке — общение» </h3><p>Не так просто удержать людей в команде, которая редко бывает в офисе. </p><p><strong>«</strong>В QTIM большое количество удаленных сотрудников, и, безусловно, мы держим руку на пульсе, чтобы люди оставались в команде. Внутри компании мы выбрали на первый взгляд самый простой, но в то же время эффективный способ — общение», — рассказывает <strong>София Воронцова, </strong>директор по персоналу QTIM.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/687/7e8/2f6/6877e82f67e082933982b02af4756a0e.jpg\" alt=\"София Воронцова\" title=\"София Воронцова\" width=\"1020\" height=\"585\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/687/7e8/2f6/6877e82f67e082933982b02af4756a0e.jpg\" data-blurred=\"true\"><div><figcaption>София Воронцова</figcaption></figure><p>«Неформальное взаимодействие с сотрудниками позволяет сблизиться и понять их потребности, проблемы, учесть пожелания. Мы практикуем one-to-one встречи с каждым сотрудником, на которых проводятся опросы, связанные с возможными трудностями в работе, конфликтными ситуациями. Все озвученные вопросы решаются совместно в процессе общения. Такой подход действительно помогает: сотрудник получает возможность высказаться и поделиться своими опасениями. Если возникают тревожные моменты, мы стараемся решить их здесь и сейчас. В итоге специалист понимает, что ему не стоит беспокоиться, и при возникновении проблем ему помогут», — говорит она. </p><p>По словам<strong> Марии Орловской</strong> раньше, когда все работали в офисе, удержание означало, что человек проводит 8 часов в офисе и делает работу. На удаленке это понятие стоит декомпозировать на другие: лояльность и вовлеченность.</p><p>«Лояльность — это хорошее отношение к компании, но она не гарантирует удержание в том смысле, в котором мы его понимаем. Вовлеченность — это когда человек увлечен своей работой и видит, как достижение целей компании удовлетворяет его потребности. Тогда сотрудник будет работать эффективнее и уделять больше времени компании, даже если у него есть другие активности», — отмечает она.</p><p>«Для меня вовлеченность означает быть частью компании. В нашем подходе мы не акцентируемся на \"удержании\" сотрудников, а строим с ними индивидуальные годовые планы и вовлеченность в общее дело. Все сотрудники компании называются партнерами, и независимо от их текущей мотивации (опционы или доли в компании), они вовлечены в процесс создания продукта, достижение результатов и удовлетворение потребностей клиентов», — говорит <strong>Алексей Шабаршин, </strong>владелец онлайн-сервиса найма сотрудников Promopoisk.com</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/580/76b/0d1/58076b0d1b371fe349fbad3a514db8ac.jpg\" alt=\"Алексей Шабаршин\" title=\"Алексей Шабаршин\" width=\"1020\" height=\"585\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/580/76b/0d1/58076b0d1b371fe349fbad3a514db8ac.jpg\" data-blurred=\"true\"><div><figcaption>Алексей Шабаршин</figcaption></figure><p>«На данный момент не каждому сотруднику раздаются акции, всего два из них имеют опционы на доли, а двое уже владеют долями. Однако важно мотивировать сотрудников, прописывая в их планы развития и финансовую мотивацию», — резюмирует он.</p><h3>«В больших компаниях сотрудникам сложнее выделиться»  </h3><p>«Да, в своей практике ментора в IT я сталкиваюсь с разными ситуациями. Среди специалистов среднего и старшего уровня часто возникает такой запрос: им скучно на текущей работе и они не видят перспективы для дальнейшего развития. Очень часто в компании отсутствует четкий карьерный путь. Сотрудник получает определенный объем работы, но не имеет представления, что он будет делать дальше. После того, как его приняли на работу, с ним, как правило, перестают активно работать внутри компании», - говорит <strong>Руслан Абишев, </strong>ментор/коуч в IT.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/655/383/20c/65538320c6da626d6d97fdcbaddd4dde.jpg\" alt=\"Руслан Абишев\" title=\"Руслан Абишев\" width=\"1020\" height=\"585\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/655/383/20c/65538320c6da626d6d97fdcbaddd4dde.jpg\" data-blurred=\"true\"><div><figcaption>Руслан Абишев</figcaption></figure><p>«В больших компаниях сотрудникам сложнее выделиться. Поэтому я считаю, что даже при работе удаленно, большим компаниям следует помочь сотрудникам осознавать свое место в команде и видеть свой вклад. Раньше, когда мы все работали в офисе, можно было подойти к сотруднику, поблагодарить его за работу или просто поговорить в неформальной обстановке. С работой на дистанции, возможно, кажется странным писать сообщение с благодарностью или похвалой, но это важно», — говорит эксперт.</p><p>«На самом деле, здесь возникают два вопроса. Во-первых, это требования к компетенциям IT-лидеров, которые должны уметь управлять командой и поддерживать комфортную рабочую атмосферу. Во-вторых, IT сегодня предлагает множество сервисов для HR, которые могут помочь в решении этих задач. Существуют, например, системы, которые мониторят выгорание и анализируют контакты между сотрудниками, определяя изменения в их активности. Кроме того, коучинг перестал быть элитной услугой и стал доступным ресурсом для специалистов и команд среднего уровня. Однако, иногда руководители ошибочно полагают, что цели команды понятны всем, так как они ясны им самим. Это может привести к разному восприятию целей среди членов команды», — отмечает <strong>Мария Орловская, </strong>основатель и управляющий партнер TeamSonance, командный и executive коуч PCC ICF, ex-CEO Oracle в России.</p><h3>«Сотрудник утром может начать пить пиво»  </h3><p>Проблему удержания сотрудников каждая ИТ-компания решает по-своему. Например, можно установить кеги с пивом, чтобы сотрудники могли, но при этом не хотели его пить.</p><p>Об этом рассказывает<strong> Ольга Звагольская, </strong>руководитель инсорсинговых направлений ГК ITGLOBAL.COM</p><p>«Те, кто вернулся к гибридному формату работы, стали счастливее. Мы провели опросы и обнаружили, что уровень счастья у таких сотрудников возрос. Мы также добавили в офис новую услугу: установили кегераторы с пивом из собственной пивоварни в Севастополе. Теперь любой сотрудник может пить пиво после 16:00, а Production Unit и IT-специалисты могут наслаждаться пивом в течение всего дня. Таким образом, когда сотрудник приходит на работу утром, он может начать пить пиво, но интересное то, что он на самом деле не хочет этого делать. Ведь когда пива нет, кажется, что если оно будет в наличии, то хочется его пить целый день. Однако, когда оно доступно, сотрудники его не пьют. Человек так устроен, что если что-то постоянно доступно и бесплатно, то он этого не хочет», — отмечает она. </p><p>В <a href=\"https://www.comindware.ru/?utm_source=habr&amp;utm_medium=blog&amp;utm_campaign=article\"><u>Comindware</u></a> тоже занимаются переводом работы на привычные оффлайновые рельсы.</p><p>«Мы в настоящее время занимаемся возвратом наших сотрудников в офис с полностью удаленной работы. Наблюдается интересная тенденция: люди начинают работать лучше. Думаю, это связано с тем, что работая дома, сотрудник выполняет задачу и сам для себя определяет, достаточно он сделал или нет. Это порождает самоанализ, иногда слишком строгий, иногда, напротив, слишком лояльный», — говорит <strong>Алина Балашова, </strong>Scrum-мастер Comindware.</p><p>«В офисе же, в окружении своей команды, сотрудник видит, как работают другие, и это позволяет ему сравнить свой уровень производительности с коллегами. Это вызывает чувство сопереживания проекту. Осознание того, что он не один в этом проекте и что его работа имеет значение для всей команды. Кроме того, общение в офисе способствует более быстрой и эффективной работе. Вопросы решаются быстрее, чем если бы это делалось через мессенджеры или звонки. В ходе обсуждения могут возникнуть новые идеи, что способствует более глубокому погружению в проект и увлеченности им.</p><p>Тем не менее мы считаем, что должен сохраниться некий гибридный режим работы. Например, сотрудник может работать в офисе один или два дня в неделю, чтобы обсудить рабочие моменты или просто для общения. Но иногда есть моменты, когда сотрудникам нужно спокойно сесть и написать код без отвлечений. В такие дни они могут работать из дома. Итак, в целом, мы считаем, что лучше всего будет использовать гибридную модель работы», — отмечает Scrum-мастер Comindware.</p><h3>«Деньги не являются эффективным мотиватором»  </h3><p>Еще один инструмент удержания специалистов в ИТ — деньги. Но его принято критиковать и не считать эффективным. Как говорят эксперты — сколько разработчику не плати, это не решит его главную задачу — кадровый рост и развитие. </p><p>«Деньги являются гигиеническим минимумом, необходимым для закрытия базовых потребностей. Однако деньги не являются эффективным мотиватором. Нельзя просто увеличивать зарплату сотрудника в надежде на то, что это решит все его проблемы, например, проблемы с выгоранием», — отмечает <strong>Руслан Абишев, </strong>Head of Project Management Office, ментор/коуч в IT.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/20b/1f6/434/20b1f643417aaffbf09b58e9280b2b82.jpg\" alt=\"Руслан Абишев\" title=\"Руслан Абишев\" width=\"1020\" height=\"585\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/20b/1f6/434/20b1f643417aaffbf09b58e9280b2b82.jpg\" data-blurred=\"true\"><div><figcaption>Руслан Абишев</figcaption></figure><p>По его словам деньги могут помочь лишь на короткой дистанции, так как деньги не закроют проблемы нефинансового характера. Важно выяснить, где именно сотрудник испытывает трудности и понять, как их решить. </p><p>«Необходимо определить, что действительно важно для сотрудника: возможно, это признание, участие в социально значимом проекте или получение наград. Иногда человек может быть доволен занимаемой должностью директора с меньшей зарплатой, в то время как другой сотрудник, занимающий должность младшего специалиста с высокой зарплатой, будет недоволен. Я не согласен с утверждением, что деньги решают все проблемы», — считает эксперт.   </p><p>«Важно понимать, что разные люди ищут разные вещи на работе. Например, кто-то стремится к известности, работая в крупных компаниях, таких как Google, и чувствуя себя причастным к чему-то большому. Другим же может быть достаточно работы в небольшой компании или бутиковом агентстве, где они также будут удовлетворены.</p><p>Таким образом, у людей могут быть разные цели, и поэтому подходы к их достижению также различаются», — отмечает <strong>Руслан Абишев.</strong></p><p><strong>Алина Балашова</strong>, Scrum-мастер Comindware считает, что<strong> </strong>деньги, безусловно, важны, особенно если речь идет о базовых потребностях, таких как еда и жилье. Однако, когда эти потребности удовлетворены, люди начинают задумываться о более высоких ценностях, таких как смысл своей работы, свое место в будущем и свое самоощущение.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/e2b/012/055/e2b012055616b96e32141646f5a97a80.jpg\" alt=\"Алина Балашова\" title=\"Алина Балашова\" width=\"1020\" height=\"585\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e2b/012/055/e2b012055616b96e32141646f5a97a80.jpg\" data-blurred=\"true\"><div><figcaption>Алина Балашова</figcaption></figure><p>«Если человек страдает от выгорания и не может ответить на эти вопросы, то повышение зарплаты может помочь только на короткое время. Через месяц или два он снова начнет задумываться о своих целях и о том, насколько ему нравится его работа. Учитывая, что большинство людей проводят на работе более 40 часов в неделю, важно понимать, ради чего они это делают, иначе деньги не решат этот вопрос», — говорит она. </p><h3>Вместо вывода</h3><p>Ситуация на рынке труда в ИТ сейчас достаточно сложная. Разные компании тестируют разные стратегии привлечения и удержания специалистов. Мы бы хотели знать, как нанимают и удерживают специалистов у вас. Поделитесь своими историями в комментария под статьей или под трансляцией на Youtube-канале. </p><p>В свою очередь компания Comindware, ведущий разработчик инновационного программного обеспечения для автоматизации бизнес-процессов и управления работой, активно ищет талантливых специалистов в области программирования для расширения своей команды. Это идеальная возможность для тех, кто стремится применять свои навыки и знания на практике, работая над сложными и интересными проектами.</p><p></p>', 1, '2023-06-12 21:56:01', 540996, 86, '/ru/companies/comindware/articles/740920/', 'В мире информационных технологий, который продолжает стремительно развиваться, важно знать, как найти и удержать ценные кадры. Что сегодня мотивирует опытного айтишника - высокая зарплата, бесплатное пиво или миссия компании? Индустрия IT-услуг уже достигла объема в 1,2 триллиона долларов США, показав рост на 8,7% в 2022 году. С увеличением числа IT-специалистов, превышающего 20 миллионов человек по всему миру, актуальность вопросов об удержании и развитии профессионалов только возрастает. Мы поговорили с экспертами, чтобы понять, какие факторы оказывают наибольшее влияние на решение сотрудников остаться в компании или сменить место работы. Мы попытаемся разобраться в этом вопросе, оценив важность таких составляющих как заработная плата, дополнительные бонусы и привлекательность миссии компании.'),
(154, 'Я инженер, и мне нужно выступать перед людьми. Что делать?', '<p>Если вы успешный инженер или разработчик, то на определенном этапе карьеры вам придется, так сказать, выйти на сцену. Причем не перед дружелюбно настроенными коллегами, которые пришли послушать про какой-нибудь фреймворк. А перед «лицами, принимающими решения», которые могут сильно повлиять, например, на вашу будущую карьеру. В этом посте мы поделимся опытом Нила Томпсона, создателя курсов публичных выступлений Teachthegeek.com. Путь к собственному проекту и известности в качестве спикера Нил начинал как обычный инженер — и в подкасте InfoQ рассказал, что помогло ему в развитии.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/c74/9ef/10e/c749ef10e9ffccb3cd09e3c22703184d.png\" width=\"1000\" height=\"666\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/c74/9ef/10e/c749ef10e9ffccb3cd09e3c22703184d.png\"></figure><p>Я стал инженером, потому что так мне посоветовал отец. Я никогда не думал, что буду этим заниматься. В школе я неплохо справлялся с математикой и естественными науками. Отец спросил, почему бы мне не стать инженером, и я согласился.</p><p>Раньше я скрывал эту причину, она казалась мне чем-то постыдным. Обычно у всех на этот счет есть классная история о каком-нибудь школьном кружке робототехники или об увлечении Lego. Конструкторы меня не интересовали, да и кружка с роботами в моей школе не было. Сначала отец предложил окончить школу с этой специальностью. Потом получить высшее образование. И наконец, по его же совету я пошел получать степень доктора наук по инженерии материалов.</p><p>Тогда мне было 24 года. В какой-то момент жизни каждый начинает принимать решения самостоятельно, и примерно в это время такой момент наступил и у меня. Я не представлял себя доктором наук, через год забросил учебу. Потом, пока я семь месяцев искал работу, пришлось жить у отца. Вряд ли он был этому рад.</p><p>На первой работе я пытался разобраться, как что работает в индустрии да и вообще в этом мире. На второй работе меня назначили лидом проекта. Моя компания была слишком бедна, чтобы нанимать полноценных проджект-менеджеров, и всю ответственность они возлагали на инженеров. Так что каждый месяц мы, лидеры проектов, представляли презентации о нашей работе топ-менеджменту — CEO, COO, CTO и прочим «C».</p><h3>Страх публичных выступлений</h3><p>Первые презентации две вселяли в меня ужас. Я не знал, что человеческое тело способно выделить столько пота. Я был словно покрыт водой — ощущение не из приятных. Повторять такой опыт не хотелось, поэтому я решил, что стоит развивать навык презентаций, особенно перед людьми, которые технически не так подкованы, как я. К тому же проект, который я представлял тогда, компания в итоге закрыла. Сейчас я думаю, что, возможно, если бы я лучше выступал, проект бы не закрыли. Все еще думаю об этом, хотя прошло уже лет 13.</p><p>Я развивал навыки презентаций и в итоге присоединился к Toastmasters — международной организации, помогающей людям развивать навыки публичных выступлений. Я начал сознательно искать возможности для публичных выступлений. Все свои знания по теме я свел в курсе Teach the Geek to Speak. Так я получил огромные возможности для оттачивания навыков. Каждый месяц я выступаю перед комьюнити курса, даю консультации, решаю с другими техническими специалистами их проблемы.</p><p>Даже если страх публичных выступлений у вас сильнее страха смерти, прежде всего спросите себя: «Зачем мне нужно прокачивать навыки публичных выступлений?». Я довольно быстро понял, что такие люди как минимум быстрее других продвигаются по карьерной лестнице. Какой бы невероятной экспертизой ты ни обладал, никто об этом не узнает, пока ты не научишься общаться с людьми. Не упускайте эту мысль, и это поможет преодолеть страх.</p><h3>Находите общий язык с людьми и рассказывайте им истории</h3><p>Для начала вам нужно определить потенциальных зрителей и их уровень знаний. Если вы архитектор ПО, а говорить об архитектуре ПО приходится с не-архитекторами, важно понять, что они знают по теме. Они совсем новички? Или, может, они более продвинуты, чем вы считаете? Если это новички, то используйте меньше технического жаргона и больше общей лексики.</p><p><em>От редактора: в оригинале «находите общий язык с людьми» звучит как «meet people where they are», дословно «подходите к людям там, где они находятся». Легко подумать, что речь идет о физическом местоположении. Нет, не надо никого утомлять в перерыве у кофе-машины или затягивать созвоны личными историями. Речь здесь именно об уровне знаний, об экспертности.</em></p><p>Помню, на второй работе, когда я представлял обновления по проекту, мне приходилось взаимодействовать с группой ортобиологов. Если я сейчас продолжу углубляться в ортобиологию, вы вряд ли поймете, о чем вообще речь. Ортобиология занимается имплантами, сделанными из костной ткани человека. Моя компания, в частности, делала такие импланты для позвоночника. Если бы я продолжил просто называть всех ортобиологами, то вряд ли бы удержал интерес. Поэтому я использую слова, которые понятны всем: это про импланты из костей.</p><p>Второй важный момент — это сторителлинг. Я никогда не понимал, насколько он важен в презентациях, пока не задумался и не услышал, как другие люди ведут технические презентации с помощью сторителлинга. Я думал, что травить байки на технической презентации не стоит; важно сконцентрироваться на данных и фактах. Но если вы работаете с аудиторией, особенно нетехнической, сторителлинг очень важен. Им уже трудно мыслить на вашем уровне экспертизы — так постарайтесь хотя бы обернуть свои знания в нечто более понятное, чтобы зрители смогли-таки взобраться на эту вершину. Слово «ортобиолог» могло легко выключить ваше внимание, поэтому я сразу пояснил его на понятном языке.</p><p><em>От редактора: чтобы понять, как работает сторителлинг, можно почитать «</em><a href=\"https://alpinabook.ru/catalog/book-istoriya-na-million-dollarov-master-klass/\"><em><u>Историю на миллион долларов</u></em></a><em>» Роберта Макки. А чтобы вдохновиться магией сторителлинга, посмотрите «</em><a href=\"https://ru.wikipedia.org/wiki/%D0%91%D0%B0%D1%80%D1%82%D0%BE%D0%BD_%D0%A4%D0%B8%D0%BD%D0%BA\"><em><u>Бартон Финк</u></em></a><em>» братьев Коэн.</em></p><p>Подытожу этот пункт. Знайте, с кем работаете и какой у них уровень экспертизы. Если нужно, говорите словами из общей лексики, чтобы тебя с большей вероятностью слушали. И наконец, используйте сторителлинг.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/086/ade/5a5/086ade5a57dc73c5d8fd234541eb3dca.png\" alt=\"Источник Kandinsky 2.1\" title=\"Источник Kandinsky 2.1\" width=\"700\" height=\"509\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/086/ade/5a5/086ade5a57dc73c5d8fd234541eb3dca.png\"><div><figcaption><em>Источник </em><a href=\"https://habr.com/ru/companies/sberbank/articles/725282/\"><em><u>Kandinsky 2.1</u></em></a></figcaption></figure><h3>Взаимодействуйте с аудиторией</h3><p>Когда ваше взаимодействие с аудиторией одностороннее, стоит придерживаться принципа «меньше — лучше». Я много ходил на конференции в качестве зрителя, когда работал инженером. Сложно сохранять концентрацию и желание просиживать зад, если в аудитории тебя не сопровождает чашечка кофе или энергетик.</p><p>В этом заключается еще одна большая проблема. Многие технические специалисты, особенно руководители, во время презентации просто зачитывают со слайдов. Они даже не смотрят на зрителей. Такое чувство, что они дают презентацию, просто чтобы мысленно поставить галочку. «Я проведу презентацию» вместо «Вау, я собираюсь реально увлечь людей, и они узнают то, чего не знали раньше!». Если вы смотрите на слайды, а не в зал, то вы, вероятно, потеряете контакт с аудиторией.</p><p>Когда я говорю о профессиональных темах, то стараюсь, чтобы на моих слайдах было как можно меньше слов. Еще я очень люблю заменять текст картинками — это избавляет зрителей от необходимости читать. В итоге у них остается простой выбор: либо слушать вас, либо игнорировать. Да и у вас число сценариев сокращается до двух: вы смотрите либо на аудиторию, либо на свои ботинки.</p><p>Картинки стоит подбирать так, чтобы они были связаны с повествованием. Это поможет вспомнить нужные тезисы. Конечно, если на слайдах нет слов, вести презентацию может быть сложновато. Особенно если вы привыкли читать целые предложения и только потом оборачиваться к аудитории. Но, как я уже сказал, эта тактика опасна: вы можете потерять контакт с аудиторией.</p><p>Еще один важный совет. Если у вас на слайде есть графики или таблицы, добавьте к ним заголовок, где будет четко изложено то, что вы хотите донести с помощью графиков и таблиц. Не стоит сильно напрягать слушателей, чтобы они поняли смысл всех этих линий и цифр. Просто напишите, что хотите до них донести; это будет очень полезно, особенно для нетехнической аудитории.</p><h3>Участвуйте в панельных дискуссиях</h3><p>Для спикеров такой формат может быть непростым, особенно если для каждого участника панели имеется строго отведенное время. Вы должны уместить свои тезисы в строго отведенный промежуток, чтобы у коллег осталось достаточно времени. Если получится, узнайте о теме панельной дискуссии заранее — так вы сможете предварительно подготовить истории, чтобы не задерживаться на дискуссии.</p><p>Как я упоминал выше, очень важно умение выразить мысль в минимальном количестве слов. Мне, например, это всегда давалось легко, и я даже не задумывался, насколько это важно, пока о моих выступлениях не стали говорить как о лаконичных. Мне нравится, когда я могу уместить максимум смысла в как можно меньшее количество слов. Чем больше ты скажешь, тем больше зрителям придется думать.</p><p>Я хорошо помню, как читал техническую литературу в школе и университете. Чем длиннее предложение, тем сложнее понять, что оно значит. Даже если просто разбить такое предложение на две части, постичь смысл становится гораздо легче. Так что если вы участвуете в панельной дискуссии, постарайтесь говорить приветливо и лаконично, чтобы у других тоже было время ответить на вопросы. И вероятно, другие участники ответят вам тем же.</p><p><em>От редактора. Устная речь в принципе должна быть проще письменной. По возможности избегайте причастных и деепричастных оборотов, витиеватых сложноподчиненных конструкций. Старайтесь не ставить далеко зависимые члены предложения от их главных слов. Это может быть уместно в письменной речи, но фокус внимания у слушателей гораздо уже, чем у читателей.</em></p><h3>Аргументируйте и убеждайте, а не просто говорите</h3><p>Старайтесь привязывать свои цифры и факты к обоснованию какого-нибудь тезиса, а не просто сыпьте знаниями. Желательно с использованием сторителлинга.</p><p>Вернусь к тому проекту, который отменили лет 13 назад, как мне кажется, по моей вине. Да, причина была, скорее всего, в моей недостаточной убедительности. «Почему мы должны выделить больше денег на проект?». «Зачем вам нужны еще люди?». У меня не было ответов на эти вопросы. Я просто читал слайды, обливался потом и старался побыстрее сбежать. Но это мне никогда не удавалось. В конце презентации я получал вопросы, на которые уже вроде бы отвечал по ходу презентации, терялся и потел еще больше.</p><p>Когда ты убеждаешь людей в чем-то, они хотят знать, какие еще у них есть варианты. Но при этом им очень интересно, какой из вариантов лучший (да, ваш, конечно же). По моим наблюдениям, здесь может очень помочь сторителлинг.</p><p><em>От редактора. Оставшаяся часть </em><a href=\"https://www.infoq.com/podcasts/effective-communicator-engineer/\"><em><u>подкаста</u></em></a><em> посвящена проектам Нила Томпсона — </em><a href=\"https://teachthegeek.com/\"><em><u>курсам публичных выступлений</u></em></a><em> и детским книжкам. Тема ораторского мастерства очень популярна в западных источниках, она изучена на разных уровнях. Если вам интересно узнать о ней подробней, оставьте комментарий к этому посту, и мы продолжим в будущих публикациях.</em></p><p></p>', 1, '2023-06-12 21:56:02', 450215, 83, '/ru/companies/sberbank/articles/740862/', 'Если вы успешный инженер или разработчик, то на определенном этапе карьеры вам придется, так сказать, выйти на сцену. Причем не перед дружелюбно настроенными коллегами, которые пришли послушать про какой-нибудь фреймворк. А перед «лицами, принимающими решения», которые могут сильно повлиять, например, на вашу будущую карьеру. В этом посте мы поделимся опытом Нила Томпсона, создателя курсов публичных выступлений Teachthegeek.com. Путь к собственному проекту и известности в качестве спикера Нил начинал как обычный инженер — и в подкасте InfoQ рассказал, что помогло ему в развитии.'),
(155, 'Работа в стартапах для разработчиков: шансы и риски', '<p>Всем привет, меня зовут Август Вилакия!<br><br>У меня бывает так, что сижу я себе, пишу код, а тут - бац! - и ко мне какой-нибудь энергичный братишка приходит: \"Эй, чувак, тащись к нам в стартап! Мы уже почти подняли крупный раунд\". А иногда встречаются еще более везучие ребята, которые уже раздобыли бабло и предлагают обменять мои кровь, пот и слёзы (читай: время) не только на зарплату, но и на опционы или долю в компании.</p><p>Вот эти самые стартапы, особенно те, которые растут и превращаются в \"единорогов\" (так называют компании, оцененные в космические $1 миллиард и больше), могут подсунуть под нос своим работягам опционы на акции. И, бро, эти опционы могут принести миллионы долларов, если стартап оторвется и улетит в космос.</p><blockquote><p><a href=\"https://www.linkedin.com/in/maxkras/\" rel=\"noopener noreferrer nofollow\">Макс Красных</a> пошел в GetTaxi когда там была сотня человек и стал COO/Co-CEO юникорна. <a href=\"https://www.linkedin.com/in/aantich/\" rel=\"noopener noreferrer nofollow\">Антон Антич</a> был биздев в Veeam, а теперь ангельствует (пришел на выручку в $20 млн, а через 8 лет Veeam вырос в 50 раз). Miro/Realtimeboard после пандемии подорожала 10x вообще в космос - до $17 млрд (Яндекс сейчас кажется в $7 млрд оценили) итп. В 2021 г 75 tech IPO в США общей капитализации $700 млрд породили по 1-2 тыс миллионеров на каждую компанию = 50-70 тыс чел в сумме = 1 млн чел за декаду = 1/8000 всех жителей Земли</p></blockquote><h2>Сперва разберемся как работает эта штука с опционами</h2><p>Представь, что ты пришел работать в стартап и тебе обещают много акций. Но вместо того чтобы сразу дать тебе кучу бумажек, они говорят: <em>\"Постой, дружище, тут всё по-честному. Ты будешь получать свои акции по частям, по мере того, как будешь работать\".</em> Это и есть \"вестинг\" – ты постепенно заслуживаешь свою долю, и обычно этот процесс занимает где-то четыре года.</p><p>А \"клифф\"? Это срок, который нужно отработать, чтобы получить первую часть своих акций. Обычно это год. Если ты сваливаешь раньше, то, увы, ничего не получишь. Это такая мотивация, чтобы ты подумал: \"Окей, поживу тут годик, посмотрю, как дела будут идти\".</p><p>В итоге, вся эта система \"вестинга\" и \"клиффов\" помогает балансировать между тем, что хочет сотрудник, и тем, что нужно стартапу. Это такой способ заставить тебя по-настоящему вкладываться в работу и помочь компании вырасти.<br><br>Еще нужно отметить, что если это стартап, то его акции не крутятся на бирже и чтобы их продать их нужно выносить на вторичный рынок. На самом деле в крутых стартапах, которые уже подняли несколько раундов, образуется достаточно ликвидный вторичный рынок. У нас есть близкий нам пример это Додо пицца, там <a href=\"https://rb.ru/news/dodo-buyback/\" rel=\"noopener noreferrer nofollow\">была запущена програма добровольного выкупа акций у сотрудников</a> (таких сотрудников с акциями было более 200).</p><h2>Где то самое \"но\"? Работа в стартапах: шансы и риски.</h2><p>После всех этих историй, фильмов и новостей, кажется нужно идти создавать свой b2b-web3-saas стартап с применением искуственного интеллекта. </p><blockquote><p>Количество долларовых миллионеров в мире - <strong>56 миллионов человек<br><br></strong>Количество разработчиков программного обеспечение в мире - <strong>26.9 миллионов человек</strong></p></blockquote><p>На самом деле такие мысли каждый раз преследуют и меня. Я решил посмотреть какие же на самом деле есть шансы и возможности у стартапа на успех и у человека с опционом в итоге стать <strong>долларовым миллионером.</strong></p><p>Сперва давайте определимся с раундами финансирования, там есть четкая категоризация иногда Pre-Seed не бывает, но общую суть картинка снизу передает. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/2d1/084/68a/2d108468a963a73050f2df49b35f5a00.png\" alt=\"сами циферки в разных странах, в разное время могут сильно отличаться\" title=\"сами циферки в разных странах, в разное время могут сильно отличаться\" width=\"1280\" height=\"618\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/2d1/084/68a/2d108468a963a73050f2df49b35f5a00.png\"><div><figcaption>сами циферки в разных странах, в разное время могут сильно отличаться</figcaption></figure><p>Совсем бедолаг рассматривать не будем и будем обсуждать только Seed и Раунд А, потому что на дальнейших раундах опционы сотрудников могут быть уже не такие существенные и в итоге не приведут к тому что человек окажется миллионером.<br><br>Вот что нам говорят <a href=\"https://www.angellist.com/blog/angellist-unicorn-rate\" rel=\"noopener noreferrer nofollow\">данные с AngelList</a>. Согласно их статистике, у стартапа на стадии Seed, который уже привлек венчурное финансирование, есть шанс 1 к 40 (или 2,5%) стать \"единорогом\". Исследование основано на анализе 2,622 seed-инвестиций, сделанных на AngelList в период с 2013 по 2019 год. </p><p>Чтобы быть более консервативными, мы можем взять <a href=\"https://www.crunchbase.com/\" rel=\"noopener noreferrer nofollow\">Crunchbase</a>, куда добавляют практически все стартапы и можно взять количество Seed стартапов, взять количество единорогов и мы получим цифру около 1.2% у Seed стартапа стать \"единорогом\".<br><br>Кто готов ставить свои 4 года жизни на шанс в 1.2%? Я с таким шансом играю в лоттерею гринкард уже 5 лет и как видите я еще здесь)</p><h2>Менее рисковые варианты, идем к раунду А</h2><p><strong><br><br></strong>Вот и подходим мы к следующей вехе на пути стартапа - раунд A инвестиций. К этому времени стартап обычно уже нашел свое product-market fit и занимается активным масштабированием. Но что с шансами?</p><p>Если ты уже в компании, которая прошла раунд A, твои шансы на успех увеличиваются. Согласно некоторым исследованиям (взять все стартапы, которые подняли Раунд А и количество единорогов), вероятность стать \"единорогом\" в этом случае прыгает до примерно 7%. Это уже куда интереснее, чем 2.5% на стадии seed, правда?<br><br>Далее пытаемся разобраться, какой процент из этого пирога нам дадут. Погуглив можно прийти примерно к цифре в <a href=\"https://storm2.com/resources/team-sizes/team-sizes-at-the-series-a-funding-stage/\" rel=\"noopener noreferrer nofollow\">40-60 человек в среднем</a> в стартапе Раунда А. Пул опционов для сотрудников - около 10-12%. Но обычно, если вы не входите в первую пятерку сотрудников стартапа, доля опционов, которую вам предложат, <strong>будет около 0.1%. (слишком мало)<br><br></strong>Кажется мне что это как то мало, решил я поискать другие источники информации. По каким то опросам ребятки <a href=\"https://www.holloway.com/g/equity-compensation/sections/typical-employee-equity-levels\" rel=\"noopener noreferrer nofollow\">надыбали</a> такие цифры для раунда А. Мне кажутся они завышенными так что мы будем смотреть по нижней границе.</p><ul><li><p>Chief executive officer (CEO): 5–10%</p></li><li><p>Chief operating officer (COO): 2–5%</p></li><li><p>Vice president (VP): 1–2%</p></li><li><p>Independent board member: 1%</p></li><li><p>Director: 0.4–1.25%</p></li><li><p>Lead engineer 0.5–1%</p></li><li><p>Senior engineer: 0.33–0.66%</p></li><li><p>Manager or junior engineer: 0.2–0.33%</p></li></ul><p>Представим, что средняя капитализация на стадии раунда А составляет 50 миллионов долларов. Если ваши 0.3% от этой капитализации превратятся в 0.3% от единорога (когда ваш стартап уже обретет статус единорога), это сумма в 2 миллиона долларов. Теперь, давайте умножим это на вероятность <strong>7%</strong>, и <strong>мы получим ожидаемую стоимость (Expected Value) в размере 140 000 долларов</strong> за 4 года (учитывая вестинг).</p><p>Теперь, не забывайте, что <strong>из этой суммы надо вычесть 100% гарантированную разницу в доходе, которую вы бы получили, работая в большой компании, плюс ее премии.</strong> Это как бы альтернативная стоимость работы в стартапе. И вот здесь мы получаем некую итоговую сумму, которая, возможно, уже не звучит так заманчиво. Учитывая, что работа в стартапе на такой стадии - это большая ответственность и очень много затраченного времени, часто с нарушением баланса между работой и личной жизнью, мы не можем утверждать, что мы получим много денег или что у нас есть хорошие шансы на успех.</p><p>Однако, не все так плохо, как может показаться на первый взгляд. Средний VP of Engineering/Director of Engineering получает около 1.5% акций компании в которой уже больше 30 человек, и с такими цифрами работа в стартапе выглядит уже не так уж плохо и теоретически может окупиться. Но стоит учесть, что все эти данные применимы, если вы находитесь в США и являетесь отличным инженером, что тоже та еще задачка. Вот есть сайт, который парсит вакансии в стартапы, которые получили финансирование от лучших фондов и там есть много фильтров по которым можно выбрать и попытать свое счастье <a href=\"https://topstartups.io/\" rel=\"noopener noreferrer nofollow\">https://topstartups.io/</a>.<br></p><hr><p><br>Если вам понравились мои мысли и анализ по теме стартапов, буду рад видеть вас среди подписчиков моего телеграмм канала - <a href=\"https://t.me/avgvi\" rel=\"noopener noreferrer nofollow\">https://t.me/avgvi</a> </p><p></p>', 3, '2023-06-12 21:56:02', 260045, 87, '/ru/articles/740786/', 'Всем привет, меня зовут Август Вилакия!У меня бывает так, что сижу я себе, пишу код, а тут - бац! - и ко мне какой-нибудь энергичный братишка приходит: \"Эй, чувак, тащись к нам в стартап! Мы уже почти подняли крупный раунд\". А иногда встречаются еще более везучие ребята, которые уже раздобыли бабло и предлагают обменять мои кровь, пот и слёзы (читай: время) не только на зарплату, но и на опционы или долю в компании.Вот эти самые стартапы, особенно те, которые растут и превращаются в \"единорогов\" (так называют компании, оцененные в космические $1 миллиард и больше), могут подсунуть под нос своим работягам опционы на акции. И, бро, эти опционы могут принести миллионы долларов, если стартап оторвется и улетит в космос.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(156, 'Как заставить программистов пахать? 5 неочевидных советов', '<p>Для начало придется забыть слово заставить. Задача помочь сотрудникам полюбить зарабатывать вам деньги.</p><p>Меня зовут Слава. Я создал и развалил сеть ночных клубов, прошел 300 собеседований на маркетолога, проработал как подрядчик и сотрудник в более 50 компаниях. Сейчас занимаюсь системным маркетингом.</p><p>Там, где я работал, были разные системы управления, но всегда работал один и тот же принцип.</p><blockquote><p><strong>Если сотрудник любит работодателя, он приносит ему деньги.</strong><br><strong>Если сотрудник НЕ любит работодателя, он вредит ему.</strong></p></blockquote><p>Если вас не любят, не помогут ни регламенты, ни постоянная слежка. Это про человеческие отношения: если с вами хорошо, вы отплатите добром, если с вами по-свински, отплатите тем же.</p><h2>1. Платите за плохую работу </h2><p>Очень больно платить, когда задачи выполнены плохо, результат не получен и явно по вине сотрудника или подрядчика. Это называется предпринимательские риски. Вы выбрали человека, вы в нем ошиблись, вам расплачиваться.</p><p>Ваш коллектив должен знать, что плохая работа вами будет также оплачена, как и хорошая, просто второй раз вы за ней не придете. Это по-человечески, это вызывает уважение.</p><blockquote><p>Заказывал работы по сайту (SEO), плохо отдал задачу и не прояснил, что вижу хорошим результатом. Согласовал план, где по факту анализ анализом погоняет.</p><p>По итогу понимаю, что специалист дает рекомендации, но руками делает очень мало. Он подразумевает, что я сам должен нанять программиста, копирайтера, проконтролить их работу по ТЗ, то есть плачу сеошнику за головняк себе же.</p><p>Плачу специалисту полную ставку, так как в его представлении работа сделана хорошо.</p><p>Мы не договорились, я несу ответственность за эту недоговоренность.</p></blockquote><h2>2. Верьте каждому слову сотрудника</h2><blockquote><p>Как-то программист не вышел на работу и написал, что его укусила лиса.</p><p>Как работодателю, мне стоит предложить ему оплатить уколы от бешенства</p></blockquote><p>Если ваши отношения с ребенком, второй половинкой или сотрудником не очень хороши – вам будут врать. Если дело доходит до “укуса лисицы”, просто попрощайтесь с сотрудником. А вот давать понять, что вы сомневаетесь в правдивости слов, точно не надо. Какая вам разница, человек просит выходной, потому что устал или он и правда заболел?</p><p>Сотрудники на правильном месте у приятного и вдохновляющего работодателя болеют мало, а работают много. И, думаю, лисы их кусают реже. Когда сотрудники поймут, что вам не важны благовидные предлоги, они перестанут их производить.</p><h3>3. Делегируйте осмысленно</h3><p>Обычно под делегированием многие понимают перекладывание задачи. Чтобы самому не работать, ты такой: “Вась, сделай-ка это ты, а я посмотрю на облака”.</p><p>В действительности это крайне серьезный навык, от которого зависит, как долго сотрудники с вами проработают, будет ли нравится сотруднику работа, будет ли работа сотрудника приносить пользу компании.</p><p>Что отличает правильное делегирование?</p><ul><li><p>Мы знаем, зачем делать эту задачу. Без понимания \"зачем\" мы получаем никому не нужную задачу. Мы не можем измерить ее успешность. Ну сдали и сдали. Сказали же \"надо\". А кому надо? Зачем надо?</p></li><li><p>Понимаем процесс в задаче: могли бы сделать сами – может быть в худшем качестве, но тем не менее, понимаем трудозатраты и подводные камни. Если не понимаем процесса – не сможем выставить адекватные сроки. Или вылезут сопутствующие расходы, а в смете их нет.</p></li><li><p>Знаем, как выглядит результат. А если не знаем, то красный цвет кнопки на лендинге всегда будет недостаточно красным.</p></li></ul><p>Если вы сами можете сделать задачу лучше сотрудника еще не значит что вы сможете это делегировать.</p><h3>4. Не играйте с чувством вины</h3><p>Обычно это целый стиль управления). Человеку дают почувствовать себя недостаточно хорошим для своей должности и на этом играют. Урезают зп, заставляют перерабатывать.</p><p>Если сотрудник постоянно косячит, нет смысла орать за каждый косяк. Если человек не делает выводов из ошибок, то, возможно, просто это не его должность, и сотрудника стоит поменять.</p><p>Задача хорошего руководителя определить, на каком месте человеку будет интересней всего работать, и в чем его сильные стороны. СПОЙЛЕР интересней всего то, что лучше всего получается.</p><h3>5. Не давайте бесполезных задач</h3><p>Я стараюсь постоянно сверяться с тем, чтобы делать исключительно полезные задачи.</p><p>Вроде как опубликовать пост ради ген.дира и проверить дурацкую рекламную гипотез не так уж и сложно, но на самом деле это очень фрустрирует. Делая задачу, вы не теряете ощущение бесполезности и в конце концов это приведет к ненависти к работе.</p><p>Иногда приходится идти на компромисс, но тогда все сотрудники знают, что это делается просто потому, что не смогли отбить эту задачу и проще сделать, как хочет клиент/работодатель.</p><h3>Банальные, но обязательные советы:</h3><h3>1. Поощряйте успехи</h3><p>Лучше публично. Если сотрудник что-то сделал хорошо и получил любой результат, обязательно акцентируйте на этом внимание и покажите, что вы это цените. Для любого человека это очень важно, для некоторых важнее денег.</p><p>Поднимайте зп, добавляйте привилегии и статуса, поручайте более серьезные задачи.</p><h3>2. ЗП, отпуск, выходные</h3><p>Платить ЗП вовремя, не “милость”, а обязанность работодателя. Контроль выхода сотрудников в отпуск, контроль передачи дел и помощи в этой передаче на время отпуска, отсутствие задач в выходные и праздники – обязанность работодателя. Если сотрудник напоминает про зп, про отпуск волнуется исключительно сам и работает в выходные, так как “задач накопилось”, скоро с его мотивацией помогать зарабатывать вам деньги будет все плохо.</p><p>В одной фирме владелец лично написал каждому сотруднику, когда задержал зп на 2 дня. Это, конечно, не поможет, если в день зп у вас выплата ипотеки, но хотя бы так человек дает понять, что понимает, насколько большой косяк с его стороны.</p><h3>3. Поддержка в тяжелых ситуациях</h3><p>Дать денег, поделиться своим опытом решения похожих проблем. Лучше сразу все.</p><h3>Вывод</h3><p>Я не написал низкая нагрузка. Так как соблюдая все выше перечисленное, сотрудник может пахать, но быть довольным работой.</p><p>Подписаться: <a href=\"https://t.me/ruminblog\" rel=\"noopener noreferrer nofollow\">https://t.me/ruminblog</a> </p><p>Почитать:</p><p><a href=\"https://habr.com/ru/articles/738772/\" rel=\"noopener noreferrer nofollow\">Про B2B маркетинг</a></p><p><a href=\"https://habr.com/ru/articles/737796/\" rel=\"noopener noreferrer nofollow\">Про B2C маркетинг</a></p><p><a href=\"https://habr.com/ru/articles/739082/\" rel=\"noopener noreferrer nofollow\">Как я открыл и развалил сеть ночных клубов</a></p><p></p>', 2, '2023-06-12 21:56:03', 489146, 83, '/ru/articles/740772/', 'Для начало придется забыть слово заставить. Задача помочь сотрудникам полюбить зарабатывать вам деньги.Меня зовут Слава. Я создал и развалил сеть ночных клубов, прошел 300 собеседований на маркетолога, проработал как подрядчик и сотрудник в более 50 компаниях. Сейчас занимаюсь системным маркетингом.Там, где я работал, были разные системы управления, но всегда работал один и тот же принцип.'),
(157, 'Книга «Карьера продакт-менеджера. Все что нужно знать для успешной работы в технологической компании»', '<a href=\"https://habr.com/ru/companies/piter/articles/740614/\"><img src=\"https://habrastorage.org/r/w780q1/webt/pk/-7/k4/pk-7k4qiwdknyaog4-vr5xvbyeo.jpeg\" align=\"left\" alt=\"image\" data-src=\"https://habrastorage.org/webt/pk/-7/k4/pk-7k4qiwdknyaog4-vr5xvbyeo.jpeg\" data-blurred=\"true\"></a>Привет, Хаброжители!<br>\r\n<br>\r\nПознакомьтесь с исчерпывающим руководством по профессии продакт-менеджера от авторов бестселлера «Карьера программиста»!<br>\r\n<br>\r\nФреймворки и лучшие практики, описанные в книге, не превратят вас в одночасье в крутого продакт-менеджера и не гарантируют, что ваши продукты будут безупречны. Но они помогут вам избежать распространенных ошибок и проблем и дадут основу для самостоятельных экспериментов, размышлений и совершенствования.<br>\r\n<br>\r\nВы научитесь проектировать качественные продукты, которые нравятся пользователям и решают их насущные задачи; разрабатывать и доставлять продукты быстро, беспроблемно и эффективно; создавать продуктовое видение и стратегии, позволяющие понимать, куда двигаться дальше в долгосрочной перспективе; управлять людьми и влиять на них, не имея формальных полномочий; развивать молодых PM, создавать успешные команды и эффективные продуктовые организации; управлять собственной карьерой, делать так, чтобы ваши усилия были замечены и оценены.<br>\r\n<br>\r\nВ качестве обзора книги мы предлагаем вам ознакомится с переводом <a href=\"https://jackiebo.medium.com/the-surprising-skills-that-help-you-succeed-in-your-product-management-career-as-you-get-more-3a1fcff40f8e\">статьи</a> автора Jackie Bavaro.<a name=\"habracut\"></a><br>\r\n <br>\r\n<h2>Удивительные навыки, которые помогут вам преуспеть в карьере продукт-менеджера по мере карьерного роста</h2><br>\r\nПочему карьера у одних людей развивается быстро, а других — медленно? Если вы амбициозны, что вы можете сделать помимо того, чтобы просто хорошо выполнять свою работу?<br>\r\n<br>\r\nВот несколько неочевидных вещей, которые я поняла как из своей карьеры, так и из карьеры моих подчиненных.<br>\r\n<br>\r\n<h2>Карьерный рост в рамках вашей компетенции обычно связан с увеличением масштаба и сложности задач, а также вашей самостоятельности и влияния</h2><br>\r\nБудучи младшим сотрудником, вы обычно начинали с ограниченной по объему работы, под плотным контролем. Очень ограничен был круг вещей, по которым вы принимали окончательное решение. По мере карьерного роста вы будете брать на себя более масштабную, более разнохарактерную работу, меньше подчиняться, начнете руководить другими (в качестве менеджера по персоналу или руководителя направления) и станете принимать решения по множеству вопросов.<br>\r\n<br>\r\nДоведя до совершенства рабочие навыки на вверенном вам участке и в текущем объёме, вы покажете, что уже доросли до выхода на новый уровень.<br>\r\n<br>\r\n<h2>Карьерный рост не всегда приятен — вам нужна внутренняя сила и уверенность в себе</h2><br>\r\nПока вы младший сотрудник, большая часть вашей работы заключается в том, чтобы «сделать правильно». Вы знаете, что сделали все правильно, так как код компилируется и делает то, что должен делать. Вы делаете свою работу хорошо, и все вокруг вас счастливы. Это приносит вам большое удовлетворение.<br>\r\n<br>\r\nПо мере того как вы беретесь за более сложную и неоднозначную работу, правильные решения становятся более расплывчатыми. Вы принимаете трудное решение, требующее множества компромиссов и оценки рисков, и вы можете никогда не узнать, был ли бы альтернативный выбор лучше. Часто кто-то будет недоволен вашим выбором. Жалоб будет больше, а похвал меньше. Такова природа работы.<br>\r\n<br>\r\nЕсли вы переходите в сферу управления персоналом или на уровень высшего руководства, ситуация становится еще сложнее, так как приходится работать с информацией, которую необходимо сохранить в тайне. Мне влиять на распределение ресурсов, зная о предстоящем увольнении или о людях, которые не справлялись с работой, когда я не могла раскрывать всех причин.<br>\r\n<br>\r\nВдобавок ко всему, у вас будет больше обязанностей, с которыми нужно будет справляться при дефиците свободного времени (так много встреч). Вам придётся смириться с тем, что большинство вещей понадобится выполнять «дёшево и сердито» — например, быстро прототипировать, даже если вы знаете, что могли бы сделать что-то лучше, потратив больше времени.<br>\r\n<br>\r\nЛучший совет, который я слышала по этому поводу, — понять, что это естественная составляющая работы. Теперь, когда я попадаю в ситуации, в которых я не могу удовлетворить всех или довести работу до совершенства, я воспринимаю это как признак, что поставленная задача – сложная и важная.<br>\r\n<br>\r\n<h2>Согласуйте свои карьерные цели с руководителем</h2><br>\r\nХорошие руководители хотят помочь вам в реализации ваших карьерных амбиций, но им нужна отдача с вашей стороны.<br>\r\n<br>\r\nВо-первых, вы сами должны сформулировать свои карьерные цели или хотя бы несколько возможных вариантов. Подумайте о том, какая работа вам действительно нравится и в чем вы хороши. Есть ли у вас примеры для подражания или люди, которыми вы восхищаетесь?<br>\r\n<br>\r\nЗатем вы можете развить свой успех, спланировав, как подать эту тему. Ваш начальник может уклоняться от разговора о карьере, поэтому не стоит переводить тему в конфликтное русло. Могут подумать, что желаемая вами роль или тип проекта, который вам нужен, сейчас недоступны, или что у вас нет необходимых навыков, или что вы действительно нужны им в той роли, которую вы сейчас занимаете.<br>\r\n<br>\r\nПростой подход заключается в том, чтобы построить разговор на перспективу: «Я бы хотел со временем стать менеджером по персоналу. Над какими навыками мне нужно поработать, чтобы быть готовым, когда представится такая возможность? Можем ли мы провести «мозговой штурм» по поводу того, как мне развить эти навыки?\". Не пытайтесь спорить и настаивать, что на самом деле у вас уже есть все нужные навыки.<br>\r\n<br>\r\nЦель здесь такова: нужно, чтобы ваш руководитель считал вас обучаемым и способным воспринимать обратную связь — он будет думать, что общение с вами стоит вложения его времени, потому что вы слушаете и учитесь у него. Если вы открыты, любознательны и готовы помочь, то вам захотят помочь.<br>\r\n<br>\r\n<h2>Осознанно выстраивайте доверие</h2><br>\r\nКарьерный рост приходит с ростом самостоятельности, а самостоятельность вы получите только в том случае, если заслужите доверие людей. Независимо от того, насколько вы хороши в своей работе, вы не получите большую ответственность, если люди вам не доверяют. Они будут бояться, что им придется тратить много времени на то, чтобы разгребать ваши проблемы и заниматься микроменеджментом, а это никому не нравится.<br>\r\n<br>\r\n<b>Решение:</b> Есть ли у вас подходы и интуиция для принятия правильных решений, налажены ли соответствующие процессы? Или вам нужно, чтобы кто-то еще перепроверил за вами? Чтобы укрепить доверие, не стоит просто делать выбор и штамповать ответы. Вместо этого разъясните причины, по которым вы делаете тот или иной выбор, и поделитесь вашей схемой. Вы также можете попросить поддержать вас кого-то, кто уже наработал авторитет.<br>\r\n<br>\r\nКонечно, наилучший способ укрепить доверие к своим суждениям — это в большинстве случаев оказываться правым. Если пока достичь безошибочности в работе не удаётся, вам нужно больше работать: подробнее исследовать проблемы, тщательно обдумывать альтернативные варианты. Вы можете обкатывать ваши идеи, делясь ими с коллегами, чтобы получить обратную связь заранее и выявить ошибки.<br>\r\n<br>\r\nПо мере того, как вы будете нарабатывать репутацию человека, способного находить отличные решения, перед вами откроются хорошие возможности, поскольку люди захотят подключить вас к принятию более важных решений.<br>\r\n<br>\r\n<b>Избегать сюрпризов:</b> Заблаговременно ли вы делитесь нужной информацией с вышестоящими и с подчинёнными? Просите ли вы о помощи и принимаете ли её, когда она вам нужна? Или люди чувствуют, что им нужно пилить вас, чтобы узнать, что происходит? Убедитесь, что вы выясняете вопросы заранее и часто. Просите о помощи словами: «Вот ситуация, вот что я планирую в данном случае сделать, подойдет?».<br>\r\n<br>\r\n<b>Исполнение:</b> Заявляя, что вы сделаете что-то, сделаете ли вы это? Сможете ли вы собрать все воедино, чтобы осуществить задуманное? Или все пойдет наперекосяк? Составление планов и контрольных списков может помочь обрести уверенность в том, что дела будут выполнены. Вы также можете проявить инициативу, выполняя задания раньше, чем вас об этом попросят, и давая окружающим понять, что вы справитесь.<br>\r\n<br>\r\nСоздание доверительных отношений требует времени, и вам придется повторять это каждый раз, когда вы начинаете работать с новым кругом людей, но если вы будете делать это хорошо, это окажет огромное влияние на вашу карьеру.<br>\r\n<br>\r\n<h2>Узнайте, как по-настоящему добиться результата в вашей компании.</h2><br>\r\nВ некоторых компаниях существует множество официальных процессов, а в некоторых – их нет вообще. Но во всех компаниях есть свои нюансы в том, как все на самом деле происходит.<br>\r\n<br>\r\nНекоторые процессы очень важно соблюдать, но некоторые можно пропустить. Возможно, есть несколько ключевых людей, которые могут помочь продвинуть работу вперед и помочь вашей команде преодолеть препятствия. У «вахтёров» могут быть свои придирки или личные пристрастия, которые помогут вам добиться одобрения работы или случайно сорвать проект.<br>\r\n<br>\r\nЕсли у вас не хватает времени на работу, часто есть несколько высокомотивированных инженеров, которые возьмутся за побочные проекты, которые им по душе. В Microsoft в 2004 году мой продукт работал только в Internet Explorer, и я не смогла добиться совместимости с Firefox в официальной дорожной карте. Но мы с одним действительно мотивированным разработчиком скооперировались и занялись этим в качестве стороннего проекта.<br>\r\n<br>\r\nПоначалу я чувствовала себя не совсем уверенно из-за несоблюдения правил, но по мере развития карьеры убедилась, что подобный подход к делу является ключевым фактором роста. Весь смысл правил и процессов заключается в том, чтобы наладить работу, и, если правила мешают, то никто вас не похвалит за то, что вы провалили сроки, слепо следуя правилам.<br>\r\n<br>\r\nОдин из способов развития этого навыка — попросить коллег рассказать вам о том, как все было построено и запущено. Спросите, есть ли у них какие-нибудь хитрости, как они добиваются результата.<br>\r\n<br>\r\n<h2>Встройте свою работу в стратегию компании и убедите, что видите цели правильно</h2><br>\r\nРаспространенная ошибка в карьере — вкладывать огромное количество энергии в то, что ваши руководители не считают ценным. Вы работаете очень усердно, но не получаете за это вознаграждения.<br>\r\n<br>\r\nЕсть два способа исправить это. Во-первых, вы можете переключиться на выполнение более ценной работы (либо в рамках вашей текущей роли, либо перевестись в другую команду). Во-вторых, вы можете переосмыслить свою работу и объяснить руководителям компании, почему эта работа действительно важна.<br>\r\n<br>\r\nЕсли кто-то попросил вас выполнить работу, но вы считаете, что она не соответствует стратегии, не бросайте ее, не делайте ее плохо или не хамите, а поговорите со своим руководителем и узнайте его мнение. Посмотрите, сможете ли вы совместно найти связь данной ситуации со стратегией компании или решите отказаться от этой работы. В работе с младшими руководителями я часто вижу, что они считают свою работу неважной, потому что не понимают, зачем она нужна. Они пытаются строго следовать стратегии, но это может дать обратный эффект, и они выглядят недальновидными.<br>\r\n<br>\r\nКак только вы поймете, насколько ваша работа важна для стратегии компании, вы сможете убедительно её аргументировать. Наличие общекомандного представления важно по многим причинам: так гарантируется, что вы работаете над чем-то важным, команда воодушевляется и приобретает цель, людям в компании становится проще понять, что они делают. Руководители приобретают уверенность, что вы на правильном пути, и, как будет показано в следующем разделе, это помогает в подборе персонала.<br>\r\n<br>\r\n<h2>Учитесь рекрутингу</h2><br>\r\nЭто не тот навык, который нужен для продвижения по карьерной лестнице. Скорее это неожиданный навык, который вам понадобится, когда вы займёте более высокий пост. Как только я стала руководителем, я поняла, что теперь рекрутинг — это моя работа.<br>\r\n<br>\r\nРаньше я думала, что просто сообщу рекрутерам, сколько у меня вакансий, и они решат все остальные вопросы, но нет. Я отвечала за составление описаний вакансий, поиск способов связаться с кандидатами, придумывала, как их представить, и лично провела огромное количество бесед за чашкой кофе и ознакомительных звонков.<br>\r\n<br>\r\nВ крупных компаниях вам, возможно, не придется так часто нанимать новых сотрудников, но вам все равно придется компоновать команду из коллег. Это означает не только руководителей, но и привлечение инженеров и дизайнеров, желающих работать в вашей команде.<br>\r\n<br>\r\nРекрутинг предполагает развитие совершенно нового набора навыков, но многие из них могут пересекаться с другими умениями. Представление кандидатов — это продолжение формулирования вдохновляющего видения. Доверие, которое вы завоевали как менеджер, поможет вашей репутации и привлечет людей.<br>\r\n<br>\r\n<h2>Убедитесь, что люди во всей компании хотят работать с вами</h2><br>\r\nСотрудничество невероятно важно для всех руководителей, и особенно по мере того, как вы становитесь более высокопоставленным.<br>\r\n<br>\r\nКак старший руководитель в компании, большая часть моей работы заключается в эскалации ситуации, когда что-то идет не так, и люди на местах не могут разобраться с этим сами. Моя суперсила здесь — это отличные отношения, которые я установил с другими руководителями компании. Я могу просто собрать нужных людей со всей компании в одной комнате и знать, что мы можем выложить все на стол и решить проблему вместе. Они знают, что у меня хорошие намерения, и я знаю то же самое о них.<br>\r\n<br>\r\nКогда я думаю о том, чтобы переместить кого-то на руководящую должность, я думаю о том, как бы он поступил в такой ситуации. Будут ли они спокойны и внесут конструктивный вклад в разговор? Будут ли они открытыми и скромными? Буду ли я чувствовать, что они на моей стороне, и буду рад работать с ними? Или мне будет казаться, что вовлечение их в разговор — это хлопотное дело, что они могут начать защищаться, обвинять, быть корыстными, неосмотрительными или еще каким-то образом сделать решение проблемы менее продуктивным?<br>\r\n<br>\r\nОтличный способ оценить свои навыки здесь — анонимная обратная связь 360 градусов. Если вы узнаете, что люди считают, что с вами трудно работать, не отчаивайтесь — отнеситесь к отзывам серьезно и поделитесь своим намерением совершенствоваться. Я знаю нескольких великих лидеров, которые узнали, что люди считают их придурками, и смогли изменить ситуацию.<br>\r\n<br>\r\n<h2>Беритесь за интересные сторонние проекты</h2><br>\r\nСторонние проекты — это огромный движущий фактор вашего карьерного роста, и самое замечательное, что они в значительной степени находятся под вашим контролем. Они дают вам возможность отработать навыки, выходящие за рамки вашей текущей сферы деятельности, и укрепить свою репутацию за пределами вашей текущей команды.<br>\r\n<br>\r\nВот несколько типов отличных сторонних проектов:<br>\r\n<br>\r\nРешайте проблемы своих коллег. Вы можете поделиться разработанным вами шаблоном, организовать обучение тому, чему вы научились сами, разработать процесс устранения раздражающего фактора. Это отличный способ начать выполнять работу в более широком масштабе и добиться большего эффекта от уже решенных проблем.<br>\r\n<br>\r\nПомогайте своему начальнику в его работе. Одной из моих лучших возможностей была помощь моему начальнику в подготовке ежегодной презентации, посвященной началу финансового года. Я училась непосредственно у него и в итоге доросла до того, что сама взяла на себя эту ответственность. Вы можете начать обращать внимание на то, кто над чем работает, и думать о том, как бы вы с этим справились. Вы увидите, как это происходит у коллег, и если они затронут эту тему, у вас будут полезные мысли, которыми вы сможете поделиться.<br>\r\n<br>\r\nВызовитесь на выполнение утомительной работы, которая позволит вам получить доступ к совещаниям более высокого уровня. Делать заметки на совещании руководителей, подготавливать статистику для важного совещания или быть делегатом от команды на общекорпоративном мероприятии. Вы сможете увидеть, как проходят эти встречи, как все работают, и узнать дополнительный контекст, который обычно скрыт от вас.<br>\r\n<br>\r\nСтратегическая разведка. Исследуйте, как победить конкурента или завоевать новую аудиторию. Чтобы извлечь из этого максимальную пользу, поделитесь со своим руководителем и попросите дать конкретную обратную связь о том, что он думает о вашем стратегическом представлении и презентации — попробуйте узнать, как можно было бы сделать лучше. Если вы станете достаточно ценным экспертом в этой области, вас даже могут привлечь к участию в более важных совещаниях по стратегическим вопросам.<br>\r\n<br>\r\nПроявите себя, когда лидеры действительно в затруднительном положении. Если кто-то готов мне помочь, когда я действительно в этом нуждаюсь, это действительно выделяется как ключевой вклад, и я буду помнить об этом. Убедитесь, что это сопровождается четкими разговорами о ваших карьерных целях — это поднимет вас в списке на получение тех возможностей, которые вы хотите.<br>\r\n<br>\r\nФормирование отношений, которые могут помочь вам в дальнейшем. Иногда сторонний проект хорош только потому, что он позволяет вам сблизиться с людьми, с которыми вы будете работать в будущем. Может быть, вы оказываете им услугу или просто работаете вместе над чем-то интересным.<br>\r\n<br>\r\nПоработайте с командой, в которую вы собираетесь перейти. Вы можете попробовать, прежде чем сделать что-то новое, подключившись к общему проекту с командой, в которую желаете влиться. Это даст вам практический опыт работы с людьми и их контекстом, и вы сможете понять, действительно ли вам это нравится, и добиться, чтобы они сами заинтересовались вами.<br>\r\n<br>\r\nБолее подробно с книгой можно ознакомиться на <a href=\"https://www.piter.com/collection/new/product/kariera-prodakt-menedzhera-vse-chto-nuzhno-znat-dlya-uspeshnoy-raboty-v-tehnologicheskoy-kompanii\">сайте издательства</a>:<br>\r\n<br>\r\n» <a href=\"https://www.piter.com/collection/new/product/kariera-prodakt-menedzhera-vse-chto-nuzhno-znat-dlya-uspeshnoy-raboty-v-tehnologicheskoy-kompanii#Oglavlenie-1\">Оглавление</a><br>\r\n» <a href=\"https://www.piter.com/collection/new/product/kariera-prodakt-menedzhera-vse-chto-nuzhno-znat-dlya-uspeshnoy-raboty-v-tehnologicheskoy-kompanii#Otryvok-1\">Отрывок</a><br>\r\n<br>\r\nПо факту оплаты бумажной версии книги на e-mail высылается электронная книга. <br>\r\nДля Хаброжителей скидка 25% по купону — <b>Карьера</b>', 3, '2023-06-12 21:56:03', 540723, 88, '/ru/companies/piter/articles/740614/', 'Хекслет поговорил с Михаилом Синяковым, Head of Frontend в «РТК ИТ». Мы узнали, как обычно проходят собеседования у фронтендеров, какие задачи они решают, а также на что стоит обратить внимание кандидатам при подготовке к интервью. '),
(158, 'Как фронтендеру пройти собеседование: разбор типичных задач и советы от тимлида «РТК ИТ»', '<figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/6f0/f10/11d/6f0f1011d69d7c2106c8c6be7407f9cd.jpg\" width=\"2334\" height=\"1314\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/6f0/f10/11d/6f0f1011d69d7c2106c8c6be7407f9cd.jpg\" data-blurred=\"true\"></figure><p><strong>Хекслет поговорил с Михаилом Синяковым, Head of Frontend в «Ростелеком ИТ». Мы узнали, как обычно проходят собеседования у фронтендеров, какие задачи они решают, а также на что стоит обратить внимание кандидатам при подготовке к интервью. </strong></p><p>Всем привет! Меня зовут Михаил. Я руковожу направлением фронтенд-разработки в «РТК ИТ» — компании, которая занимается информационными технологиями и обеспечивает развитие и повышение эффективности бизнеса ПАО «Ростелеком» по всему спектру ИТ-направлений.</p><p>Как руководитель я слежу за тем, чтобы сотрудники в работе всегда использовали актуальные технологии, правильно выполняли кодовую базу, периодически обучались. И также провожу собеседования и нанимаю новых разработчиков в команду. </p><p>Поговорим о том, что из себя представляет интервью и как его пройти, чтобы заинтересовать будущего работодателя.  </p><h3>Как обычно проходят собеседования в «РТК ИТ»</h3><p>У нас система такая же, как и во многих компаниях. Есть несколько этапов найма: разговор кандидата с HR-менеджером и техническое собеседование. На первом этапе мы проверяем, насколько человек заинтересован в вакансии и совпадают ли его ценности и ожидания с нашими. Далее мы приглашаем кандидата на техническое собеседование офлайн или онлайн, как ему удобнее. </p><p>Сама встреча делится на несколько частей. </p><ol><li><p><strong>Знакомство</strong></p></li></ol><p>Я делюсь информацией о компании, о том, как устроены команды, как они взаимодействуют друг с другом, какие технологии используют в работе. Если встреча офлайн, могу даже экскурсию по офису провести. Также рассказываю кандидату о себе, причем достаточно подробно: чем я люблю заниматься, почему выбрал разработку, чего хочу достичь в своей области. И жду такого же рассказа от человека — так между нами налаживается доверительная атмосфера.</p><p>Еще у кандидата-фронтендера я спрашиваю, что для него лучше: верстать или программировать. Если второе, то увожу разговор в сторону разработки. Фронтенд — большая сфера. Есть куча специалистов, которые классно верстают, а на JavaScript пишут посредственно. И есть те, кто наоборот гуру в JS, а верстка у них совсем не идет. На этом этапе мне как раз важно выявить склонности человека, чтобы потом отталкиваться от них при выборе пула задач. </p><ol start=\"2\"><li><p><strong>Техническая часть</strong></p></li></ol><p>Здесь я тоже начинаю с небольшой беседы, только уже о технологиях. Даю кандидату задачку средней сложности, чтобы примерно понимать уровень его технической осведомленности. Если он может поддержать беседу, то позже я поднимаю планку и даю задания посложнее. О них мы поговорим чуть позже. </p><p>На этом этапе я смотрю, как мыслит кандидат. Если человек свободно владеет той или иной технологией, ему не составит труда хорошо аргументировать свой ответ. А если кандидат «плавает» в какой-то теме, то это сразу видно и ты понимаешь, что пока что найти решение ему не по силам.</p><ol start=\"3\"><li><p><strong>Смолл-ток</strong></p></li></ol><p>И последняя часть собеседования — смолл-ток о том, какие книжки кандидат читает, каких блогеров смотрит, какими пет-проектами может похвастаться. Такие небольшие беседы помогают мне понять, сработаемся мы с человеком, сможем ли мы вместе писать код каждый день, смогу ли я довериться ему или же нет. Если на все эти вопросы я даю утвердительный ответ, то процесс найма заканчивается и мы делаем оффер человеку. </p><h3>Какие задачи решают кандидаты на собеседовании</h3><p>На самом деле я задаю не так много задач — не сторонник долгих собеседований, на которых кандидата мучают целый день. Опять же, мне главное посмотреть, с каким уровнем сложности может справиться кандидат и как он мыслит. </p><p>Я предлагаю разные задачи для кандидатов на выбор. Разберем три примера таких заданий. </p><h4>Посчитать количество файлов в директории на JavaScript</h4><p><strong>Суть задачи.</strong> У меня есть заготовленные макеты, куски кода, которые нужно продолжить писать, чтобы посчитать кол-во файлов. Я даю кандидату ссылку, он переходит по ней. И мы попадаем с ним в одну IDE, где я смотрю, как человек пишет код. Вот <a href=\"https://codesandbox.io/s/tree-files-count-5mwk3\"><u>пример такого задания</u></a>. </p><p><strong>Какие знания проверяет задача.</strong> Задачка проверяет алгоритмическое мышление, способность работать с абстракциями, умение емко писать код с помощью небольших функций. На Хекслете, кстати, учат этому на одном из курсов. Еще она показывает, насколько человек знает язык. Чтобы выполнить эту задачу, нужно хорошо знать его синтаксис. </p><p><strong>Ожидаемое решение.</strong> Идеальный вариант прохождения этого задания — объяснять каждый свой шаг и говорить, если где-то что-то не знаешь. Потому что я в таком случае смогу подсказывать и, возможно, наведу человека на мысль. Один кандидат как-то не мог сконцентрироваться на этой задачке из-за стресса. И я подсказал ему писать псевдокод, прямо по-русски. Он написал и смог решить задачу. </p><p>Многие ребята с этим часто не справляются, потому что, видимо, в повседневной работе такие задачки не встречаются. Но здесь важен не результат, — сможет ли человек выполнить задание — а то, как кандидат выкрутится в сложной ситуации. </p><h4>Убрать дубликаты из массива</h4><p><strong>Суть задачи.</strong> Представим, что массив — это перечисленные значения через запятую. У нас есть «1, 2, 10, 1, 2, 11». А нам нужно поработать с массивом так, чтобы на выходе получилось «1, 2, 10, 11». Вот <a href=\"https://codesandbox.io/s/sorts-6pyqbz\"><u>пример такого задания</u></a>. </p><p><strong>Какие знания проверяет задача.</strong> Задание показывает, как кандидат умеет работать с массивами, структурами данных, оптимизировать код. </p><p><strong>Ожидаемое решение.</strong> Эту задачу можно решить двумя способами. Либо просто два раза пройтись по массиву и убрать дубликаты, либо как-то оптимизировать код, чтобы улучшить сам алгоритм. </p><p>Если код заработает, то задачка будет выполнена. Причем не так уж и важно, насколько тяжеловесным он будет — главное, чтобы работал. Высшего пилотажа особо не жду, но самое идеальное здесь — написать такой алгоритм, который уберет все повторы за меньшее количество шагов. </p><h4>Перечислить CSS-свойства на реальной задаче</h4><p><strong>Суть задачи.</strong> Представим, что на экране есть прямоугольный <code>div</code> зеленого цвета. И кандидату нужно назвать все CSS-свойства, которые скроют этот <code>div</code>. </p><p><code>.hide_me {</code></p><p><code>    display: none;</code></p><p><code>    visibility: hidden;</code></p><p><code>   /* … */</code></p><p><code>}</code></p><p><strong>Какие знания проверяет задача. </strong>Задачка проверяет кругозор кандидата. Многие люди говорят, что они умеют верстать. Но уметь верстать — это не просто роялти создать, а подойти к верстке с умом. И зачастую верстальщик — еще и творец на стыке дизайна и программирования. Значит, в верстке важны художественные приемы, которые зависят от насмотренности человека. </p><p><strong>Ожидаемое решение.</strong> Здесь нет правильного ответа. Нужно перечислить абсолютно все свойства, какие приходят на ум. А дальше я уже могу спросить по каждому свойству, что человек о них знает. Допустим, он может сразу же назвать два свойства: <code>display: none</code> и <code>visibility: hidden</code>. Я спрошу, чем они отличаются, и тут станет понятно, есть ли у человека пробелы в знаниях или нет, в зависимости от его ответа. </p><h3>В чем главный смысл собеседования и как понравиться работодателю</h3><p>Собеседования проводят не для того, чтобы вас экзаменовать, как в универе. А для того, чтобы понять образ вашей мысли и то, насколько глубоко вы копаете в поисках ответов на вопросы. Поэтому самое главное качество, которое вы можете показать на интервью — это честность. Говорите работодателю правду, не юлите и не пытайтесь казаться лучше, чем вы есть на самом деле. </p><p>У меня на практике было несколько негативных моментов, которые портили мое впечатление о будущем сотруднике. Как-то кандидат подозрительно быстро решил первую задачку с деревом. А когда я начал спрашивать, как он решал ее и как все заработало, человек не смог рассказать. Собеседование было онлайн, со включенными камерами, и я видел, что кандидат постоянно косился в другую сторону. То есть ему либо кто-то помогал, либо он гуглил, либо спрашивал у ChatGPT.</p><p>Любой обман со временем раскрывается. Даже если нанять такого человека, уже к концу испытательного срока будет понятно, что его результат очень низкий, и с сотрудником придется попрощаться. Такие ситуации, как эта, еще и «рейтинг» на рынке труда могут подбить. Айтишная тусовка — это достаточно тесный круг людей, которые могут приходить друг к другу и спрашивать рекомендации для определенных кандидатов. И если я скажу, что общался с ним, и он показал себя не с лучшей стороны, то его «рейтинг» кандидата упадет. </p><p>Еще одна неприятная ситуация — когда человек не знает ответа и начинает придумывать. Допустим, я задаю вопрос на какую-то сложную для него тему, и вместо того, чтобы честно сказать «я не знаю», начинает выдумывать ответ. Понимаю, что это происходит на волне переживаний, но лучшим исходом в этой ситуации, все-таки, будет честный ответ. Что-то не знать — не страшно. Плохо, когда человек несет ахинею и пытается убедить в этом работодателя. </p><p>Просто будьте собой. </p><h3>Советы разработчикам перед собеседованием</h3><p>Я считаю, что хард скиллы специально к собеседованию не натренируешь. Чтение технической документации, повторение синтаксиса и спешное прорешивание задач не помогут выгодно показать себя на собеседовании. Даже чтение книг не будет полезным, если вы из них ничего не вынесете и не проверите какие-то гипотезы на практике. </p><p>Что действительно поможет — это опыт. То, чего вы достигли кровью, потом, стертыми клавиатурой пальцами и заплаканными глазами у монитора. Это как раз будет видно по решенным задачам и честному, открытому диалогу. Помню, рассказывал своим работодателям, как я случайно поставил скобочку, и код сломался. Потом я распечатал этот код и несколько месяцев смотрел на эту бумажку, чтобы больше никогда не делать такую ошибку. Думаю, что это произвело на них впечатление. </p><p>А вот над софтами можно поработать перед собеседованием. И у меня есть несколько рекомендаций, как это сделать. </p><ol><li><p><strong>Узнайте как можно больше о компании, в которую вы проходите интервью</strong></p></li></ol><p>Изучите все вплоть до наград и достижений организации, если они есть. Так у вас в голове будет четкая картинка того, чем занимается компания, какую роль вы будете в ней занимать. </p><p>После такого ресерча, возможно, даже выяснится, что область ее работы вам не совсем подходит. Потому что бывают случаи, когда человек приходит на собеседование и понимает, что не хочет работать в крупной компании, и что ему по душе больше стартапы. Поэтому чтобы не тратить свое время и время нанимателей, лучше узнать о компании заранее. </p><p>Знания кандидата о компании — это всегда плюс и для работодателей. Если человек идет не с мыслью «возьмите меня хоть куда-нибудь, я умею нажимать кнопки на клавиатуре», а знает о проекте — это действительно радует.  </p><ol start=\"2\"><li><p><strong>Адекватно оценивайте себя как специалиста</strong></p></li></ol><p>Бывает, приходят кандидаты, не отвечают толком ни на один хардовый вопрос, а просят космические зарплаты. О таких людях складывается не самое лучшее впечатление. Но и более низкую зарплату называть нельзя — если продешевить, то работать в дальнейшем будет тяжелее. </p><p>Чтобы узнать среднюю зарплату по рынку, изучите вакансии. Посмотрите, какие гонорары предлагают специалистам вашего уровня компании, в которых вы потенциально хотели бы работать. Поспрашивайте у знакомых разработчиков, как они оценивают свой труд. </p><ol start=\"3\"><li><p><strong>Перед собеседованием обязательно следует выспаться, а на самом интервью — выглядеть опрятно</strong></p></li></ol><p>Простые, но очень важные советы. Бодрый и опрятный вид тоже создает приятное впечатление о кандидате. </p><ol start=\"4\"><li><p><strong>Не спешите принимать оффер</strong></p></li></ol><p>Если финансы позволяют, поищите работу еще какое-то время, походите на другие собеседования. Оффер не требует быстрого принятия, а только дает спокойствие, что в случае чего вы без работы не останетесь. Я в свое время выбирал между несколькими офферами и пошел работать в «РТК ИТ», так как хорошо подумал и понял, что задачи здесь интереснее. </p><ol start=\"5\"><li><p><strong>Не расстраивайтесь, если что-то пошло не так</strong></p></li></ol><p>Компаний в России и во всем мире вообще — сотни миллионов, выбор огромен. Пробуйте откликаться на вакансии, которые интересуют вас больше всего. Ищите почту HR-менеджеров и рассказывайте им о себе — только помните, что важно подсветить именно свою полезность проекту. Хороший HR-специалист всегда обращает внимание на кандидатов, которые показывают личную заинтересованность. </p><ol start=\"6\"><li><p><strong>Поддерживайте свой интерес к профессии и постоянно развивайтесь</strong>. </p></li></ol><p>Это всегда очень ценно как для кандидатов, так и для работодателей.</p><p></p>', 3, '2023-06-12 21:56:04', 819253, 89, '/ru/companies/hexlet/articles/740714/', 'Ежемесячно мы смотрим, какие компании публикуют больше всего вакансий и изучаем активность найма в разрезе специализаций и квалификаций. А ещё собираем эффективные вакансии за месяц: те, которые привлекли больше всего внимания специалистов.Подготовили рейтинг активности найма в мае. В этой статье не только сравниваем цифры с прошлым месяцем, но и добавляем данные мая 2022: по специализациям и квалификациям. Из интересного: несмотря на то, что бэкендеры остались самыми востребованными специалистами, другие лидеры сменились. Например, системных аналитиков сейчас ищут чаще, чем фронтендеров. За подробностями зовем под кат.'),
(159, 'Активность найма на IT-рынке: май 2023 vs 2022 — фронтендеров ищут реже', '<figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/db5/7ec/d48/db57ecd48ef67505c30315207a94ea69.png\" width=\"1480\" height=\"840\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/db5/7ec/d48/db57ecd48ef67505c30315207a94ea69.png\"></figure><p>Ежемесячно мы смотрим, какие компании публикуют больше всего вакансий и изучаем активность найма в разрезе специализаций и квалификаций. А ещё собираем эффективные вакансии за месяц: те, которые привлекли больше всего внимания специалистов.</p><p>Подготовили рейтинг активности найма в мае. В этой статье не только сравниваем цифры с прошлым месяцем, но и <strong>добавляем данные мая 2022: по специализациям и квалификациям.</strong> Из интересного: несмотря на то, что бэкендеры остались самыми востребованными специалистами, другие лидеры сменились: например, системных аналитиков сейчас ищут чаще, чем фронтендеров. За подробностями зовем под кат.</p><hr><p>Всего в мае на Хабр Карьере можно было откликнуться на <strong>3626 вакансий</strong> — <strong>на 1% больше, чем в </strong><a href=\"https://habr.com/ru/companies/habr_career/articles/733592/\"><strong><u>апреле</u></strong></a><strong>, но на 22% меньше, чем год назад — в </strong><a href=\"https://habr.com/ru/companies/habr_career/articles/671530/\"><strong><u>мае 2022</u></strong></a><strong> . </strong></p><p>Доля вакансий с возможностью удаленной работы — 64%, это на 1% меньше, чем в прошлом месяце.</p><h2>Кто нанимал </h2><p>Как и в нашем <a href=\"https://career.habr.com/journal/rating\"><u>ежегодном рейтинге IT-работодателей</u></a>, мы не сравниваем большие компании на тысячи сотрудников с маленькими стартапами. Рейтинг компаний по найму делится на четыре группы по размерам организаций: огромные (более 5000 сотрудников), большие (1000−5000 сотрудников), средние (100−1000 сотрудников) и небольшие (10−100 сотрудников).</p><p>Но в этом рейтинге мы собираем топ-3 компании из всех на Хабр Карьере, которые разместили больше всего вакансий за месяц. Вот, что получилось в мае: </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/0ac/a1a/b18/0aca1ab1877e2a40110422145637a198.png\" width=\"1520\" height=\"622\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/0ac/a1a/b18/0aca1ab1877e2a40110422145637a198.png\"></figure><p>Лидеры по найму в мае по размерам компаний:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/cc0/d03/476/cc0d03476c30338e88e9767f78c054ae.png\" width=\"1520\" height=\"1510\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/cc0/d03/476/cc0d03476c30338e88e9767f78c054ae.png\"></figure><h2>Кого нанимали</h2><p>В этом блоке посмотрим на специализации и квалификации, которые чаще всего искали в мае и сравним эти данные с показателями мая прошлого года.</p><h3>Вакансии по специализациям</h3><p>Взяли все вакансии, которые компании публиковали в мае — напоминаем, что их было 3626 — выбрали специализации, которые искали активнее остальных, и собрали топ-5.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/311/118/cdf/311118cdf79660a8b193d1bf83ce6e23.png\" width=\"1520\" height=\"818\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/311/118/cdf/311118cdf79660a8b193d1bf83ce6e23.png\"></figure><p><br>Самой востребованной специализацией на Хабр Карьере остаётся <a href=\"https://career.habr.com/vacancies/backend_razrabotchik/?utm_source=habr&amp;utm_medium=journal&amp;utm_campaign=rating_august2022\"><u>бэкенд</u></a>: 806 вакансий. На втором месте — вакансии для <a href=\"https://career.habr.com/vacancies/sistemnij_analitik/?utm_source=habr&amp;utm_medium=journal&amp;utm_campaign=rating_august2022\"><u>системных аналитиков</u></a>, в мае их было 377. </p><p>Для <a href=\"https://career.habr.com/vacancies/frontend_razrabotchik/?utm_source=habr&amp;utm_medium=journal&amp;utm_campaign=rating_august2022\"><u>фронтендеров</u></a> и <a href=\"https://career.habr.com/vacancies?s%5B%5D=22&amp;type=all\"><u>девопс-инженеров</u></a> в мае опубликовали почти одинаковое количество вакансий — 218 и 216 соответственно. Для тестировщиков было 139 предложений. </p><h4>Сравниваем с маем 2022</h4><p>Если сравнить эти показатели с такими же, но <a href=\"https://habr.com/ru/companies/habr_career/articles/671530/\"><u>в мае прошлого года</u></a>, можно увидеть, как менялись лидеры по специализациям: несмотря на то, что бэкендеры остались самыми востребованными, доля вакансий для них снизилась на 3%. Немного реже стали нанимать фронтендеров и разработчиков мобильных приложений, но больше вакансий стало появляться для системных аналитиков и девопсов. </p><h3>Вакансии по квалификациям</h3><p>График ниже — квалификации, которые искали чаще всего на Хабр Карьере в мае. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/9c7/749/914/9c774991496ca035ee78558d30d6eb56.png\" width=\"1520\" height=\"818\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/9c7/749/914/9c774991496ca035ee78558d30d6eb56.png\"></figure><p>Ежемесячно больше половины вакансий, в которых указали квалификацию, опубликовали для мидлов — 1641 вакансия. Треть вакансий — для сеньоров: 1047. Для лидов в мае разместили 303 вакансии, а для джунов — 91. Для стажеров было только 18 предложений. </p><h4>Сравниваем с маем 2022</h4><p>В мае прошлого года вакансии для мидлов и сеньоров хоть и занимали лидирующие доли, но их процент был немного ниже: 58% и 29% соответственно. </p><h2>Эффективные вакансии</h2><p>В исследование мы добавляем вакансии, которые получили наибольшее число откликов на количество просмотров за месяц — мы назвали это эффективностью. Данные за май: </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/53a/4e3/2cf/53a4e32cf635e97444520e8c35e3cfa7.png\" width=\"1520\" height=\"706\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/53a/4e3/2cf/53a4e32cf635e97444520e8c35e3cfa7.png\"></figure><p><strong>Самая эффективная вакансия</strong> мая на Хабр Карьере была от компании ITentika, которая искала фронтендера. Вакансию посмотрели 2153 человека, из них откликнулись 421. На втором и третьим местах — вакансии для тестировщика и фронтендера от компаний VK и Банки.ру. </p><p>Эффективность всех вакансий можно увидеть в крайнем правом столбце графика. </p><hr><h2>Как мы считали</h2><p>Это не очень сложно: чтобы посмотреть, сколько вакансий компании опубликовали в мае, мы взяли данные нашего сервиса. Сложили все вакансии, на которые можно было откликнуться в мае — в них вошли в том числе те вакансии, которые были открыты в апреле, но действовали в мае. Далее мы посмотрели, кто размещал вакансии, и разделили работодателей по размерам компаний. А потом просто выбрали компании, которые чаще всего размещали вакансии в мае, и принесли вам. </p><p>Для расчёта эффективных вакансий нам также понадобились данные нашего сервиса, который умеет считать эффективность размещений — количество откликов, поделённое на количество просмотров. Нам оставалось только выбрать вакансии с высоким показателем. </p><p>А чтобы составить диаграммы по специалистам, мы взяли все вакансии за май и отфильтровали по необходимым для нас критериям: специализациям и квалификациям.</p><hr><p>Если вы работодатель и собираетесь <a href=\"https://career.habr.com/companies/habr/cp/vacancies/new\"><u>разместить вакансию</u></a> на Хабр Карьере, но не знаете, как это сделать, то мы составили подробную инструкцию в <a href=\"https://career.habr.com/info/help_hr#q2.2\"><u>хелпе</u></a>. Если у вас есть вопросы — пишите нам на hr@habr.team, и мы обязательно на них ответим.</p><p>Больше о карьере в наших соцсетях: <a href=\"https://vk.com/habr_career\">ВКонтакте</a>, <a href=\"https://t.me/habr_career\">Telegram</a>, <a href=\"https://twitter.com/habr_career\">Twitter</a>, <a href=\"https://zen.yandex.ru/habr_career\">Яндекс.Дзен</a>.</p>', 3, '2023-06-12 21:56:05', 676793, 90, '/ru/companies/habr_career/articles/740676/', 'Сегодня мы немного расскажем вам о работе IT-поддержки в Ozon Tech: что мы делаем и зачем, как используем Python и как именно он нам помогает решать рутинные проблемы и не только.Опытным коллегам, пишущим на Python, мы не раскроем каких-то сакральных тайн с точки зрения кода, а вот аналитикам, возможно, поможем усовершенствовать процессы. Ну поехали что-ли!');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(160, 'Сказ о том, как специалисты IT-поддержки скрипты писали…', '<p>Сегодня мы немного расскажем вам о работе IT-поддержки в Ozon Tech: что мы делаем и зачем, как используем Python, и как именно он нам помогает решать рутинные проблемы и не только.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/743/2f5/173/7432f5173da6625dbe21ae2c33ee5175.png\" width=\"1920\" height=\"1080\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/743/2f5/173/7432f5173da6625dbe21ae2c33ee5175.png\"></figure><blockquote><p>- Моральная поддержка мне не помешает.<br>- Вот и отлично. Но я сразу предупреждаю: я не могу гарантировать моральность моей поддержки. ©</p></blockquote><p>Для начала, пожалуй, стоит рассказать, что представляет собой IT-поддержка в Ozon Tech, а точнее о работе специалиста по поддержке внутренних сервисов в домене контента и товаров.</p><p>Наша цель — собирать все технические проблемы, возникающие у клиентов при создании карточки товара, чтобы она прошла свой жизненный цикл, классифицировать обращения, проводить первичную аналитику, решать в моменте, заводить задачи на доработки функциональности, приоритизируя их по срочности, массовости и влиянию на бизнес-показатели.	К нам попадают задачи об ошибках в сервисах, в которых функциональность должна работать, но почему-то не работает.</p><p>Разница между пользовательской поддержкой и нами — в инструментах и возможностях их использования в проде. Речь идёт о базах данных, HTTP- запросах, UI-админках и т. д. Карточки товаров могут не создаваться, контент — не обновляться. С этими и другими проблемами мы сталкиваемся в своей практике. Чтобы всё заработало как надо, и нужны эти инструменты.</p><p>В общем и целом работа в команде IT-поддержки очень интересная. Это не только «Ну вы держитесь там!», но и решение разноплановых IT-задач, иногда связанных с обработкой больших объёмов данных.</p><p>Какое-то время мы жили и не тужили, дёргая так называемые «ручки» в Swagger и используя Postman, селектили базки и т. д. Но сервисов становилось всё больше, появлялись новые фичи — следовательно, и количество проблем увеличивалось. Появилась необходимость больше селектить, делать больше HTTP-запросов, их комбинируя. Кроме того, появились задачи по анализу большого количества данных, где, например, за один раз не передашь все нужные ID, и запросы, от которых не то что база умирала — умирала DataGrip. Подобные задачи стали решаться очень долго  — и мы поняли, что пора что-то менять... может быть даже работу.</p><p>Если провести аналогию с известной сказкой, нашей «золотой рыбкой» стал Python. К нам в команду пришёл человек, который перевернул наш подход к работе. Забегая вперёд, скажу, что последующий наём сотрудников в наш отдел был с пунктом о знании скриптовых языков и в частности Python и на текущий момент половина сотрудников пишет на нём, все умеют с ним работать, у нас реализован свой небольшой сервис, учитывающий требования информационной безопасности, а тимлиды используют язык в рамках проектного управления и аналитики проблем. Так мы очень быстро узнаём о болях клиентов и специфике работы того или иного сервиса. Подробнее об этом — ниже.</p><details class=\"spoiler\"><summary>Небольшой дисклеймер</summary><div class=\"spoiler__content\"><p>Опытным коллегам, пишущим на Python, мы не раскроем каких-то сакральных тайн с точки зрения кода, а вот аналитикам, возможно, поможем усовершенствовать процессы. Ну поехали что-ли.</p></details><h3>Выполнение HTTP-запросов с помощью модуля Requests.</h3><p>Самым важным в нашей работе является использование HTTP-запросов. Это краеугольный камень нашей автоматизации.</p><p>Мы завели сервисную учётку в Jira, сделав бота, который работает с API, избавляя нас от большого количества ручной работы. С помощью скрипта на Python мы решили несколько задач:</p><ul><li><p>дважды в день в определённое время проходить по всем созданным JIT-задачам в нашем капасити;</p></li><li><p>проверять прилинкованные Jira-тикеты, считать их и обновлять их количество в JIT-задаче;</p></li><li><p>оставлять комментарии;</p></li><li><p>проверять правильность связи между JIT-задачей и Jira-тикетами.</p></li></ul><p>Кроме того, с помощью данного скрипта реализован подсчёт инструментов, которые используются при решении задач в течение определённого периода времени. Это позволяет нам выявлять самые популярные решения, определять боли клиентов и находить причины их возникновения, а затем устранять эти проблемы.</p><p>На примере бота мы рассмотрим основные модули и библиотеки Python, которые мы используем в написании скриптов.</p><p>В текущих реалиях работы с запросами...</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a99/9af/68a/a999af68aa6cd86cac9389bd43804a1a.png\" width=\"1024\" height=\"683\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a99/9af/68a/a999af68aa6cd86cac9389bd43804a1a.png\"></figure><p>Модуль <strong>Requests</strong> нужен для отправки и получения данных. Чтобы выполнить HTTP-запрос, используется стандартный метод написания функции на Python.</p><pre><code class=\"python\">def get_issues(request_text):\n    error = True\n    url = \'...\'\n    headers = {\n        ...\n        }\n    payload = {...}\n    request = requests.post(url=url, data=payload, headers=headers, auth=auth)\n    if request.ok:\n        error = False\n        return request, error\n    return request, error</code></pre><p>Так выглядит структура стандартной функции, которая используется во всех наших скриптах. В поле url мы указываем строку запроса, в поле headers — заголовки авторизации, а в payload — какие данные мы хотим отправить в теле запроса. Всё довольно стандартно, но, начитавшись статей про обработку ошибок в Golang, мы позаимствовали её, задав переменную error. И для удобства написали небольшую функцию, которая возвращает текст ошибки.</p><pre><code class=\"python\">def check_error(result, error):\n    if error == True:\n        print(f\"Error, status_code: {result.status_code}, headers: {result.headers}\")\n    else:\n        return False</code></pre><p>Чтобы укротить время, мы воспользовались модулями datetime и time.</p><pre><code class=\"python\">start_time = time()\n...\nprint(f\'\\n{datetime.now().strftime(\"%d-%m-%Y %H:%M:%S\")}\\nScript has started: \\n\\t{team_name}\\n\'\n...\nend_time = time() - start_time</code></pre><p>По аналогии с ботом мы выполняли различные запросы, используя HTTP-методы отдельных сервисов.</p><p>Чтобы в каждый запрос можно было отправлять не по одному значению, а, например, массив данных, был реализован цикл, который собирает массив (батчи) для отправки его в запрос. Про использование батчей другого типа формирования расскажем ниже на примере обращения к базе данных.</p><pre><code class=\"python\">total = []\nfor idx, sku_ in enumerate(skus):\n    if len(total) == 3:\n        check_commercial_type_by_sku(total)\n        ...\n        total.clear()\n        total.append(sku_.rstrip(\'\\n\'))\n    else:\n        total.append(sku_.rstrip(\'\\n\'))\ncheck_commercial_type_by_sku(total)</code></pre><p>Цикл формирует массив total, передаёт его в функцию, после получения ответа очищает массив и собирает новый.</p><p>Для записи данных в файл мы использовали функцию open и метод write.</p><pre><code class=\"python\">with open(\'check_error\', \"a+\") as wf:\n    wf.write(f\"Error, status_code: {result.status_code}, headers: {result.headers}\\n\")</code></pre><p>В процессе написания скриптов мы собрали собственную библиотеку функций по вызову различных методов отдельных сервисов. Она позволила ускорить процесс написания скриптов на Python разной сложности.</p><h3>Использование MS Excel</h3><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/544/8cf/502/5448cf5021967818326636ff5e96b55b.png\" width=\"1214\" height=\"502\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/544/8cf/502/5448cf5021967818326636ff5e96b55b.png\"></figure><p>Excel — прекрасный инструмент для работы с информацией в виде таблицы. Он-то и пригодился нам для решения нетривиальных задач с большим количеством данных.</p><p>Если требуется отсортировать или сопоставить данные, мы, скорее всего, пойдём в Excel. Если же нужно эти отсортированные данные брать из разных столбцов в рамках одной строки и передавать в какую-нибудь функцию, мы идём в pandas.</p><p>Подробнее вы, конечно, можете прочитать в интернете, но, если коротко, pandas — это высокоуровневая библиотека Python, которая позволяет вытворять с файлами Excel такое, что некоторым даже не снилось. Именно эту библиотеку мы и стали использовать для решения наших задач. Сразу оговорюсь, что мы не использовали её в полном объёме, так как в этом не было необходимости. В основном нам нужно было считывать значения из XLS-файла и присваивать их переменным.</p><pre><code class=\"python\">honeypot = pd.read_excel(\'Name_file\') # path to xlsx file\nrequestIDs = honeypot.to_dict(orient=\'records\')\nfor idx, row in enumerate(requestIDs):\n    request_id = [row[\'request_id\']]\n    reason_id = str(row[\'reason_id\']).split(\', \')</code></pre><p>Прочитав с помощью функции read_excel файл и присвоив значение переменной, мы обращаемся к методу to_dict, чтобы преобразовать данные в словарь, а параметр orient = \'records\' позволяет класть данные в словарь в следующем виде: <code>[{column -&gt; value}, ... , {column -&gt; value}]</code>.</p><p>Ещё одним важным аспектом использования Excel является парсинг файла дежурств в нашу внутреннюю систему управления инцидентами. Согласно расписанию дежурств, сервис рассылает оповещения об инцидентах дежурным сотрудникам. Для наших коллег мы строим график в SharePoint и, если нужно что-то обновить, скармливаем скрипту файл — и через минуту получаем обновлённое расписание дежурств в системе управления инцидентами. Как вы уже, наверное, догадались, для добавления информации мы используем API этой системы. Если ты сотрудник Ozon Tech, тебе это может быть интересно — добро пожаловать во внутренний мессенджер. </p><h3>Работа с Kafka: чтение и запись</h3><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/457/1a9/044/4571a90441ff7b4f4c0a576977eb6684.png\" width=\"702\" height=\"447\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/457/1a9/044/4571a90441ff7b4f4c0a576977eb6684.png\"></figure><p>Любой уважающий себя разработчик хоть раз ходил в Kafka и работал с ней. Мы, конечно, не дотягиваем до их уровня, но себя тоже уважаем и с Kafka сталкиваемся регулярно.</p><p>Основные наши действия в Kafka — это чтение и запись. И для этого в Python есть модуль Confluent Kafka.</p><p>Для отправки сообщений в Kafka мы использовали метод Producer.</p><pre><code class=\"python\">produce = Producer(...)\ndata_source = create_data(file_name)\nfor data in data_source:\n    produce.poll(0)\n    produce.produce(...)\nproduce.flash()</code></pre><p>Алгоритм действий:</p><ul><li><p>подключаемся к Kafka через <code>Producer({\'bootstrap.servers\': \'server\'})</code>;</p></li><li><p>создаём массив данных (сообщений) с помощью <code>create_data(file_name)</code>;</p></li><li><p>отправляем сообщение в топик Kafka и ждём результат — <code>produce.produce(\'topik_name\', json.dumps(data), callback=delivery_report)</code>.</p></li></ul><p>Для того чтобы читать сообщения из Kafka, использовали метод Consumer.</p><pre><code class=\"python\">prparams = ({\'bootstrap.servers\': \'server\', \'auto.offset.reset\': \'earliest\', \'session.timeout.ms\': 6000, \'group.id\': \"mp_sup\", \'error_cb\': error_callback})\nc = Consumer(params)\nc.subscribe([\'topik_name\'])</code></pre><p><code>\'auto.offset.reset\'</code> указывает, в каком порядке читать сообщения: <code>earliest</code> — с самого раннего, <code>latest</code> — с последнего.</p><h3>Подключение к PostgreSQL и выполнение запросов с помощью библиотеки Psycopg2</h3><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/661/1aa/4d2/6611aa4d25e3ed62cead7d295529f5a6.png\" width=\"960\" height=\"720\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/661/1aa/4d2/6611aa4d25e3ed62cead7d295529f5a6.png\"></figure><p>Использование скриптов для выполнения запросов к базе данных — вишенка на торте, учитывая, что нельзя сделать всё через HTTP-методы, а потому частенько приходится селектить.</p><p>Для работы с PostgreSQL мы использовали, наверное, самую популярную в Python библиотеку Psycopg2. Её модули и функции позволили нам выполнять подключение к базе данных, отправлять запросы и получать нужные результаты.</p><p>Для подключения к базе данных мы написали функцию, в которой содержится информация о базе, к которой мы собираемся подключиться, и о пользователе, который будет выполнять подключение, а также переменную connection. Метод <code>cursor(cursor_factory=extras.DictCursor)</code> позволяет формировать полученные в ответе поля базы в виде словаря.</p><pre><code class=\"python\">def con():\n    connection = None\n    try:\n        connection = psycopg2.connect(\n            ...\n        )\n        connection.autocommit = True\n        print(\"Connection to Postgre DB successful \\n\")\n        return connection.cursor(cursor_factory=extras.DictCursor), connection\n    except Exception as e:\n        print(\"Connection error: \" + str(e))\n        exit(1)</code></pre><p>Реализация запроса в базу данных:</p><pre><code class=\"python\">get_rule_condition = f\"SELECT rule_conditions from rule where id = {int(id)}\"\ncur.execute(get_rule_condition)\nrule_cond = cur.fetchone()</code></pre><p>Иногда нужно сделать просто огромную выгрузку по тяжелому запросу. У нас есть любимая команда разработки, у сервиса которой есть выделенная архивная реплика, на которой нет клиентов, и её можно селектить сколько душе угодно. Вы, наверное, спросите, почему не использовать для больших аналитических запросов DWH? Можно, но есть необходимость получить данные в реальном времени, в отличие от DWH, в которой данные синхронизируются с некоторой периодичностью.</p><p>У архивной реплики есть минус: если ей скормить долгий по ответу запрос, через некоторое время она начнёт отставать от мастера и данные станут неконсистентными. Поэтому, чтобы мы могли комфортно получать корректные значения в моменте, мы селектим через Python, используя батчи. Стараемся формировать их так, чтобы ответ занимал не более 200 мс, особенно если обращаться не к архивной реплике, так как она есть не у всех.</p><p>О том, как формировать батчи по списку ID, мы писали в разделе про HTTP-методы. Но бывают случаи, когда есть какое-то условие и нет входных данных. Для них мы реализовали функцию формирования батчей от минимального до максимального ID (чаще всего по ключу) нужной таблицы. Минимальный ID всегда можно указать опционально. Максимальный — формируется через обычный запрос на получение в таблице. Ну а ненужные данные отсекаются внутри условия запроса.</p><pre><code class=\"python\">def create_batch():\n    batchslist = []\n   # slicebatch = []\n    x, y = 113887310, 113888310 #минимальный, + шаг\n    #maxid = get_maxId() #отдельная функция получения по запросу максимального ID\n    maxid = 971815680 #явно переданный максимальный ID\n    while y &lt;= maxid:\n        batchs = []\n        batchs.append(x)\n        batchs.append(y) \n        batchslist.append(batchs)\n        x = y + 1\n        y += 1000 #шаг\n    if y &gt; maxid:\n        y = maxid\n        batchs = []\n        batchs.append(x)\n        batchs.append(y)\n        batchslist.append(batchs)\n    return batchslist</code></pre><h3>Итоги</h3><p>В Ozon Tech много микросервисов — и кто-то должен их поддерживать. Система несовершенна, а значит, случаются ошибки. Как писал наш коллега Игорь в <a href=\"https://habr.com/ru/company/ozontech/blog/598583/\">статье</a>, прод имеет свойство падать и после этого иногда нужно исправлять данные, с которыми что-то произошло. Прокачав скиллы в Python, мы помогаем в этом коллегам.</p><p>Кроме того, есть частные случаи ошибок, ведь, являясь MVP, продукт подразумевает проверку на жизнеспособность, так как она минимальна. </p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/d50/85b/230/d5085b230e5aacbea627f8a1e3201265.png\" width=\"295\" height=\"265\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d50/85b/230/d5085b230e5aacbea627f8a1e3201265.png\"></figure><p>И тут мы, как поддержка, можем собрать фидбэк, найти ошибки, исправить их в моменте, провести анализ и создать задачу на устранение первопричины.</p><p>А можно этот процесс сравнить с химией: проблемы, которые мы находим, — это «лакмусовая бумажка» работы системы или сервиса.</p><p>Команд разработок в нашем домене много, микросервисов ещё больше — и со всем этим надо жить. А Python со своими прекрасными модулями, библиотеками и функциями позволил нам написать скрипты, которые очень помогают в решении многих непростых задач, с которыми команда IT-поддержки сталкивается каждый день. Освоив это ремесло, мы значительно уменьшили нагрузку на команды разработки, что позволило им погружаться в глубины мироздания, не отвлекаясь на рутину, и пилить новые фичи для бизнеса, а мы в свою очередь почувствовали себя ещё более крутыми IT-специалистами. Ведь наша главная цель — чтобы всем клиентам было удобно и легко работать на нашей площадке!</p><p><strong>Авторы</strong>:<br>Сергей Исаченко и Андрей Каплей</p>', 2, '2023-06-12 21:56:05', 990581, 72, '/ru/companies/ozontech/articles/740540/', 'Вильнюс никогда не был приоритетным направлением для иммиграции. Сюда переезжали из-за легкой адаптации (70% русскоговорящих), случайно, либо же имея возможности зарабатывать на пограничных перевозках. Герой статьи расскажет, как изменился город за последние годы, как он превратился из постсоветского города в столицу европейского государства, что сейчас тут с ценами и зарплатами.'),
(161, 'Вильнюс: как живётся в самом уютном городе ЕС', '<p>Вильнюс никогда не был приоритетным направлением для иммиграции. Сюда переезжали из-за легкой адаптации (70% русскоговорящих), случайно, либо же имея возможности зарабатывать на пограничных перевозках. Герой статьи расскажет, как изменился город за последние годы, как он превратился из постсоветского города в столицу европейского государства, что сейчас тут с ценами и зарплатами. Важное примечание: пик иммиграции в Литву пришелся на период с 2013 по 2016 год. Сейчас переехать сюда так же сложно, как и в любую другую страну ЕС. <strong>Передаю слово нашему герою.</strong></p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/1b6/e0e/df2/1b6e0edf25cdfac1927b323b86473e2f.png\" width=\"740\" height=\"390\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/1b6/e0e/df2/1b6e0edf25cdfac1927b323b86473e2f.png\"></figure><h4>Почему Вильнюс? </h4><p>Уехал сюда в 2009 из Питера, окончив 239, мат-мех и аспирантуру. Иммиграция была независимая и бестолковая. Хотелось переехать самому, не зависеть от местного работодателя: лабать свои проектики в спокойном месте, а как надоест — на велике через лес ехать купаться на озеро.</p><p>Когда приехал, все были потерянные после кризиса 2008, кругом слегка разруха и бардак. Мне это даже нравилось. Было ощущение, что сам разберусь, главное — чтобы не марши несогласных, адвокат от военкомата (с отсрочкой по аспирантуре, да, уже тогда), очереди в больнице, пробки, и вот это вот все.</p><p>Были еще идеи насчет Хельсинки и Загреба. Сделал сайты по недвижке и там, и там, на которых собрал статьи по легализации, и понял, что Финку без местного трудоустройства не потяну, а Хорватия слишком далеко.</p><p>А Вильнюс — это студенческие алкотрипы и линди-хоп. Когда приехал, это не было мейнстримом. Меня с удивлением рассматривали и спрашивали: а откуда? Из Питера? СЮДА? А че тут, Вильнюс это ж большая деревня. </p><p>Город изменился. Мы регулярно путешествуем на авто по Европе. С каждым возвращением все больше вопросов, зачем было отсюда куда-то выезжать. Разве что убедиться, что тут лучше. Все ярче ощущение, что Вильнюс — самый быстроразвивающийся город Европы.</p><p>Гаражи и развалины исчезают, треть домов советского времени реновированы, велодорожки за последние пару лет удлинились в 3 раза. Старый город по-прежнему уютный. Интересно отслеживать, как город меняется на гуглокартах:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/getpro/habr/upload_files/073/bfe/97c/073bfe97c895ce300c7d5e76b90e4cc8.gif\" width=\"740\" height=\"400\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/073/bfe/97c/073bfe97c895ce300c7d5e76b90e4cc8.gif\"></figure><p>Что вообще происходит, а также планы города можно посмотреть на проектах типа <a href=\"https://citify.eu/en/\"><u>https://citify.eu/en/</u></a>. А так поменялась моя улица:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/374/ae8/026/374ae80261ab90fd33a907c37c8d1b19.png\" width=\"1480\" height=\"800\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/374/ae8/026/374ae80261ab90fd33a907c37c8d1b19.png\"></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a42/e34/62e/a42e3462e975c98dfe9db99b1bdbd123.png\" alt=\"Rinktinės, 2014 vs 2019, https://goo.gl/maps/wGhSzWTXVhDWLx1Q7\" title=\"Rinktinės, 2014 vs 2019, https://goo.gl/maps/wGhSzWTXVhDWLx1Q7\" width=\"1480\" height=\"800\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a42/e34/62e/a42e3462e975c98dfe9db99b1bdbd123.png\"><div><figcaption><em>Rinktinės, 2014 vs 2019, </em><a href=\"https://goo.gl/maps/wGhSzWTXVhDWLx1Q7\"><em><u>https://goo.gl/maps/wGhSzWTXVhDWLx1Q7</u></em></a></figcaption></figure><p>Своего IT в Литве мало: Vinted, Nord Security, CGTrader. Много всевозможных филиалов крупных компаний: Wargaming, Wix, IBM, банки все скандинавские. </p><h4>Цены</h4><p>В 2015-м Литва перешла на евро (здесь и далее привожу все расчеты в евро). Было много недовольных и опасений, что цены вырастут. Так и случилось, особенно в сфере услуг. То, что раньше было в литах, стало в евро, и цены выросли в 3,5 раза. Потом был стабильный участок, и новый скачок цен случился за последний год. Последние 6 лет я веду бюджет — поэтому слежу, как меняются цены и могу привести некоторые данные:</p><div class=\"table\"><table><tbody><tr><td data-colwidth=\"248\" width=\"248\"><p align=\"center\"></p></td><td><p align=\"left\"><strong>Январь 2022</strong></p></td><td><p align=\"left\"><strong>Январь 2023</strong></p></td></tr><tr><td data-colwidth=\"248\" width=\"248\"><p align=\"left\">Электричество, KW</p></td><td><p align=\"left\">0,14</p></td><td><p align=\"left\">0,34</p></td></tr><tr><td data-colwidth=\"248\" width=\"248\"><p align=\"left\">Бензин</p></td><td><p align=\"left\">1,43</p></td><td><p align=\"left\">1,47</p></td></tr><tr><td data-colwidth=\"248\" width=\"248\"><p align=\"left\">Яблоки на рынке</p></td><td><p align=\"left\">0,6</p></td><td><p align=\"left\">1,2</p></td></tr><tr><td data-colwidth=\"248\" width=\"248\"><p align=\"left\">Бананы</p></td><td><p align=\"left\">1</p></td><td><p align=\"left\">1,6</p></td></tr><tr><td data-colwidth=\"248\" width=\"248\"><p align=\"left\">Сыр дешевый / твердый</p></td><td><p align=\"left\">4,69 / 10</p></td><td><p align=\"left\">7,5 / 18</p></td></tr><tr><td data-colwidth=\"248\" width=\"248\"><p align=\"left\">Sostinės батон</p></td><td><p align=\"left\">0,78</p></td><td><p align=\"left\">1,35</p></td></tr><tr><td data-colwidth=\"248\" width=\"248\"><p align=\"left\">Билет на транспорт 30/60 min</p></td><td><p align=\"left\">0,65/0,90</p></td><td><p align=\"left\">0,65/0,90</p></td></tr></tbody></table><p><strong>Зарплаты и налоги</strong></p><p>После введения евро зарплаты тоже выросли, МРОТ стал 840€. С зарплатой 5k gross — обычная сумма для фултайм сеньора — получается чуть больше 3k на руки. Конечно, выгоднее работать по B2B-контракту через свою фирму (аналог ИП в России). Если аккуратно все сделать, налог с прибыли 5%, а себе деньги выгоднее переводить как дивиденды, 15%. В сумме — ~20% + бензин, связь, сервера и компы на фирме.</p><p>Жена работает в сфере красоты в среднем салоне: заработок 50/50 с салоном, налог около 15%, мастер получает на руки примерно 20€/час.</p><p>Вот как может выглядеть ваш путь на работу в мае:</p><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/64808d014ffc4801f3da8906\" data-style=\"\" id=\"64808d014ffc4801f3da8906\" width=\"\"><p><strong>Медицина</strong></p><p>Обязательное медстрахование — 7% от ЗП, для беззарплатных — от минималки, то есть 58 евро в месяц. Дети и студенты бесплатно. Можно приписаться к любой клинике. Семейный врач на дом не ходит, но по знакомству может выписать что-нибудь рецептурное по телефону. В несрочных случаях (ну там, например, дите руку сломает) проще самому в приемный покой ехать, чем вызвать скорую. В приемном покое время ожидания никогда не превышало 20 минут. </p><p><strong>Школа и кружки</strong></p><p>Это наша большая статья расходов, потому что детей-школьников — четверо. И хотя само образование бесплатное — все сопутствующие активности дорогие. Один школьный обед стоит 3,5€. За последний год все кружки подорожали, примерно на 15–20 евро. </p><ul><li><p>Полтора часа литовского с частным преподавателем стоит 35€. </p></li><li><p>Бассейн 1 раз в неделю — 50, 2 раза в неделю — 85. </p></li><li><p>Танцы, акробатика, айкидо, сальса, бачата, бадминтон дважды в неделю обойдется примерно в 55€, трижды — 80. </p></li><li><p>Простая безлимитная тренажерка стоит 23€ в месяц при годовом абонементе, крутая тренажерка с блекджеком и банями — 65.</p></li></ul><p>В апреле 2023 у нас на школьные обеды ушло 280, на дополнительные детские занятия 1200, и 360 нам с женой. Школа средняя, русско-польская, бесплатная. Пособие на одного ребенка — 130, плюс также город компенсирует 20 евро для одного любого кружка.</p><p><strong>Жилье</strong></p><p>В первую половину 2022 в Литве был большой поток беженцев из Украины. Открылось много центров помощи. Многие отдавали свободное жилье за так. Наши старые друзья с маленькими детьми полгода жили в нормальной двушке бесплатно, комуналку компенсировал город. Литва быстро адаптировалась, потому что это был второй поток беженцев. Первый случился осенью 2020 из Белоруссии. </p><p>В итоге, в прошлом году снять что-то в Вильнюсе было очень сложно. Сейчас вроде появилось, в среднем можно найти трешку за 700. Коммуналка на нашу семью в реновированном доме стоит ~ 400, из них: отопление 77€ в декабре, 52€ в марте. В 2017 сестра купила трешку в советской девятиэтажке за 80k, сейчас она стоит 140k.</p><p><strong>Связь</strong></p><p>Голый 5G безлимит стоит 11 евро в месяц, безлимитные разговоры и 5Gb — 14, минимальный тариф без интернета — 7. Домашний интернет на 1Gb/s — 10.</p><p><strong>Страховка</strong></p><p>Каско на семейный авто стоит 400 в год, цивилка столько же. Этой зимой ночью на парковке нас кто-то подбил (виновника не нашли), без критических повреждений. Месяц ездил, пока ждал детали, больше месяца в ремонте — было заменное авто. За 4 детали и покраску ценник к страховой был на 6.5k. Сам заплатил франшизу, 150.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/442/d0e/4de/442d0e4de4a0aab9f6db74894e58d35d.png\" width=\"740\" height=\"525\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/442/d0e/4de/442d0e4de4a0aab9f6db74894e58d35d.png\"></figure><h4>Жизнь в Литве</h4><p><strong><br>Иммиграция сейчас</strong></p><p>Очевидно, что сейчас лавочка с иммиграцией через ИП закрыта, бизнес-иммиграция в частности, и иммиграция россиян в общем. Еще в 2016, после Крыма, нашим хорошим знакомым отказали в продлении ВНЖ, хотя у них была тут доходная фирма и 30 сотрудников. Слышал, что с миграцией судятся и даже выигрывают. Беда в том, что выигрыш единичный и локальный, как в казино. В следующий раз опять не продлят, а потом не дадут ПМЖ, потому что был промежуток между ВНЖ. Гражданство по натурализации получить по-прежнему можно, при этом отказываться от текущего все еще нужно.</p><p><strong>Язык</strong></p><p>Может стать главной ошибкой. 70% Вильнюса говорит по-русски — это приводит к тому, что литовский имеет оттенок необязательного. Сам я много лет работал в командах по всему миру, никогда не искал работу в Литве — поэтому выучил язык лишь через 7 лет после переезда. Теперь чувствую, как много потерял: стоило сделать это раньше. Но если для взрослого время имеет мало значения, то ребенку очень важно скорее интегрироваться в среду. Тут есть русские сады и школы, но, по крайней мере, детский сад должен быть литовский. Перейти из средней русской школы в среднюю литовскую классе в 8-м практически нереально. </p><p><strong>Природа</strong></p><p>Вильнюс очень зеленый. Есть <a href=\"https://www.15min.lt/gyvenimas/naujiena/keliones/9-vilniaus-papludimiai-kur-gaivintis-nuo-kaitros-1630-979294\"><u>десяток городских пляжей</u></a>, до которых можно добраться из центра на городском транспорте. Городской пляж это когда «спасатели, мангалы, мостики, песок, детские площадки». Вот как это выглядит в начале апреля:</p><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/64808d7565e33b481526c886\" data-style=\"\" id=\"64808d7565e33b481526c886\" width=\"\"><p><strong>Байдарки</strong></p><p>Водный туризм в России — это испытание для сильных духом. Таймени по 40 кг веса, поезда, ебеня, а потом фантастическая природа и ни одного человека за неделю. Здесь это мейнстрим. Сплавиться по речке 10-ю байдами на корпоратив (из снаряги только пиво), а потом банька — обычное дело. Есть 10 речек, песок, сосны, чисто, природа красивая, но одинаковая. Регион-то один. На 2+ дня редко кто ходит. Аренда пластиковой VISTA стоит 30 евро в сутки, возят байдарки специальными прицепами по 10 штук, забрасывают и забирают на бусе.</p><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/64808d8bae851501c527a321\" data-style=\"\" id=\"64808d8bae851501c527a321\" width=\"\"><p><strong>Чем еще народ занимается</strong></p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b02/90d/718/b0290d71866aa5d893b5dac7a7989718.png\" width=\"1600\" height=\"1067\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b02/90d/718/b0290d71866aa5d893b5dac7a7989718.png\"></figure><p><strong>Вейкбординг.</strong> Он много где есть, сезон: с апреля по ноябрь. <br><strong>Кроскантри.</strong> Город холмистый, на холмах лес, в нем тропы, по ним байкеры летят. Есть проекты типа <a href=\"https://vilnius100km.lt/\"><u>100км вокруг Вильнюса</u></a>, это кольцо по лесу для горного велика. <br><strong>Байдарки, опять-таки.</strong> Можно прямо сегодня позвонить и за 4 часа по Вильняле сплавиться, прямо через центр. <br><strong>Воздушные шары.</strong> Вот так <a href=\"https://www.youtube.com/watch?v=D9Vg-tOZ9K8\"><u>полетать над городом</u></a> можно за 150 евро. Ну и ryanair по 25 много куда никто не отменял.<br><strong>Open Air:</strong> летом практически каждый день сальса, бачата, пореже — линди-хоп.</p><p><strong>Паланга</strong></p><p>Любовь к Паланге — тайна литовской души. Пара пешеходных улиц, пирс, несколько деревянных домов, переделанных под рестораны, с намеком на историчность, советские санатории. 2 недели за год, когда купание в море не выглядит экстримом, толпы народа и конские ценники. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/c73/1d4/aac/c731d4aacc717f9aa2cd2568ef3cc88c.png\" alt=\"https://www.vz.lt/nekilnojamasis-turtas-statyba/2020/02/22/palangos-savivaldybe-iesko-projektuotoju-v-kernagio-alejai\" title=\"https://www.vz.lt/nekilnojamasis-turtas-statyba/2020/02/22/palangos-savivaldybe-iesko-projektuotoju-v-kernagio-alejai\" width=\"800\" height=\"480\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/c73/1d4/aac/c731d4aacc717f9aa2cd2568ef3cc88c.png\"><div><figcaption><a href=\"https://www.vz.lt/nekilnojamasis-turtas-statyba/2020/02/22/palangos-savivaldybe-iesko-projektuotoju-v-kernagio-alejai\"><em>https://www.vz.lt/nekilnojamasis-turtas-statyba/2020/02/22/palangos-savivaldybe-iesko-projektuotoju-v-kernagio-alejai</em></a></figcaption></figure><p>Национальный литовский анекдот: <br>— Мама, а когда мы уже поедем в Палангу? <br>— Все очень дорого, сынок, мы в этом году не сможем поехать. Придется отдыхать на Мальдивах.</p><h4>Минусы жизни в Литве</h4><ul><li><p>Люди обычно знают 3 языка, часто 4. Ваше знание только английского не станет большим преимуществом. </p></li><li><p>Если по улице идет пьяный и орет матом, то орет он обязательно по-русски. Редкие асоциальные элементы у вокзала — русские. Люди, говорящие только по-русски, как бы менее устроенные. Нормальный вильнюсец может говорить с близкими по-русски, но при этом мгновенно переходит на литовский с посторонними.</p></li><li><p>Зимой скучно. Гор нет, есть единственная Snow Arena на всю страну.</p></li><li><p>Советское наследие в планировке города: большие непроездные кварталы.</p></li><li><p>Излишне агрессивная политика против автомобилей. Полосы отбирают под городской транспорт, что приводит к регулярным пробкам. Но при этом у меня нет знакомых, которые бы пересели с авто на автобус. <a href=\"https://fb.watch/kCQ8i5cONV/\"><u>Вот здесь</u></a> новый мэр обещает не допускать дальнейшего сужения улиц — посмотрим, как будет на самом деле.</p></li></ul><p><strong>P.S.</strong> Лучшие вакансии — в <a href=\"https://t.me/g_jobbot?start=u_habr272\">телеграм-боте getmatch</a>. Указываете нужную вилку зарплаты, и бот выдает вам лучшие предложения, и помогает пройти интервью. Всё бесплатно.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/7ee/a9a/be8/7eea9abe878ec6b7073a9094f2c89b73.png\" width=\"2400\" height=\"400\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/7ee/a9a/be8/7eea9abe878ec6b7073a9094f2c89b73.png\"></figure><h2>Что ещё почитать про переезд в Европу</h2><ul><li><p><a href=\"https://habr.com/ru/companies/getmatch/articles/734450/\"><u>Жизнь в Норвегии: непростой переезд даже для IT-инженера, отсутствие дешевых вещей и настоящее равноправие</u></a></p></li><li><p><a href=\"https://habr.com/ru/company/getmatch/blog/725286/\"><u>Что делает Словению идеальной страной для переезда с детьми и хорошим местом для работы в IT</u></a></p></li><li><p><a href=\"https://habr.com/ru/company/getmatch/blog/692802/\"><u>Почему Берлин — не Германия, как здесь живется и как работается</u></a></p></li><li><p><a href=\"https://habr.com/ru/company/gms/blog/665298/\"><u>Португалия, Кипр, Нидерланды. 3 простые истории поиска работы с релокейтом</u></a></p></li><li><p><a href=\"https://habr.com/ru/company/gms/blog/662371/\"><u>Жизнь в Швеции: полное благополучие, тесты на IQ и тысячи вакансий в IT</u></a></p></li></ul><p></p>', 2, '2023-06-12 21:56:06', 939095, 82, '/ru/companies/getmatch/articles/740650/', 'Муки самоопределения, кринжовые стажировки и собеседования, первый опыт, портфолио редактора...или как филолог искала работу в ИТ. В этой статье — об увлекательно случайной истории пути от стажера-копирайтера до технического писателя. Как мне тут работается, почему не хочется уходить и помогает ли мне образование филолога. Отвечаем вместе на вопрос \"Есть ли гуманитариям место в ИТ?\".');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(162, 'Путь филолога в ИТ: шла куда попало, пришла в техническое писательство', '<p><span class=\"habrahidden\">Все описанные ниже трюки с поиском работы в ИТ были выполнены профессионалами, просьба не повторять этого дома. Уберите от экрана детей, беременных женщин и слабонервных айтишников.</span><em> </em></p><h2>Кто я?</h2><p>Всем привет! Меня зовут Милена, и я технический писатель. Свою первую статью на Хабре начинаю, как в клубе анонимных…технических писателей.</p><p>Филолог по образованию, я уже почти три года работаю в ИТ. Однако моя должность не всегда звучала как «технический писатель». Когда-то я стартовала с позиции копирайтера (м-да...) и вела коммерческие блоги. Потом доросла до позиции ИТ-редактора, дизайнила презентации для защиты проектов и рисовала схемы процессов. И вот, наконец, вступила в ряды технических писателей. В моем багаже не было разве что опыта “свободной кассы” из известного анекдота:</p><p><strong>Что вы обычно говорите, когда видите выпускника филологического факультета?</strong></p><p><strong>— Две картошки и бигмак, пожалуйста.</strong></p><p><em>Закадровый смех</em></p><p>Так сложилось, что со сферой ИТ из всех моих однокурсников и знакомых филологов или лингвистов имею дело только я одна. Возникает вопрос: а сколько нас, филологов, работает в ИТ? Причем с важным нюансом: кто работает в ИТ <strong>по профессии</strong>? По личному опыту вижу, что нас тут немного.</p><p>Эта статья – моя история с небольшими советами. Здесь я расскажу об опыте работы. Как и почему я искала работу в ИТ, с какими сложностями сталкивалась, как готовила портфолио и многое другое. </p><p>Возможно, этот опыт будет полезен, если вы такой же потерянный филолог, каким когда-то была я. Если так — буду рада, если вы расскажете мне об этом в комментариях.</p><h2>Почему ИТ после филфака?</h2><p>Тут стоит разобраться во временных рамках моего опыта. ИТ в моей жизни случилось не после филфака, а где-то прямо посередине. Искать первую работу я начала уже на втором курсе, мне хотелось как можно скорее начать применять знания на практике и получить ценный опыт работы. К моменту получения диплома я уже давно не была “зеленым” бакалавром.</p><p>Я не стремилась на тот момент в ИТ, мне хотелось просто работать с текстом. Я прошла стажировку в образовательной организации на позиции стажера-копирайтера и поняла, что писать о том, что мне неинтересно, сложнее, чем я думала. За три недели работы по пять часов в день я выгорела так, словно сорок лет стояла у станка на заводе (утрирую, гиперболизирую). Зато там я на практике поняла, что такое копирайтинг, рерайтинг и прочее, где платят мало, а требуют много. Уволилась, задалась вопросом: <em>“Че хочу? Куда плывем? О чем писать будем, не о любви романы же?”. </em>Хотя, может стоило и любовной прозой для домохозяек заняться, кто знает.<em>.</em></p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/7a2/eae/ce5/7a2eaece500bac4ce5182080074827d0.png\" width=\"1830\" height=\"1081\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/7a2/eae/ce5/7a2eaece500bac4ce5182080074827d0.png\"></figure><p>Однако мыслей об ИТ у меня не было. Думаю, связано это по большей части с тем, что мои представления о сфере были сильно ограничены знанием о существовании разработчиков и языков программирования. На этом все.</p><p>У меня было мизерное портфолио, и я откликалась на все, что было хоть как-то связано с текстом. Маркетинг, пиар, редакция. Копирайтер в кулинарный блог? Супер. Редактор в отдел маркетинга? Подходит. Журналист-новостник? Не вау, но откликнусь. Переводчик в бюро? I am fluent enough. Y en español también. Поиск работы филолога больше похож на экзистенциальный ужас. Кто я? Копирайтер? Редактор? Корректор? Назовите еще сорок гендеров филфака —  это все могла быть я. Добавьте к этой беде самоопределения и то, что навыков самопрезентации было примерно кот наплакал. Результаты удручающие.</p><p>Первый совет, который я могу и хочу здесь дать:</p><p><strong><em><u>Не распыляться, куда попало.</u></em></strong><em><u> Чем конкретнее вы представляете себе хотя бы сферу ваших интересов, тем проще там будет выявить интерес профессиональный. Да, я всегда интересовалась технологиями чуть глубже, чем сверстники. Думала ли я, что я могу об этом писать? Нет. А подумала бы, сэкономила бы кучу времени. Но любой опыт — опыт.</u></em></p><p>Из-за того, что я слабо себе представляла, чего хочу и чем могу быть полезна, я откликалась на все подряд и получала бесчисленные отказы без объяснений.</p><p>Пока однажды не случилось это:</p><p>— <strong>ПРИГЛАШЕНИЕ</strong>. Милена, добрый день. Ваше  резюме показалось нам интересным, мы хотели бы пригласить Вас на собеседование на должность стажера-копирайтера.</p><p>Во-первых, чего? Во-вторых, куда? Я не помнила, чтобы откликалась в корпорацию всем известных нам мобильных телесистем, еще и в трайб автоматизации, еще и в Центр роботизации. В каком бреду я была? Не особо веря в себя, я согласилась на собеседование. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/03a/3fb/f8a/03a3fbf8a87c9153da24a87318de8abb.png\" width=\"1830\" height=\"1063\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/03a/3fb/f8a/03a3fbf8a87c9153da24a87318de8abb.png\"></figure><h2>Первая работа в ИТ</h2><p>Собеседование (все поняли куда) прошло успешно. На позицию стажера-копирайтера (по факту – редактора блога) меня спросили, шарю ли я за HTML. Я ответила — нет. Сказали \"ладно, разберешься\" и взяли на работу. Так и случилась моя первая работа в ИТ. Исключительная случайность. Удачное стечение обстоятельств.</p><p>Предлагаю в комментариях устроить конкурс на самое нелепое устройство на работу. Пока в призерах я.</p><p>Ладно, конечно, меня спрашивали не только про HTML, который я не знала, но и в целом про образование, опыт работы, готова ли я погружаться в тему. А тема была для меня не из легких – RPA. Руководителю было принципиально, чтобы у меня был опыт ведения блогов. </p><p><em>Еще один совет: </em></p><p><strong><em><u>Ведите блоги</u></em></strong><em><u>, если хотите связать работу с текстом. Это правда помогает: и вам лучше расписаться, и работодателю потенциальному понять ваш стиль. Важно показать, что вы способны писать в принципе, а не только по ТЗ.  Это нужно даже в ИТ.</u></em></p><p>И, конечно, я была готова погружаться в тему с нуля.</p><h3>Куда я попала и какие были задачи?</h3><p>Меня взяли на должность редактора блога в ИТ-подразделение очень крупной компании. Чем же занимается в таких местах филолог? Ну, рассказываю по порядку. </p><p>Моей основной задачей было ведение корпоративного блога. Я должна была разобраться в RPA так, чтобы суметь увлекательно написать об этом пару статей в месяц. И потом еще составить простым языком инструкцию для заказчика, как пользоваться разработанным роботом, чтобы ничего не падало. А затем и разобраться в технической документации и описать кейс с бизнес-выгодами. </p><p>Грубо говоря, моя задача – разобраться, перевести все на обывательский язык и донести популярно до подписчиков блога, то есть до сотрудников других подразделений компании. Цели были не миссионерские, разумеется. Так, по задумке руководителя, повышая уровень осведомленнсти, мы должны были показать сотрудникам, что “роботов” бояться не стоит. Что они не отнимут работу и все такое прочее. И нужно было привлечь новых заказчиков внутри компании. </p><p>Помимо основной задачи были и периферийные: сначала я только помогала с текстами для презентаций и рассылок, а потом стала вполне себе штатным редактором команды и не только. Ну, а потом, я не только текст писала, но и стала дизайн делать. И довольно успешно.</p><p>К личному удивлению, присутствие филолога в команде оказалось полезным и плодотворным для всех. Тексты стали читаемее, презентации красивее, количество читателей в сообществе росло, заказчики не писали гневные письма в саппорт, что ничего не работает, и о команде и работе Центра роботизации узнавали больше людей.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/556/417/013/556417013a7f1c77bd80d0a1630b7b33.png\" width=\"1830\" height=\"1063\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/556/417/013/556417013a7f1c77bd80d0a1630b7b33.png\"></figure><h3>Первые сложности и их преодоление</h3><p>Конечно, я была в полной эйфории от работы. Коллектив – супер, задачи – полный улёт, платят – нормально. Но я думаю, было бы справедливо поделиться и сложностями, с которыми я столкнулась. Для матерых ИТшников это покажется базой, но как же я, филолог-третьекурсник, была к этому не готова… </p><p><strong>У меня не было ментора. </strong>И не у всех он вообще есть, хотя по-хорошему должен быть. Приводило это все к тому, что после месяца “погружения” меня бросили в свободное плавание в море задач. Приходилось с нуля самой разбираться в том, что такое RPA,  в проектах, которые уже были реализованы. Объемы огромные. Очень интересные, но жаль, что ни черта не понятные.  </p><p><strong>Непонятная терминология</strong>. Это сложность, с которой столкнется любой человек, попавший в незнакомую сферу. Да, я не понимала, что такое API, и не всегда могла дать внятный ответ, чем роботизация отличается от автоматизации, но многие ли из моих коллег сразу поняли бы, что такое синкретизм, или смогли отличить тонику от силлаботоники? Не уверена, но я бы их точно поняла и простила. Но хочешь не хочешь, а разобраться с этим все же придется, как бы ни скрипели зубы.</p><p>Материалов очень много, все они очень непонятные, разные и иногда несистемно составленные. И во всех есть ужасные, кошмарные, устрашающие…термины, в которых придется разобраться и которые придется выучить. Что такое ШЕ, БЗ, ДСВК, OLA ...? <em>“Вас штрафуют за использование лишних букв?”</em> —  вопрошала я, но потом привыкла. Через полгода они уже очень органично вписались в мой активный словарный запас.</p><p><strong>Идиотские вопросы</strong>. Их  придется задавать немеренное количество разработчикам и аналитикам. Тут главное не бояться показаться тупым. Нет плохих вопросов, есть только незаданные. Таков путь воина. Чтобы описать процесс, его нужно понять, а сделать это полностью по документации редко получается. Но все относятся обычно с пониманием. </p><p>Разбираться в этом приходится потому, что выдавать материал с фактическими ошибками на платформу, где сидят преимущественно айтишники, равносильно заявке на линчевание. Сколько статей я перелопатила о RPA – сложно сказать. </p><p>Было ли мне сложно? Конечно. Труднее всего было принять в себе белую ворону коллектива, на каждом корпоративе я не переставала шутить на тему \"Собрались как-то раз разработчики, аналитики, архитекторы и...ФИЛОЛОГ\"...просто потому, что примерно 40% их разговоров поначалу я просто не понимала.</p><p> </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/6c6/081/793/6c60817930bd5c8996e3183be065bef6.png\" width=\"1829\" height=\"1063\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/6c6/081/793/6c60817930bd5c8996e3183be065bef6.png\"></figure><h2>Спасибо этому дому, идем к другому</h2><p>Несмотря на то, что работа была очень интересная, мои амбиции карьерного развития в какой-то момент уткнулись в потолок той структуры, в которой я работала. Встал вопрос о том, куда хочу расти дальше.</p><p>Одно знала точно: я не хотела уходить из ИТ. К концу работы в той компании я уже очень хорошо ориентировалась в проектах, особенностях технологии, понимала, о чем писать и как. Мне было уже относительно легко, и сама тема стала для меня ну очень интересной.</p><p>Господа, я \"втянулась\".</p><p>Ставить перед собой задачу сломать мозг и разбить лоб о техническую документацию, но написать хороший и интересный текст, оказалось на удивление увлекательным занятием. Всегда в тонусе, всегда с разбитым лбом. Но очень довольная, что коллеги оценили статью и начали дискуссию в комментариях. Поэтому вопрос выбора <strong><em>сферы</em></strong> работы для меня на этот раз не стоял.</p><p>По ходу поиска новой работы я случайно открыла для себя профессию технического писателя. Оказывается, я все это время называлась неправильно. Для моей работы с технической документацией и описанием процессов придумали название...технический писатель... Узнала я случайно, мне позвонила рекрутер из одной ИТ-компании со словами: </p><p><em>— Милена, хотели бы пособеседовать Вас на должность технического редактора. Почитали Ваш опыт в резюме, нам подходит.</em></p><p>Но кто такие технические писатели? </p><p><strong>Технические писатели</strong> – это люди, как правило в ИТ-компаниях, которые занимаются разработкой технической и пользовательской документации. Они пишут инструкции, руководства пользователя, часто занимаются UX-писательством (интерфейсные тексты). Да, называть кнопки тоже кому-то надо. </p><p>Их работа требует очень тесного взаимодействия с разработчиками и аналитиками, отличных коммуникативных навыков, умения задавать правильные вопросы и получать нужные ответы. </p><p>Я зашла в описание вакансии, почитала требования, удивилась. Один в один сходится: на джуна сойду, остальному можно научиться. Изучила больше информации, сопоставила свой опыт с тем, что пишут о профессии в интернетах, посмотрела много вебинаров, даже “10 глупых вопрос техническому писателю” и поняла. <strong>Туда надо</strong>.</p><h3>Заявила о себе</h3><p>На этот раз я планировала <em>войти в айти</em> “с ноги” (двойное клише...), точно зная, куда иду, что умею делать и чем могу быть полезна команде разработки. Для этого я подготовила резюме, подробнее описала все, с чем я работала, и сделала портфолио-презентацию, чтобы рассказать в красках о своем опыте. </p><p>Портфолио было очень важно, потому что я прекрасно понимала, что опыта может быть недостаточно, и в нем надо было показать всю мощь моего потенциала. </p><p>В портфолио я подготовила: </p><ul><li><p>Один слайд-знакомство, </p></li><li><p>Один слайд с Hard and soft skills,</p></li><li><p>Десять-одиннадцать подробных слайдов с опытом работы,</p></li><li><p>Два слайда со знаками отличия,</p></li><li><p>Парочка слайдов с мемами,</p></li><li><p>Слайд-заключение (то же мемный).</p></li></ul><p>Кстати, я обсуждала свое портфолио с текущим руководителем и получила на него исключительно положительный отзыв. Как мне сказали, хорошее портфолио и навыки самопрезентации – это почти половина успеха. Мало быть хорошим специалистом, надо еще и уметь себя представить. </p><p>Вытекает еще один совет: </p><p><strong><em><u>Готовим сногсшибательной портфолио</u></em></strong><em><u>. Портфолио – это коммуникативный акт, оно не должно быть душным, состоящим из сухих текстов.  Кто работает с текстом, должен шарить за коммуникацию. Почитайте учебники по теории коммуникации, если требуется. В составлении портфолио я считаю важным не просто прислать ссылки на работы, но и дать к ним комментарии, рассказать о них, о проекте. Сделать небольшой, неперегруженный, но увлекательный сторителлинг. Попробуйте взять мою структуру, например. И добавить мемы. Я люблю мемы.</u> </em></p><p><strong>Мудрость филолога в ИТ гласит:</strong> Если вас не возьмут на работу из-за мемов в портфолио – значит и не надо вам там работать. </p><p>Финальный слайд-заключение, по моей задумке, должен был сразить любого работодателя наповал. </p><p>Так я и приступила к конкретным поискам.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/177/4b4/c6c/1774b4c6c1996c643013bfc566b64c34.png\" alt=\"Слайд-заключение, кстати.\" title=\"Слайд-заключение, кстати.\" width=\"2086\" height=\"1162\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/177/4b4/c6c/1774b4c6c1996c643013bfc566b64c34.png\"><div><figcaption>Слайд-заключение, кстати.</figcaption></figure><p> </p><h3>Сейчас – технический писатель</h3><p>Точно понимая, что я хочу быть техническим писателем, я стала шерстить hh в поисках вакансии с адекватными требованиями к джуну. Тем более, что у меня за плечами уже был двухлетний опыт работы ИТ-редактором. </p><p>Вакансию младшего технического писателя (на тот момент)  в компании “Актив” я нашла сама. Что привлекло? Адекватность описания требований к кандидату + сфера работы компании. С криптографией я никогда ранее не сталкивалась, было интересно попробовать разобраться. Джуна они искали в помощь к действующему ведущему техническому писателю (Настя, привет!), что для меня было здорово. Это решало сложность №1 из раздела <strong>Первые сложности и их преодоление</strong>. Это значило, что у меня будет ментор, меня смогут многому научить, на меня будет время.</p><p>Собеседование проходило удивительно для меня. Мы созвонились по видеосвязи, и, помимо стандартных вопросов про опыт работы, меня впервые в жизни попросили рассказать о моих хобби и увлечения. </p><p>Я много раз уже рассказывала, как я писала тексты про RPA. Но вот рассказывать о том, что я выращиваю фиалки, пишу маслом и читаю южную готику, мне пришлось впервые. </p><p>Мне дали тестовое задание: написать инструкцию о том, как заказать билеты на aviasales. Целевой аудиторией была мама. Говорит, представь, что тебе нужно маме объяснить, как заказать билеты, вот так и напиши. У тебя есть два часа времени, потом пришлешь, и мы с тобой вместе обсудим.</p><p>Где-то я уже это делала. Как же объяснить заказчику, как пользоваться разработанным роботом так, чтобы ничего не падало? В мою пользу играл тот факт, что моя предыдущая работа была в ИТ, и там я тоже иногда делала пользовательские инструкции.</p><p>Сейчас я работаю уже на должности технического писателя (middle) в ИБ-компании “Актив”, под зорким глазом технического писателя сеньора. </p><p>Я продолжаю бить лоб, постигать непостижимое и смотреть на тексты через призму филфака. Потихоньку учусь писать инструкции, тексты для пользовательских интерфейсов, оттачиваю свои навыки писательства личных текстов и часто задумываюсь о языке как о знаковой системе. А вот <a href=\"https://dev.rutoken.ru/pages/viewpage.action?pageId=109412467\"><u>здесь </u></a>уже можно посмотреть мою первую почти успешно (и почти самостоятельно) написанную инструкцию.</p><p>Круто, что Настя работает техническим писателем уже почти 10 лет, а техническим писателем в “Активе” – 5 лет. Она сильно мне помогла влиться в рабочие задачи, сидела со мной по несколько часов в переговорке за инструкциями, разбирала мои ошибки и давала экологичные, но справедливые правки. </p><p>Кстати, <a href=\"https://habr.com/ru/companies/aktiv-company/articles/728814/\">здесь</a> можно почитать статью Насти о том, как она искала технического писателя к себе в команду. Там много интересного про формирование требований к джуну, а также про то, что стоит и не стоит писать в резюме, если опыта пока совсем мало.</p><h2>Так что, есть жизнь в ИТ после филфака?</h2><p>Мой ответ – да. </p><p>Считаю, что мое образование очень помогает. Филфак дал мне самое ценное —  понимание теории коммуникации и языкознания. Потому что любой текст (и художественный, и коммерческий, и технический) —  это всегда акт коммуникации. В этом деле и адресат, и адресант, и сообщение, и код —  величины переменные, суть процесса —  величина постоянная.</p><p>Именно это базовое понимание принципа коммуникации ложится в основу моей работы над текстом. Именно из нее вытекают все остальные вопросы, которые ставятся по ходу работы: \"Какая у нас ЦА?\", \"Какой уровень погруженности пользователя?\", \"На какой платформе публикуемся?\" и прочее-прочее-прочее. И именно это, я считаю, помогает мне в работе и несет особую пользу.</p><p>Стало душно? Извините. Хотелось лишь сказать, что образование филолога очень даже применимо и к работе с техническими текстами.</p><p>Мне все еще нужно многому научиться. При неполном погружении в тему меня держит на плаву живой интерес к технологиям и отсутствие боязни задавать дурацкие вопросы. И еще желание написать много хороших текстов в компании, чтобы для плохих не осталось места.</p><p>А еще мне хочется, чтобы таких энтузиастов — текстовых эстетов —  в ИТ и ИБ становилось больше. Поэтому я поделилась тем, как сама тут очутилась, в надежде показать, что и гуманитариям здесь есть место.</p><p>Всем счастливого самоопределения и воркинг капибары.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/9f7/541/8d7/9f75418d7fea1aa341af267d36a05a95.png\" width=\"1829\" height=\"1063\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/9f7/541/8d7/9f75418d7fea1aa341af267d36a05a95.png\"></figure><p>Спасибо, что дочитали мою историю до конца. Поделитесь и своим опытом работы в комментариях. Мне будет интересно почитать, а другим читателям, может быть, даже и полезно. </p><p></p>', 3, '2023-06-12 21:56:07', 972015, 91, '/ru/companies/aktiv-company/articles/740520/', 'В прошлом году айтишное сообщество раскололось: кто-то уехал покорять зарубежные рынки, а кто-то остался развивать проекты в России. Давайте послушаем рефлексию и мысли тех, кто остался, растит свои команды, продолжает развивать российские разработки и делать жизнь наших соотечественников лучше.'),
(163, 'Настоящее и будущее IT в России: каким его видят директора из VK, ДОМ.РФ и ГК «Самолет»', '<p>В прошлом году айтишное сообщество раскололось: кто-то уехал покорять зарубежные рынки, а кто-то остался развивать проекты в России. Давайте послушаем рефлексию и мысли тех, кто остался, растит свои команды, продолжает развивать российские разработки и делать жизнь наших соотечественников лучше.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/fc4/5dd/ed3/fc45dded305a3ea604373d59f6b061e5.jpeg\" width=\"1100\" height=\"733\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/fc4/5dd/ed3/fc45dded305a3ea604373d59f6b061e5.jpeg\" data-blurred=\"true\"></figure><p>В то же время мы видим <a href=\"https://vc.ru/hr/589187-it-rynok-rossii-v-2023-godu-chego-nam-zhdat\" rel=\"noopener noreferrer nofollow\">мировые тенденции</a> в работе IT-сектора: это прежде всего сокращение сотрудников и снижение спроса на развлекательные ресурсы. На российском рынке наоборот — вместе с тревогой о будущем резко выросла потребность в создании продуктов для импортозамещения и в объединении усилий, а спрос на IT-специалистов только растет.</p><h4>Ведущий подкаста «Стартап-секреты»  </h4><div class=\"persona\" persona=\"true\"><img persona=\"true\" class=\"image persona__image\" src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/9da/462/991/9da4629910d0d65edf867f96bdd759cd.png\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/9da/462/991/9da4629910d0d65edf867f96bdd759cd.png\"><h5 class=\"persona__heading\" persona=\"true\">Дмитрий Беговатов</h5><p>ИТ-обозреватель, основал и продал мобильное приложение «МойГород». Развиваю российский Product Hunt в тг-канале «VC Hunt // Лучшие стартапы России».</p><p>Я спросил топ-менеджеров и директоров крупных российских компаний (ДОМ.РФ, «Самолет», «Одноклассники»), как они видят будущее и как они объединяются для совместного роста. В гостях — Анна Федина, Александр Канивец, Вадим Гуров.</p><div class=\"persona\" persona=\"true\"><img persona=\"true\" class=\"image persona__image\" src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/63a/aa4/fdb/63aaa4fdb105857997133d5ca85cc842.png\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/63a/aa4/fdb/63aaa4fdb105857997133d5ca85cc842.png\"><h5 class=\"persona__heading\" persona=\"true\">Анна Федина</h5><p>СРО в направлениях МСБ, Розница и Клиентский опыт, ДОМ.РФ</p><h3>Чем вы сейчас занимаетесь </h3><p>Наш основной фокус сейчас на развитии розничных продуктов, и основная задача этого года — это импортозамещение и переход со старого ПО на собственную разработку в трендах последнего времени.</p><h3>Как оцениваете ситуацию в IT-отрасли на примере вашей организации </h3><p>Приходится перестраиваться на решение задач по импортозамещению, но здесь не все так критично.</p><p>Еще к началу 2022 года 70% универсального ПО было иностранное — например, вся телефония, MS Office, Figma и Miro, — и мы поняли, что нужна разработка подобного софта для внутреннего рынка. С другой стороны, это необходимо только для тех компаний, у которых не была куплена безлимитная лицензия и нет доступа к поддержке этого ПО.</p><p>Что касается специализированного софта, как, например, «кредитный конверт» у нашего банка, то он изначально был самописным — то есть глобально тут ничего не поменялось, и здесь не нужно много чего замещать. Приходится говорить только о замещении отдельных компонентов этих систем, например оракловых баз данных или SAP-систем. Импортного ПО во внутренних бизнес-процессах было около 20%. </p><p>Отдельная боль — это замещение оборудования и переезд в новые ЦОДы. Это тоже важные вопросы, которые мы решаем и которые займут довольно длительное время.</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/74f/60f/2f6/74f60f2f66cdad36f5cc3af082c0ef47.jpeg\" width=\"400\" height=\"533\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/74f/60f/2f6/74f60f2f66cdad36f5cc3af082c0ef47.jpeg\" data-blurred=\"true\"></figure><h3>Какие есть новые позитивные тренды в IT </h3><p>Айтишники сейчас очень востребованы: рынок горячий, людей хантят, то есть ничего особо не поменялось. Разве что зарплаты у сеньоров подросли, потому что в первую очередь при мобилизации уезжали именно сеньоры.</p><p>В IT стало больше девочек. Они очень быстро начинают двигаться и иногда более заботливо относятся к разработке, чем парни, потому что девочки чуть более эмпатичны.</p><p>Наметилась некая блокчейн-оттепель, нет явного запрета на использование цифровых валют в России, развивается ЦФА. У нас хорошо разрабатываются финтех-продукты, это одни из самых сильных российских продуктов, которые можно вести на международку. И если наше законодательство будет двигаться в позитивную сторону, то скоро ЦФА прокачается еще больше и станет ближе к людям.</p><p>И еще одна важная вещь. Давно наблюдаю за айтишниками и в последнее время видела, что они что-то делают, а глаза уже не горят. И вот сейчас для них появились очень интересные задачи — в очень короткие сроки создать что-то новое, классное и объемное — и чтобы ничего не упало. И сейчас я вижу, что у половины из них глаза загорелись. И если не учитывать, что это в корне связано с негативными факторами, то можно рассматривать как позитивную тенденцию.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/fe4/fd3/663/fe4fd3663a97c494c9d898d42d8fb68c.jpeg\" width=\"1100\" height=\"825\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/fe4/fd3/663/fe4fd3663a97c494c9d898d42d8fb68c.jpeg\" data-blurred=\"true\"></figure><h3>Каким вы видите развитие сообщества IT-специалистов </h3><p>Сейчас важнее всего развиваться в сторону поддержки друг друга. Это стало еще актуальнее после периода удаленки, потому что человеку нужен человек: хочется поговорить, несмотря на то что айтишники — интроверты.</p><p>Примером такого классного нового сообщества можно назвать кэмп South HUB, созданный для руководителей крупных компаний. Организаторы делают там акцент на том, чтобы люди делились опытом друг с другом и при этом сохраняли баланс между отдыхом и работой. </p><h3>Какая главная победа вашей команды в прошлом году </h3><p>Основным фокусом в прошлом году был клиентский опыт, и мы сделали все, что запланировали, на 102% — несмотря на все события. В конце февральских событий я забрала себе импортозамещение телефонии, и мы за три месяца запустили импортозамещающих голосовых роботов.</p><h3>Чему вы хотели бы научиться в этом году </h3><p>Хочется научиться планировать быстро, как в 2022 году, на более длинную дистанцию — в плане того, что ты выбрал правильное решение, на правильном языке и спроектировал правильную базу данных.</p><h3>Посоветуйте три книги </h3><p>— Остервальдер «Построение бизнес-моделей».</p><p>— Сайед Мэтью «Принцип черного ящика».</p><p>— Фрэнк Герберт «Дюна», все три части.</p><h3>Три совета для тех, кто хочет стать CTO </h3><p>1. Развивайте скилы менеджера: много читайте, развивайте навыки коммуникации, подружитесь с командой, учитесь и будьте любопытными.</p><p>2. Повышайте уровень насмотренности: например, интересуйтесь, чем отличается бизнес-модель, Яндекс Такси от Убера или чем отличаются блокчейн и финтех.</p><p>3. Развивайте в себе эмпатию к клиенту.</p><blockquote><p>Если ты не будешь понимать людей, ты не сделаешь классный продукт и тебе не скажут спасибо. А если тебе не сказали спасибо, значит, ты так себе менеджер</p><p><em>– Анна Федина — СРО в направлениях МСБ, Розница и Клиентский опыт, ДОМ.РФ.</em></p></blockquote><div class=\"persona\" persona=\"true\"><img persona=\"true\" class=\"image persona__image\" src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b22/8fb/f46/b228fbf4613c703451bc78f29695e712.png\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b22/8fb/f46/b228fbf4613c703451bc78f29695e712.png\"><h5 class=\"persona__heading\" persona=\"true\">Александр Канивец </h5><p>Директор по цифровизации и организационному развитию, «Самолет»</p><h3>Чем вы занимаетесь </h3><p>Я занимаюсь организационным развитием и всем, что связано с поиском, формированием лучшей команды, ее обучением, HR-техом. И еще занимаюсь частью цифровизации в девелоперском бизнесе. Мы автоматизируем внутренние процесс компании, чтобы люди занимались больше содержательной работой, а не всякими бумажками.</p><h3>Как оцениваете ситуацию в IT-отрасли на примере вашей организации </h3><p>В целом все не так плохо: несмотря на все изменения на рынке, айтишка отлично развивается.</p><p>Оборудование есть, все стабильно работает. Технологическое развитие тоже не останавливается. И даже люди, которые уехали за рубеж, могут продолжать эффективно работать и поддерживать развитие российских технологий. </p><h3>Какие есть новые позитивные тренды в IT </h3><p>Стало больше активности у стартапов: ушли некоторые провайдеры для корпоративных решений, и компании стали обращать внимание на российские продукты. Это дает возможность большому количеству предпринимателей проще и быстрее выходить на крупного заказчика.</p><h3>Как изменились рабочие процессы и наем сотрудников </h3><p>У нас снова, почти как при ковиде, очень много удаленки. По крайней мере у нас получается работать эффективно даже в распределенных командах. Наем сотрудников стал чуть более креативным. То есть раньше можно было просто залезть в Headhunter или LinkedIn, а теперь нужно заходить через сообщество разработчиков где-нибудь за рубежом, искать локальные комьюнити или выходить в диджитал-каналы, почти маркетинговые. А еще теперь люди сами выходят на тебя, если ты сделал классный подкаст с Дмитрием Беговатовым, например (<em>слова гостя, я его не просил :)</em> )</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/bda/347/c46/bda347c46c9522bf76531a6e237098e3.jpeg\" width=\"1100\" height=\"733\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/bda/347/c46/bda347c46c9522bf76531a6e237098e3.jpeg\" data-blurred=\"true\"></figure><h3>Как массовое обучение IT-профессиям на онлайн-курсах сказалось на отрасли </h3><p>IT-специальности сейчас на хайпе, все хотят туда переучиваться из-за сокращения классических рабочих мест. Поэтому появилось большое предложение суперджуниор-позиций без реального опыта работы. Раньше этого на рынке не было в таком объеме, и оно не очень помогает, потому что доля спроса на позиции стажера небольшая. А еще выпускники таких курсов, как правило, не математики, компетенций и профильной стажировки у них все равно не хватает. Другими словами, предложение такого рода людей сильно превышает спрос на них. </p><p>С другой стороны, у людей, которые перепрофилировались, есть другой опыт, который тоже может быть релевантным. И в этом плане им лучше искать команды, где может быть применим их не айтишный опыт.</p><h3>Каким вы видите развитие сообщества IT-специалистов </h3><p>Основная задача IT-специалистов — быть ближе к бизнесу. Сейчас мы переучиваем бизнес быть IT-шником, но, может, и айтишников нужно отправлять на курсы бизнеса, учить их быть, например, строителями или маркетологами? Тогда они будут применять свои уникальные знания в создании бизнес-ценностей. Айтишник, который понимает ритейл и поработал несколько дней в магазине, может быть, напишет меньше вещей, но они будут гораздо полезнее.</p><h3>Главная победа вашей команды в 2022 году </h3><p>Наша главная победа в IT-разработке — это релиз собственной HR-платформы, который мы сделали за очень короткий срок. А вторая победа — это то, что мы смогли сохранить команду. В период турбулентности вся команда «Самолета» вовремя получала поддержку от компании. Это создавало ощущение комфорта и заботы и это то, что помогло нам показать хорошие бизнес-результаты.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/f42/ebd/859/f42ebd859b0634bfcd2f250bc98d2da9.jpeg\" width=\"1100\" height=\"733\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f42/ebd/859/f42ebd859b0634bfcd2f250bc98d2da9.jpeg\" data-blurred=\"true\"></figure><h3>Чему вы хотели бы научиться в этом году </h3><p>В этом году мы хотим соединить присущую HR человечность с умением управлять проектами, присущим бизнесу, строителям и айтишникам. То есть хотим лучше научиться одновременно дружить друг с другом, быть открытыми и очень эмпатичными и в то же время получать классные результаты в срок.</p><h3>Посоветуйте три книги </h3><p>Посмотрите что-то, что вас выведет из зоны комфорта. Если вы гуманитарий, почитайте лекции по квантовой физике Фейнмана. Там очень классный простой язык. А если вы физик, почитайте Бертрана Рассела, про историю философии. Или начните смотреть сериал на каком-нибудь языке, который вы очень плохо знаете, и попытайтесь его расшифровывать.</p><h3>Три совета для тех, кто хочет вырасти до уровня директора CTO, CPO, CMO и проч </h3><p>Чтобы дойти до C-уровня, нужно доказать, что ты можешь что-то сделать уникальное. Для этого нужно развивать свою комбинацию из таких компетенций: постановка целей, навык подбора команды и умение структурировать и контролировать задачи. </p><p>Отсюда три совета:</p><p>1. Найдите среди этих направлений свое и прокачивайте его. </p><p>2. Не бойтесь ошибок, учитесь на них.</p><p>3. Найдите, чем вам в жизни хочется заниматься, чтобы оказаться CTO там, где вы будете получать удовольствие каждый день, а не там, где вы будете страдать.</p><blockquote><p>Страдания не работают. Работают кайф и счастье.</p><p><em>– Александр Канивец — директор по цифровизации и орг развитию, «Самолет».</em></p></blockquote><div class=\"persona\" persona=\"true\"><img persona=\"true\" class=\"image persona__image\" src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e17/44d/cb3/e1744dcb3d3273a2a5bd213ecf10d5fd.png\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e17/44d/cb3/e1744dcb3d3273a2a5bd213ecf10d5fd.png\"><h5 class=\"persona__heading\" persona=\"true\">Вадим Гуров</h5><p>Технический директор соцсети «Одноклассники», VK</p><h3>Чем вы сейчас занимаетесь </h3><p>Мы проводим большие изменения в структуре технической и продуктовой команд. Усиливаем взаимодействие между ними, но в то же время растим автономность продукта и разработки там, где это необходимо. Формально процесс изменений уже завершен, но нужно еще много чего доработать и совершенствовать.</p><h3>Как оцениваете ситуацию в IT-отрасли на примере вашей организации </h3><p>IT потряхивает, как и все остальные отрасли, но в целом самое страшное уже позади. В прошлом году на рынке была сложная ситуация с кадрами, тяжело было искать новых людей но зато научились работать более эффективно с меньшим количеством людей.</p><p>Проблем с технологиями не ощущаем: мы используем только открытые технологии и доступы к ним не потеряли. </p><p>Поначалу были вопросы по оборудованию, но сейчас уже настроены новые логистические цепочки и мы нашли замены устройствам, к которым мы потеряли доступ. Все налаживается.</p><h3>Какие есть новые позитивные тренды в IT </h3><p>Мы стали растить собственные разработки и технологии в тех областях, где их не было. В результате постепенно появляется много новых ярких IT-компаний, которые будут выходить на внутренний рынок. Наша страна продолжит оставаться сильным игроком на рынке IT.</p><h3>Как изменились рабочие процессы и наем сотрудников </h3><p>Мы полностью ушли от привязки человека к офису и допускаем несколько режимов работы: либо ты полностью работаешь на удаленке, либо частично, либо полностью работаешь в офисе. Эффективность работы от этого никак не страдает.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/962/5b0/b6d/9625b0b6d8b82ce499a4a84e2ff65e53.jpeg\" width=\"1099\" height=\"733\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/962/5b0/b6d/9625b0b6d8b82ce499a4a84e2ff65e53.jpeg\" data-blurred=\"true\"></figure><p>В найме почти все интервью мы проводим удаленно, в каком городе находится сотрудник – сейчас уже неважно.</p><p>Для повышения эффективности мы стараемся создавать у коллег как можно меньше переключений контекста, и для этого идем в сторону большей специализации: нанимаем меньше фулстек-разработчиков и больше узких специалистов, а дальше для продуктовой разработки настраиваем правильную стыковку разных людей. Это как раз те новые процессы, которые мы сейчас внедряем – так и должно работать в современной IT-компании. </p><h3>Как массовое обучение IT-профессиям на онлайн-курсах сказалось на отрасли </h3><p>У нас нет сотрудников, которые устроились к нам после таких курсов. Хороший разработчик на COBOL еще может переквалифицироваться на разработчика на Java, такого рода подход я приветствую. Но превратить на курсах гуманитария в программиста невозможно.</p><p>Я скорее верю в курсы повышения или изменения квалификации. Но если человек хочет кардинально сменить профессию, должно пройти существенное время обучения – не несколько месяцев, а год или даже лучше два года.</p><h3>Судя по активному запуску новых проектов, росту аудитории российских соцсетей, VK сейчас легче всех на рынке. Как все обстоит на самом деле? </h3><p>Насколько нам легче остальных – сложно судить, работы у нас очень много. Действительно, с прошлого года пользовательская база наших сервисов растет, в частности в ОК мы уверенно прирастаем и по регистрации новых пользователей, и по проводимому времени в соцсети. Зпускаем новые сервисы, которые успешно стартуют и набирают пользовательскую базу. Это хорошо.</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/97e/ee8/1ef/97eee81ef1420fe1512c2b7501bc9942.jpeg\" width=\"400\" height=\"600\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/97e/ee8/1ef/97eee81ef1420fe1512c2b7501bc9942.jpeg\" data-blurred=\"true\"></figure><p>Обратная сторона медали очень простая. Чтобы это удовлетворяло пользовательский спрос и надежно работало, нужно вкладываться в инфраструктуру, эксплуатацию и в инцидент-менеджмент. А второе — нужно вкладываться в продуктовую составляющую. А продуктовая составляющая — это не только продакт-менеджеры, которые генерируют гипотезы, но также аналитики, которые работают с большими данными. Это значит, нужно хранить огромные объемы пользовательской активности, изучать их, генерировать гипотезы, которые потом нужно кодить и проверять на пользователях. Это все большая, сложная, но интересная работа.</p><h3>Каким вы видите развитие сообщества IT-специалистов </h3><p>Нам нужно развивать два вектора:</p><p>— Популяризировать IT-профессии среди молодежи. Сейчас из институтов выпускается довольно мало IT-специалистов, их нужно больше. Возможно, стоит пересмотреть программы обучения, делать больший акцент на практических навыках программирования.</p><p>— Надо развивать IT-предпринимательство. Сейчас в стране всё еще мало интересных IT-проектов и IT-предпринимателей. А это люди, которые будут придумывать и тащить проекты, создавать рабочие места для айтишников.</p><h3>Главная победа вашей команды в 2022 году </h3><p>В конце 2022 года мы сделали большое обновление ленты Одноклассников – запустили новый движок рекомендаций, который позволил сразу на несколько процентов вырастить время пользователей и разнообразить ленту свежим контентом. Теперь ни один пост не теряется и все получают охваты: авторы среди подписчиков, пользователи – среди друзей.</p><h3>Чему вы хотели бы научиться в этом году </h3><p>Я бы хотел развить навык фокусировки. Работа техдиректора предполагает частое переключение контекста между задачами, а такое переключение и фокусировка на новой задаче занимает дополнительное время. Чем меньше переключений у меня было бы и чем быстрее я мог бы фокусироваться, тем больше я был бы эффективен.</p><p>Все книжки по управлению говорят, что количество переключений надо минимизировать, и желательно делать одну задачу в день. Но не всегда это удается.</p><h3>Посоветуйте три книги или фильма </h3><p>— Питер Тиль «От нуля к единице». В ней много неожиданной информации.</p><p>— Ли Якокка «Карьера менеджера». Про создание автомобиля Ford Mustang.</p><p>— Сериал «Большая секунда», это наш новый Рязанов.</p><h3>Три совета CTO и тем, кто хочет ими стать </h3><p>1. Подумайте, хотите ли вы быть именно CTO. Важно понимать, что техдиректор – это не тот, кто лучше всех кодит, это технический менеджер, задача которого — видеть будущее.</p><p>2. Качайте софт-скиллы, особенно скиллы, связанные с переговорами.</p><p>3. Прокачивайте основную функцию CTO — стратегическое планирование и видение будущего. Внимательно следите за трендами.</p><blockquote><p>Учитесь отделять хайп от тренда, чтобы не упустить нужный момент и вскочить в правильный трендовый поезд. Не перескакивайте постоянно в хайповые поезда, которые в итоге останавливаются.</p><p><em>– Вадим Гуров — технический директор «Одноклассников».</em></p></blockquote><p>Напоследок… Хочу поблагодарить читателей за внимание! Не только словами – но и рассказать о возможности встретиться со всеми моими гостями из подкаста и задать им свои вопросы о развитии карьеры в IT. Это можно сделать на кэмпе South HUB с 12 по 16 июня, где они будут выступать как спикеры.</p><hr><p>Если вам понравилась статья, буду рад вашей подписке на мой подкаст <a href=\"https://startupsecrets.ru/\" rel=\"noopener noreferrer nofollow\">«Стартап-секреты»</a> на любой удобной площадке. Сам выпуск с гостями можно послушать <a href=\"https://startupsecrets.ru/nastoyashchee-i-budushchee-it-v-rossii-kakim-ego-vidyat-direktora-iz-vk-dom-rf-i-gk-samolet/\" rel=\"noopener noreferrer nofollow\">здесь</a>.</p><p></p>', 2, '2023-06-12 21:56:07', 740914, 82, '/ru/articles/740602/', 'Последние месяцы новости о применении генеративных нейросетей выходят по несколько штук в день. Но мнения о нейросетях кардинально расходятся даже у известных профессионалов в этой области. Франсуа Шолле еще в 2019 писал о третьей зиме искусственного интеллекта, как и MMC Ventures в своих отчётах. Илон Маск писал о неминуемой технологической сингулярности, которая может случиться со дня на день. Питер Тиль наоборот предлагает использовать LLM для военных действий. А известный исследователь ИИ и автор книги «Гарри Поттер и методы рационального мышления» Элиезер Юдковский, словно глашатай Судного дня, призывает бомбить несанкционированные датацентры ядерным оружием.Фантасты и футурологи прошлого века мечтали, что роботы возьмут на себя всю грязную и тяжёлую работу, оставив людям творчество. Но теперь сформулированный еще в 80-е годы парадокс Моравека полностью подтвердился: началось наступление на творческие профессии. Художники, писатели, актёры, певцы, дизайнеры, программисты, управленцы, переводчики, рекрутеры могут быть заменены искусственным интеллектом.Нейросети уже создают немыслимое количество контента. Положительные области применения нейросетей задвинуты в угол (например, преобразование информации из одного домена в другой: перевод текста, распознавание текста на изображениях, преобразование текста в речь или же речи в текст). А свидетели искусственного интеллекта уже стучат в вашу дверь. Ситуацию, в которой мы все оказались, хотелось бы рассмотреть поближе.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(164, 'Обесценивание информации', '<figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/73f/007/d2e/73f007d2e2ce62b67f115c5a35cda90f.png\" width=\"2061\" height=\"1219\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/73f/007/d2e/73f007d2e2ce62b67f115c5a35cda90f.png\"></figure><p>Последние месяцы новости о применении генеративных нейросетей выходят по несколько штук в день. Но мнения о нейросетях кардинально расходятся даже у известных профессионалов в этой области. Франсуа Шолле еще в 2019 писал о третьей зиме искусственного интеллекта, как и MMC Ventures в своих <a href=\"https://vc.ru/finance/60465-mmc-40-evropeyskih-startapov-v-sfere-ii-pochti-ne-ispolzuyut-etu-tehnologiyu-no-privlekayut-na-15-bolshe-deneg\" rel=\"noopener noreferrer nofollow\"><u>отчётах</u></a>. Илон Маск писал о неминуемой технологической сингулярности, которая может случиться <a href=\"https://mediabrest.by/news/mneniya/ilon-mask-obyasnyaet-kakoy-risk-tait-v-sebe-nereguliruemoe-razvitie-ii\" rel=\"noopener noreferrer nofollow\"><u>со дня на день</u></a>. Питер Тиль наоборот предлагает использовать LLM для <a href=\"https://www.vice.com/en/article/qjvb4x/palantir-demos-ai-to-fight-wars-but-says-it-will-be-totally-ethical-dont-worry-about-it\" rel=\"noopener noreferrer nofollow\"><u>военных действий</u></a>. А известный исследователь ИИ и автор книги «Гарри Поттер и методы рационального мышления» Элиезер Юдковский, словно глашатай Судного дня, призывает бомбить несанкционированные датацентры <a href=\"https://time.com/6266923/ai-eliezer-yudkowsky-open-letter-not-enough/\" rel=\"noopener noreferrer nofollow\"><u>ядерным оружием</u></a>.</p><p>Фантасты и футурологи прошлого века мечтали, что роботы возьмут на себя всю грязную и тяжёлую работу, оставив людям творчество. Но теперь сформулированный еще в 80-е годы <a href=\"https://ru.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B0%D0%B4%D0%BE%D0%BA%D1%81_%D0%9C%D0%BE%D1%80%D0%B0%D0%B2%D0%B5%D0%BA%D0%B0\" rel=\"noopener noreferrer nofollow\"><u>парадокс Моравека</u></a> полностью подтвердился: <strong>началось наступление на творческие профессии.</strong> Художники, писатели, актёры, певцы, дизайнеры, программисты, управленцы, переводчики, рекрутеры могут быть заменены искусственным интеллектом.</p><p>Нейросети уже создают немыслимое количество контента. Положительные области применения нейросетей задвинуты в угол (например, преобразование информации из одного домена в другой: перевод текста, распознавание текста на изображениях, преобразование текста в речь или же речи в текст). А свидетели искусственного интеллекта уже стучат в вашу дверь. Ситуацию, в которой мы все оказались, хотелось бы рассмотреть поближе.</p><h2>Да кто такой этот ваш ChatGPT?</h2><p>Начнём с общего (не)понимания контекста. Наше представление об ИИ в основном сформировано исследованиями советской школы. Под искусственным интеллектом понимается именно полноценно мыслящий интеллект. В американской школе AI — это программа, которая может выполнять одну из функций человека. Например, читать или смотреть. Мыслящий ИИ в США называется AGI — искусственный интеллект общего назначения. Откровенно говоря, человечеству до него <a href=\"https://twitter.com/ylecun/status/1655609954445717506\" rel=\"noopener noreferrer nofollow\"><u>ещё много лет</u></a> исследований и разработок.</p><h4>ChatGPT:</h4><p>1. Generative Pretrained Transformers (GPT) — трансформеры, особая архитектура нейросети, которая может обучаться на сверхбольших <a href=\"https://ru.wikipedia.org/wiki/%D0%9A%D0%BE%D1%80%D0%BF%D1%83%D1%81_%D1%82%D0%B5%D0%BA%D1%81%D1%82%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"><u>корпусах</u></a> неразмеченных данных для генерации текстов. <strong>Модель учится максимально хорошо предсказывать следующее слово в предложении (но не более того).</strong></p><p>2. Reinforcement Learning from Human Feedback (RLHF) — обучение с подкреплением на основе пользовательской обратной связи. Обучение с подкреплением — это самая понятная концепция:<strong> мы назначаем нейросети «награду» за правильный результат и «наказание» за неправильный. </strong>Таким способом модель обучается выполнять правильные действия. В случае ChatGPT размер награды назначает человек, отмечая, насколько текст кажется ему правильным.</p><p>Из описания архитектуры и <a href=\"https://habr.com/ru/articles/730990/\" rel=\"noopener noreferrer nofollow\"><u>принципа работы ChatGPT</u></a> можно выделить следующие вещи: </p><ul><li><p>нейросеть обучается на сверхбольшом корпусе текстов;</p></li><li><p>учится выдавать некий усреднённый ответ, исходя из изученных данных, добавляя к результату немного энтропии. </p></li></ul><p>Причём сеть обучена так, чтобы<strong> текст казался правильным и нравился человеку с субъективным восприятием прочитанного. На выходе получается красивый и грамматически выверенный усреднённый ответ.</strong> OpenAI утверждает, что по специфическим темам модель обучали профильные специалисты. Хотя основной корпус ответов обрабатывали <a href=\"https://time.com/6247678/openai-chatgpt-kenya-workers/\" rel=\"noopener noreferrer nofollow\"><u>разметчики из Африки</u></a> с зарплатой 2$ в час.</p><h4>Midjourney / Stable Diffusion:</h4><p>1. Diffusion Model — модель вначале смотрит, как исходные изображения превращаются в шум, а затем <strong>учится восстанавливать изображения из гауссовского шума</strong>. Если провести эту операцию много раз с текстовыми подсказками, то модель научится восстанавливать усреднённое изображение, соответствующее конкретному текстовому описанию.</p><p>2. Contrastive Language-Image Pre-Training (CLIP) — нейросеть, которая <strong>обучена связывать между собой изображение и текстовое описание</strong>, чтобы по текстовому описанию можно было найти максимально близкое изображение.</p><p>И опять нейросеть создаёт некое усреднённое изображение по текстовому описанию. <strong>Сеть обучается усреднению на сверхбольшом наборе доступных в интернете работ популярных художников. </strong>Связь между изображением и описанием создаётся людьми с субъективным восприятием увиденного.</p><p>Всё это сильно напоминает знаменитую «<a href=\"https://ru.wikipedia.org/wiki/%D0%9A%D0%B8%D1%82%D0%B0%D0%B9%D1%81%D0%BA%D0%B0%D1%8F_%D0%BA%D0%BE%D0%BC%D0%BD%D0%B0%D1%82%D0%B0\" rel=\"noopener noreferrer nofollow\"><u>китайскую комнату</u></a>», это неплохо и даже полезно. Но у всего есть границы применимости, выход за которые даёт <strong>абсолютно непредсказуемый результат</strong>. Нейросеть обучалась давать пользователям не правильный, а приятный ответ, и <a href=\"https://twitter.com/ylecun/status/1625118108082995203\" rel=\"noopener noreferrer nofollow\"><u>использовать её нужно именно для этого</u></a>.</p><h2>Информация</h2><p>Люди хотят получать не просто информацию, а новую информацию. Заходя в интернет-магазин, они хотят узнать информацию о конкретных ботинках, а не об усреднённо-абстрактных: почитать о материале подошвы, посмотреть фото. Остальной текст служит для связи информации между собой. <strong>И когда информации вокруг становится слишком много, люди хотят получать максимально сжатые сведения.</strong></p><p>В теории информации чётко разделяют данные и информацию. Например, <a href=\"https://ru.wikipedia.org/wiki/%D0%A8%D0%B5%D0%BD%D0%BD%D0%BE%D0%BD,_%D0%9A%D0%BB%D0%BE%D0%B4\" rel=\"noopener noreferrer nofollow\"><u>Клод Шеннон</u></a> определяет информацию как «уменьшение неопределённости знаний». Иначе говоря, насколько полученные данные являются <strong>новыми для субъекта.</strong></p><p>Согласно этому, средние данные — это если прочитал описание ботинок, сгенерированное нейросетью, то прочитал все такие описания. Если посмотрел достаточно изображений, нарисованных нейросетью, то видел их все. <strong>Интерес вызывает только нечто новое, привнесённое человеком.</strong> Но нейросети генерируют данные очень быстро, тысячи и десятки тысяч изображений в секунду, в которых информация, привнесённая человеком, крайне мала. <strong>Повсеместное внедрение генеративных нейросетей ведёт к стремительному обесцениванию информации.</strong> Никто не прочитает описания товаров, если 95% из них будут написаны нейросетью. К изображениям, нарисованным нейросетью, будут относиться, как к стоковым картинкам из фотобанка. Все будут вставлять их потому, что так написано в правилах дизайна, но никто из пользователей не будет на них смотреть. Книги, написанные нейросетями, <a href=\"https://www.theregister.com/2023/05/22/ai_in_brief/\" rel=\"noopener noreferrer nofollow\"><u>никто не будет читать</u></a>. Дополнительно это будет усугубляться информационным шумом и галлюцинациями нейросетей. Очень сложно будет понять, насколько правдив прочитанный текст.</p><p><strong>Но корпорации это не останавливает</strong>, как не остановили жалобы клиентов на ранние чат-боты, поставленные на замену первой линии техподдержки. Уже лавиной хлынули сообщения о применении нейросетей для «автоматизации» работы:</p><p>Microsoft внедряет ChatGPT в <a href=\"https://habr.com/ru/news/731672/\" rel=\"noopener noreferrer nofollow\"><u>систему управления задачами</u></a> для повышения «вовлечённости» сотрудников. Генерируя фактически бесполезные задания вместо настоящей работы. Геймификация на новый лад: «подключите 5 новых клиентов», «ответьте на 5 электронных писем», «изучите корпоративный регламент».</p><p>Компания «Подбор» собирается рассылать своим соискателям работы <a href=\"https://habr.com/ru/articles/730446/\" rel=\"noopener noreferrer nofollow\"><u>сгенерированные письма</u></a>. Британская Octopus Energy <a href=\"https://habr.com/ru/news/734398/\" rel=\"noopener noreferrer nofollow\"><u>уже использует</u></a> ChatGPT для общения с клиентами через электронную почту. Обе компании результат оценивают положительно. Клиенты остались довольны, потому что нейросеть натренирована писать тексты, которые нравятся(!) людям.</p><p>«Fix Price» собирается генерировать <a href=\"https://habr.com/ru/companies/fix_price/articles/730334/\" rel=\"noopener noreferrer nofollow\"><u>описания вакансий и описания товаров</u></a>. Маркетологи <a href=\"https://pro.rbc.ru/demo/6447cfb29a7947803c7e9540\" rel=\"noopener noreferrer nofollow\"><u>предлагают</u></a> генерировать карточки товаров и описания к ним на OZON и Wildberries. В обоих случаях полезную информацию вносит человек, прося нейросеть учесть её при генерации. То есть нейросеть генерирует заполнитель между важной информацией, заваливая клиентов бесполезными словами и картинками.</p><p>DoccGTP — <a href=\"https://habr.com/ru/articles/728016/\" rel=\"noopener noreferrer nofollow\"><u>автоматическое комментирование кода на Swift</u></a>, что уже на грани. Смысл комментариев в коде — указание на важную и неявную особенность.  Нет <a href=\"https://abstrusegoose.com/432\" rel=\"noopener noreferrer nofollow\"><u>никакого смысла</u></a> документировать каждую строчку, размывая внимание разработчика.</p><p>Robusta смотрит на ошибки в системе логирования и <a href=\"https://habr.com/ru/companies/southbridge/articles/731560/\" rel=\"noopener noreferrer nofollow\"><u>даёт рекомендации по их устранению</u></a>. Знания нейросети<strong> ограничены 2021 годом</strong>, и она не сможет подстраиваться под стремительно переписываемый Kubernetes. Вполне вероятно, что ситуацию спасёт <a href=\"https://techcrunch.com/2023/03/23/openai-connects-chatgpt-to-the-internet/\" rel=\"noopener noreferrer nofollow\"><u>плагин</u></a> для доступа в интернет. Но и тогда нейросеть будет просто гуглить за сотрудника и пересказывать <strong>чужие</strong> и, возможно, <strong>ошибочные</strong> рекомендации своими словами с шансом галлюцинации. </p><p>Spotify удалила десятки тысяч треков, <a href=\"https://habr.com/ru/news/734262/\" rel=\"noopener noreferrer nofollow\"><u>сгенерированных ИИ</u></a>, из-за <strong>накрутки</strong> прослушиваний ботами для получения денежного вознаграждения. Как в этом хаосе из сгенерированной бессмыслицы пробиться начинающему таланту? </p><p>BuzzFeed <a href=\"https://www.gazeta.ru/tech/news/2023/01/30/19618309.shtml\" rel=\"noopener noreferrer nofollow\"><u>заменяет</u></a> 180 человек на ChatGPT для написания новостей. А главный редактор РБК только <a href=\"https://www.rbc.ru/opinions/technology_and_media/28/04/2023/644b8dbb9a79477bc779ce1d\" rel=\"noopener noreferrer nofollow\"><u>пробует на вкус</u></a>. Для читателей нет ничего лучше новостей, разбавленных водой от галлюцинирующих нейросетей.</p><h2>Дипфейки</h2><p>Дипфейки можно отнести к отдельной категории информационного шума. <a href=\"https://vall-e.io/\" rel=\"noopener noreferrer nofollow\"><u>Имитация голоса</u></a> и манеры речи, <a href=\"https://techcrunch.com/2023/05/10/universal-translator-dubs-and-lip-syncs-speakers-but-google-warns-against-misuse/\" rel=\"noopener noreferrer nofollow\"><u>синхронизация движения губ</u></a> уже может наделать немало шуму, многократно искажая исходное послание. Современные нейросети пока не позволяют быстро изготавливать достаточно достоверный контент. Но часто этого и не нужно, даже плохо сгенерированный взрыв в Пентагоне <a href=\"https://www.mk.ru/incident/2023/05/23/vzryv-ryadom-s-pentagonom-okazalsya-feykom-foto-sgenerirovala-neyroset.html\" rel=\"noopener noreferrer nofollow\"><u>способен обвалить фондовую биржу</u></a>. А до распространения по сети фейкового видеоконтента с политиками и лидерами общественного мнения осталось не так много времени. Тем более, что <strong>на волне популярности многие из них сами используют генеративные нейросети для создания контента.</strong></p><h2>Философская телега</h2><p>Способ обучения и использования нейросетей напоминает концепцию известного французского философа <a href=\"https://ru.wikipedia.org/wiki/%D0%94%D0%B5%D1%80%D1%80%D0%B8%D0%B4%D0%B0,_%D0%96%D0%B0%D0%BA\" rel=\"noopener noreferrer nofollow\"><u>Жака Дерриды</u></a> «Мир как текст». В век информации любая личность сформирована, по большей части, из прочитанных текстов. И восприятие реальности для субъектов искажается текстами, что порождает новые субъективные тексты. Например, Илья Суцкевер напрямую <a href=\"https://www.youtube.com/watch?v=SjhIlw3Iffs\" rel=\"noopener noreferrer nofollow\"><u>заявляет</u></a>, что <strong>при достаточно большой и всеобъемлющей выборке возможность нейросетей просто предсказывать следующее слово в предложении должна привести к очень подробному пониманию мира</strong>. Другими словами: нейросеть, прочитавшая достаточное количество текстов, сможет понять все грани реального мира. </p><p>Вот только человек проверяет полученные знания, взаимодействуя с материальным миром. Может подвергнуть сомнению любую информацию, пройдя до материального первоисточника. Отринуть субъективные выводы автора и выработать собственные. Нейросеть такой возможности лишена изначально. Более того, RLHF, петля обратной связи на этапе дообучения, приносит ещё больше субъективного взгляда разметчиков, которые могут не обладать обширными знаниями. Среднее мнение по субъективным текстам не обязано коррелировать с материальным миром. Если количество текстов, оправдывающих теорию плоской земли, станет б<strong>о</strong>льшим, чем количество опровергающих, то теория плоской земли вполне может встать рядом с научными теориями. Благо, текстам из википедии можно добавить побольше веса.</p><h2>Так что же, нас всех уволят?</h2><p>Обязательно уволят. Когда-нибудь.</p><p><strong>Мировая экономика входит в очередной виток всеобщего </strong><a href=\"https://www.bloomberg.com/news/articles/2022-12-26/world-economy-is-headed-for-a-recession-in-2023-researcher-says?leadSource=uverify%20wall\" rel=\"noopener noreferrer nofollow\"><strong><u>кризиса</u></strong></a><strong>, во время которого урезать затраты на ФОТ — единственный способ обеспечить рост прибыли. </strong>Первой волной пошли <a href=\"https://www.trueup.io/layoffs\" rel=\"noopener noreferrer nofollow\"><u>работники проектов</u></a>, находящихся на грани самоокупаемости и ниже. Второй волной пойдут работники, которых хоть как-то можно заменить ИИ, только создав видимость их работы. IBM уже <a href=\"https://www.rbc.ru/technology_and_media/02/05/2023/6450c7ed9a794773c152d6f5\" rel=\"noopener noreferrer nofollow\"><u>приостановила найм</u></a> на 8 тысяч позиций.</p><p>Выдаваемый нейросетью текст на первый взгляд не отличается от текста копирайтера, а сгенерированные изображения побеждают в конкурсах <a href=\"https://habr.com/ru/news/685806/\" rel=\"noopener noreferrer nofollow\"><u>художников</u></a> и <a href=\"https://habr.com/ru/news/729670/\" rel=\"noopener noreferrer nofollow\"><u>фотографов</u></a>. И кого остановит отсутствие информации, когда техподдержку первой линии заменяли чат-ботами первого поколения? Пользователи до сих пор жалуются, что чат-боты не помогают решить проблему. «Лайфхаки», как выйти на оператора, востребованы у аудитории. Поэтому увольнять будут, несмотря на падение работоспособности даже в <a href=\"https://www.businessinsider.com/elon-musk-chops-twitter-down-1000-employees-2023-5\" rel=\"noopener noreferrer nofollow\"><u>ближайшей перспективе</u></a>.</p><p>Пользователи сети начали страдать от избыточного информационного шума ещё до появления нейросетей.<strong> Умение искать достоверную информацию превратилось в необходимый навык. Но в ближайшие годы нас ждёт стремительное обесценивание информации. </strong>По крайней мере, с таким <a href=\"https://www.engadget.com/godfather-of-ai-leaves-google-amid-ethical-concerns-152451800.html\" rel=\"noopener noreferrer nofollow\"><u>заявлением</u></a> Джеффри Хинтон уволился из Google. Ящик Пандоры уже не закрыть. <a href=\"https://openai.com/blog/new-ai-classifier-for-indicating-ai-written-text\" rel=\"noopener noreferrer nofollow\"><u>Нейросетевые системы фильтрации</u></a><s>контента</s> петабайт мусора уже на подходе. Массовые сокращения работников под прикрытием внедрения ИИ только начались. А тысячи «волшебников» от мира IT спешат продать AI для собак, для дорожных работников, для выбора цвета штанов. </p>', 1, '2023-06-12 21:56:08', 127128, 82, '/ru/articles/740598/', 'В новом выпуске подкаста «Из бэклога» поговорили о том, как культура достигаторства мешает нам слышать себя, насколько понимание своей психики влияет на качество работы и какие практики осознанности помогают избавиться от информационного шума. Гостья выпуска — директор департамента дизайна сервисов VK Саша Ермоленко.'),
(165, 'Мягкость – сестра таланта: soft skills как важнейшая точка роста специалиста', '<p>Представьте, вы проснулись в 2045 году, ваш голосовой помощник на основе ИИ напомнил о предстоящем собеседовании в Первом Межпланетном Банке, рассказал, что проанализировал все отзывы о работодателе, изучил психологический портрет вашего потенциального руководителя и взял в учет еще 128 показателей, и, как оказалось, получение крутого оффера зависит на 41,74239321% от 20-и софт скиллов. Опа, думаете вы, закрывая свою любимую книгу Марти Лэйни \"Преимущества интровертов\"… Как-то обидно, что в 2023 году вам не попалась ни одна статья на тему важности саморазвития не только в мире репликаций и шардинга, но и по части общения с командой таких же неисправимых айтишников.</p><figure class=\"bordered full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/a41/8fb/825/a418fb825cc5870e0d07ff369ca7b1a5.jpg\" width=\"1500\" height=\"838\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a41/8fb/825/a418fb825cc5870e0d07ff369ca7b1a5.jpg\" data-blurred=\"true\"></figure><p>Меня зовут Вера, я HR в компании Quillis. И я хочу обезопасить вас от такого неприятного происшествия. Для этого мне нужно рассказать вам о некоторых перспективных навыках группы \"soft skills\" и поделиться рекомендациями, как их можно развить. </p><p>Считаю тему важной, поскольку развитые мягкие навыки уже сейчас помогают адаптироваться к происходящим изменениям и быть успешным в условиях быстро меняющихся требований, и этот тренд будет неумолимо расти. Однако, говорить, что \"софты\" просто \"полезны\" для IT-специалиста, это тоже небольшое лукавство, ведь мало кто заметил, как безобидная рекомендация уже почти превратилась в \"монстра\" с названием \"Требование\". Ведь очень сложно представить <strong>эффективную </strong>продуктовую команду, которая не способна взаимодействовать и договариваться, управлять задачами и сроками, принимать ответственность за свои действия и решения.</p><p>Кроме того, практикуя найм сотрудников, периодически сталкиваюсь с тем, что технически компетентный специалист не всегда может презентовать свои результаты и навыки, что может влиять на исход собеседования. Также, некоторые сотрудники могут испытывать затруднения в период адаптации на новом месте, например, потому, что имеют сложности в коммуникации. Поэтому хочу поделиться опытом и рекомендациями, запасайтесь, пожалуйста, чаем и вкусняшками, потому что информации будет много.</p><p>Мир подобно скоростному поезду несется вперед с такой большой и трудновоспринимаемой скоростью, что пассажиры тревожатся, что рано или поздно контроллеры этого поезда высадят кого-то после первой же невинной ошибки или из-за \"непоспевания\" за постоянными прогрессом, изменениями и развитием. Появилась даже специальная трактовка новой реальности – <strong>BANI-мир (brittle, anxious, non-linear, incomprehensible)</strong>, которую придумал Джамаис Кашо. И вот некоторые из рекомендаций, к которым автор сводит свою модель сегодняшнего мира:</p><ul><li><p>Необходимо ослабить тревогу и беспокойство по поводу будущего. В этом поможет сопереживание \"в моменте\" и внимательность к настоящему.</p></li><li><p>Необходима большая прозрачность и задействование интуиции.</p></li></ul><p>А это значит, что для того, чтобы быстро адаптироваться к изменениям, быть успешным в новой реальности, и в условиях быстро меняющихся требований, потребуется развивать мягкие навыки. </p><p> Переходим к делу! Давайте сегодня разберем следующие важнейшие компетенции:</p><ul><li><p>Управление изменениями;</p></li><li><p>Критическое мышление.   </p></li></ul><h2>Начнем с управления изменениями</h2><p>Управление изменениями – это процесс, который помогает компаниям планировать, разрабатывать, внедрять и оценивать изменения, которые станут необходимыми в будущем. Важно обеспечить плавный переход от старой практики к новой, без значительных нарушений бизнес-процессов.</p><p>Для IT-специалистов важно оперативно адаптироваться к изменениям: уметь анализировать новые требования бизнеса, технологические изменения в сжатые сроки, быть готовыми использовать/внедрять новые инструменты и технологии, а также оценивать воздействие изменений на бизнес-процессы компании.</p><p>Изменения в технологических процессах происходят довольно часто, поэтому умение адекватно реагировать на них, управлять процессом внедрения изменений, обеспечивать стабильность систем, инфраструктуры, даже в условиях неопределенности, является важным условием для успешной деятельности IT-специалиста.</p><p>Нередкая практика, когда в ходе разработки меняются требования к продукту, что может влиять на его функциональность, качество, совместимость с другими системами. Наличие данного навыка позволит оценить влияние этих изменений на продукт, а также предложить альтернативные планы, чтобы снизить риск возможных негативных последствий.</p><blockquote><p><em>От бизнеса поступил запрос реализовать решение, которое будет находить потенциальных клиентов на b2b маркетплейсах через парсинг объявлений. Однако, при проверке данной гипотезы были получены  неудовлетворительные результаты, по ряду причин: объявления с разных площадок имеют различные форматы, не все маркетплейсы имели API для взаимодействия с ними в требуемом режиме, полнотекстовый поиск по объявлениям, зачастую, выдавал нерелевантные результаты. </em></p><p><em>В качестве альтернативы обсуждалось решение, представляющее собой интерфейс маркетолога для  выполнения поисковых запросов по аналогии с интернет-поисковиками, однако, оценка затрат на реализацию данного варианта оказалось слишком велика. </em></p><p><em>В конечном счёте, соизмерив желание с возможностями, задача трансформировалась: бизнесу было предложено решение анализировать торговый оборот компаний, путем анализа информации из платных источников данных и таможенной статистики, поскольку среди описаний товаров можно найти те, производители которых, потенциально интересны бизнесу в качестве клиентов (содержат определённые ключевые фразы). Был выполнен выбор наиболее полных источников данных, для получения описания продукции, а затем, реализован поиск с применением методов ML. </em></p><p><em>Несмотря на изменение изначальной постановки требований, конечная цель бизнеса была достигнута, благодаря оперативному и корректному управлению изменениями командой исполнителей. </em></p></blockquote><p><strong>Моделей управления изменений много, одна из них ADKAR</strong></p><p>Изменения вызывают, зачастую, отрицательные реакции и процесс внедрения сопровождается сопротивлением со стороны сотрудников, поэтому важно внедрять их постепенно, чтобы не \"сломать\" действующую систему.</p><p>Считаю важным сохранять принцип открытости – сообщать сотрудникам об изменениях, объяснять их цель, обозначать роль команды в этом процессе.</p><p>Существует более десяти моделей управления изменениями, применение которых позволит сделать этот процесс мягче. Расскажу про одну из них – модель <strong>ADKAR</strong>, автором которой является – Джеффри Хаятт. Модель универсальная – может быть применима в случае организационных изменений на уровне компании, а также в IT-проектах при реализации изменений, связанных с внедрением новых технологий, или на этапах разработки продуктов. </p><p>Согласно данному подходу, успешный результат от внедрения изменений зависит от подготовленности команды и ее понимания необходимости этих изменений. Модель включает пять этапов:</p><ul><li><p><strong>A</strong>wareness (осведомленность)</p></li><li><p><strong>D</strong>esire (желание)</p></li><li><p><strong>K</strong>nowledge (знания)</p></li><li><p><strong>A</strong>bility (способность)</p></li><li><p><strong>R</strong>einforcement (подкрепление)</p></li></ul><p>Разберем подробнее каждый из них.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/1a3/802/270/1a3802270a7ef0e55d28a1d31dfaae9c.jpg\" alt=\"\" title=\"\" width=\"800\" height=\"564\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/1a3/802/270/1a3802270a7ef0e55d28a1d31dfaae9c.jpg\" data-blurred=\"true\"></figure><p><strong>Awareness (осведомленность) – пусть все в команде знают, зачем на них летом надевают пуховики.</strong>   </p><p>Первично необходимо сообщить команде о цели изменений. Важно, чтобы участники процесса понимали, чем обусловлена необходимость нововведений. Если у вас новый проект на Аляске – отлично, давайте всем об этом расскажем! В случае молчаливых изменений, подозрительный дядька доставит в офис 100 пуховиков, в которые сотрудникам предлагается облачиться – это странно и вызовет, мягко говоря, встревоженный климат.</p><p><strong>Как?</strong></p><ul><li><p>Объясните причины и необходимость изменений, расскажите о возможных последствиях в случае их отсутствия;</p></li><li><p>Получите первичную обратную связь, что позволит спрогнозировать возможные риски до реализации изменений;</p></li><li><p>Расскажите об успешных примерах/практиках, чтобы стимулировать интерес к изменениям.</p></li></ul><p>По сути, вам нужно донести следующую информацию:</p><ul><li><p><strong>Зачем меняться</strong></p></li><li><p><strong>Почему сейчас</strong></p></li><li><p><strong>Что будет, если</strong></p></li></ul><p><strong>Desire (желание) – сотрудники сами попросят пуховики, если узнают, что впереди холодные времена.</strong>   </p><p>На данном этапе важно заинтересовать команду: показать, как изменения повлияют на компанию и почему изменения важны для сотрудников лично, так сказать, сформировать \"желание перемен\".  </p><p>Продвигайте идею внедрения изменений, обозначайте их необходимость и пользу для компании и сотрудников:</p><ul><li><p>Проводите презентации, встречи, рассказывайте о преимуществах нововведений;</p></li><li><p>Давайте возможность высказаться сотрудникам, обсудите мысли, опасения относительно нововведений.</p></li></ul><p><strong> </strong>Объясните сотрудникам:</p><ul><li><p>Почему, как раньше – неэффективно, или \"работать не будет\";</p></li><li><p>Какую роль они играют в процессе изменений и как изменения повлияют на них.</p></li></ul><p><strong>Knowledge (знания) – пуховики обычно несколько стесняют движения, поэтому важно научиться жить в них.</strong></p><p>Изменения подразумевают применение новых знаний, поэтому на данном этапе, важно определить, какие навыки будут актуальными и убедиться, что сотрудники обладают ими.</p><p><strong>Что делать:</strong></p><ul><li><p>Оцените знания сотрудников до начала изменений;</p></li><li><p>Разработайте программу обучения с учетом актуальных потребностей;</p></li><li><p>Контролируйте процесс обучения.</p></li></ul><p><strong>Ability (способность) – привыкнуть к тяжелой одежде лучше заранее, чтобы это не отражалось на эффективности труда, поэтому самостоятельная тренировка приветствуется.</strong></p><p>Обучение не гарантирует фактическое применение знаний, поэтому важно обеспечить сотрудников необходимыми ресурсами и инструментами для возможности формирования навыка на практике. </p><p><strong>Действия:</strong></p><ul><li><p>Помогайте и поддерживайте сотрудников, например, путем наставничества;</p></li><li><p>Оперативно реагируйте на возникающие вопросы.</p></li></ul><p><strong>Reinforcement (подкрепление) – даже после акклиматизации к суровой реальности, пуховики лучше не снимать.</strong></p><p>Может так случиться, что азарт прошел, инициаторы изменений стали менее активны в этом вопросе, и постепенно команда возвращается к прошлым методам работы. </p><p>Поэтому, даже после реализации изменений, важно поддерживать интерес команды, собирать обратную связь и оперативно реагировать на нее. Помимо этого, необходимо убедиться, что реализованные изменения приносят ожидаемый результат.</p><p><strong>Чтобы сохранить мотивацию команды:</strong></p><ul><li><p>Обеспечивайте доступность ресурсов и инструментов, необходимых для поддержки изменений;</p></li><li><p>Собирайте обратную связь;</p></li><li><p>Наблюдайте за прогрессом, разработайте метрики для оценки эффективности изменений.</p></li></ul><p>Отмечу, что при использовании данной модели (как и любой другой) важно последовательно реализовывать каждый этап, в противном случае, результат не принесет нужного эффекта.   </p><p>Данный инструмент поможет управлять процессом изменений и обеспечить эффективную адаптацию к новым условиям.</p><p><strong>Что почитать на данную тему:</strong></p><ul><li><p>Ицхак Адизес – \"Управление изменениями без потрясений и конфликтов\";</p></li><li><p>Эстер Дерби – \"Психология управления изменениями\";</p></li><li><p>Эстер Камерон, Майк Грин – \"Управление изменениями. Полное руководство по моделям, инструментам и техникам внедрения изменений в организации\".   </p></li></ul><h2>Где применить критическое мышление в IT</h2><p>Критическое мышление – это способность анализировать, оценивать достоверность и пользу информации, принимать взвешенные решения.</p><p>Ситуации, когда на задачу тратится множество часов – уже становится \"непростительной роскошью\". Наличие данного навыка позволит вам ориентироваться в технологиях, определять для них лучшее применение, а также поспособствует более быстрому и эффективному решению проблем. Прокачал критическое мышление – сэкономил время. </p><p>На самом деле, данный навык, по моему мнению, применим к любой специализации в IT. Например, вам нужно выбрать технологию для разработки продукта – критическое мышление поможет принять наилучшее обоснованное решение, учитывая не только функциональные возможности, но и скорость разработки, масштабируемость решения в будущем. </p><p>Критическое мышление полезно при разработке сложной архитектуры и ее интеграции с другими системами; при проектировании функционального и удобного интерфейса; для обнаружения уязвимостей в системе безопасности системы.        </p><p>Что происходит, если у специалиста отсутствует этот навык?</p><blockquote><p><em>У инженера данных увеличился объем входных данных для расчёта, и потребление памяти, которая используется во время расчётов. Ресурсов стало недостаточно, при сборе результатов на одной ноде для последовательной записи расчёт стал падать. Специалист пытался решить эту проблему доступными способами: попробовал перевести расчёт на параллельную запись, чтобы не исключать необходимость сбора данных на одной ноде. В результате, проблема с памятью переместилась с ноды на которой осуществлялся сбор результатов – на произвольную ноду, выполнявшую обработку данных, т. к. процесс обработки данных тоже стал требовать больше ресурсов. </em></p><p><em>В конечном счёте, для решения исходной проблемы, пришлось исключать данные логически: часть входных данных отбрасывать по бизнес-ключу, чтобы отфильтровать на входе те данные, которые бизнес не был заинтересован видеть в результирующем наборе данных. </em></p></blockquote><p><strong>Эффект Даннинга-Крюгера</strong></p><p>В моей практике были случаи, когда специалист, имея небольшой опыт работы и знаний, считает себя экспертом в данной области. Подобное явление наблюдается, как при поиске кандидатов на вакантные должности, так и среди сотрудников, неспособных объективно оценивать собственные знания.      </p><p>Есть объяснение, чем подкреплена неоправданная самоуверенность таких людей (так проявляется эффект Даннинга-Крюгера), это метакогнитивное искажение у людей с низкой квалификацией, или, простыми словами, склонность людей оценивать свои способности выше, чем они есть на самом деле. </p><p><strong>Как проявляется:</strong></p><ul><li><p>Склонность переоценивать собственные способности;</p></li><li><p>Неспособность адекватно оценивать и признавать профессионализм других.</p></li></ul><p><strong>На что это может повлиять?</strong></p><ul><li><p>Неоправданное принятие рисков и некорректных решений;</p></li><li><p>Невозможность распознать ошибки и исправить их из-за уверенности в своей компетентности, повтор этих ошибок в будущем.</p></li></ul><h2>Как развить критическое мышление?</h2><p><strong>1. Системный подход</strong></p><p>Используйте системный подход для решения задач: наличие последовательного плана процесса решения позволит проработать задачу пошагово и выявить проблемные места. Структурируйте процесс решения задачи – ознакомьтесь с требованиями, определите ожидания к результату, выработайте решение.</p><p><strong>2. Принимайте взвешенные решения</strong></p><p>Для принятия взвешенного решения важно опираться на факты и устанавливать причинно-следственные связи. При обработке информации, мозг может подсказать решение, опираясь на опыт в прошлом. Попробуйте найти новые варианты решений, чтобы сделать наилучший выбор. Формулируйте задачу разными способами, обдумывайте различные варианты развития событий, составляйте список возможных решений, даже, если они кажутся невероятными, и выбирайте наиболее подходящий вариант, учитывая \"за\" и \"против\".</p><p><strong>3. Развивайте творческое воображение</strong></p><ul><li><p>Рассматривайте рабочие и бытовые ситуации с разных точек зрения;</p></li><li><p>Используйте технику мозгового штурма для генерации нестандартных идей;</p></li><li><p>Общайтесь с разными людьми, посещайте новые места – это поможет разнообразить мышление;</p></li><li><p>Развивайте свои творческие способности: пробуйте что-то новое, не бойтесь экспериментировать.</p></li></ul><p><strong>Рекомендую к прочтению:</strong></p><ul><li><p>Том Чатфилд – \"Критическое мышление. Анализируй, сомневайся,  формируй свое мнение\";</p></li><li><p>Даниэль Канеман – \"Думай медленно… Решай быстро\";</p></li><li><p>Никита Непряхин – \"Анатомия заблуждений. Большая книга по критическому мышлению\";</p></li><li><p>Дарелл Хафф – \"Как лгать при помощи статистики\".</p></li></ul><h2>Что нужно для карьерного роста в 2045 году?</h2><p>Все больше работодателей уделяют внимание soft skills, как при найме сотрудников, так и при работе с действующей командой, хоть на сегодняшний день это и не повсеместно. Но одно можно сказать наверняка: в том самом 2045 году, когда ИИ будет готов выполнять значительно большую часть «хардов», чем сейчас, ценность сотрудников будет складываться и из того, насколько хорошо он умеет «софтить». И теперь для тех счастливчиков, кто прочитал нашу статью, это уже не сможет быть неожиданностью, а собеседование в Первом Межпланетном Банке пройдет более гладко.</p><p>Подписывайтесь, ставьте лайки, оставляйте комментарии – это тоже soft skills.</p><p></p>', 2, '2023-06-12 21:56:09', 139988, 90, '/ru/companies/quillis/articles/740542/', 'Сейчас я в активной стадии выгорания от пройденного мною пути и это закрутило меня в колесо самобичевания и ненависти. Пытаюсь выбраться.Я решил написать эту статью как попытку упорядочить движение мыслей в голове. Как возможность поделиться с теми, кто хочет стать войтишником, что тысячи слов о том, что нужно активно учиться и терпеть лишения и все обязательно получится не всегда отражают действительность. ');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(166, 'Stable vs Photoshop: сравнение генераций', '<img src=\"https://habrastorage.org/r/w780q1/getpro/habr/post_images/4f2/059/faa/4f2059faaf1197886ab49005183068cd.jpg\" alt=\"image\" data-src=\"https://habrastorage.org/getpro/habr/post_images/4f2/059/faa/4f2059faaf1197886ab49005183068cd.jpg\" data-blurred=\"true\"><br>\r\n<br>\r\nПривет, меня зовут Юля, 85GB и я веду свой <a href=\"https://t.me/neural85gb\">канал по нейронкам</a>.<br>\r\n<br>\r\nСегодня хочу обозреть и сравнить <b>плагин Stable Diffusion</b> (на базе интерфейса Automatic) для Photoshop и Generative Fill на базе <b>Adobe Firefly</b> для него же. По каждому пункту нейронки будут получать либо 1 балл, либо 0. В данном случае мне так удобнее вести счёт.<br>\r\n<br>\r\n<div class=\"spoiler\" role=\"button\" tabindex=\"0\">\n                        <b class=\"spoiler_title\">Примечание</b>\n                        <div class=\"spoiler_text\">Надеюсь, вы знаете, на каких торрентах надо скачивать все виды бесплатного ФШ, в том числе и с функцией генеративной заливки.\n                    <br>\r\nПлагин Стейбла с инструкцией лежит <a href=\"https://github.com/isekaidev/stable.art\">здесь</a>.<br>\r\n<br>\r\n<b>Содержание:</b><br>\r\n<br>\r\n1. Системные требования<br>\r\n2. Интерфейс и порог вхождения<br>\r\n3. Вариативность<br>\r\n4. Ликвидация объекта с фотографии<br>\r\n5. Добавление фона<br>\r\n6. Добавление объекта <br>\r\n7. Замена объекта <br>\r\n8. Замена фона<br>\r\n9. Txt to img <br>\r\n10. Img to img<br>\r\nВыводы<br>\r\n<br>\r\nИтак, приступим.<br>\r\n<br>\r\n<ol>\r\n<li><b>Системные требования.</b> Пожалуй, самый важный пункт, без которого нет смысла продолжать работу. Стейбл — локальный, и ему необходимо очень много видеопамяти. У меня карта на 8 гигов, и при обработке больших изображений требуется работать с малыми областями или уменьшать эти самые изображения примерно <b>до 1000 пикселей</b> по длинной стороне (а то и до 512), и это невероятный мизер, если речь идёт о качественной пикче. Скорее всего, в комментариях будут писать о том, как именно можно апскейлить через сам Стейбл, делать там текстуру и качество. Но их же можно изначально не терять, правда? <br>\r\n<br>\r\nФайрфлай обращается к облаку, не нагружает видеопамять и позволяет спокойно работать с фотками размером <b>6000х4000 пикселей</b>. Единственный минус в данном случае — при отсутствии подключения к сети Адобовская нейронка работать не будет. <br>\r\n<br>\r\n<a name=\"habracut\"></a>Скорость генерации изображения размером 512px в Стейбл Диффьюжн и Адоб Файрфлай ≈ 12 секунд. Генерация пикчи 6000px по длинной стороне в Файрфлай ≈ 20 секунд. <br>\r\n<div class=\"scrollable-table\"><table>\r\n<tbody>\r\n<tr>\r\n<th>Stable Diffusion</th>\r\n<th>Adobe Firefly</th>\r\n</tr>\r\n<tr>\r\n<td>0</td>\r\n<td>1</td>\r\n</tr>\r\n</tbody>\r\n</table></li>\r\n<li><b>Интерфейс и Порог вхождения.</b> Для тех, кто ранее не был знаком (!) со Стейбл Диффьюжн, интерфейс плагина будет непонятен. К тому же, перед установкой самого плагина нужно скачать и поставить на комп Стейбл от Automatic1111. Помимо этого, для каждого вида генерации нужна своя модель, которая при этом должна поддерживать функцию inpaint, потому что всё происходит непосредственно в ней. Эти модели нужно искать и качать отдельно. И для кого-то это безусловный плюс, но если мы всё же не будем отметать нубов типа меня, то обратим внимание на простой и понятный интерфейс Адоб Файрфлай.<br>\r\n<br>\r\n<div style=\"text-align:center;\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/971/1a8/41d/9711a841d7b272c1cdb1d46b9baaa622.jpg\" alt=\"image\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/971/1a8/41d/9711a841d7b272c1cdb1d46b9baaa622.jpg\" data-blurred=\"true\"><br>\r\n<div style=\"text-align:center;\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/ceb/df8/de7/cebdf8de7f7ff0cf4a2f1526d1b2a8fb.png\" alt=\"image\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ceb/df8/de7/cebdf8de7f7ff0cf4a2f1526d1b2a8fb.png\"><br>\r\n<div style=\"text-align:center;\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/377/e7d/47d/377e7d47d9cb8aa27f7231ec922276d1.png\" alt=\"image\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/377/e7d/47d/377e7d47d9cb8aa27f7231ec922276d1.png\"><br>\r\n— Да, вот эти крошечные окошечки являются интерфейсом генеративной заливки Файрфлай.<br>\r\n <br>\r\nРабота в обеих нейронках происходит следующим образом: выделяем объект, пишем или не пишем промпт, жмакаем Генерировать. Так как работа происходит внутри ФШ, выделить объекты можно десятком способов, в том числе и автоматически.<br>\r\n<div class=\"scrollable-table\"><table>\r\n<tbody>\r\n<tr>\r\n<th>Stable Diffusion</th>\r\n<th>Adobe Firefly</th>\r\n</tr>\r\n<tr>\r\n<td>0</td>\r\n<td>1</td>\r\n</tr>\r\n</tbody>\r\n</table></li>\r\n<li><b>Вариативность.</b> Стейбл выдаёт 4 варианта сгенерированных картинок на выбор, а Файрфлай — 3. Предел нейронки от Адоба — 50 изображений, далее надо удалить слой и начать круг генераций снова или выбрать из имеющихся вариантов. У Стабильной Диффузии формально нет предела, как и нет списка всех генераций, поскольку каждая принятая генерация (помеченная галочкой в интерфейсе) — это новый слой. В случае с генеративной заливкой Адоба все варианты находятся в свойствах ОДНОГО слоя. Обе системы по своему нагружают комп: Файрфлай провисает при пролистывании большого количества вариантов, а в случае со Стейблом приходится вычищать множество лишних слоёв. При таком раскладе оценивать очень сложно, поэтому обе нейронки получают по баллу.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/s9/hs/t0/s9hst0vsf9mcihglroh7-lgne3s.jpeg\" data-src=\"https://habrastorage.org/webt/s9/hs/t0/s9hst0vsf9mcihglroh7-lgne3s.jpeg\" data-blurred=\"true\"><br>\r\n<div class=\"scrollable-table\"><table>\r\n<tbody>\r\n<tr>\r\n<th>Stable Diffusion</th>\r\n<th>Adobe Firefly</th>\r\n</tr>\r\n<tr>\r\n<td>1</td>\r\n<td>1</td>\r\n</tr>\r\n</tbody>\r\n</table></li>\r\n<li>Наконец-то мы можем приступить к генерации. Здесь я возьму фотографию собачки, любезно предоставленную моей подписчицей (спасибо, <a href=\"https://www.instagram.com/shmai.photo/\">Нина</a>) и попробую <b>убрать её вообще</b>, не вводя никаких промптов. <br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/bn/-s/bh/bn-sbhjxcgnte8tnh-i8nsrps-e.jpeg\" data-src=\"https://habrastorage.org/webt/bn/-s/bh/bn-sbhjxcgnte8tnh-i8nsrps-e.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\nДля того чтобы реализовать автоматическую замену объекта в Стейбл, нужно на максимум выкрутить ползунок <b>Denoising Strength</b>, таким образом мы показываем нейронке, что она может фантазировать на полную. По традиции Стейбл Диффьюжн, она фантазирует голых девочек и женщин, но были также и зверушки. <br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/im/zp/-c/imzp-cudsmqd19flerkudod0mpm.jpeg\" data-src=\"https://habrastorage.org/webt/im/zp/-c/imzp-cudsmqd19flerkudod0mpm.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\nЯ выбрала птичку, потому что это самое маленькое существо в заменяемой области и потому что появилась некая трава на фоне. Самое странное в данном случае — остался контур собаки. Почему-то он Стейбл делает маску с растушёвкой, которую нужно подчищать дополнительно. С генеративной заливкой Файрфлай такого не происходит, нейронка по дефолту воспринимает собаку как лишний объект и создаёт заливку из окружения.<br>\r\n<div class=\"scrollable-table\"><table>\r\n<tbody>\r\n<tr>\r\n<th>Stable Diffusion</th>\r\n<th>Adobe Firefly</th>\r\n</tr>\r\n<tr>\r\n<td>0</td>\r\n<td>1</td>\r\n</tr>\r\n</tbody>\r\n</table></li>\r\n<li><b>Добавление фона.</b> В этом раунде я попробую догенерировать фон без промпта. И да, Стейбл так не работает, а Файрфлай справляется прекрасно. Что, впрочем, не новость, поскольку по сети уже гуляет множество догенеренных мемасиков, картин и всякого такого.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/ml/rc/zl/mlrczlgpycsrrri71_3kyfeugga.jpeg\" data-src=\"https://habrastorage.org/webt/ml/rc/zl/mlrczlgpycsrrri71_3kyfeugga.jpeg\" data-blurred=\"true\"><br>\r\n <div class=\"scrollable-table\"><table>\r\n<tbody>\r\n<tr>\r\n<th>Stable Diffusion</th>\r\n<th>Adobe Firefly</th>\r\n</tr>\r\n<tr>\r\n<td>0</td>\r\n<td>1</td>\r\n</tr>\r\n</tbody>\r\n</table></li>\r\n<li><b>Добавление объекта.</b> Здесь мы оценим добавление объекта внутрь изображения. В обоих случаях пришлось немного повозиться с промптами, чтобы получилась именно стая птиц, а не одна-две, но с размытием генеративная заливка Adobe справилась лучше. Промпт: a flock of many birds far away<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/xq/t4/ca/xqt4ca_4axvqkchn-miz5zuygcc.jpeg\" data-src=\"https://habrastorage.org/webt/xq/t4/ca/xqt4ca_4axvqkchn-miz5zuygcc.jpeg\" data-blurred=\"true\"><br>\r\n <div class=\"scrollable-table\"><table>\r\n<tbody>\r\n<tr>\r\n<th>Stable Diffusion</th>\r\n<th>Adobe Firefly</th>\r\n</tr>\r\n<tr>\r\n<td>0</td>\r\n<td>1</td>\r\n</tr>\r\n</tbody>\r\n</table></li>\r\n<li><b>Замена объекта.</b> Для начала простое — заменим то́ллера на добермана. Просто ввожу в командную строку промпт <i>doberman</i>. Для Стейбла в качестве эксперимента я прописала ещё и негативный промпт, но разницы в итоге не увидела. И это хорошо, поскольку означает, что мы можем обойтись без этого гемора, нейронка всё же ориентируется на изображение.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/tw/lo/ry/twloryaplcsnslpt9a3l9dof87k.jpeg\" data-src=\"https://habrastorage.org/webt/tw/lo/ry/twloryaplcsnslpt9a3l9dof87k.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\nЗдесь видно, что Стейбл максимально старается заполнить область новой собакой, как бы подменяя ею предыдущую, в то время как Файрфлай создаёт пса в какой-то странной позе. При этом ни одна собака не является доберманом и качество генерации сильно хромает, так что здесь у нас очередная ничья. Но не всё так просто. Нам же нужно практическое применение, правильно? Сразу оговорюсь, что обе подключеных к ФШ системы не в состоянии поправить руки, завязанные в узелок при генерации, или сгенерировать сложный фон позади человека типа концертного зала (все люди в кашу), но кое-что они всё-таки умеют.<br>\r\n<br>\r\nВы видите перед собой кусок фотографии, которую я сделала в туристическом месте, поэтому там на фоне тачка. И её надо бы убрать. В обоих случаях пришлось заморочиться с промптами, добиваясь приемлемого результата. Не могу сказать, что на 100% довольна обеими нейронками, но здесь я скорее тоже склоняюсь к ничьей.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/vm/qy/oy/vmqyoytf8gzn-emfei4qci6s3xu.jpeg\" data-src=\"https://habrastorage.org/webt/vm/qy/oy/vmqyoytf8gzn-emfei4qci6s3xu.jpeg\" data-blurred=\"true\"><br>\r\n <div class=\"scrollable-table\"><table>\r\n<tbody>\r\n<tr>\r\n<th>Stable Diffusion</th>\r\n<th>Adobe Firefly</th>\r\n</tr>\r\n<tr>\r\n<td>0</td>\r\n<td>0</td>\r\n</tr>\r\n</tbody>\r\n</table></li>\r\n<li><b>Замена фона.</b> Её я вынесла отдельно, поскольку, как выяснилось, «этодругое». Например, нейрозаливка Адоба может нативно сгенерить хорошую циклораму под объект (сохраняя при этом оригинальный размер пикчи, напоминаю). Стейбл, увы, здесь не справился, и хотя я пыталась направить его с помощью негативного промпта, то, что вы видите перед собой — это максимум, который мне удалось получить. Он принципиально не хотел делать розовый фон, обращаясь к оригинальному, сероватому. Для предметников, ящитаю, это мастхэв, когда не нужно покупать 10к фонов.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/05/y1/xi/05y1xi9ano37ifxyp0pfhex5nai.jpeg\" data-src=\"https://habrastorage.org/webt/05/y1/xi/05y1xi9ano37ifxyp0pfhex5nai.jpeg\" data-blurred=\"true\"><br>\r\n <div class=\"scrollable-table\"><table>\r\n<tbody>\r\n<tr>\r\n<th>Stable Diffusion</th>\r\n<th>Adobe Firefly</th>\r\n</tr>\r\n<tr>\r\n<td>0</td>\r\n<td>1</td>\r\n</tr>\r\n</tbody>\r\n</table></li>\r\n<li><b>Txt to Img.</b> Попробуем из пустого белого слоя воссоздать с помощью промпта аналогичную картинку с собакой. Промпт: <i>the dog is sitting on a log in a clearing, against the background of a river and a forest</i>. Негативных для стейбла здесь использовано не было<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/_v/v9/od/_vv9odo9lacuvwiwrsfnv_dkkjy.jpeg\" data-src=\"https://habrastorage.org/webt/_v/v9/od/_vv9odo9lacuvwiwrsfnv_dkkjy.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\nВ обоих случаях получилась дичь разной степени. Стейбл как будто бы лучше справился с собакой, а Файфлай — с травой. Второго можно было бы выбрать за то, какую область он заполнил, но качество генерации меня совершенно не устраивает, поэтому здесь я тоже ставлю ничью.<br>\r\n <div class=\"scrollable-table\"><table>\r\n<tbody>\r\n<tr>\r\n<th>Stable Diffusion</th>\r\n<th>Adobe Firefly</th>\r\n</tr>\r\n<tr>\r\n<td>0</td>\r\n<td>0</td>\r\n</tr>\r\n</tbody>\r\n</table></li>\r\n<li><b>Img to Img </b>— это функция Стабильной Диффузии, которая отвечает за то, чтобы превращать одно изображение в другое с максимально схожим визуалом. Но я пока не знаю, есть ли такая функция у Файрфлай, давайте проверим.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/6z/8x/z9/6z8xz98zn7x2xtzx8xkdgskij80.jpeg\" data-src=\"https://habrastorage.org/webt/6z/8x/z9/6z8xz98zn7x2xtzx8xkdgskij80.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\nОчевидно, что у нейронки Адоб нет подобного функционала и она не воспринимает подложку как нечто, что надо «улучшить», генерируя совершенно иное изображение просто под промпт, хотя и безусловно качественное. <br>\r\n<div class=\"scrollable-table\"><table>\r\n<tbody>\r\n<tr>\r\n<th>Stable Diffusion</th>\r\n<th>Adobe Firefly</th>\r\n</tr>\r\n<tr>\r\n<td>1</td>\r\n<td>0</td>\r\n</tr>\r\n</tbody>\r\n</table><br>\r\n</li>\r\n</ol><b>Выводы.</b> Начнём с оценок:<br>\r\n<div class=\"scrollable-table\"><table>\r\n<tr>\r\n<th></th>\r\n<th>Stable diffusion</th>\r\n<th>Adobe firefly</th>\r\n</tr>\r\n<tr>\r\n<th>Системные требования</th>\r\n<td>0</td>\r\n<td>1</td>\r\n</tr>\r\n<tr>\r\n<th>Интерфейс и порог вхождения</th>\r\n<td>0</td>\r\n<td>1</td>\r\n</tr>\r\n<tr>\r\n<th>Вариативность</th>\r\n<td>1</td>\r\n<td>1</td>\r\n</tr>\r\n<tr>\r\n<th>Ликвидация объекта с фотографии</th>\r\n<td>0</td>\r\n<td>1</td>\r\n</tr>\r\n<tr>\r\n<th>Добавление фона</th>\r\n<td>0</td>\r\n<td>1</td>\r\n</tr>\r\n<tr>\r\n<th>Добавление объекта</th>\r\n<td>0</td>\r\n<td>1</td>\r\n</tr>\r\n<tr>\r\n<th>Замена объекта</th>\r\n<td>0</td>\r\n<td>0</td>\r\n</tr>\r\n<tr>\r\n<th>Замена фона</th>\r\n<td>0</td>\r\n<td>1</td>\r\n</tr>\r\n<tr>\r\n<th>Txt to img</th>\r\n<td>0</td>\r\n<td>0</td>\r\n</tr>\r\n<tr>\r\n<th>Img to img</th>\r\n<td>1</td>\r\n<td>0</td>\r\n</tr>\r\n<tr>\r\n<th>Итог</th>\r\n<td>2</td>\r\n<td>7</td>\r\n</tr>\r\n</table>Штош. В данном случае очевидно, что Адоб, несмотря на недостатки, разносит Стейбл на своей территории. Могу сказать, что генеративная заливка на базе Файрфлай действительно прекрасный инструмент для фотографов и дизайнеров. Генеративная заливка отлично справится с обрезанными частями тел, зданий, простенькой заменой фона, добавлением предметов и т.д. Стейбл же в данном случае является хорошим подспорьем для художников, создавая подмалёвок или помогая в генерации с нуля каких-либо объектов вместо сбора сотни референсов. <br>\r\n<br>\r\nНадеюсь, этот обзор был полезен и поможет вам в выборе. Спасибо, что дошли до конца. Всем чмаффки, и подписывайтесь на мой <a href=\"https://t.me/neural85gb\">канал</a>.<br>\r\n<br>\r\n<a href=\"https://timeweb.cloud/vds-vps?utm_source=habr&amp;utm_medium=banner&amp;utm_campaign\"><img src=\"https://habrastorage.org/r/w780q1/webt/mx/ua/nb/mxuanbovcusqgmqdgugvpnql8vq.jpeg\" data-src=\"https://habrastorage.org/webt/mx/ua/nb/mxuanbovcusqgmqdgugvpnql8vq.jpeg\" data-blurred=\"true\"></a>', 1, '2023-06-12 21:57:06', 599821, 92, '/ru/companies/timeweb/articles/740252/', 'Привет, меня зовут Юля, 85GB и я веду свой канал по нейронкамВ этой статье я рассмотрю по различным параметрам графические нейронки: DALL-E 2, Midjourney, Stable Diffusion, Кандинский и Шедеврум. Постараюсь разложить всё максимально чётко и ёмко, дать оценку по каждому блоку от 0 до 5. А потом всё сведу в одну таблицу. Штош, поехали. Содержание (кликабельно):');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(167, 'Анатомия игры: Два с половиной измерения', '<img src=\"https://habrastorage.org/r/w780q1/getpro/habr/post_images/982/a57/f79/982a57f79ca36c43208570479ce22dd1.jpg\" data-src=\"https://habrastorage.org/getpro/habr/post_images/982/a57/f79/982a57f79ca36c43208570479ce22dd1.jpg\" data-blurred=\"true\"><br>\r\n<br>\r\nПока мой компьютер ждет своего звездного часа в ремонте, я решила поглубже закопаться в теорию игростроя.<br>\r\n<br>\r\nНа данный момент у меня два полноценных проекта с концептами, сюжетом и примитивными набросками механик, т. е. два почти законченных дизайн-документа, и еще три совсем сырых. Один из них – экшн с элементами РПГ в духе моей любимой серии игр, а второй – что-то близкое к платформеру в формате 2,5D. И когда я с кем-нибудь говорю о 2,5D, то с удивлением замечаю, что далеко не все знают, что это такое. И даже назвать игры с подобным подходом бывает непросто.<a name=\"habracut\"></a><br>\r\n<br>\r\nЭто натолкнуло меня на мысль о том, что неплохо было бы кратко осветить этот вопрос.<br>\r\n<br>\r\n<div class=\"spoiler\" role=\"button\" tabindex=\"0\">\n                        <b class=\"spoiler_title\">Примечание</b>\n                        <div class=\"spoiler_text\"><i>Пост рассчитан на тех, кто еще только знакомится с тонкостями игровой инженерии, и поэтому некоторые понятия специально подаются утрировано для понимания сути процесса.<br>\r\n<br>\r\nВ тексте будет много упоминаний программ, сайтов и сервисов, а также игр и разработчиков игр. Не сочтите это за рекламу. <br>\r\n<br>\r\nТакже в тексте будут встречаться скриншоты, схемы строения, рендеры моделей и текстуры из различных игр. Это иллюстративный материал, приведенный в качестве примера. Все права на модели и их текстуры из игр принадлежат разработчикам и издателям этих игр.</i><br>\r\n\n                    <br>\r\n<font color=\"#32CD\"><h3>▎2D и 3D</h3></font> <br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/6ae/a06/811/6aea068116a4989429a4d3157466fcb3.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/6ae/a06/811/6aea068116a4989429a4d3157466fcb3.png\"><br>\r\n<font color=\"#999999\"><i>Крышка амулета-мимика в 2D и 3D (мое)</i></font><br>\r\n<br>\r\nКак выглядят 3D-игры, мы с вами прекрасно знаем. Подавляющее большинство ААА-проектов сейчас именно 3D-игры.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/38c/700/5f3/38c7005f3e376ea485589947c2206dbc.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/38c/700/5f3/38c7005f3e376ea485589947c2206dbc.png\"><br>\r\n<font color=\"#999999\"><i>Упрощенная схема трехмерного пространства <a href=\"https://www.syl.ru/article/225252/new_trehmernoe-prostranstvo-vektoryi-koordinatyi\">(сайт</a>)</i></font><br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/355/c0c/e64/355c0ce64f794e182dfd314bc787f430.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/355/c0c/e64/355c0ce64f794e182dfd314bc787f430.png\"><br>\r\n<font color=\"#999999\"><i>Трехмерные локации в редакторе Creation Kit для TES V: Skyrim</i></font><br>\r\n<br>\r\nГлобально в 3D-играх три вектора движения: вперед-назад, влево-вправо и вверх-вниз. Соответственно, игрок может использовать три плоскости, складывающиеся в трехмерное пространство перемещения. <br>\r\n<br>\r\nХотя далеко не все игры поддерживают полноценную вертикальную мобильность: в Dark Souls и Mortal Shell прыжков и карабканий как таковых не было – хотя прыжок можно было совершить после разбега, а забраться на второй этаж замка по лестнице или лежащему дереву, специальных способностей и отдельных элементов управления под это выделено не было. Зато такие элементы были в Sekiro, Hellpoint, Elden Ring, Dragon\'s Dogma, Gothic и других.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/ddc/ae6/ca6/ddcae6ca6565e1bb4981168afbe42a9a.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/ddc/ae6/ca6/ddcae6ca6565e1bb4981168afbe42a9a.png\"><br>\r\n<font color=\"#999999\"><i>3, 2, 1, полетели! (мой мод формы дракона для Sekiro: Shadows die twice)</i></font><br>\r\n<br>\r\nБольшая часть шутеров также имеет три измерения. Даже мультиплеерные арены наподобие League of Legends и Dota 2 также тридешные, хотя вертикальности в них нет от слова совсем. Но к ним мы еще вернемся чуть позже.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/getpro/habr/post_images/830/05b/aa9/83005baa99a055371cc030504939f37f.jpg\" data-src=\"https://habrastorage.org/getpro/habr/post_images/830/05b/aa9/83005baa99a055371cc030504939f37f.jpg\" data-blurred=\"true\"><br>\r\n<font color=\"#999999\"><i>Локация поля боя в Arena of Valor. Несмотря на наличие крыльев у одного из героев, полетать полноценно не получится.</i></font><br>\r\n<br>\r\nС 2D-играми, на первый взгляд, все понятно. Есть два вектора движения: вправо-влево и вверх-вниз, а также сложенная из них плоскость передвижения. Как правило, 2D-игры содержат элементы платформинга.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/d83/b00/d3b/d83b00d3b6ac29ce0e46789e0b13ad17.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/d83/b00/d3b/d83b00d3b6ac29ce0e46789e0b13ad17.png\"><br>\r\n<font color=\"#999999\"><i>Hollow Knight – слешер-платформер с элементами соулс-лайка (а еще с модами)</i></font><br>\r\n<br>\r\n<div class=\"spoiler\" role=\"button\" tabindex=\"0\">\n                        <b class=\"spoiler_title\">Что такое платформинг?</b>\n                        <div class=\"spoiler_text\"><i>Платформинг – тип геймплея и игры с таким типом геймплея, которому присуще передвижение по всевозможным платформам – полкам, зданиям, ландшафту, трубам и т. д. <br>\r\n<br>\r\nВертикальность является неотъемлемой частью геймплея, ради чего введены прыжки, спец-способности лазания и полеты-парения. Классический платформер – игры серии Mario. </i><br>\r\n\n                    <br>\r\n<font color=\"#32CD\"><h3>▎Тонкости 2D</h3></font> <br>\r\nПервоначально все элементы 2D-игры, включая главного действующего персонажа, отрисовывалось программно. То есть каждый пиксель Марио – это не картинка, а буквально зашифрованный в основном коде игры квадратик.<br>\r\n<br>\r\nСо временем, для экономии времени создания игры, а также для оптимизации работы вместо программируемых пикселей стали использовать спрайты. <br>\r\n<br>\r\nХотя иногда и попадаются такие бриллианты, как Faith: The Unholy Trinity или оригинальная версия Dwarf Fortress.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/a93/690/9aa/a936909aa89e2d499a80b92db60ecc84.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/a93/690/9aa/a936909aa89e2d499a80b92db60ecc84.png\"><br>\r\n<font color=\"#999999\"><i>Слабонервным, детям и беременным лучше не играть в Faith: The Unholy Trinity. В крепость Дворфов тоже не рекомендуется. Но мне обе игры нравятся.</i></font><br>\r\n<div class=\"scrollable-table\"><table>\r\n<tr>\r\n<td><b>Спрайт (sprite)</b> –<i> картинка, являющаяся частью 2D-игры. Это картинки с прозрачным фоном, совокупность которых образует анимацию. <br>\r\nЕсть два подхода к организации спрайтов: смена картинки и атлас.</i><br>\r\n<br>\r\n<b>Смена картинки (image clip)</b> <i>похожа на создание GIF-анимации: одна картинка подменяется другой. При этом в файлах игры лежит десяток отдельных картинок для каждой анимации каждого персонажа.<br>\r\n</i></td>\r\n</tr>\r\n</table><br>\r\n<font color=\"#999999\"><i>Атлас с частью спрайтов для главного героя Hollow Knight</i></font><br>\r\n<br>\r\n<b>Чтобы спрайт работал корректно, его назначают на небольшой плоскатик (прямоугольную область). Передвижение спрайта по игровому полю осуществляется смещением этого плоскатика:</b><br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/5ce/ea7/417/5ceea741793ee40d2331b2684c4415d2.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/5ce/ea7/417/5ceea741793ee40d2331b2684c4415d2.png\"><br>\r\n<br>\r\n<font color=\"#999999\"><i>Кроме растровых спрайтов (т. е. пиксельных картинок) есть и флеш-игры с векторными спрайтами. Но их сейчас исчезающе мало.</i></font><br>\r\n<br>\r\nНезависимо от того, как именно собирается спрайт (из отдельных картинок или сдвигом текстуры-атласа), есть несколько задач, решить которые одной текстурой нельзя. Помимо передвижения по сценеза счет сдвига плоскатика, за который и цепляется текстура спрайта, есть такие проблемы, как физика.<br>\r\n<br>\r\n<b>Физика хвоста и лапок Слизнекота (интерфейс и крылья из модов, т. к. игра давно пройдена на 150%):</b><br>\r\n<br>\r\n<img src=\"https://habrastorage.org/getpro/habr/post_images/9ac/79d/619/9ac79d619c6232a9c445d89e4bd6b690.gif\" data-src=\"https://habrastorage.org/getpro/habr/post_images/9ac/79d/619/9ac79d619c6232a9c445d89e4bd6b690.gif\"><br>\r\n<div class=\"spoiler\" role=\"button\" tabindex=\"0\">\n                        <b class=\"spoiler_title\">-----------------</b>\n                        <div class=\"spoiler_text\"><b>Физика (physics)</b> – <i>характеристика взаимодействия в играх, обеспечивающая реакцию на столкновение, изменение положения в пространстве и имитацию ветра.<br>\r\n<br>\r\nФизика отвечает за разлетание юбки B2, развевание плащей и волос в Elden Ring, отскакивание обломков стен и дверей в Carrion и запинание героев за невидимые кочки в Dark Souls и TES V: Skyrim.<br>\r\n<br>\r\nС одной стороны, физика как таковая в 2D-играх не столь важна для игрового процесса. Однако она работает на атмосферу игры.<br>\r\n<br>\r\nВзгляните, как прикольно и реалистично вздрагивает хвост слизнекота из Rain World. Или как передвигается Нечто из комков плоти в Carrion. Кстати, о Carrion мы поговорим еще сегодня.</i><br>\r\n\n                    <br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/f5e/151/401/f5e151401d90749b336938ca88ba91df.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/f5e/151/401/f5e151401d90749b336938ca88ba91df.png\"><br>\r\n<font color=\"#999999\"><i>Порой Blasphemous поражает своей эпичностью. И пиксель-арт этому совершенно не мешает.</i></font><br>\r\n<br>\r\nНаверняка каждый вспомнит хотя бы Super Mario Bros или Heroes of Might and Magic, ценители назовут Undertale и Ori, любители постапокалипсиса – Rain World, хардкорщики – Blasphemous, Hollow Knight и Dead Cells.Так, стоп. А вот к последнему есть вопросы.<br>\r\n<br>\r\n<font color=\"#32CD\"><h3>▎Странные игры</h3></font> <br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/bc7/18c/215/bc718c2153f860f17fb90ccf7b09694a.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/bc7/18c/215/bc718c2153f860f17fb90ccf7b09694a.png\"><br>\r\n<font color=\"#999999\"><i>Я думаю, игроки Dead Cells заметили некоторую аномальную плавность движений главного героя и его врагов. Особенно удивительно такая плавность сочетается с пиксельной графикой. </i></font><br>\r\n<br>\r\nА мы, современные игроки, привыкли, что пиксели обычно характерны для старомодных спрайтов. Но выглядит Dead Cells стильно, играется увлекательно, и вопросов к некоторым механизмам реализации не возникает. Но эта реализация на самом деле не менее интересна, чем игровой процесс.<br>\r\n<div class=\"spoiler\" role=\"button\" tabindex=\"0\">\n                        <b class=\"spoiler_title\">----------------</b>\n                        <div class=\"spoiler_text\"><i>У игры Dead Cells есть две ключевые особенности: роуг-лайковость и процедурная генерация. Роуг-лайк (rogue-like) означает, что игрок при смерти теряет все. Нет, не так, ВООБЩЕ ВСЕ, включая прокачку, прогресс в сюжете, предметы в инвентаре и откатывается на начальную точку игры. <br>\r\n<br>\r\nА процедурная генерация – это собираемость уровней, локаций (Minecraft, подземелья TES 4: Oblivion), предметов, имен, фраз и даже существ (привет, No Man\'s Sky, однажды я и до тебя доберусь) из некоторых предустановленных элементов согласно маркерам и алгоритмам (процедурам).<br>\r\n<br>\r\nЭто значит, что каждый раз при старте игры в момент первого захода на локацию уровень генерируется заново, с нуля. И порядок уровней также может очень сильно меняться.<br>\r\n<br>\r\nЭто решает сразу две проблемы: реиграбельность (каждое прохождение игры мало похоже на предыдущее) и оптимизация работы команды игроделов (грамотно прописанные алгоритмы сами создадут локацию без необходимости отрисовывать и собирать вручную). <br>\r\n<br>\r\nПравда, недостатки напрямую вытекают из преимуществ, но об этом как-нибудь в другой раз. Возможно, в статье про оптимизацию игр.</i><br>\r\n\n                    <br>\r\nНа первый взгляд, можно подумать, что создатели Dead Cells пошли тем же путем, что и авторы Heroes of Might and Magic. Там были сделаны и анимированы 3D-модельки почти всех существ. <br>\r\n<br>\r\nНо компьютеры рядовых юзеров того времени не могли потянуть подобное, поэтому модельки отрендерили, т. е. отсняли по нескольку кадров с анимациями атаки, получения урона и гибели. <br>\r\n<br>\r\nРендеры сознательно сделали низкого качества, что дало пиксельные зерна и значительно сэкономило место и память компьютеров, а затем организовали в спрайты и добавили в игру уже их. Чем-то подобным облегчили себе работу и художники Blasphemous, отрендерив и подрисовав спрайты некоторым боссам. Но в остальном история еретиков и грешников почти полностью нарисована вручную.<br>\r\n<img src=\"https://habrastorage.org/getpro/habr/post_images/334/b25/d2d/334b25d2d8733af9e50f0e3f8f2a3991.gif\" data-src=\"https://habrastorage.org/getpro/habr/post_images/334/b25/d2d/334b25d2d8733af9e50f0e3f8f2a3991.gif\"><br>\r\n<font color=\"#999999\"><i>Синий дракон HoMM</i></font><br>\r\n<br>\r\n<b>Однако в HoMM хорошо заметна дерганность, резкость в переходе между кадрами. В DC же такая дерганность есть далеко не у всех:</b><br>\r\n<br>\r\n<img src=\"https://habrastorage.org/getpro/habr/post_images/cb4/020/6b6/cb40206b63d182e141dd504b89aea88a.gif\" data-src=\"https://habrastorage.org/getpro/habr/post_images/cb4/020/6b6/cb40206b63d182e141dd504b89aea88a.gif\"><br>\r\n<font color=\"#999999\"><i>Плавный ГГ и покадровая сова-компаньон</i></font><br>\r\n<br>\r\n<b>В Dead Cells можно глобально увидеть два типа реализации существ: та самая плавная и резкая.</b><br>\r\n<ul>\r\n<li>Резкая, имеющая два-три четко дифференцирующихся кадра, очевидно, спрайты. Среди встречающихся существ это дружественные NPC (девушка-воитель, встречающая нас на входе, торговцы), а также некоторые рядовые противники (летучие мыши), почти все боссы (кроме финального), ловушки и, конечно, почти все элементы фона. </li>\r\n<li>Плавная – почти все враги в игре, некоторые боссы (включая финального), оружие главного героя и, собственно, главный герой. </li>\r\n</ul><br>\r\nВ чем секрет такой плавности? А секрет прост. Дело в том, что Dead Cells – не совсем 2D-игра. Это 2,5D игра.<br>\r\n<br>\r\n<font color=\"#32CD\"><h3>▎Измерение между измерениями</h3></font> <br>\r\n<div class=\"scrollable-table\"><table>\r\n<tr>\r\n<td><i>2,5D-игры – это игры, сочетающие в себе минимализм 2D-игр и их два вектора движения игрока с трехмерностью пространства и окружения. Это касается не только моделек персонажей, но и разбивки фона.<br>\r\n</i></td>\r\n</tr>\r\n</table>Для создания иллюзии трехмерности пространства видимую часть локации разбивали на планы еще для игровых приставок 1980-х годов. Там это достигалось за счет разницы в скорости сдвига полос разной высоты на экране – верхние медленно или совсем не двигаются, средние двигаются с умеренной скоростью, а нижние быстро или по мере движения игрока. <br>\r\n<br>\r\n<img src=\"https://habrastorage.org/getpro/habr/post_images/35f/dcc/e46/35fdcce46c087382447b27d361325665.gif\" data-src=\"https://habrastorage.org/getpro/habr/post_images/35f/dcc/e46/35fdcce46c087382447b27d361325665.gif\"><br>\r\n<font color=\"#999999\"><i>Super Mario World</i></font><br>\r\n<br>\r\nВ более поздних проектах сдвигались уже фоновые картинки, расположенные на разных «слоях»: фон, задний план и ближний план. Таким же методом разбивки пространства и отрисовки пользуются и художники классической 2D-мультипликации. Спрайты героя, предметов для взаимодействия и врагов располагались между задним и ближним планами. В целом, данный подход сохраняется в 2D-играх и сейчас.<br>\r\n<br>\r\nВ 2,5D-играх также сохраняется разбивка на планы. Но в данном случае плоскатики планов располагаются в трехмерном пространстве, а не на условных слоях.<br>\r\nТехнически это выглядит так.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/243/21f/472/24321f472a37589dab5b5ae3f8a9d4e9.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/243/21f/472/24321f472a37589dab5b5ae3f8a9d4e9.png\"><br>\r\n<font color=\"#999999\"><i>Для наглядности я оставила отображение полигонов и не включила прозрачность текстур (мое)</i></font><br>\r\n<br>\r\nВпрочем, не плоскатиками едиными. 2,5D-игры представлены очень широким спектром визуальных, сюжетных и жанровых игр. Например, слегка пошумевшая при своем выходе The Fist с кроликом-киберпанком. Визуально — это чистое 3D. Технически и игромеханически это почти чистокровный 2D-платформер с элементами слешера.<br>\r\n<br>\r\n<b>Little Nightmares также 2,5D платформер с головоломками. Но с оговорками:</b><br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/b4b/8b0/b07/b4b8b0b07983d557dd53d69c2bdfe3ec.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/b4b/8b0/b07/b4b8b0b07983d557dd53d69c2bdfe3ec.png\"><br>\r\n<font color=\"#999999\"><i>Little Nightmares</i></font><br>\r\n<br>\r\nМногие файтинги, включая знаменитые Mortal Kombat и Street Fighter, организованы методом 2,5D. <br>\r\n<br>\r\n<div class=\"spoiler\" role=\"button\" tabindex=\"0\">\n                        <b class=\"spoiler_title\">Маленькое (нет) отступление.</b>\n                        <div class=\"spoiler_text\"><i>Если трехмерное пространство превращается в двумерное, какая ось будет ведущей? <br>\r\n<br>\r\nИгроку данный вопрос не важен. Однако для игроделов это становится головной болью. И эта боль тем сильнее, чем больше человек задействовано в процессе создания игры. И речь не только о взаимодействии кодера, дизайнера уровней и моделлера. Но и о двух разных моделлерах в рамках одной команды.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/a34/617/947/a34617947f99f56c0478f777e081ddab.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/a34/617/947/a34617947f99f56c0478f777e081ddab.png\"></i><br>\r\n<font color=\"#999999\"><i>Модель с инвертированной осью (слева) и моя модель с нормальной для движка осью (ось Z идет вправо вниз на картинке). Анимации одного без танцев с бубном не подойдут другому.</i></font><br>\r\n<br>\r\n<i>Поясню. В большинстве движков визуализации, лежащих в основе инструментов создания 3D-моделей «лицевым» направлением принимается ось Z. То есть передом модели будет сторона, обращенная от нулевой точки в сторону оси Z. Ось X в таком случае  определяет правую и левую сторону, а ось Y – вертикальность. Казалось бы, все просто и понятно, зачем делать отступление?<br>\r\n<br>\r\nДело в том, что игровые движки далеко не всегда используют именно такое соотношение осей относительно точки координат. В некоторых движках оси могут быть инвертированы (TESV: Skyrim), в некоторых ведущей осью будет Y и так далее.<br>\r\n<br>\r\nИ именно в контексте 2,5D игр этот вопрос встает особенно остро. А почему?<br>\r\n<br>\r\nДело в выборе оси направления движения. С точки зрения игрока, персонаж всегда идет слева направо или наоборот. Но с точки зрения разработчика, есть два очевидных выбора: ось Z и ось X.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/0ae/7fb/362/0ae7fb362dbb88aa633f266746e5c0ce.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/0ae/7fb/362/0ae7fb362dbb88aa633f266746e5c0ce.png\"></i><br>\r\n<font color=\"#999999\"><i>Ось движения игрока — Z (направление вперед), модель в оригинальной (начальной) Т-позе (мое)</i></font><br>\r\n<br>\r\n<i>Если игродел выберет ось Z, то у моделлера и аниматора проблем почти не возникнет. Но могут возникнуть проблемы у создателя уровней и окружения, ведь придется сильно сдвигаться вдоль одной оси. <br>\r\n<br>\r\nИ, если уровень предполагается длинным, в какой-то момент вычисления положений доходят до таких больших чисел, что движок не выдерживает и начинает искривлять пространство и объекты (то же самое происходит на сверхмаленьких объектах). <br>\r\n<br>\r\nКонечно, у каждого движка предел таких вычислений свой, но он есть. Кроме того, возникают проблемы с организацией освещения, а также с передвижением камеры, которая отвечает за отрисовку рендера (то самое, что видит игрок на экране).<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/bf3/a92/b93/bf3a92b93b7ea1409251f8b2be6b6d98.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/bf3/a92/b93/bf3a92b93b7ea1409251f8b2be6b6d98.png\"></i><br>\r\n<font color=\"#999999\"><i>Ось движения игрока — X (движение вправо), модель в оригинальной (начальной) Т-позе (тоже мое)</i></font><br>\r\n<br>\r\n<i>Если выбрать ось X, то проблемы возникнут у моделлера и аниматора. Моделлер должен будет адаптировать свое творение к данной оси, и речь не только и не столько о физическом развороте на 90 градусов. Речь о запечении нормалей и методе этого запекания – например, нормали Objectt space будут выглядеть иначе, если запечены для оси Z, но надеты на модель, повернутую на ось X, так как при запекании объектного пространства учитывается положение модели относительно точки начала координат. Аниматору же придется не только разворачивать модель, но и создавать анимации с учетом поворота. <br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/e56/e88/d18/e56e88d1895c361d5feebcac83c27a20.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/e56/e88/d18/e56e88d1895c361d5feebcac83c27a20.png\"></i><br>\r\n<font color=\"#999999\"><i>Tangent space нормали (слева) и Object space нормали (справа) в одном окне рендера с идентичными настройками (мое)</i></font><br>\r\n<br>\r\n<i>Конечно, всегда можно выкрутиться, создав дополнительную общую кость скелета, и тогда ее поворот и движение и будут отвечать за направление всей модельки. <br>\r\n<br>\r\nНо мы снова сталкиваемся с проблемами движка: некоторые движки могут поддерживать ограниченное количество костей, некоторые не поддерживают «пустые» кости (не имеющие прямого влияния на модель), некоторые не могут воспринимать такие пустые сверхважные кости одновременно с костями инверсивной кинематики и т. п.<br>\r\n<br>\r\nРазумеется, каждую из проблем в отдельности можно решить. Но теперь вы немного больше понимаете, откуда берутся баги в играх. И это только малая часть проблем всего лишь почти двумерных игр!</i><br>\r\n\n                    <br>\r\n<font color=\"#32CD\"><h3>▎Игры-гибриды</h3></font> <br>\r\nЭлементы 2,5D встречаются в самых разнообразных игровых проектах. Так, в Alice Madness Returns на территории Бумажного королевства есть целый уровень с подпространством в картине.<br>\r\n<br>\r\nПри взаимодействии с ней Алиса перемещается в двумерное пространство в виде бумажной марионетки для театра теней. Весь уровень построен из плоскатиков, как и сама главная героиня – она располагается на нескольких плоскатиках, объединенных в одну 3D-модельку со скелетом.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/f81/cc9/354/f81cc9354e5cfc75bea1154b739fae6a.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/f81/cc9/354/f81cc9354e5cfc75bea1154b739fae6a.png\"><br>\r\n<font color=\"#999999\"><i>Бумажное измерение Alice: Madness Returns</i></font><br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/42b/8e0/ee9/42b8e0ee9104d8b66703e50c222026ca.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/42b/8e0/ee9/42b8e0ee9104d8b66703e50c222026ca.png\"><br>\r\n<font color=\"#999999\"><i>F.I.S.T. – 3D-окружение и персонаж, но движение почти исключительно в одной плоскости</i></font><br>\r\n<br>\r\nМожно, конечно, среди гибридов упомянуть и Fallout 4 с Observer. Но тамошние мини-игры с 2D-составляющей, во-первых, не несут сюжетной и ключевой нагрузки, а во-вторых, не используют гибридную составляющую в геймплее. Это просто 2D-игра внутри 3D-игры. Кажется, в последней Кваке (Quake) тоже есть такой элемент-пасхалка.<br>\r\n<div class=\"scrollable-table\"><table>\r\n<tr>\r\n<td><i>Еще одной неоднозначной является Carrion. Большая часть игры, включая шагающие БЧР и контейнеры, организована в виде отрисованных вручную и очень классно анимированных спрайтов, местами спрайтов с риггингом (цепи, лианы, паутинки).</i><br>\r\n</td>\r\n</tr>\r\n</table>Протагонист в виде зубастой биомассы и его щупальца в том числе. Однако люди и киборги, мины-ловушки, некоторые боевые дроны и некоторые двери – это 3D-модельки. Их легко определить по плавным движениям, также, как и в Dead Cells.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/getpro/habr/post_images/eab/cb1/f38/eabcb1f38c5d0373042413758054e8f6.gif\" data-src=\"https://habrastorage.org/getpro/habr/post_images/eab/cb1/f38/eabcb1f38c5d0373042413758054e8f6.gif\"><br>\r\n<font color=\"#999999\"><i>Разница в движениях 3D-зомби и спрайтовой гномьей бражки видна даже на гифке</i></font><br>\r\n<br>\r\nВозвращаясь к DC, часть окружения и врагов в этой игре организована в виде спрайтов, как мы уже говорили. Но ГГ и подавляющее большинство врагов – 3D-модельки. <br>\r\n<br>\r\nМалополигональные, с наложенным на них целлшейдером и не слишком подробной текстурой, но модельки. <br>\r\n<br>\r\nЭффект пиксельности достигается за счет того, что финальный рендер или визуализация на экран игроку идет с занижением разрешения. О-о-очень сильным занижением, обеспечивающим грубую пиксельность графики.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/getpro/habr/post_images/ae9/942/cc8/ae9942cc85f896f205e550c000c8f7e8.gif\" data-src=\"https://habrastorage.org/getpro/habr/post_images/ae9/942/cc8/ae9942cc85f896f205e550c000c8f7e8.gif\"><br>\r\n<font color=\"#999999\"><i>Rain World с модификациями (животные и локации оригинала)</i></font><br>\r\n<br>\r\nПри этом Rain World сложно уличить в чем-то подобном. Да, часть окружения явно была отрендерена из 3D-моделек, но в самой игре никаких моделек нет (или почти нет). А плавность движений протагониста и хищников есть. И достигается она также за счет костной анимации и физики. Но кости двигают не модельки, а спрайты.<br>\r\n<br>\r\nСлизнекот состоит из нескольких отдельных спрайтов, каждый со своей текстурой и собственным скелетом и физикой. Скелеты лапок оканчиваются специфическими костями, напоминающими IK-кости обратной кинематики, которые в анимации используют для создания более реалистичной ходьбы и «прилипания» ног героя к поверхности. <br>\r\n<br>\r\nСкелет хвоста же снабжен физикой свободного падения, в анимации ее используют для имитации воздействия гравитации на детали одежды, ткани и волосы. Такими же скелетами снабжены все животные в игре от хищных ящериц до стервятников (ух, как же они пугали одним своим появлением!), и даже хищные водоросли.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/getpro/habr/post_images/75f/f09/6a0/75ff096a03ec7025ec5a84f2c0fa0081.gif\" data-src=\"https://habrastorage.org/getpro/habr/post_images/75f/f09/6a0/75ff096a03ec7025ec5a84f2c0fa0081.gif\"><br>\r\n<br>\r\nАналогично устроены спрайтовые внутренности Carrion. Более того, базовый скелет подконтрольного вам персонажа вы даже можете увидеть в самой игре: в момент сброса и возвращения биомассы в специальных лакунах с органической жидкостью (а также в момент получения урона и восстановления после обеда). Не знаю, баг это или фича, но на секунду появляется бело-желтый и красный риг, узловые точки в котором соответствуют центрам масс и ключевым элементам полиморфного анимированного тела.<br>\r\n<br>\r\n<font color=\"#32CD\"><h3>▎В чем разница?</h3></font> <br>\r\n<img src=\"https://habrastorage.org/r/w780q1/getpro/habr/post_images/ffa/8e0/9f9/ffa8e09f939eae1a85e4f0983eb84b63.jpg\" data-src=\"https://habrastorage.org/getpro/habr/post_images/ffa/8e0/9f9/ffa8e09f939eae1a85e4f0983eb84b63.jpg\" data-blurred=\"true\"><br>\r\n<br>\r\nУ вас, как у читателей, могло сложиться впечатление хаотичности. Как понять, какая игра считается 2,5D? Где граница между этими и другими играми?<br>\r\n<br>\r\nА… А нет этой границы. По крайней мере, четкой. Приведенные примеры объединяют сразу несколько различных подходов. Какого-то единого конвенционального понимания в сообществе также не существует.<br>\r\n<br>\r\nЕсть игры, полностью построенные на 3D-моделях, но ее геймплей, свобода передвижения, доступная игроку, расположена только в одной плоскости.<br>\r\n<br>\r\nТаковы, например, F.I.S.T., и, что удивительно, арены наподобие Dota 2, League of Legends, Arena of Valor и прочие их клоны. У игроков есть только плоскость арены, и даже залезать на стены они не могут (хотя спецнавыки некоторых героев позволяют «подлететь», вы не сможете передвигаться по вертикали всегда и осознанно в основном геймплее). <br>\r\n<br>\r\nТехнически это 3D-игры, т.к. при их создании используется трехмерное пространство. По доступности игроку — это 2D-игры. <br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/f5e/139/f0a/f5e139f0a42ca9c787e2da57a540bb79.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/f5e/139/f0a/f5e139f0a42ca9c787e2da57a540bb79.png\"><br>\r\n<font color=\"#999999\"><i>Немного особняком стоит Little Nightmares. Выполнена она в 3D, и местами игроку доступно третье измерение, когда игроку дают возможность убежать вглубь комнаты.</i></font><br>\r\n<br>\r\nПри этом реализованный с помощью спрайтов и почти без моделей (кроме стен) первый Doom — без сомнения, 3D-игра, с точки зрения игрока.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/37d/0ee/6b6/37d0ee6b61f357d0d559fe17ac80284e.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/37d/0ee/6b6/37d0ee6b61f357d0d559fe17ac80284e.png\"><br>\r\n<font color=\"#999999\"><i>DOOM. 3D-стены, 2D-бойцы</i></font><br>\r\n<br>\r\nА как быть с играми, как Dead Cells и Carrion, где используются только несколько моделей среди спрайтов?<br>\r\n<br>\r\nКак уже говорилось, единого и четкого подхода к определению нет. Однако игроки чаще всего понимают 2,5D-игры как игры, наподобие Fist. <br>\r\n<br>\r\nТаким образом, мы отсекаем большую часть 2D-игр, даже с эпизодическим использованием моделей, и однозначно отграничиваем 3D-игры.  <br>\r\n<br>\r\nА как быть с аренами? Их можно назвать 2,5D-играми? Можно, с некоторой натяжкой. Но для удобства сообщество геймеров арены называет аренами, поскольку 2D-арен в настоящее время почти не осталось (возрожденные клоны Танчиков и онлайн-Змейка не в счет, их исчезающе мало). <br>\r\n<br>\r\nА Diablo и диаблоиды? А Newerwinter Nights и Pathfinder? Ведь игрок перемещается по огромным пространствам. Можно, но также со скрипом. Особенно учитывая, что Neverwinter Nights, Pathfinder и игры после Diablo II полностью отмоделированы.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/55e/81d/4a3/55e81d4a354883ffce58931cecc674e0.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/55e/81d/4a3/55e81d4a354883ffce58931cecc674e0.png\"><br>\r\n<font color=\"#999999\"><i>Pathfinder: Kingmaker </i></font><br>\r\n<br>\r\nАналогично со стратегиями наподобие Героев Меча и Магии или Raid: Shadow Legends – их выделяют в отдельную уникальную группу, в которой у игрока и вовсе нет свободы передвижения, только ограниченное передвижения фигурок без возможности полного контроля действий.<br>\r\n<br>\r\nПри этом игра должна быть персонажной, т. е. игроку доступен конкретный игровой персонаж. Можно было бы сказать, что мы получаем двумерную РПГ с тридешной графикой, но это не так – РПГ не сводится к управлению каким-либо героем, она включает историю, сюжет, прокачку, взаимодействие с NPC и вариативность событий. Слешеры также имеют управляемого героя, но полноценными РПГ их назвать нельзя.<br>\r\n<br>\r\n<b>То есть, можно вывести такое определение:</b><br>\r\n<div class=\"scrollable-table\"><table>\r\n<tr>\r\n<td><i>2,5D-игры – игры, созданные полностью или большей частью в трехмерном пространстве, но с доступным игроку только двумерным пространством. Другими словами, это игры с трехмерной визуализацией, но с движением подконтрольного игроку персонажа только в одной плоскости, либо с минимальным доступом ко второй плоскости перемещения. Жанр и геймплей при этом может быть разный (от слешера до РПГ, от платформера до стратегии).</i><br>\r\n</td>\r\n</tr>\r\n</table>Но все же, это неконвенциональное, т. е. никем не зафиксированное и недоговорное значение: в различных сообществах могут существовать свои подходы к определению таких «ни два, ни полтора» игр. Однако мы рассмотрели наиболее часто приписываемые этим играм признаки, более-менее отграничивающие эти игры. Но это не точно.<br>\r\n<div class=\"scrollable-table\"><table>\r\n<tr>\r\n<td><i>С вами была Людмила Хигерович, всего хорошего и не болейте!</i><br>\r\n</td>\r\n</tr>\r\n</table>НЛО прилетело и оставило здесь промокод для читателей нашего блога: <br>\r\n— <a href=\"https://firstvds.ru/?utm_source=habr&amp;utm_medium=article&amp;utm_campaign=product&amp;utm_content=vds15exeptprogrev\">15% на заказ любого VDS</a> (кроме тарифа Прогрев) — HABRFIRSTVDS', 3, '2023-06-12 21:57:06', 305920, 92, '/ru/companies/first/articles/737468/', 'В настоящий момент (обязательная оговорка, когда речь идеть про нейросети) для генерации одного изображения у AI уходит минимум секунда. В лучшем случае пол секунды. Для видео нам требуется как минимум 15 кадров в секунду (а лучше бы и все тридцать). Следовательно, создавать нейросетью видео в реальном времени и таким образом визуализировать музыку - невозможно. Теперь, когда мы это поняли, давайте подумаем, как же это сделать.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(168, 'Большое сравнение нейросетей', '<p>Привет, меня зовут Юля, 85GB и я веду свой <a href=\"https://t.me/neural85gb\" rel=\"noopener noreferrer nofollow\">канал по нейронкам</a></p><p>В этой статье я рассмотрю по различным параметрам графические нейронки: DALL-E 2 (далее буду называть его DALL-E), Midjourney, Stable Diffusion, Кандинский и Шедеврум. Постараюсь разложить всё максимально чётко и ёмко, дать оценку по каждому блоку от 0 до 5. А потом всё сведу в одну таблицу. Штош, поехали. Содержание (кликабельно):</p><ul><li><p><a href=\"#price\" rel=\"noopener noreferrer nofollow\">Цена и доступность</a></p></li><li><p><a href=\"#entry\" rel=\"noopener noreferrer nofollow\">Порог вхождения</a></p></li><li><p><a href=\"#forbidden\" rel=\"noopener noreferrer nofollow\">Запрещёнка</a></p></li><li><p><a href=\"#prompt\" rel=\"noopener noreferrer nofollow\">Промпты</a></p></li><li><p><a href=\"#postprocessing\" rel=\"noopener noreferrer nofollow\">Догенерация и постобработка</a></p></li><li><p><a href=\"#size\" rel=\"noopener noreferrer nofollow\">Доп. функции. Размер и качество на выходе</a></p></li><li><p><a href=\"#license\" rel=\"noopener noreferrer nofollow\">Лицензии</a></p></li><li><p><a href=\"#conclusion\" rel=\"noopener noreferrer nofollow\">Заключение</a><br></p></li></ul><a class=\"anchor\" name=\"price\" id=\"price\"></a><h2>Цена и доступность  </h2><p>Здесь всё довольно просто. </p><ol><li><p><strong>DALL-E — платный</strong>, каждые 115 генераций за 15$, оптом не дешевле. Предоставляет <strong>14 бесплатных </strong>генераций каждый месяц только старым пользователям (которые зарегались в Далли до 6 апреля 2023г.), новые должны платить без вариантов. Для пользователей за пределами России легко<a href=\"https://openai.com/product/dall-e-2\" rel=\"noopener noreferrer nofollow\"><strong>доступна в браузере</strong></a>. Для пользователей на территории России — недоступна, нужно заморочиться с иностранным номером.</p></li><li><p><strong>Midjorney — платный</strong>, есть несколько тарифов: 10, 30 и 60 баксов. Отличаются они количеством часов генераций и функцией приватности в самом дорогом тарифе. Что это значит? Ваши картинки никто не увидит, они не попадут в общую ленту и их нельзя будет найти по поиску. <strong>Доступ через дискорд и </strong><a href=\"https://www.midjourney.com/\" rel=\"noopener noreferrer nofollow\"><strong>сайт</strong></a><strong>. </strong>Пользователям с территории России нужно искать обходные пути для оплаты.</p></li><li><p><strong>Stable Diffusion — бесплатный</strong>. Вариантов доступа множество. Есть базовая консоль, в которой всё пишется кодом и надо быть прогером. Есть привычный всем <a href=\"https://github.com/AUTOMATIC1111/stable-diffusion-webui\" rel=\"noopener noreferrer nofollow\"><strong>Automatic1111</strong></a> — консольный интерфейс с кучей настроек, надо кааапельку шарить в гитхабе и коде. Он требует дохрена физической и видеопамяти для работы. Есть сайты, например, <a href=\"https://replicate.com/stability-ai/stable-diffusion\" rel=\"noopener noreferrer nofollow\"><strong>бесплатный</strong></a> (результаты так себе) или <a href=\"https://dreamstudio.ai/generate\" rel=\"noopener noreferrer nofollow\"><strong>платный</strong></a> от создателей Стейбла. А ещё <a href=\"https://colab.research.google.com/github/TheLastBen/fast-stable-diffusion/blob/main/fast_stable_diffusion_AUTOMATIC1111.ipynb\" rel=\"noopener noreferrer nofollow\"><strong>Гугл-коллаб</strong></a> с Automatic, генерация происходит на стороне Гугла.</p></li><li><p><strong>Кандинский — бесплатный</strong>. Вариант доступа — через <a href=\"https://fusionbrain.ai/diffusion\" rel=\"noopener noreferrer nofollow\"><strong>сайт.</strong></a><strong> <br>UPD 24.05.23: </strong>ещё есть приложение Сбер Салют, к которому подключён Кандинский под именем Далли <strong>(ЛОЛ), </strong>а также Cбер оживил свой <a href=\"https://rudalle.ru/check_kandinsky2/fdfa0000-954f-43ff-a0e5-a6ec8526c7b2\" rel=\"noopener noreferrer nofollow\">ruDALL-E</a> и у них есть официальный<a href=\"https://t.me/kandinsky21_bot\" rel=\"noopener noreferrer nofollow\"> бот в телеге</a>. Помимо этого, сбер создал <strong>ГигаЧат</strong>, куда также подрубил генерацию картинок, но пока что доступ дают только в закрытом канале телеги.</p></li><li><p><strong>Шедеврум — бесплатный</strong>. Доступен только через <a href=\"https://shedevrum.ai/\" rel=\"noopener noreferrer nofollow\"><strong>приложение.</strong></a></p></li></ol><div><div class=\"table\"><table><tbody><tr><td><p align=\"right\"><strong>DALL-E </strong></p></td><td data-colwidth=\"140\" width=\"140\"><p align=\"right\"><strong>Midjorney</strong></p></td><td><p align=\"right\"><strong>Stable</strong></p></td><td><p align=\"right\"><strong>Кандинский</strong></p></td><td><p align=\"right\"><strong>Шедеврум</strong></p></td></tr><tr><td><p align=\"right\">2</p></td><td data-colwidth=\"140\" width=\"140\"><p align=\"right\">2</p></td><td><p align=\"right\">4</p></td><td><p align=\"right\">5</p></td><td><p align=\"right\">5</p></td></tr></tbody></table><p><sup>Оценки по блоку основаны, в частности, на доступе для российских юзеров</sup>  </p><a class=\"anchor\" name=\"entry\" id=\"entry\"></a><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/542/adb/669/542adb6691f95d9086df3e0dfc8f7e10.png\" alt=\"Midjourney: entry threshold\" title=\"Midjourney: entry threshold\" width=\"2048\" height=\"576\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/542/adb/669/542adb6691f95d9086df3e0dfc8f7e10.png\"><div><figcaption>Midjourney: <code>entry threshold</code></figcaption></figure><h2>Порог вхождения</h2><p>В этом блоке пойдёт речь о дружелюбности системы к юзеру и простоте/сложности использования.</p><ol><li><p><strong>DALL-E </strong>— максимально простое введение подсказок (промптов), старается работать в контексте. Документацию в целом тоже найти несложно, она есть на главной странице, но она больше предназначена для их открытого кода, а не для юзеров, инфа очень сжата. Есть <strong>блок \"хелп\"</strong> на странице с генерацией,  он плохо работает — это бот с набором вопрос-ответов. Но есть отдельная<strong> страница \"хэлпа\"</strong> с более развёрнутыми ответами, как будто они прописывают правила на ходу.</p></li><li><p><strong>Midjorney.</strong> На данный момент существует версия <strong>5.1</strong>, которая работает в контексте, а вот версия<strong> 4</strong> и более ранние были довольно капризны к промптам, требуя строгого порядка тегов. Документация большая и понятная, дружелюбная к юзеру, доступна с главной страницы сайта. </p></li><li><p><strong>Stable Diffusion </strong>— ад на земле. <em>Ремар очка: я буквально по канону прошла все стадии от отрицания до принятия, и на этапе гнева мне хотелось разбить комп. </em>Так вот, Стейбл — это консоль, которая требует довольно конкретных тегов (токенов). Нужно вводить не только обычные промпты, но и отрицательные. Здесь <strong>множество правил и нюансов</strong>, которые просто надо знать. Документация есть у <a href=\"https://github.com/AUTOMATIC1111/stable-diffusion-webui\" rel=\"noopener noreferrer nofollow\">Automatic1111</a>, но там больше про интерфейс и код. Документация <a href=\"https://platform.stability.ai/docs/getting-started\" rel=\"noopener noreferrer nofollow\">самого Стейбла</a> — чисто про код, рядовому юзеру типа меня там нечего делать. Базовой версией Стейбла пользоваться бесполезно, она очень плоха, нужно дополнительно скачивать модели (как моды на игры) которые весят в среднем 2–5 гигов, дополнительные поднастройки. Чтобы разобраться в этом, нужно потратить ОГРОМНОЕ количество времени.</p></li><li><p><strong>Кандинский.</strong> По нажатию знака вопроса выдаёт это: <em>\"Введите описание изображения и нажмите Создать\".</em> Никакой другой инфы и документации я не нашла. Для тех, кто уже работал с нейронками это ок, для новых юзеров — нет, это не френдли.</p></li><li><p><strong>Шедеврум.  </strong>Тоже самое, что у Кандинского, но есть \"правила\" на пару абзацев (из которых почти ничего не ясно). Хотя в целом Шедеврум довольно прост, в том числе благодаря ленте в приложении.</p></li></ol><div><div class=\"table\"><table><tbody><tr><th><p align=\"right\">DALL-E</p></th><th><p align=\"right\">Midjourney</p></th><th><p align=\"right\">Stable</p></th><th><p align=\"right\">Кандинский</p></th><th><p align=\"right\">Шедеврум</p></th></tr><tr><td><p align=\"right\">4</p></td><td><p align=\"right\">5</p></td><td><p align=\"right\">2</p></td><td><p align=\"right\">1</p></td><td><p align=\"right\">3</p></td></tr></tbody></table><hr><a class=\"anchor\" name=\"forbidden\" id=\"forbidden\"></a><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/1c8/558/727/1c85587276c2363c3c451c2574ab87a2.png\" alt=\" Midjourney: forbidden \" title=\" Midjourney: forbidden \" width=\"2048\" height=\"576\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/1c8/558/727/1c85587276c2363c3c451c2574ab87a2.png\"><div><figcaption> Midjourney: <code>forbidden</code> </figcaption></figure><h2>Запрещёнка</h2><p>Этот блок тесно связан с предыдущим, но его необходимо разобрать отдельно прежде чем приступить к генерации. </p><ol><li><p><strong>DALL-E. </strong>Нет списка слов, но запретные темы <a href=\"https://labs.openai.com/policies/content-policy\" rel=\"noopener noreferrer nofollow\">развёрнуты в правилах</a>: Ненависть, Насилие, Секс, Шок-контент (человеческие выделения, плохие жесты), Наркотики, Политика, Болезни. Хочется спросить: а ваще чота можна? Ну, кроме просто людей и кроликов каких-то. За нарушение правил грозит бан (правда неясно, сколько раз надо нарушить)</p></li><li><p><strong>Midjorney. </strong>Нет списка слов, есть пояснения по темам <a href=\"https://docs.midjourney.com/docs/community-guidelines\" rel=\"noopener noreferrer nofollow\">в документации.</a> Из очевидных запретов: контент для взрослых, сцены насилия и оторванные конечности. Версия 5.1 вроде должна была ввести ограничения на знаменитостей. Но я заметила только, что сходство некоторых ухудшилось или пропало (Трамп по прежнему идеален). За использование запретных слов — бан (коммьюнити говорит о 25 попытках, официальных данных нет, как и официального списка слов).</p></li><li><p><strong>Stable Diffusion. </strong>Начнём с того, что версий несколько. В <strong>1.5</strong> ограничений практически нет или их легко обойти. А вот в <strong>2.0</strong> создатели вычистили из набора данных весь контент для взрослых, убрали имена художников, потому что многие из них выступали против нейронок. Официальной инфы об этом нет, только новости, форумы и обзоры юзеров.</p></li><li><p><strong>Кандинский. </strong>Нет документации — нет информации. Всё постигается сугубо опытом. Например, слово \"обнажённый\" можно, \"кровь\" можно, а вот на слово \"кишки\" генерит поле с цветочками и пишет <em>\"Запрос не соответствует правилам работы\". </em>Дали бы хоть эти правила почитать что ли.</p></li><li><p><strong>Шедеврум.</strong> Запреты следующее: Фамилии, Политика и религия, 18+ контент, Жестокость и Насилие. Пояснений нет, только перечисление. И вот в чём прикол: фамилии под запретом настолько, что нельзя писать даже бренды. Я не могу ввести \"мужчина в костюме Версаче\", нейронка не пропустит это. И ещё я выявила, что нельзя обращаться к расовой принадлежности. <strong>Нельзя</strong> \"азиатский мужчина\", <strong>надо</strong>: \"кореец\" или \"китаец\". Есть это в правилах? нет.</p></li></ol><p>Пожалуй, самая спорная графа для оценки. С одной стороны, какая-то цензура нужна, но ни одна нейронка не реализовала её достаточно хорошо и не выдала просто список запрещённых слов в виде таблицы. Решила, что снижу оценки за силу цензуры, но накину баллов за объяснения.  Шедеврум получает 0 за адский кринж со всех сторон.  </p><div><div class=\"table\"><table><tbody><tr><th><p align=\"right\">DALL-E</p></th><th><p align=\"right\">Midjourney</p></th><th><p align=\"right\">Stable</p></th><th><p align=\"right\">Кандинский</p></th><th><p align=\"right\">Шедеврум</p></th></tr><tr><td><p align=\"right\">2</p></td><td><p align=\"right\">3</p></td><td><p align=\"right\">3</p></td><td><p align=\"right\">4</p></td><td><p align=\"right\">0</p></td></tr></tbody></table><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/ba9/9fa/d8c/ba99fad8ca416e68cd1876902e743251.jpeg\" alt=\"Дональд идеально отражает мою реакцию на всю эту дичь. Сделано в Миджорни.\" title=\"Дональд идеально отражает мою реакцию на всю эту дичь. Сделано в Миджорни.\" width=\"2294\" height=\"576\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ba9/9fa/d8c/ba99fad8ca416e68cd1876902e743251.jpeg\" data-blurred=\"true\"><div><figcaption>Дональд идеально отражает мою реакцию на всю эту дичь. Сделано в Миджорни.</figcaption></figure><hr><a class=\"anchor\" name=\"prompt\" id=\"prompt\"></a><h2>Промпты</h2><p>И вот, мы пришли к самому интересному. Я возьму не просто одинаковые промпты. но и буду описывать то, сколько требуется доработок до удобоваримого материала (если таковой вообще предусмотрен).<br><br>Итак, базовый промпт: <code>a man standing in front of a pink flowers, inspired by Nikolaj Abraham Abildgaard, official versace editorial, exquisite and handsome wings, vogue magazine cover, asian male, darius zawadzki and tom bagshaw, hermes ad, prideful look</code></p><p>Этот промпт я получила с помощью картинки <a href=\"https://t.me/neural85gb/624?comment=2565\" rel=\"noopener noreferrer nofollow\">подписчика моего канала</a> и функции<code>/describe</code> Миджорни.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/1e6/6e8/274/1e66e827434db9fb439411e2fe73af26.jpeg\" alt=\"\" title=\"\" width=\"2000\" height=\"1333\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/1e6/6e8/274/1e66e827434db9fb439411e2fe73af26.jpeg\" data-blurred=\"true\"></figure><p>Как можно заметить, все они нацелены на фотореализм, но разберём по порядку:</p><ol><li><p><strong>DALL-E</strong> — ноль изменений, промпт взят как есть. Приятно, что это самая живая пикча из всех на первый взгляд. Далли выдаёт 4 пикчи при генерации</p></li><li><p><strong> Midjourney</strong> — в обоих версиях тоже без изменений промпта. Здесь сразу покажу, что картинки получаются разными при генерации, но похожими друг на друга. Миджа выдаёт 4 картинки, из которых можно кнопкой U получить увеличенную версию или кнопкой V получить варианты одной пикчи.</p></li></ol><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/260/f4d/365/260f4d3656c1a8d8f6c2d5f68a1df70b.png\" alt=\"\" title=\"\" width=\"512\" height=\"512\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/260/f4d/365/260f4d3656c1a8d8f6c2d5f68a1df70b.png\"></figure><ol start=\"3\"><li><p><strong> Stable Diffusion. </strong>А вот тут начинаются проблемы. Как я говорила выше, нельзя просто сразу \"из коробки\" получить то, что хочешь. Сначала надо скачать модель под задачу. И я это сделала, скачала несколько фотореалистичных (если надо, сделаю отдельный пост про них <a href=\"https://t.me/neural85gb\" rel=\"noopener noreferrer nofollow\">в канале</a>). Давайте посмотрим на картинку, которая получается при голом промпте: </p></li></ol><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/eb4/f10/1d2/eb4f101d2e5208689a25d8a99c516cb3.png\" alt=\"\" title=\"\" width=\"512\" height=\"512\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/eb4/f10/1d2/eb4f101d2e5208689a25d8a99c516cb3.png\"></figure><p>Адский кринж, неправда ли? Дело в том, что в промпт нужно добавить:</p><ul><li><p>Уточнение фотореализма: <code>(8k, RAW photo, highest quality)</code> обязательно в скобочках, это для демонстрации важности тегов.</p></li><li><p>Негативный промпт. Здесь такой прикол: нужно заносить сюда всё, что НЕ нравится на картинке. Мне лично это далось тяжело. Концепция \"я не хочу, чтобы были кривые пальцы\" ломает мозг. Но это лирика, продолжим, я взяла список типовых слов для негативного промпта:<code> lowres, text, error, missing fingers, extra digit, fewer digits, cropped, worst quality, low quality, jpeg artifacts, signature, bad anatomy, extra legs, extra arms, extra fingers, poorly drawn hands, poorly drawn feet, disfigured, out of frame, tiling, bad art, deformed, mutated, blurry, fuzzy, misshaped, mutant, gross, disgusting, ugly, watermark, watermarks. </code>Получаем такую картинку. Но это не предел.</p></li></ul><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/2d1/193/fa9/2d1193fa9f3bb9d2ae7740c94cfab5c5.png\" alt=\"\" title=\"\" width=\"512\" height=\"512\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/2d1/193/fa9/2d1193fa9f3bb9d2ae7740c94cfab5c5.png\"></figure><p>Можно это улучшить ещё больше. Но это уже радикальные изменения промпта. Добавляем следующее: <code>(dark shot:1.17), epic realistic, art, (hdr:1.5), (muted colors:1.2), hyperdetailed, (artstation:1.5), warm lights. </code>Што это за цифры? Это веса. В Миджорни работают похожим образом, только без скобок и через двойное двоеточие. Вот данные конкретные теги предназначены для создания артовой картинки, но в разных моделях даёт разный результат, мне выдал такой: </p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/979/da9/82c/979da982c50af835a5b0924cdb131b19.png\" alt=\"Прим.: по дефолту выдаёт одну картинку за раз, все каринки разные, но в одном стиле\" title=\"Прим.: по дефолту выдаёт одну картинку за раз, все каринки разные, но в одном стиле\" width=\"512\" height=\"512\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/979/da9/82c/979da982c50af835a5b0924cdb131b19.png\"><div><figcaption><em>Прим.: по дефолту выдаёт одну картинку за раз, все каринки разные, но в одном стиле</em></figcaption></figure><p>Это достаточно похоже на фотку, результат меня устроил, идём дальше.</p><ol start=\"4\"><li><p><strong> Кандинский.</strong> Промпт не менялся и, как вы можете заметить, картинки похожи на 4-ю версию Миджи. Это интересная тема: в зависимости от стиля или промпта часть картинок будет похожа на Далли или Стейбл (у которых открытый код), а часть — на Миджорни (код которой не раскрывается), так что мне крайне любопытно, как они это реализовали. Пересыл делают что ли. При длинном промпте все картинки похожи друг на друга, почти идентичны: </p></li></ol><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a86/3a3/666/a863a36661611ff5b1656b80b4b0ed5e.png\" alt=\"\" title=\"\" width=\"2301\" height=\"767\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a86/3a3/666/a863a36661611ff5b1656b80b4b0ed5e.png\"></figure><p>Кандинский по дефолту имеет 17 стилей, но разумеется можно экспериментировать. В отличие от иностранных сервисов, поддерживает русский язык.</p><ol start=\"5\"><li><p><strong>Шедеврум. </strong>Здесь прям адуха. Из-за ограничений промпт пришлось сократить вполовину: <code>man, pink flowers on the background, exquisite and beautiful wings, vogue magazine cover, korean, close-up shooting, proud look.</code>Получилось это: </p></li></ol><figure class=\"\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/c45/135/102/c4513510234aea8d07c7c7d67891ff35.jpeg\" alt=\"\" title=\"\" width=\"256\" height=\"256\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/c45/135/102/c4513510234aea8d07c7c7d67891ff35.jpeg\" data-blurred=\"true\"></figure><p>И да, это оригинальный размер. В целом, очень похоже на остальные картинки, и это хорошо. Как будто бы можно получить желаемое изображение с минимумом усилий. Но тотальное количество ограничений, с которыми я столкнулась - это плохо. Оно говорит об отсутствии контроля. Порой стиль того или иного бренда для изображения критичен, он даёт свой особый вайб, который нельзя передать другими словами.</p><div><div class=\"table\"><table><tbody><tr><th><p align=\"right\">DALL-E</p></th><th><p align=\"right\">Midjourney</p></th><th><p align=\"right\">Stable</p></th><th data-colwidth=\"140\" width=\"140\"><p align=\"right\">Кандинский</p></th><th><p align=\"right\">Шедеврум</p></th></tr><tr><td><p align=\"right\">5</p></td><td><p align=\"right\">5</p></td><td><p align=\"right\">3</p></td><td data-colwidth=\"140\" width=\"140\"><p align=\"right\">5</p></td><td><p align=\"right\">1</p></td></tr></tbody></table><p><sup>Оценивала работу с чистым промптом</sup></p><hr><a class=\"anchor\" name=\"postprocessing\" id=\"postprocessing\"></a><h2>Догенерация и постобработка</h2><p>А что если я не хочу людей, как в таком случае справляются нейронки? И могу ли я исправить то, что сгенерировала? Начнём с базового промпта: <code>photography, lemonade with ice and strawberry, yellow background, in the style of contemporary, simple, sunlight</code></p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/086/76a/00e/08676a00e87df911fdbaafc4100e13ed.png\" alt=\"\" title=\"\" width=\"2000\" height=\"1333\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/086/76a/00e/08676a00e87df911fdbaafc4100e13ed.png\"></figure><p>И вот тут можно увидеть, что по качеству генерации НЕлюдей Миджорни выигрывает. Но мы тут не за этим. Постобработка, поехали:</p><ol><li><p><strong> DALL-E. </strong>Изначально квадратную картинку можно расширить с помощью функции редактирования изображения, убрать любой объект или добавить его. Делается это довольно простым функционалом, я записывала о нём <a href=\"https://t.me/neural85gb/139\" rel=\"noopener noreferrer nofollow\">видео.</a> То есть догенерить можно любую картинку, если добавить к ней промпт. Помимо этого, каждую картинку можно получить в 4х вариантах с помощью кнопки Variations.</p></li></ol><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/28f/e5b/92e/28fe5b92e25ba4c0f0c0f7f7edadc4d6.png\" alt=\"\" title=\"\" width=\"1712\" height=\"669\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/28f/e5b/92e/28fe5b92e25ba4c0f0c0f7f7edadc4d6.png\"></figure><ol start=\"2\"><li><p><strong> Midjourney. </strong>Здесь нет такой догенерации и постобработки изображения. Это огромный минус. Только получение вариантов одной пикчи. </p></li><li><p><strong> Stable. </strong>А вот тут как раз масса вариантов для редактирования. С помощью базового интерфейса Автоматик можно увеличить соотношение сторон и дорисовать объекты несколькими способами.</p></li></ol><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/bb0/09e/fa9/bb009efa95175a24b7cbb9eca9ecc2c9.png\" alt=\"\" title=\"\" width=\"1551\" height=\"669\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/bb0/09e/fa9/bb009efa95175a24b7cbb9eca9ecc2c9.png\"></figure><ol start=\"4\"><li><p><strong>Кандинский. </strong>Здесь догенерация и редактура скопированы у Далли, но реализованы пока что гораздо хуже. Например, внесение изменений в изображение сильно портит его и так не самое топовое качество.</p></li></ol><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b8a/906/a5f/b8a906a5fa10125455699dcc95ab6ee4.png\" alt=\"\" title=\"\" width=\"1627\" height=\"669\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b8a/906/a5f/b8a906a5fa10125455699dcc95ab6ee4.png\"></figure><ol start=\"5\"><li><p><strong>Шедеврум. </strong>Здесь нет никаких доп. функций.</p></li></ol><p>Так как я занимаюсь сравнением нейронок, то оценивать этот блок буду не относительно того, что я хотела бы видеть в идеале, а относительно того, что они могут выдавать сейчас:</p><div><div class=\"table\"><table><tbody><tr><th><p align=\"right\">DALL-E</p></th><th><p align=\"right\">Midjourney</p></th><th><p align=\"right\">Stable</p></th><th><p align=\"right\">Кандинский</p></th><th><p align=\"right\">Шедеврум</p></th></tr><tr><td><p align=\"right\">3</p></td><td><p align=\"right\">0</p></td><td><p align=\"right\">5</p></td><td><p align=\"right\">2</p></td><td><p align=\"right\">0</p></td></tr></tbody></table><hr><a class=\"anchor\" name=\"size\" id=\"size\"></a><h2>Доп. функции. Размер и качество на выходе</h2><p>Есть ли ещё функции для обработки изображений у нейронок? </p><ol><li><p><strong>DALL-E.</strong> Всё только на промптах. Стандартный размер выходного изображения: 1024х1024. Вес: около 1,5мб. Качество: не очень хорошее, мыльно, много размазанных деталей. Приведу в пример кусок картинки:</p></li></ol><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/5ba/3ad/43e/5ba3ad43e0776cb485f62b09f7cdaf13.png\" alt=\"\" title=\"\" width=\"785\" height=\"762\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/5ba/3ad/43e/5ba3ad43e0776cb485f62b09f7cdaf13.png\"></figure><ol start=\"2\"><li><p><strong> Midjourney.</strong> Все настройки здесь выполняются командной строкой. Команд здесь <strong>много</strong> для разных целей: смешивание изображений, получение промпта с картинки, превращение одной картинки в другую (img to img), изменение деталей изображения с помощью закрепления seed (номера генерации). <strong>Помимо команд также есть параметры:</strong> для указания размера картинки (соотношения сторон), для уровня стилизации, создания бесшовного паттерна и прочего. Все они описаны в <a href=\"https://docs.midjourney.com/docs/command-list\" rel=\"noopener noreferrer nofollow\">документации Миджи</a>. </p></li></ol><p>Апскейл 1 из 4-х изображений осуществляется кнопкой U. Стандартный размер выходного изображения: 1024х1024. Вес: около 1,5мб. Качество: хорошая передача объектов но много шумов, которые, если не увеличивать картинку, добавляют резкости. Картинки из Миджорни можно смело публиковать в соцсетях и даже печатать на небольших форматах. Пример:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/fbb/fc3/7cc/fbbfc37cc6e5d9b94e10f7016654efde.png\" alt=\"\" title=\"\" width=\"973\" height=\"875\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/fbb/fc3/7cc/fbbfc37cc6e5d9b94e10f7016654efde.png\"></figure><ol start=\"3\"><li><p><strong>Stable Diffusion. </strong>Множество настроек и регулировок изображения. Seed здесь работает не очень, как и в Миджорни, а вот img2img намного лучше. </p></li></ol><blockquote><p><em>Img2img и seed — это огромная тема, пожалуй, обозрю её подробнее в следующий раз. За обновлениями следите </em><a href=\"https://t.me/neural85gb\" rel=\"noopener noreferrer nofollow\"><em>у меня на канале</em></a><em>.</em></p></blockquote><p><em>Скачивание дополнительных моделей позволяет менять свет и настраивать позы. Пока это работает неидеально, но работает. </em></p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/fab/f16/497/fabf164971433a68c951c68d8deb455a.png\" alt=\"\" title=\"\" width=\"1541\" height=\"669\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/fab/f16/497/fabf164971433a68c951c68d8deb455a.png\"></figure><p>В Автоматике можно увеличить изображение во вкладке Extras или краааайне сложными путями. Но хорошее качество будет только с девицей на картинке (в идеале голой), остальные тематики в пролёте. На мой взгляд, лучше пользоваться  сторонними апскейлерами. Сравнение:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f9f/fad/a98/f9ffada98e7e11b679425f06063f1e1d.png\" alt=\"\" title=\"\" width=\"1335\" height=\"669\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f9f/fad/a98/f9ffada98e7e11b679425f06063f1e1d.png\"></figure><p>Стандартный размер выходного изображения: 512х512. Вес: около 300кб. Качество: плохое, мыльное, пиксельное. Такое изображение лично я клиенту отправить не смогу. Приведу в пример кусок картинки:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a87/74c/173/a8774c173e62ddc007b2b86502409efa.png\" alt=\"\" title=\"\" width=\"885\" height=\"870\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a87/74c/173/a8774c173e62ddc007b2b86502409efa.png\"></figure><ol start=\"4\"><li><p><strong> Кандинский. </strong>Нет доп. настроек, кроме указанных в предыдущей главе. Стандартный размер выходного изображения: 767х767. Вес: около 300кб. Качество: плохое, мыльное, пиксельное. Пример:</p></li></ol><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/d72/dc0/3e9/d72dc03e94a8ba156fdc8924759258a1.png\" alt=\"\" title=\"\" width=\"779\" height=\"756\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d72/dc0/3e9/d72dc03e94a8ba156fdc8924759258a1.png\"></figure><ol start=\"5\"><li><p><strong>Шедеврум. </strong>Это просто трэш. Стандартный размер выходного изображения: 256х256. Вес: около 15кб. Качество: плохое, шумное, пиксельное. <br><strong>UPD 24.05.2023:</strong> через минуту изображение апскейлится, размер становится 1024х1024, а вес 190кб, так что качество по прежнему остаётся дерьмовым:</p></li></ol><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/469/adc/849/469adc8494b14f0b7b4d87be517d2b32.jpg\" width=\"2043\" height=\"1024\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/469/adc/849/469adc8494b14f0b7b4d87be517d2b32.jpg\" data-blurred=\"true\"></figure><div><div class=\"table\"><table><tbody><tr><th><p align=\"right\">DALL-E</p></th><th><p align=\"right\">Midjourney</p></th><th><p align=\"right\">Stable</p></th><th><p align=\"right\">Кандинский</p></th><th><p align=\"right\">Шедеврум</p></th></tr><tr><td><p align=\"right\">2</p></td><td><p align=\"right\">5</p></td><td><p align=\"right\">4</p></td><td><p align=\"right\">1</p></td><td><p align=\"right\">UPD: 1</p></td></tr></tbody></table><hr><a class=\"anchor\" name=\"license\" id=\"license\"></a><h2>Лицензии</h2><p>Для тех, кому важно:</p><ol><li><p><strong>DALL-E. </strong>В соответствии с <a href=\"https://labs.openai.com/policies/content-policy\" rel=\"noopener noreferrer nofollow\">контентной политикой</a>, вы владеете изображениями, которые вы создаете с помощью DALL·E, включая право на перепечатку, продажу и продажу товаров — независимо от того, было ли изображение создано с помощью бесплатного или платного кредита.</p></li><li><p><strong>Midjourney.</strong> Согласно <a href=\"https://docs.midjourney.com/docs/terms-of-service\" rel=\"noopener noreferrer nofollow\">правилам</a>, все изображения принадлежат и вам, и Миджи. Приколдэс в том, что те, кто бесплатно генерит, не имеет права на свои картинки. А тот, кто генерит по самому дорогому тарифу, имеет прав чуточку больше, так как Миджорни обещает, что постарается не использовать изображения таких юзеров в своих целях.</p></li><li><p><strong>Stable Diffusion. </strong>Здесь, как и в Далли, вы владеете всеми правами на создаваемые изображения, вот <a href=\"https://platform.stability.ai/docs/terms-of-service\" rel=\"noopener noreferrer nofollow\">правила</a>, но есть загвоздка — это касается только изображений, сгенерированных на чистом стейбле, без доп.моделей. У кажой модели есть свой автор и он навешивает уже свои правила и свои лицензии, что логично.</p></li><li><p><strong>Кандинский</strong>. Самая <a href=\"https://fusionbrain.ai/static/fusion/docs/agreement.pdf\" rel=\"noopener noreferrer nofollow\">интересная лицензия</a>. У вас есть неисключительные права на создаваемые изображения, вы можете ссылаться на Кандинского, но не можете указывать, какой компании он принадлежит, грубо говоря.</p></li><li><p><strong>Шедеврум. </strong>Инфы ноль. Делайте с этим чо хотите.</p></li></ol><div><div class=\"table\"><table><tbody><tr><th><p align=\"right\">DALL-E</p></th><th><p align=\"right\">Midjourney</p></th><th><p align=\"right\">Stable</p></th><th><p align=\"right\">Кандинский</p></th><th><p align=\"right\">Шедеврум</p></th></tr><tr><td><p align=\"right\">5</p></td><td><p align=\"right\">4</p></td><td><p align=\"right\">4</p></td><td><p align=\"right\">2</p></td><td><p align=\"right\">0</p></td></tr></tbody></table><hr><a class=\"anchor\" name=\"conclusion\" id=\"conclusion\"></a><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/abb/64f/268/abb64f2683e714e6f510810c85e80ddf.png\" alt=\"\" title=\"\" width=\"2048\" height=\"576\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/abb/64f/268/abb64f2683e714e6f510810c85e80ddf.png\"></figure><h2>Заключение</h2><p>Начнём с оценок:</p><div><div class=\"table\"><table><tbody><tr><th><p></p></th><th><p align=\"right\">DALL-E</p></th><th><p align=\"right\">Midjourney</p></th><th><p align=\"right\">Stable</p></th><th><p align=\"right\">Кандинский</p></th><th><p align=\"right\">Шедеврум</p></th></tr><tr><td><p align=\"left\">Цена и доступность</p></td><td><p align=\"right\">2</p></td><td><p align=\"right\">2</p></td><td><p align=\"right\">4</p></td><td><p align=\"right\">5</p></td><td><p align=\"right\">5</p></td></tr><tr><td><p align=\"left\">Порог вхождения</p></td><td><p align=\"right\">4</p></td><td><p align=\"right\">5</p></td><td><p align=\"right\">2</p></td><td><p align=\"right\">1</p></td><td><p align=\"right\">3</p></td></tr><tr><td><p align=\"left\">Запрещёнка</p></td><td><p align=\"right\">2</p></td><td><p align=\"right\">3</p></td><td><p align=\"right\">3</p></td><td><p align=\"right\">4</p></td><td><p align=\"right\">0</p></td></tr><tr><td><p align=\"left\">Промпты</p></td><td><p align=\"right\">5</p></td><td><p align=\"right\">5</p></td><td><p align=\"right\">3</p></td><td><p align=\"right\">5</p></td><td><p align=\"right\">1</p></td></tr><tr><td><p align=\"left\">Догенерация и постобработка</p></td><td><p align=\"right\">3</p></td><td><p align=\"right\">0</p></td><td><p align=\"right\">5</p></td><td><p align=\"right\">2</p></td><td><p align=\"right\">0</p></td></tr><tr><td><p align=\"left\">Размер и качество на выходе</p></td><td><p align=\"right\">2</p></td><td><p align=\"right\">5</p></td><td><p align=\"right\">4</p></td><td><p align=\"right\">1</p></td><td><p align=\"right\">UPD: 1</p></td></tr><tr><td><p align=\"left\">Лицензии</p></td><td><p align=\"right\">5</p></td><td><p align=\"right\">4</p></td><td><p align=\"right\">4</p></td><td><p align=\"right\">2</p></td><td><p align=\"right\">0</p></td></tr><tr><td><p align=\"left\">Итого</p></td><td><p align=\"right\"><strong>23</strong></p></td><td><p align=\"right\"><strong>24</strong></p></td><td><p align=\"right\"><strong>25</strong></p></td><td><p align=\"right\"><strong>20</strong></p></td><td><p align=\"right\"><strong>10</strong></p></td></tr></tbody></table><p>Итог удивителен даже для меня на самом деле. В моей голове Кандинский и Далли отстают гораздо сильнее, так что результаты крайне забавны. На Шедеврум, понятное дело, надежды не было никакой.</p><p>В целом, я понимаю, почему Стейбл выигрывает, у него огромные перспективы для развития, посмотрите, какие изображения можно делать, если понимать систему работы, скачивать поднастройки и юзать их:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/164/a7e/d10/164a7ed10aad90ea803d897089dbc016.png\" alt=\"\" title=\"\" width=\"1805\" height=\"1280\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/164/a7e/d10/164a7ed10aad90ea803d897089dbc016.png\"></figure><p>Помимо этого, в Стейбл, как я уже писала выше, можно контролировать позы и эмоции, это очень круто. НО. Для моей работы и для моей нервной системы идеально подходит Миджорни. Поговорим о применимости \"здесь и сейчас\": </p><p><strong>Stable Diffusion</strong> подходит для: cерийных иллюстраций (стикеры или концепты персов с позами, разумеется), элементы для моушен-дизайна (самый яркий пример - реклама Колы), создание \"фотосессий\" для конкретного человека не выходя из дома ну и конечно же контент для взрослых.</p><p><strong>Midjourney</strong> — рекламная графика, помощь в разработке концепций съёмок людей или брендов, готовые стоковые \"фотографии\". Помимо этого: референсы для логоготипов, интерфейсов и иллюстраций, создание бесшовных паттернов и много чего ещё, что можно сделать БЫСТРО. Ключевое слово. Это работает <strong>быстро</strong>, достаточно точно и если мне что-то нужно поправить, то я воспользуюсь фотошопом. Между вариантами \"60 баксов\" vs \"60 часов своей жизни и миллиард нервных клеток\" я выберу первое.</p><p><strong>Кандинский</strong> пока что сырой, но тоже имеет право на существование и развитие. В отличе от <strong>Шедеврума</strong>. Зачем выкатили ЭТО я вообще понять не могу, особенно с таким невероятным уровнем конкуренции, когда есть нейронки на каждый чих.</p><p>Надеюсь, этот обзор был полезен и поможет вам в выборе. Спасибо, что дошли до конца. Всем чмаффки, и подписывайтесь на мой <a href=\"https://t.me/neural85gb\" rel=\"noopener noreferrer nofollow\">канал</a>.</p><p></p>', 3, '2023-06-12 21:57:07', 704719, 92, '/ru/articles/736840/', 'Если верить статистике, можно утверждать, что к 2050 году количество пользователей мобильных устройств по всему миру будет превышать 8,3 млрд человек.Сегодня мобильные телефоны используются не только для общения и получения информации, но и для выполнения банковских операций, заказов, мониторинга состояния здоровья и обеспечения безопасности домашней среды. Благодаря своей мобильности и доступности в любое время и в любом месте, смартфоны стали неотъемлемой частью информационного пространства.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(169, 'Анатомия игры. Кооперативное отступление', '<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/1a4/e0e/e0e/1a4e0ee0e93733f426ea81619ec7c5e8.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/1a4/e0e/e0e/1a4e0ee0e93733f426ea81619ec7c5e8.png\"><br>\r\n<br>\r\nДоброго времени суток, дорогие хабражители! Основной инструмент работы, помимо мозга, все еще находится вне зоны доступа, поэтому придется еще немного повременить с продолжением серии Анатомия игры. Впрочем, немного про игры мы все же сможем поговорить.<br>\r\n<br>\r\nСегодня речь пойдет о нестандартных подходах к сближению игроков друг с другом, а именно о необычных кооперативах. И когда я говорю «кооперативы», я имею в виду не только безвозмездную помощь страждущим в зачистке наводненных монстрами локаций.<a name=\"habracut\"></a><br>\r\n<br>\r\n<font color=\"#32CD\"><h3>▎Если вы готовы, то мы начинаем.</h3></font><br>\r\n<div class=\"spoiler\" role=\"button\" tabindex=\"0\">\n                        <b class=\"spoiler_title\">Словарик для тех, кто не играет, но мимо проходит</b>\n                        <div class=\"spoiler_text\"><i><b>Сингл-игры</b> (singleplayer games) или соло-игры — игры с одним игроком, сделанные для одного игрока и адаптированные так, чтобы вы могли самостоятельно пройти игру. Некоторые сингл-игры могут подразумевать элементы онлайна (например, онлайн-магазины дополнительных предметов, системы рейтинга сервера и т. п.). И сингл, и мультиплеер могут быть как офлайн (без подключения к сети), так и онлайн-играми.<br>\r\n<br>\r\n<b>Мультиплееры </b>(multiplayer games) — игры, заточенные под несколько игроков или нацеленные на взаимодействие между ними. Как правило, эти игры требуют постоянного подключения к интернету и соединяют игроков посредством серверов. Взаимодействие может быть различным, от безусловных клановых бонусов до ПвП и ПвЕ активностей.<br>\r\n<br>\r\nPvE или Player vs enemies подразумевает, что игрок или игроки сражаются с врагами под управлением скриптов или ИИ (в зависимости от игры) в онлайн- и сингл-играх. То есть, это те самые рейды в подземелья с боссами, ставшие уже легендой и неотъемлемой частью всевозможных ММО РПГ начиная с Lineage и заканчивая Black Desert. <br>\r\n<br>\r\n<b>PvP или Player vs player</b> — кооператив, подразумевающий сражения игроков друг с другом за награду (лут, дроп, очки опыта, репутацию и т. п.). Может происходить как на специальных локациях-аренах, так и в пространстве мира игры.<br>\r\n<br>\r\n<b>Катка</b> — термин, распространенный в русскоговорящем интернете, обычно означает одну игровую сессию (один матч).<br>\r\n<br>\r\n<b>Геймплей</b> (gameplay) — игровой процесс, то, чем управляет игрок. В некоторых случаях геймплейные механики называют жанрами, хотя жанры — это совсем другое (фэнтези, фантастика, детектив, триллер, хоррор и т. п.). В зависимости от геймплея выделяют стратегии, симуляторы, шутеры, арены, ролевые игры (РПГ/PRG), аркады и приключения (adventure). Но практически ни одна игра сейчас не ограничивается только каким-то одним типом геймплея, поэтому обычно при описании игры подразумевают кор-геймплей. Любой геймплей может быть адаптирован как для сингл-игр, так и для мультиплеера.<br>\r\n<br>\r\n<b>Кор-геймплей</b> (core-gameplay) — основа игрового процесса в гибридных играх. Например, кор-геймплей в Elden ring — action-RPG с некоторыми особенностями, элементами приключений и роуг-лайк.<br>\r\n<br>\r\n<b>РПГ (RPG)</b> — ролевые игры, вышедшие из классических настолок серии Dungeons and Dragons. Это игры, в которых вам дают под контроль одного персонажа (иногда со спутниками), который должен отыгрывать определенную роль. Если кратко, то типичные современные РПГ-игры заключаются в выборе класса (рыцарь, маг, боец, бродяга, изобретатель, медик, технарь, бомж и т. п.) и прохождении сюжетных квестов, в ходе которых будет происходить развитие навыков в рамках данного класса. Хорошая РПГ поощряет гибридизацию классов и генерирует вашу личную историю становления героя (Pathfinder, например). Плохая РПГ и игры с элементами РПГ берут только идею с классами и прокачку, но ваши личные решения на сюжет влияют мало. Очень плохие РПГ (обычные современные ММО РПГ) вообще не заморачиваются с сюжетными историями.<br>\r\n<br>\r\n<b>Шутер (shooter)</b> — игры, в которых основой геймплея является стрельба по целям. Обычно это военные симуляторы и арены.<br>\r\n<br>\r\n<b>Стратегии</b> — игры, в которых вам, неожиданно, придется брать на себя роль стратега, планировщика, продумывающего свои действия и направляющего армии на штурм или, наоборот, организующего защиту базы.<br>\r\n<br>\r\n<b>Лор </b>(lore) — предыстория мира внутри игры, книги или фильма. Включает местные мифы, легенды, предыстории персонажей, условия работы местной магии/технологии и т. п. Лор некоторых игр уже сам по себе тянет на отдельные книги или фильмы. Впрочем, книги с лором в художественном изложении по The Elder Scrolls, Warhammer, World of Warcraft и итерациям Dungeons and Dragons уже существуют.<br>\r\n<br>\r\nЛорный применительно к чему бы то ни было означает, что упоминаемое вписывается в историю и условности конкретного мира.<br>\r\n<br>\r\n<b>Чекпоинт</b> (checkpoint) — точки интереса на карте мира игры. Обычно этот термин употребляют как синоним точки сохранения (savepoint) в играх, где сохранение происходит не в случайном месте или где есть точки респавна игрока (например, костры и благодати в соулс-лайк играх).<br>\r\n<br>\r\n<b>Мобы</b> (mobs) — существа и персонажи под управлением ИИ. Практически синоним НПЦ (NPC, non-playing characters, неиграбельные персонажи).<br>\r\nСпавн (spawn) — возрождение/генерация мобов, может происходить со временем или при запуске скриптов. Респавн — возрождение мобов и персонажей, а также игрока. Места респавна — определенные области генерации или возрождения игрока. В Elden Ring для игрока — это благодать, в Dark Souls — костры.<br>\r\n<br>\r\n<b>Фарм</b> (farm, farming) (в превосходной степени b отрицательном значении — гринд, grinding) — добыча или преумножение каких-либо игровых плюшек, обычно лута, путем повторения каких-либо действий. Обычно путем регулярного обхода мест спавна мобов или кустов с нужными ягодами.<br>\r\n<br>\r\n<b>Лут</b> (loot) — то, что вы можете найти в игре и собрать (от монет и артефактов до ингредиентов для зелий).<br>\r\n<br>\r\n<b>Дроп</b> (drop) — то, что падает с побежденных противников (монстров, боссов, персонажей, игроков).<br>\r\n<br>\r\n<b>Фраги</b> (frag) — очки за убийство мобов и игроков. Далеко не всегда этим термином называют какие-то конкретные пункты и баллы, это может быть и просто число поверженных конкретным игроком врагов.</i><br>\r\n\n                    <br>\r\nДля начала условимся, что под обычным кооперативом мы будем понимать режим наподобие контр-калибров, где десяток или два игроков бегают друг за другом по сцене с намерением догнать, ликвидировать и забрать лут с вашего хладного тела. Кроме того, мы опустим и стандартные для клонов Линейки и других ММО РПГ побегушки в открытом мире с убийством недельного босса подземелья. Не будет здесь и клонов Доты с онлайн-аренами как основой игрового процесса. Преимущественно в центре нашего внимания будут, скорее, РПГ и около-РПГ игры (экшн-рпг, соулс-лайк) и немного стратегии.<br>\r\n<br>\r\n<font color=\"#32CD\"><h3>▎Кооператив и его корни</h3></font><br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/16f/c6e/7ee/16fc6e7ee47b872b75873aa3aa37960c.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/16f/c6e/7ee/16fc6e7ee47b872b75873aa3aa37960c.png\"><br>\r\n<br>\r\nСхлестнуть игроков друг с другом в эпичном противостоянии игроделы смогли еще на заре жизни видеоигр. Когда персональные компьютеры были редкостью, а игровые консоли были пределом мечтаний, любимое развлечение детей были огромные автоматы. И дети с удовольствием проводили время за ними — как правило, один такой «шкаф» предназначался только для одной игры… Некоторые из них имели по два пульта или по два джойстика для игр друг с другом, как, например, прародители файтинг игр наподобие Street Fighter и бесчисленное количество шутеров и гонок. Объединить двух стоящих рядом мальчишек и девчонок — не такое сложное дело. Но вот как организовать схватку между людьми, находящимися на разных концах мира?<br>\r\n<br>\r\nВ начале истории игр как массового развлечения специальные игровые журналы собирали статистику из писем и формировали рейтинговые списки вручную. Спустя годы это породило ряд громких скандалов на почве человеческого фактора, от банальной ошибки до сознательного мухлежа. Позднее эстафету с международными рейтингами подхватили специальные сайты. Но этого все еще было мало.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/webt/2l/qz/ok/2lqzokxehxxfapdm4radjisr8cm.png\" data-src=\"https://habrastorage.org/webt/2l/qz/ok/2lqzokxehxxfapdm4radjisr8cm.png\"><br>\r\n<font color=\"#999999\"><i>Одними из первых модов (модификаций) для ПК игр как раз были модификации мультиплеерной составляющей Doom. Новые карты, волны врагов, расширение пула участников до десятка, а позже и того больше </i></font><br>\r\n<br>\r\nПервой по-настоящему кооперативной игрой с возможностью играть с другими игроками по сети был Doom. Практически все характерные для игрушек инновационные фишки когда-то появились в ранних играх этой серии, в этом можете быть уверены.<br>\r\nВ Doom как раз и были представлены первые и самые популярные на данный момент типы кооператива: прохождение и дезматч, работавшие посредством DWANGO.<br>\r\n<br>\r\n<div class=\"spoiler\" role=\"button\" tabindex=\"0\">\n                        <b class=\"spoiler_title\">Спойлер: немного инфы про DWANGO</b>\n                        <div class=\"spoiler_text\"><i>Dial-up Wide-Area Network Game Operation или коммутируемая глобальная сетевая игровая операция — специальная служба, созданная Бобом Хантли (Bob Huntley) и Ки Кимбрэллом (Kee Kimbrell) специально для объединения игроков Heretic и Doom. <br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/e2c/9ca/3b1/e2c9ca3b1f165da94fcd8977c42ee138.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/e2c/9ca/3b1/e2c9ca3b1f165da94fcd8977c42ee138.png\"><br>\r\n<br>\r\nПервоначальная версия работала посредством <b>dial-up</b>, т. е. телефонные линии общего доступа. Чтобы поиграть, поклонникам Дума поначалу приходилось чуть ли не часами дозваниваться в Хьюстон. Технические, электрические и трудовые затраты на это были колоссальны, поэтому первые ко-опы были прерогативой игроков, купивших отдельное дополнение и оплачивать подписку. Но игровой опыт стоил своих денег, и доходы от увлеченных думеров позволили создателям купить сервер, затем еще несколько серверов по всем США, а позднее и по всему миру. Следом за шедеврами марсианских истребителей демонов DWANGO стала поддерживать и другие игры других разработчиков. Первые поползновения Blizzard также начинались с этой системы.</i><br>\r\n\n                    <br>\r\nСовместное прохождение или кооперация подразумевало объединение от 2 до 4 игроков и совместную зачистку локации, это классический кооператив.<br>\r\n<br>\r\n<b>Дезматч </b>(deathmatch) — классическая заруба, где игроки стремятся истребить друг друга различными способами и средствами. Самой первой компьютерной игрой с этим режимом (а также одним из первых шутеров от первого лица) считается Maze War 1973 года, но как конкретно строилась связь игроков в ней, я не уверена. Однако правила и организацию дезматчей в том виде, в котором они существуют сейчас, составили именно Думгаи. <br>\r\n<br>\r\n<b>Эти правила в общем виде включают такие пункты:</b><br>\r\n<br>\r\n<ul>\r\n<li>Приоритетная цель игры — уничтожить как можно больше вражеских игроков (истребить всех в режиме одной жизни либо убить максимальное количество раз в играх с возрождениями).<br>\r\n</li>\r\n<li>Сражение происходит в пределах одной локации/карты/сцены.<br>\r\n</li>\r\n<li>За убийство врага начисляются баллы (фраги). За смерть отнимаются (хотя это не обязательно).<br>\r\n</li>\r\n<li>Монстров на локации-арене либо нет вовсе, либо за их убийство дают меньше очков или спец-плюшки вместо них.<br>\r\n</li>\r\n<li>Игроки появляются в игре в определенных точках и возрождаются также в определенных местах (точки респавна).<br>\r\n</li>\r\n<li>На арене периодически появляются предметы для улучшения снаряжения, лечения, усиления и т. п.<br>\r\n</li>\r\n<li>Из катки можно выйти в любой момент (в некоторых случаях за это начисляют штрафы).<br>\r\n</li>\r\n</ul><br>\r\nКстати, в самой первой версии Deathmatch предметы появлялись на арене единожды за катку, что создавало некоторые сложности с прогрессией — отстающие игроки не могли догнать других участников матча. Но уже в версии Deathmatch 2.0 предметы стали периодически респавниться, что определенно улучшило игровой опыт. Но это все уже стало стандартом. Что там с необычными представителями?<br>\r\n<br>\r\n<font color=\"#32CD\"><h3>▎Подсказки и PvP в душных играх </h3></font><br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/98a/b6d/99d/98ab6d99d7782df92f4c8f58483bee16.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/98a/b6d/99d/98ab6d99d7782df92f4c8f58483bee16.png\"><br>\r\n<font color=\"#999999\"><i>Одно из обновлений Elden Ring добавило PvP-арены в Колизеи. Каждый из трех Колизеев имеет свои условия — классическая дуэль, стенка на стенку и дуэль с возможностью призыва духов.</i></font><br>\r\n<br>\r\nНе думаю, что игры Dark Souls, Elden Ring и их прародительница Demon\'s Souls стали пионерами в своем подходе к организации кооператива, но, определенно, донесли этот подход до массового геймера. Ко-оп в душных играх от Миядзаки-сана проявляется в трех аспектах.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/867/12f/bcf/86712fbcfed98e39de1f3153f266f0da.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/867/12f/bcf/86712fbcfed98e39de1f3153f266f0da.png\"><br>\r\n<font color=\"#999999\"><i>Реконструкция эффектов фантомов для моделек с Deviantart, в создании которой я когда-то участвовала. Слева направо: Темные Духи (и другие враждебные вторженцы), Воины Света (а также Стражи Принцессы), Белый путь (и прочие дружественные фантомы), Клинки Темной Луны (охотники на грешников), Мародеры (DS3), Псы Фаррона (DS3). Духов дракона нет, они подсвечиваются темно-серым.</i></font><br>\r\n<br>\r\n<b>Первый аспект, вторжение фантомов</b> — самый знаменитый. Игроки могут вторгаться друг к другу в мир и вступать в жестокие схватки, а также приходить на помощь для совместного боя с боссом или защиты от вторженца. Победителю достанется как минимум человечность, фигурка, уголь или руническая дуга (в зависимости от игры) и какое-то количество опыта для прокачки, а как максимум — ключевой предмет.<br>\r\n<br>\r\nДело в том, что в играх серии Dark Souls имеется система ковенантов — лорных объединений, существующих независимо от игрока и существовавших до появления его героя в мире. Главами ковенантов и участниками являются NPC, с которыми вам придется взаимодействовать. <br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/86d/d0f/5d3/86dd0f5d334ab142930d0654eb64b988.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/86d/d0f/5d3/86dd0f5d334ab142930d0654eb64b988.png\"><br>\r\n<font color=\"#999999\"><i>Некоторые главы ковенантов имеют свои истории. Если вы знаете, кто такая Прекрасная Госпожа или кто такой Гвиндолин Темное Солнце, и в курсе их полных историй, ваша жизнь, вероятно, никогда не станет прежней. Особенно после Dark Souls 3.</i></font><br>\r\n<br>\r\nПрисоединение к одному из ковенантов дает игрокам некоторые плюшки, например, амулеты, специальное оружие, заклинания или ускоренную прокачку. Но за все надо платить: во-первых, вступить в другой ковенант не получится, для этого вам придется искать специального священнослужителя, снимающего грехи, и расстаться с некоторыми магическими преимуществами. Во-вторых, почти все ковенанты рассчитаны на кооператив, и без оного продвигаться в ковенанте, а, значит, и получать новые плюшки, не выйдет.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/94f/8f2/c6e/94f8f2c6e4bc144bdec156c24556694c.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/94f/8f2/c6e/94f8f2c6e4bc144bdec156c24556694c.png\"><br>\r\n<font color=\"#999999\"><i>В большинстве случаев мобы никак не реагируют на вторженцев, однако те могут использовать монстров как живой щит или подмогу в сражениях с вами.</i></font><br>\r\n<br>\r\nОдни ковенанты (Темные Духи) охотятся за душами других игроков и прокачивают вашу темную сущность. Другие (Синие Стражи) могут прийти на помощь другим игрокам, когда к тем вторгаются Темные Духи, а также к тем, кто предал ковенант. Третьи (Темная Луна) имеют право попросить помощи у Синих Стражей, когда к ним вторгаются. Четвертые (слуги Повелителя Могил или Духи Дракона) охотятся только за специфическими предметами (например, чешуей дракона в инвентаре игрока). Пятые (Мародеры) могут как вторгаться с целью убийства, так и помочь игроку, к которому вторглись. Солнечные специализируются исключительно на помощи другим, в ПвП и ПвЕ. <br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/0d8/f72/d70/0d8f72d70e99e36ba9d89db5d7ffe245.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/0d8/f72/d70/0d8f72d70e99e36ba9d89db5d7ffe245.png\"><br>\r\n                           <font color=\"#999999\"><i>Намечается заруба</i></font><br>\r\n<br>\r\nКаждый из ковенантов за удачное вторжение или изгнание получают свои квестовые предметы (красные очи для вторжения, двойные языки лжеца, уши еретика, отсеченные пальцы и т. п.). Эти предметы используются для обмена у глав ковенантов и повышения вашего статуса.<br>\r\n<br>\r\n<b>Второй аспект </b>— не менее знаменитые подсказки. Каждый игрок вправе оставить короткую полуабстрактную записку на камушках, составленную из заранее заготовленных слов и словосочетаний. Эти послания могут как подсказать вам правильный путь (например, записка «Впереди лжец» может означать иллюзорную стену), так и завести в ловушку. <br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/f29/fcf/da1/f29fcfda1b56212abb26f49d6691579b.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/f29/fcf/da1/f29fcfda1b56212abb26f49d6691579b.png\"><br>\r\n<font color=\"#999999\"><i>HD-ретекстур посланий для Dark Souls. <a href=\"http://www.nexusmods.com/darksouls/mods/1161?tab=description\">Страница мода</a></i></font><br>\r\n<br>\r\nСей аспект даже стал одним из сюжетов Epic NPC man, где главного героя ложной наводкой на сокровище заманили в ущелье. Это не реклама, просто ребята удивительно точно прошлись по ключевым моментам игры в уморительной форме.<br>\r\n<br>\r\nКроме того, на месте смерти игрока остаются кровавые пятна. При прикосновении к ним вы увидите последние несколько секунд его жизни. Но не увидите, что именно его убило. Да, эдакий хоррор-момент, как будто темных подземелий с ловушками мало.<br>\r\n<br>\r\nКроме посланий, вы можете использовать позы или жесты, часть из которых найдете по мере прохождения игры, а также говорящие камушки.<br>\r\n<br>\r\n<b>Третий аспект</b> соответствует завещанию клетки. То есть дает игрокам возможность делиться друг с другом предметами. С одной стороны, это может стать колоссальным подспорьем, если кто-то более удачливый или осведомленный даст вам оружие или амулет, который вы по сюжету получите еще не скоро. С другой, некоторые не слишком честные игроки, использующие уловки для получения предметов, могут подбрасывать некоторые запрещенные вещи другим игрокам, что приведет к бану аккаунта и запрету на свободный кооператив.<br>\r\n<br>\r\nПоэтому поводу даже было несколько громких событий в рамках знаменитого Elden Ring — читеры в оффлайн-режиме добывали нижнее белье одной из персонажей и подбрасывали его при призыве. Античит игры фиксировал появление предмета в инвентаре и отправлял ничего не подозревающего игрока в ту самую тюрьму для извращенцев. Вернее, в ограниченный мультиплеер для таких же несчастливцев и читеров.<br>\r\n<br>\r\n<div class=\"spoiler\" role=\"button\" tabindex=\"0\">\n                        <b class=\"spoiler_title\">Спойлер. Еще один сюрприз коопа</b>\n                        <div class=\"spoiler_text\"><i>Во времена первой игры серии Dark Souls присутствовали существа, называемые бродяги или скитальцы (Vagrant). Их было два вида — добрые и злые.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/933/bca/dce/933bcadcec3fa88c6da252ac48a4273c.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/933/bca/dce/933bcadcec3fa88c6da252ac48a4273c.png\"><br>\r\n<br>\r\nДобрый вагрант оставался на месте брошенного игроком предмета, если тот оставил его и переместился в другую локацию (или к чекпоинту). Предмет в таком случае как бы обретает собственную жизнь и отправляется в путешествие по мирам игроков из числа тех, кто онлайн. Если его не поймали двадцать человек, скиталец краснеет и повышает цену содержащегося в нем предмета. Предмет, кстати, не обязательно выпадет такой же, какой оставил игрок — лут выпадает в случайном порядке, но из прописанного в игре списка.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/1b9/b20/98d/1b9b2098d09d395b12bed343a89a6072.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/1b9/b20/98d/1b9b2098d09d395b12bed343a89a6072.png\"><br>\r\n<font color=\"#999999\">      Добрый скиталец, скрин из окна просмотра DSmodt</font><br>\r\n<br>\r\nЗлой скиталец уже не будет просто убегать от вас — он вооружен парой клешней и кристальной магией. Таким образом он защищает куда более ценный в рамках соулса предмет — человечность, утерянную погибшим игроком. Вернее, пять или более человечностей, которые потерявший дважды не успел подобрать. Если его упустят двадцать человек, то и этот скиталец покраснеет, а в качестве награды даст, помимо сотни душ, уже более редкую двойную человечность.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/ffd/0ba/76a/ffd0ba76ade3d816cb42fcc66f652bcb.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/ffd/0ba/76a/ffd0ba76ade3d816cb42fcc66f652bcb.png\"><br>\r\n<font color=\"#999999\">      <i>Злой скиталец. Скриншот из DSModt</i></font><br>\r\n<br>\r\nВ последующих играх серии мне подобное не встречалось. А жаль.</i><br>\r\n<br>\r\n\n                    <br>\r\nНо самое главное, на мой взгляд, то, что пройти все душные игры без ковенантов и вторжений не представляется трудной задачей. Да, некоторые квесты и секретные концовки без онлайна и читов получить вряд ли выйдет, но в целом на игровой процесс это не влияет. Почти не влияет. Некоторые преимущества могут сильно облегчить прохождение. Да и пофайтиться с другими игроками, когда надоедают мобы, иногда хочется.<br>\r\n<br>\r\n<font color=\"#32CD\"><h3>▎Точка ада</h3></font><br>\r\nСреди всего разнообразия соулс-лайков, пытавшихся повторить успех оригинальных игр From Software, есть одна игра, которую незаслуженно обходят вниманием при составлении списков наподобие «Топ 10 лучших соулс-лайк клонов». Я встречала даже такие топы, где соседствовали Mortal Shell, Salt and Sanctuary, Remnant from the Ashes и, внезапно, Jedi Fallen Order. Но все эти игры даже вполовину не так удались в своем стремлении добраться до высот соусов, как Адская точка.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/1dc/7fe/973/1dc7fe9730a1fc96e81fcaad82342f38.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/1dc/7fe/973/1dc7fe9730a1fc96e81fcaad82342f38.png\"><br>\r\n<font color=\"#999999\"><i>Некоторые называют Hellpoint внебрачным дитя Dark Souls и Dead Space. И с ними сложно не согласиться.</i></font><br>\r\n<br>\r\nHellpoint, несмотря на внешне научно-фантастический сеттинг, ближе всего подошла к душной прародительнице. И дело не только в хардкорности, которая у большинства соулс-лайков сводится к банальному «дадим боссу побольше ХП и скорости, а герою какую-нибудь заурядную ковырялку, а сверху навалим толпу мобов». Нет, создатели Hellpoint так же любовно подошли к проработке локаций, прокачке, анимациям с различным оружием и механикам игры, как и Миядзаки-сан. Чего стоит только смена расположения мобов в зависимости от времени суток, положения Черной Дыры на небе и того, сколько раз вы здесь были и сколько раз убивали несчастных зомби, роботов и пришельцев. Огромные боссы не просто жирные мутанты на стероидах — у каждого уникальная модель поведения, к каждому свой подход, и у каждого свои резоны. Впрочем, о резонах космических демонов можно узнать только тогда, когда вы найдете секретные пути и способы с ними поговорить. Это будет, своего рода, вступление в ковенант. Но охотиться придется не за игроками, а за мобами.<br>\r\n<br>\r\n<b>Главный герой</b> — неутомимый робот, скитающийся по забитой врагами космической станции в поисках ответов на вопрос «А что же здесь случилось» и ценных шмоток. Вернее, еще как утомимый: вы не стальная машина, а бионический синтетик — гибрид механики и живых тканей. Так что для лечения вам придется убивать врагов, чтобы собирать из их крови лечебную сыворотку.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/ec9/e14/799/ec9e147990805b0d4c3cf3bdce40c095.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/ec9/e14/799/ec9e147990805b0d4c3cf3bdce40c095.png\"><br>\r\n<font color=\"#999999\"><i>По пути вы будете собирать расходники, броню, оружие, инструменты для крафта и т. п. К середине игры у вас будет внушительный арсенал и весьма обширный гардероб, в котором найдется место и для высокотехнологичных нанокостюмов, и для силовой брони, и для снятой с пришельца кожи, и для симбиотического костюма и даже для аллюзий на другие игры: Warhammer 40 000, Dark Souls и Bloodborne. Качество шакальное, т. к. пригодный для игры компьютер умер, и снимать пришлось телефоном с экрана облачного сервиса, работающего через ТВ-приставку. Сам сервис скриншоты не поддерживает.</i></font><br>\r\n<br>\r\nА еще в Hellpoint было то, чего мне не хватало в душных играх — настоящее наказание за смерть. В соулсах игрок всего лишь терял накопленные души и бустер (человечность, руническую дугу и т. п.). Во второй Dark Souls еще и получал проклятие, сокращающее его жизнь и уменьшающее сопротивление урону. Но это все еще не ощущалось опасным или необычным. Другое дело темный призрак из Hollow Knight. Вот бы что-то подобное добавили в дарки!<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/ce3/521/51d/ce352151d5dd0b46fc607c3ef92ecd9d.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/ce3/521/51d/ce352151d5dd0b46fc607c3ef92ecd9d.png\"><br>\r\n<font color=\"#999999\"><i>Кроме ПвП и коопа, в Hellpoint завезли послания и жесты</i></font><br>\r\n<br>\r\nИ разработчики Hellpoint сделали это! На месте вашей смерти остается злобный зеленый призрак, копирующий ваше вооружение, вашу прокачку, амулеты (вернее, модули для оболочки), магию (да, в этой игре есть магия. Или техномагия), и… Ваши навыки. Если вы долго ходите с одним и тем же оружием, игра это запомнит. Она запомнит и вашу тактику, так что доппельгангер будет повторять ваши приемы от удара с прыжка до разрыва дистанции. А еще умело будет пользоваться щитом. Ну, и энергии (местной маны) у него не в пример больше вашего, так что ультимативные посохи индукции лучше не брать в руки, если не уверены в своей выживаемости.<br>\r\n<br>\r\nВраги на локации, кстати, тоже запоминают вашу тактику. Так что даже боссы учтут это при вашем следующем появлении. А появляться придется не раз. По крайней мере, на чертовом Мастере марионеток мне пришлось умереть десяток раз.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/772/ff7/b12/772ff7b12e023f0e08ff59f321757bc0.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/772/ff7/b12/772ff7b12e023f0e08ff59f321757bc0.png\"><br>\r\n<br>\r\nНо мы отвлеклись. Также как в DS и ER, в Hellpoint есть кооперативный режим. Причем аж в двух ипостасях — локальный на двоих через разделенный экран и онлайн на четверых. Правда, вторгнуться абы к кому не получится — для соединения вам потребуется где-то взять Match code или дать кому-то свой. Хотя можно и соединиться со случайным игроком, но это потребует времени — онлайн у игры не такой большой, но стабильный. Впрочем, если вы доберетесь до башни Даргасса в локации Округ Сон, то получите доступ к полноценной PvP арене.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/7d9/d51/8b7/7d9d518b7715c8c4b308210eadd85191.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/7d9/d51/8b7/7d9d518b7715c8c4b308210eadd85191.png\"><br>\r\n<br>\r\nКроме того, в Hellpoint также есть система посланий от других игроков. И по количеству золотых ладошек в некоторых местах можно судить о вполне неплохом суточном онлайне. Но вместо наборов слов в послании можно поставить только символы. Впрочем, этого бывает достаточно, чтобы предупредить, дать подсказку или заманить в ловушку.<br>\r\n<br>\r\n<b>Золотые ладошки</b> — подсказки от других игроков. Парочку из таких ладошек оставила и я в особенно заковыристых местах с секретными проходами и лутом.<br>\r\n<br>\r\n<b>Зеленые ладошки</b> — записи с лором и пожелания от разработчиков и людей, сделавших вклад в разработку (в том числе денежный).<br>\r\n<br>\r\n<b>Красные ладошки</b>, как и красные письмена в DS — вызов на дуэль.<br>\r\n<br>\r\n<b>Синие</b> — предложение помощи в качестве дружественного фантома.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/010/04d/45a/01004d45ab9c02c2e3385aa7438ae260.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/010/04d/45a/01004d45ab9c02c2e3385aa7438ae260.png\"><br>\r\n<br>\r\nВ общем, вещь интересная. Жаль, что осталась без внимания.<br>\r\n<br>\r\n<font color=\"#32CD\"><h3>▎Догма Драконов и личные андроиды</h3></font><br>\r\nDragon’s Dogma — незаслуженно забытая экшн-РПГ с почти открытым миром (без сюжета попасть в некоторые локации нельзя). В России ее мало кто знает, поскольку официального релиза у нас не было, и в игре отсутствует русский язык даже в виде субтитров. Ситуацию попытались исправить энтузиасты, но все же игра не снискала популярности. Хотя игравшие в нее иногда вспоминают ее добрым словом, несмотря на некоторые недостатки.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/3b4/a7a/5e9/3b4a7a5e93741cbdf71ca70576315bbc.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/3b4/a7a/5e9/3b4a7a5e93741cbdf71ca70576315bbc.png\"><br>\r\n<font color=\"#999999\"><i>Гриша не в настроении — очередной авантюрист пришел по его душу</i></font><br>\r\n<br>\r\nВ игре нет прямого кооператива между игроками, как и ПвП-режима. Однако в рамках прохождения каждый игрок обязан создать себе личного спутника — Пешку. Пешки по лору игры — бездушные полубезвольные создания из потустороннего измерения, называемого Разлом. Они скитаются по миру, пока не встретят Восставшего (Arisen), цель которого — найти и убить дракона, раз в эн лет появляющегося из таинственного другого мира вместе с ордами чудовищ. Как нетрудно догадаться, этим самым Восставшим игроку и предстоит управлять, но просторы мира Догмы огромны и полны опасностей. <br>\r\n<br>\r\nЭто не Скайрим, где дракона можно запинать в соло — в Догме добрую часть игры главного героя могут загрызть насмерть банальные волки. А когда вы прокачаетесь достаточно для их истребления, им на смену придут куда более опасные твари. И это не считая вездесущих хобгоблинов, ящеров, и мы даже не заговорили о гигантских боссах, многих из которых придется побеждать, доползая по их тушам до уязвимых мест. И на всем протяжении игры некому будет вам помочь, кроме пары сюжетных NPC и пешек.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/266/7ec/734/2667ec73483624ae1a62ef82eaf41d1d.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/266/7ec/734/2667ec73483624ae1a62ef82eaf41d1d.png\"><br>\r\n<br>\r\nОдин раз за прохождение вам дадут создать вашу личную пешку — такую, которая придется вам по вкусу внешне и по классу, а также предоставят возможность настроить ее ИИ так, чтобы она могла подстроиться под вашу тактику.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/b23/4dc/dff/b234dcdff0db70645f0e2a6cef832f88.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/b23/4dc/dff/b234dcdff0db70645f0e2a6cef832f88.png\"><br>\r\n<font color=\"#999999\"><i>Пешки отмечены шрамом на руке, сияющим в присутствии Восставшего. А вот восставший — бессердечная тварь. В прямом смысле — на его груди красуется такой же сияющий шрам, оставленный драконом Гришей.</i></font><br>\r\n<br>\r\nВаша личная пешка будет путешествовать с вами, попутно прокачиваясь и обзаводясь навыками, выбирать и настраивать которые тоже придется вам. И покупать снаряжение, и одевать, и вообще, в игре еще и еда в инвентаре портится, и менеджмент надо проводить… Ой…<br>\r\n<br>\r\nНо проблема в том, что, кроме вашей пешки, пешки-NPC не могут прокачиваться вместе с игроком и монстрами. Поэтому побочных пешек (а их можно призвать до 3) периодически придется менять. Но сгенерированные компьютером не всегда удовлетворят вашим запросам. Мне вот, например, нужен маг, который и похилить сможет, и бафф на оружие наложить, и яды с проклятиями снять, и чтоб на мордочку не сильно страшный. <br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/a3a/421/0d4/a3a4210d40f67448c01eb03f56e6dfd3.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/a3a/421/0d4/a3a4210d40f67448c01eb03f56e6dfd3.png\"><br>\r\n                                             <font color=\"#999999\"><i>Разлом (Rift)</i></font><br>\r\n<br>\r\nИ вот тут на помощь приходит сетевая составляющая. Пешки, которых создают другие игроки, становятся доступны всем онлайн-подключенцам. В меню Разлома пешек можно сортировать по классу, уровню, игроку и цене призыва.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/6d1/418/a26/6d1418a267585888ca1587bd4827f336.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/6d1/418/a26/6d1418a267585888ca1587bd4827f336.png\"><br>\r\n<br>\r\nТакой спутник также будет расти вместе со своим хозяином. Но не с вами, а с человеком, который их создал — уровень, навыки и часть снаряжения обновляются при отдыхе в таверне. Но вы вольны переодеть чужую пешку так, как посчитаете нужным и целесообразным. Плюс такая нанятая пешка игрока еще и секретные локации подскажет, в которых ее хозяин побывал, и дельный совет по борьбе с монстрами даст.<br>\r\n<br>\r\n<font color=\"#32CD\"><h3>▎Итого</h3></font><br>\r\nСегодня мы познакомились с основными понятиями мультиплеерных игр и рассмотрели три весьма необычных метода взаимодействия игроков на расстоянии. Необычных, поскольку на момент появления подобные коннекты были либо большой редкостью, либо аналоги и вовсе отсутствовали в индустрии.<br>\r\n<br>\r\nКонечно, это далеко не все методы взаимодействия игроков. Их гораздо больше. Однако в общих чертах мультиплееры все одинаковые. Если это ММО РПГ с открытым миром, то перед нами клон либо Lineage 2 (Black Desert, Neverwinter, TERA Online, Bless, Genshin), либо World of Warcraft. То есть копеечный сюжет, нужный только для того, чтобы игрок на первых порах не заскучал, да поведать кусок лора, много гринда и много гильдий, без которых ты никуда не доедешь и плюшек не получишь. Если это гоночный симулятор, то максимум, что от вас потребуется, кроме верчения виртуальной баранки, — это кастомизация, разнообразие которой обычно не такое большое, как хотелось бы. Арены наподобие клонов Доты, та же League of Legends, отличаются только лором, который читают единицы, да модельками героев. <br>\r\n<br>\r\nМультиплеерные стратегии, как EVE Online, отличаются и вовсе приблизительно ничем, кроме внешности, несмотря на то, что могут разворачиваться как в космосе, так и на Диком Западе. Какие-то нишевые единичные проекты, наподобие Fall Guys или Among Us слишком специфические и своей популярностью обязаны череде случайностей. Зато позднее стали источниками многочисленных посредственных копий, цена которым грош и которые спустя месяц пропадают из инфополя, а то и из магазинов. Есть еще кооперативные аркады, но это слишком большой пласт, чтобы добавлять его сюда. Да и я не люблю чистокровные аркады.<br>\r\n<div class=\"scrollable-table\"><table>\r\n<tr>\r\n<td><i>Впрочем, если тема кооперативов в играх или как раз нишевых вещей вас, дорогие читатели, заинтересует, я с удовольствием расскажу вам о них. С вами была Людмила Хигерович, всего хорошего и не болейте!</i><br>\r\n</td>\r\n</tr>\r\n</table>НЛО прилетело и оставило здесь промокод для читателей нашего блога: <br>\r\n— <a href=\"https://firstvds.ru/?utm_source=habr&amp;utm_medium=article&amp;utm_campaign=product&amp;utm_content=vds15exeptprogrev\">15% на заказ любого VDS</a> (кроме тарифа Прогрев) — HABRFIRSTVDS\"', 1, '2023-06-12 21:57:08', 730773, 93, '/ru/companies/first/articles/735042/', 'Гулять вокруг ГУМа приятно, даже если не собираешься там ничего покупать. Витрины выглядят круто: почти как произведения искусства. Вообще, чем дороже магазин, тем меньше он похож на магазин и больше — на галерею.Это логично, ведь искусство — такое же премиальное потребление, как швейцарские часы, сумочки от дизайнеров или элитная ювелирка. Поэтому Louis Vuitton организовывает рядом со своими бутиками арт-галереи, а Gucci кооперируется с современными художниками.Но эффективно ли это? В прошлом году группа китайских исследователей решила проверить, как будет влиять большое количество предметов искусства на желание зайти в элитный бутик и что-нибудь там купить. Расскажу, что они выяснили.'),
(170, 'Визуализация музыки с помощью нейросетей в реальном времени… В некотором смысле…', '<p>В настоящий момент (обязательная оговорка, когда речь идеть про нейросети) для генерации одного изображения у AI уходит минимум секунда. В лучшем случае пол секунды. Для видео нам требуется как минимум 15 кадров в секунду (а лучше бы и все тридцать). Следовательно, создавать нейросетью видео в реальном времени и таким образом визуализировать музыку - невозможно. </p><p>Теперь, когда мы это поняли, давайте подумаем, как же это сделать.</p><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/64626b1349a83800dcd1ab2e\" data-style=\"\" id=\"64626b1349a83800dcd1ab2e\" width=\"\"><p>Кстати, эту статью я начал писать в ожидании начала концерта, на котором видеоинсталяция менялась от звуков музыки.<a href=\"https://youtu.be/-z4Ia6T3nEg\" rel=\"noopener noreferrer nofollow\"> Вот, как все прошло</a>.</p><p>Проще всего понять способ генерации такого контента можно если представить двумерное сечение четырехмерного куба. Так думал я начать это описание, но потом решил, что это как-то слишком. Поэтому давайте так:</p><p>Чтобы визуализировать музыку ее нужно представить в виде некоторых параметров. Например, амплитуду волны на определенных частотах. Параметры могут быть самые разные и их может быть произвольное количество. Параметры меняются со временем, и каждому моменту времени должно соответствовать свое изображение. Зависимость генерируемого нейросетью изображения от параметра получить просто. Фактически мы задаем множество таких параметров при генерации. И есть такие параметры, при маленьком изменении которых картинка меняется тоже незначительно. На этом основаны многие скрипты для SD. Например, плагин <strong>shifting</strong> <strong>attention</strong>  плавно меняет изображение при изменении веса того или иного токена в промпте. И именно такие параметры нам и нужны. Но, как мы помним, основная сложность заключается в том, что генерация этих кадров занимает гораздо больше времени, чем мы можем себе позволить. Выход из ситуации очевиден. Нужно сгенерировать возможные кадры заранее. Для каждого из возможных значений параметров. Например, Возьмем рисунок цветка. Один параметр будет заведовать его высотой, а другой - внешним видом. Например тем, насколько он похож на кляксу.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/ea5/13d/dea/ea513ddea0e5dd316e6a30b8c544f337.jpg\" alt=\"Изменение первого параметра\" title=\"Изменение первого параметра\" width=\"2400\" height=\"296\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ea5/13d/dea/ea513ddea0e5dd316e6a30b8c544f337.jpg\" data-blurred=\"true\"><div><figcaption>Изменение первого параметра</figcaption></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/e9d/ef2/a82/e9def2a820f5f350d8afd665472e630b.jpg\" alt=\"Изменение второго параметра\" title=\"Изменение второго параметра\" width=\"2400\" height=\"263\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e9d/ef2/a82/e9def2a820f5f350d8afd665472e630b.jpg\" data-blurred=\"true\"><div><figcaption>Изменение второго параметра</figcaption></figure><p>Так мы получаем набор изображений рассортированных по двум осям. Такой прямоугольник, каждая точка которого - это картинка. Картинки двумерные, поэтому в целом получается четырехмерный куб - тессеракт. Такой тессеракт и есть наша визуализация, потенциально содержащая все возможные варианты параметров. Во время звучания музыки, два параметра меняются, и эти два параметра в каждый момент времени задают конкретную картинку. Так музыка выделяет из тессеракта последовательность кадров, которая и выдает визуализацию. В реальном времени, заметим.</p><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/64628dbcd2201800a1b70641\" data-style=\"\" id=\"64628dbcd2201800a1b70641\" width=\"\"><p>На этом видео можно увидеть, как меняются параметры, и как в итоге меняется изображение. В качестве параметров тут выбрана амплитуда на низких частотах и амплитуда на высоких.</p><p>Можно заметить, что реализовал я все это с помощью TouchDesigner.</p><p>Конечно же, все это надо подстраивать под конкретные инструмменты.</p><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/6463e31d7ddf71fbc1d073e7\" data-style=\"\" id=\"6463e31d7ddf71fbc1d073e7\" width=\"\"><p>Итак, для создания визуализации создается тессеракт, содержащий картинки для всех возможных значений параметров, которые мы берем из музыки. Параметров может быть сколько угодно, но надо понимать, что 2 параметра на 100 величин - это 10 000 картинок. А 3 - уже сразу 1 000 000. У меня на генерацию тессеракта 100x100 уходило полторы суток. <br><br>Тессеракты могут быть самые разные по содержанию</p><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/6463eb67ba194ffbd34c5ea3\" data-style=\"\" id=\"6463eb67ba194ffbd34c5ea3\" width=\"\"><p>Создание их - настоящий полноценный творческий процесс. Сейчас, как и любому нейросетевому видео, такой графике не хватает плавности. Очень сложно добиться максимальной близости двух соседних кадров с близкими параметрами генерации. Так что сейчас я работаю именно над этим.</p>', 3, '2023-06-12 21:57:08', 433875, 92, '/ru/articles/735314/', 'Попробуйте отличить логотипы, созданные искусственным интеллектом, от работ дизайнеров-человеков.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(171, 'Как правильно подходить к UI/UX дизайну', '<p>Если верить статистике, можно утверждать, что к 2050 году количество пользователей мобильных устройств по всему миру будет превышать 8,3 млрд человек.</p><p>Сегодня мобильные телефоны используются не только для общения и получения информации, но и для выполнения банковских операций, заказов, мониторинга состояния здоровья и обеспечения безопасности домашней среды. Благодаря своей мобильности и доступности в любое время и в любом месте, смартфоны стали неотъемлемой частью информационного пространства.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/3d8/9dd/819/3d89dd81998ab0c118fb40bf7f4f1c94.jpeg\" width=\"1200\" height=\"699\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/3d8/9dd/819/3d89dd81998ab0c118fb40bf7f4f1c94.jpeg\" data-blurred=\"true\"></figure><h3>Зачем нужен оптимальный пользовательский опыт (UX)?</h3><p>При разработке веб-сайта, мобильного приложения или настольной программы, важно учитывать пользовательский опыт. Пользовательский опыт - это то, что чувствуют люди при использовании программного обеспечения.</p><p>Основная цель дизайна UX - привлечение пользователей, достижение их лояльности и доверия. Это фундаментальный принцип для успеха любой компании.</p><p>Для дизайнеров очень важно заинтересовать пользователей всего за несколько секунд. Один из методов для повышения эффективности продвижения мобильного приложения – создание сайта, нацеленного на определенную аудиторию. Такой сайт должен выглядеть привлекательно и информативно.</p><p>Без полезности приложения его использование не имеет смысла. При разработке мобильного приложения или сайта главное – сделать его удобным и понятным для пользователя.</p><p>Использование известных концепций дизайна пользовательского опыта для мобильных устройств помогает улучшить взаимодействие с приложением.</p><h3>5 главных критериев юзабилити</h3><p><strong>Обучаемость.</strong> Это, насколько легко новым пользователям выполнять задачи.</p><p><strong>Эффективность.</strong> Это скорость, с которой люди могут выполнять основные задачи после понимания дизайна.</p><p><strong>Запоминаемость.</strong> Означает, насколько легко пользователю запомнить, как пользоваться системой.</p><p><strong>Ошибки.</strong> Это не только количество и серьезность ошибок, допущенных пользователем, но и то, насколько легко их можно исправить.</p><p><strong>Удовлетворенность пользователя.</strong> Зависит от того, насколько интересно была решена задача и насколько быстро это произошло.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/329/823/87e/32982387e8054cd86859e29853ab58ca.png\" width=\"1642\" height=\"820\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/329/823/87e/32982387e8054cd86859e29853ab58ca.png\"></figure><h3>Основное в UI/UX</h3><ul><li><p>Навигация должна быть предсказуемой.</p></li><li><p>Использование универсальных навигационных панелей.</p></li><li><p>Учет местоположения пользователя.</p></li><li><p>Применение известных навигационных шаблонов и иконографии.</p></li><li><p>Опыт должен быть эффективным.</p></li></ul><p>У современных пользователей есть доступ к множеству цифровых устройств для взаимодействия с продуктом: настольным компьютерам, мобильным устройствам и планшетам. Дизайнер не должен рассматривать мобильный дизайн в изоляции, создание единого опыта для разных устройств является ключевым аспектом для любого бизнеса.</p><h4>Оптимизация ввода текста</h4><p>При работе с мобильным устройством ввод текста может быть затруднительным и часто приводит к ошибкам. Поэтому на маленьких устройствах следует уменьшить количество вводимых текстовых данных до минимума.</p><p><strong>Несколько советов</strong></p><ul><li><p>Спрашивайте только о том, что необходимо. Избавьтесь от ненужных полей в форме, чтобы ее сделать короткой и простой.</p></li><li><p>Пользователи не любят заполнять формы, и если форма кажется слишком длинной или сложной, то вероятность ее заполнения снижается.</p></li><li><p>Упростите ввод данных. Предварительно заполните поля наиболее вероятными ответами по умолчанию, чтобы ускорить процесс и сократить время принятия решений.</p></li></ul><h4>Тестирование дизайна</h4><p>Даже хорошо продуманный UI/UX может иметь незаметные дефекты при использовании в реальном мире. Часто дизайн, который выглядит отлично на большом экране, может не работать хорошо на мобильном устройстве. Поэтому очень важно протестировать приложение с настоящими пользователями на различных мобильных устройствах, чтобы убедиться в его правильном функционировании и внешнем виде.</p><p><strong>Советы по тестированию</strong></p><ul><li><p>Для проверки качества дизайна вашего приложения запросите настоящих пользователей, чтобы они выполняли повседневные действия. Из результатов тестирования вы сможете сделать выводы о работе дизайна.</p></li><li><p>Всегда следите за метриками вашего приложения.</p></li><li><p>Используйте информацию, собранную вашим приложением, для своевременных обновлений.</p></li></ul><h4>Понятный текст</h4><p>Текст на мобильных устройствах часто слишком мелкий. Чтение на устройствах, таких как телефоны и планшеты, является трудной задачей для пользователей.</p><p><strong>Советы</strong></p><ul><li><p>Сделайте текст более читаемым и различимым.</p></li><li><p>Чтобы подобрать наилучший размер шрифта и настройки экрана вашего мобильного приложения, измените длину строки, расстояние между строками, стили текста и другие параметры.</p></li><li><p>Не забудьте протестировать это на разных устройствах.</p></li></ul><h4>Отсутствие беспорядка</h4><p>Ясность является ключевой характеристикой отличного дизайна мобильного приложения. Загроможденный пользовательский интерфейс (UI) никогда не приносит позитивных результатов. Слишком много кнопок или графических элементов усложняют использование и раздражают ваших клиентов.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/b43/17d/56d/b4317d56d085d343ee8f28f6bb6ae4fe.jpg\" width=\"2800\" height=\"1867\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b43/17d/56d/b4317d56d085d343ee8f28f6bb6ae4fe.jpg\" data-blurred=\"true\"></figure><p><strong>Некоторые советы по использованию мобильного дизайна</strong></p><ul><li><p>Простота. Используйте стратегию дизайна, которая ограничивается одним или двумя действиями на экране, чтобы улучшить пользовательский интерфейс.</p></li><li><p>Краткость. Излагайте материал кратко, используйте заголовки и белое пространство, чтобы избежать беспорядка.</p></li><li><p>Эстетика. Делайте дизайн ненавязчивым и избегайте беспорядка, чтобы повысить наглядность.</p></li><li><p>Ориентированность на пользователя. Учитывайте вкусы целевой аудитории и создавайте приложение, отвечающее их интересам.</p></li><li><p>Опрос. Проведите опрос целевой аудитории, чтобы понять их ожидания от дизайна приложения.</p></li><li><p>Функциональность. Интегрируйте функциональность, которая решает болевые точки клиента, и уделяйте большое внимание эстетике.</p></li><li><p>Аналитика. Отслеживайте демографические данные с помощью аналитики.</p></li><li><p>Сопереживание. Создавайте интуитивно понятный пользовательский опыт, который учитывает болевые точки ваших потребителей и сопереживает им.</p></li><li><p>Цвета играют важную роль в дизайне мобильных приложений, так как каждый цвет может вызывать уникальные эмоции и рассказывать историю. Чтобы приложение выглядело профессионально, рекомендуется использовать тонкую анимацию при переключении экранов и уделить особое внимание цветовым схемам.</p></li></ul><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/edd/9c0/d4b/edd9c0d4b081e16e4670a2d729667405.png\" width=\"1200\" height=\"675\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/edd/9c0/d4b/edd9c0d4b081e16e4670a2d729667405.png\"></figure><p><strong>Следующие советы могут помочь в выборе цветовой палитры</strong></p><ul><li><p>Используйте цвета, соответствующие вашей компании, чтобы приложение выглядело как продолжение сайта.</p></li><li><p>Выбирайте цвета, которые подчеркивают цели вашего брендинга.</p></li><li><p>Изменение цвета кнопки после нажатия может указывать на выполненное действие пользователя.</p></li></ul><p>Важно понимать, что процесс UX-дизайна постоянно развивается и требует работы над новыми идеями и обратной связью. Соблюдение принципов проектирования UI/UX поможет создать мобильное приложение с высоким уровнем юзабилити, соответствующим ожиданиям пользователей. В конечном итоге, персонализированный опыт пользователя - это главная цель любого успешного мобильного приложения.</p>', 1, '2023-06-12 21:57:09', 431468, 94, '/ru/articles/734160/', 'Collagen работает на новой ссылке: https://sergey1234ovechkin.github.io/collagen_2/index.htmlРедактор позволяет вырезать, обрабатывать части изображений, создавать спрайты, коллажи, рисовать, добавлять текст, сохранять спрайты, сжимать и растягивать части изображений, работать с цветом, создавать маски, также поддерживает работу со слоями, имеется сетка для удобного позиционирования, поддерживает интернет шрифты например Google fonts.  '),
(172, 'Что делать, если ужас как хочется купить BMW или швейцарские часы', '<figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/193/f2a/f1c/193f2af1cb379c9164bf8e2c5ad6a152.png\" alt=\"\" title=\"\" width=\"1280\" height=\"722\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/193/f2a/f1c/193f2af1cb379c9164bf8e2c5ad6a152.png\"></figure><p>Гулять вокруг ГУМа приятно, даже если не собираешься там ничего покупать. Витрины выглядят круто: почти как произведения искусства. Вообще, чем дороже магазин, тем меньше он похож на магазин и больше — на галерею.</p><p>Это логично, ведь искусство — такое же премиальное потребление, как швейцарские часы, сумочки от дизайнеров или элитная ювелирка. Поэтому Louis Vuitton организовывает рядом со своими бутиками арт-галереи, а Gucci кооперируется с современными художниками.</p><p>Но эффективно ли это? В прошлом году группа <a href=\"https://academic.oup.com/jcr/article/49/5/786/6569087?login=false\">китайских исследователей</a> решила проверить, как будет влиять большое количество предметов искусства на желание зайти в элитный бутик и что-нибудь там купить. Расскажу, что они выяснили.</p><h2>Картины в метро и желание зайти в магазин</h2><p>Для первой части исследования авторы спустились в метро Шанхая, где как раз проходила выставка Лондонской национальной галереи.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/5d6/4e6/721/5d64e6721a95f4388370b4ce63265d19.png\" alt=\"Кадры с той самой выставки\" title=\"Кадры с той самой выставки\" width=\"1330\" height=\"1182\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/5d6/4e6/721/5d64e6721a95f4388370b4ce63265d19.png\"><div><figcaption>Кадры с той самой выставки</figcaption></figure><p>Поблизости располагались два торговых центра: обычный (с магазинами вроде H&amp;M и Nike) и более роскошный (с Prada, Gucci и Bulgari). Интервьюеры подходили к испытуемым, которые смотрели или не смотрели на выставку, и предлагали им пройти опрос и получить больше информации о магазинах и акциях в первом или втором ТЦ.</p><p>Из группы, пришедшей на выставку, в элитный торговый центр хотели пойти 51,4%, а из группы, на души участников которой не воздействовала целительная сила искусства, узнать про Gucci захотелось 70,3% прохожих.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/655/85e/d2c/65585ed2cecea2c4595b766289154585.png\" alt=\"\" title=\"\" width=\"995\" height=\"536\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/655/85e/d2c/65585ed2cecea2c4595b766289154585.png\"></figure><p>Можно возразить, что люди, которые изначально интересуются искусством, также изначально больше расположены не гнаться за премиум-брендами. Но все-таки исследование проходило не в галерее или музее, а на станции метро, где даже не любящие искусство люди против воли получали свою дозу прекрасного. Чтобы лучше контролировать эту ошибку, провели второе исследование.</p><h2>Торговые центры с картинами и скульптурами и желание получать новости о брендах</h2><p>Для этого выбрали два торговых центра примерно одинакового уровня, но в одном внутри было довольно много выставок, скульптур и фото, а в другом — нет. Посетителей обоих моллов опрашивали перед входом и внутри. Всего опросили 206 человек. Им предлагали получать новости и спецпредложения от одной из групп брендов: обычной (GAP, Fila и так далее) или премиальной (Van Cleef &amp; Arpels and Dunhill).</p><p>В торговом центре без выставок и скульптур люди примерно в одинаковом количестве случаев выбирали получать рассылку от премиальных брендов до входа в молл и после.</p><p>Но в торговом центре, где посетители находились в окружении картин и скульптур, процент людей, хотевших получать рассылку дорогих брендов, падал внутри почти в два раза. То есть опыт нахождения в среде, богатой предметами искусства, повлиял на их предпочтения.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/844/5ef/56c/8445ef56c67f34ddbc230b55ce995268.png\" alt=\"\" title=\"\" width=\"520\" height=\"287\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/844/5ef/56c/8445ef56c67f34ddbc230b55ce995268.png\"></figure><p>Но воздействуют ли на людей сами картины или просто ощущение, что они приобщились к чему-то культурному? Чтобы понять это, ученые провели еще один эксперимент.</p><h2>Художественные фотографии и любовь к Louis Vuitton</h2><p>В первой части исследования обеим группам показывали снимки Карла Блоссфельда — он фотографирует животных и растения. Но первой группе сообщили, что это знаменитый фотохудожник с тонким чувством прекрасного и умением изысканно отображать первозданную красоту, а второй — что это просто фотки из книг по ботанике.</p><p>После этого каждой группе предлагали оценить один из предметов от фирмы Louis Vuitton по шкале от 1 до 7. Группа, которая думала, что смотрит на произведения искусства, оценила предмет в 3,88, а та, что приняла их за иллюстрации из книжки по ботанике, в 4,25.</p><p>То есть одни и те же изображения работают только в том случае, если мы думаем, что смотрим именно на искусство.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a37/29f/d34/a3729fd3406a2f63fab50517d6052d02.png\" alt=\"\" title=\"\" width=\"995\" height=\"536\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a37/29f/d34/a3729fd3406a2f63fab50517d6052d02.png\"></figure><h2>Искусство на упаковке или предмете роскоши</h2><p>А что, если произведение искусства будет не снаружи, а встроено непосредственно в предмет роскоши? Чтобы проверить, теряет ли искусство свою «ауру», когда его используют утилитарно, провели эксперимент на 193 людях, которых разбили на три группы.</p><p>Одна смотрела на картины сами по себе, другие на якобы упаковки Louis Vuitton с использованием картин знаменитых художников, а третьей не показывали никаких картин и давали обычную упаковку сумки Louis Vuitton.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/2dd/b8e/5ab/2ddb8e5ab4211918a80895cca6bec7d2.png\" alt=\"Упаковка с картиной и без\" title=\"Упаковка с картиной и без\" width=\"996\" height=\"1600\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/2dd/b8e/5ab/2ddb8e5ab4211918a80895cca6bec7d2.png\"><div><figcaption>Упаковка с картиной и без</figcaption></figure><p>После этого их просили оценить сумку по нескольким характеристикам.</p><p>Результаты предыдущих исследований повторились: люди, имевшие возможность посмотреть на картины, хуже оценивали сумочку Louis Vuitton по сравнению с людьми, которые оценивали ее, сидя в пустой комнате. Но когда картины использовались непосредственно в упаковке продукта, они как бы «делились» с ним, а не оттягивали внимание, и сумочка казалась привлекательнее, хотя и довольно незначительно.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/df8/eb9/2a9/df8eb92a9b602e0cdbd527a46c9fd894.png\" alt=\"\" title=\"\" width=\"520\" height=\"260\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/df8/eb9/2a9/df8eb92a9b602e0cdbd527a46c9fd894.png\"></figure><p>То, что использование произведений искусства увеличивает привлекательность товара, даже если это не предметы роскоши, было доказано <a href=\"https://www.acrwebsite.org/volumes/v35/naacr_vol35_38.pdf\"><u>и в других исследованиях.</u></a> Например, мы в Тинькофф использовали это свойство, запуская новую серию банкоматов с картинками Хокусая, Левитана, Айвазовского <a href=\"https://www.tinkoff.ru/cards/debit-cards/tinkoff-black/form/all-art-atm/?utm_source=telegram_tb&amp;utm_medium=smm.unp&amp;utm_campaign=tb_smm.debit.all_art_atm&amp;dsp_click_id=358508b5-3c9b-47f4-97e8-9dc14f93c93b\"><u>и многих других.</u></a></p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/cc3/be0/36a/cc3be036a9f6801bea7a7159be4e6cb6.png\" alt=\"\" title=\"\" width=\"650\" height=\"650\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/cc3/be0/36a/cc3be036a9f6801bea7a7159be4e6cb6.png\"></figure><p>Но почему люди меньше хотят покупать статусные вещи после приобщения к искусству? Возможно, потому, что потребление искусства — это тоже статусное потребление. То есть побывав на выставке, чувствуешь себя почти таким же крутым и продвинутым, как когда купил BMW или швейцарские часы.</p><h2>Позиционирование кроссовок</h2><p>Чтобы проверить, в понтах дело или нет, провели дополнительный эксперимент. В нем 293 участника поделили на две группы, где им показывали коллекцию кроссовок Gucci.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e90/e91/02e/e90e9102e57cc14cfa68453c73bc7809.png\" alt=\"\" title=\"\" width=\"820\" height=\"460\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e90/e91/02e/e90e9102e57cc14cfa68453c73bc7809.png\"></figure><p>Причем первой группе кроссовки позиционировали как «эксклюзивную коллекцию» со слоганами вроде «С нашей эксклюзивной коллекцией кроссовок мы приглашаем вас погрузиться в мир престижа», «Уникальность и роскошная привлекательность», а второй группе их позиционировали как «художественную коллекцию» со слоганами «С нашей художественной коллекцией кроссовок мы приглашаем вас погрузиться в мир искусства и творчества».</p><p>Каждую группу дополнительно разбивали на две, которым до просмотра кроссовок показывали или не показывали картины. И после этого задавали им несколько вопросов о том, нравятся ли им эти кроссовки и хотят ли они их купить.</p><p>Если люди воспринимали кроссовки как предмет статуса, то после просмотра картин они оценивали их ниже (2,66 против 3,19). А вот если кроссовки воспринимались как художественный объект, то просмотр картин перед ними, наоборот, немного увеличивал их привлекательность (3,20 против 2,93).</p><h2>Вывод</h2><p>Если вы покупаете слишком дорогие вещи и немного подозреваете, что делаете это, чтобы выпендриться перед знакомыми, можно продолжать выпендриваться и при этом сохранять семейный бюджет, сходив вместо шопинга на хорошую выставку.</p><p>А если вы продаете черную икру, BMW и бриллианты, не стоит делать это рядом с музеем.</p><p></p>', 1, '2023-06-12 21:57:09', 111588, 92, '/ru/companies/tinkoff/articles/733344/', 'Я Павел Лаптев, графический дизайнер Даблтап. В этой статье речь не о том, как нормальные люди делают шрифты. Я расскажу, как мы сами делали свой собственный шрифт и зачем это нам понадобилось.  Если вдруг у вас появится желание повторить этот путь — для этого нужно:1. Понять, для чего вам нужен свой шрифт (и нужен ли).2. Определиться с характером шрифта.3. Долго и много рисовать буквы.4. Упороться с кернингом.5. Обратиться к специалисту-шрифтовику.6. Повторить подход.7. Да, и хинтинг, конечно.'),
(173, 'Нейросети против дизайнеров: угадайте, кто создал логотип', '<p>Попробуйте отличить логотипы, созданные искусственным интеллектом, от работ дизайнеров-человеков.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/f47/98c/342/f4798c3426ce77c24a0827def6702f4f.jpg\" width=\"1600\" height=\"900\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f47/98c/342/f4798c3426ce77c24a0827def6702f4f.jpg\" data-blurred=\"true\"></figure><p>Сегодня в общем доступе есть разные сервисы на основе искусственного интеллекта, например, Looka, Midjourney и DALL·E 2. Они способны как разработать логотип или  иллюстрации, так и создавать целые арт-объекты. </p><p>Я решил проверить на практике, возможно ли отличить логотипы нейросети от работ известных брендинговых агентств: проверьте свои интуицию, а потом нажмите на \"спойлер\", что узнать верный ответ.</p><h3>Логотип для студии разработки технологических стартапов </h3><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/c51/43f/de8/c5143fde8d4f55dde9e7a5af69387992.jpg\" alt=\"\" title=\"\" width=\"1600\" height=\"900\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/c51/43f/de8/c5143fde8d4f55dde9e7a5af69387992.jpg\" data-blurred=\"true\"></figure><details class=\"spoiler\"><summary>Hidden text</summary><div class=\"spoiler__content\"><p>Это работа Логомашины :)</p></details><h2>Логотип для семейной фермы</h2><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/471/54b/90d/47154b90d3e8ec4375be4762c5d6eb65.jpg\" width=\"1600\" height=\"900\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/471/54b/90d/47154b90d3e8ec4375be4762c5d6eb65.jpg\" data-blurred=\"true\"></figure><details class=\"spoiler\"><summary>Hidden text</summary><div class=\"spoiler__content\"><p>это работа нейросети <a href=\"https://midjourney.com/home/?callbackUrl=%2Fapp%2F\" rel=\"noopener noreferrer nofollow\">Midjourney</a></p><p>Большинство нейросетей пока что работают только с растром. Логотип от Midjourney — не исключение, он требует векторной доработки, чтобы бренд использовал его без потери качества.</p></details><h3>Логотип для импортера вин и крепкого алкоголя </h3><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/b1e/a54/97b/b1ea5497b671da686a2a810039894d28.jpg\" alt=\"\" title=\"\" width=\"1600\" height=\"900\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b1e/a54/97b/b1ea5497b671da686a2a810039894d28.jpg\" data-blurred=\"true\"></figure><details class=\"spoiler\"><summary>Hidden text</summary><div class=\"spoiler__content\"><p>Логотип от брендингового агентства Depot</p></details><h3>Логотип для рекрутинговой компании </h3><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/fd9/215/253/fd9215253c1741757c5dbd5d4cca7791.jpg\" alt=\"\" title=\"\" width=\"1600\" height=\"900\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/fd9/215/253/fd9215253c1741757c5dbd5d4cca7791.jpg\" data-blurred=\"true\"></figure><details class=\"spoiler\"><summary>Hidden text</summary><div class=\"spoiler__content\"><p>Это ещё одна работа Логомашины :)</p></details><h3>Логотип для студии программирования </h3><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/d57/0a2/030/d570a2030e35a10dfe3230ca7cf55bcc.jpg\" alt=\"\" title=\"\" width=\"1600\" height=\"900\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d57/0a2/030/d570a2030e35a10dfe3230ca7cf55bcc.jpg\" data-blurred=\"true\"></figure><details class=\"spoiler\"><summary>Hidden text</summary><div class=\"spoiler__content\"><p>Это работа нейросети студии Артемия Лебедева — <a href=\"https://ironov.artlebedev.com/ru/\" rel=\"noopener noreferrer nofollow\">Николая Иронова</a>.</p><p>На мой взгляд, в этом случае нейросеть не доработала адаптивные варианты логотипа. В будущем сложная форма и большое количество мелких деталей могут создают проблемы при его масштабировании.</p></details><h3>Логотип для бренда женской одежды </h3><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/69c/621/120/69c621120ece23a39de20a0a327cf4b7.jpg\" alt=\"\" title=\"\" width=\"1600\" height=\"900\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/69c/621/120/69c621120ece23a39de20a0a327cf4b7.jpg\" data-blurred=\"true\"></figure><details class=\"spoiler\"><summary>Hidden text</summary><div class=\"spoiler__content\"><p>Это работа нейросети <a href=\"https://looka.com/\" rel=\"noopener noreferrer nofollow\">Looka</a>.</p><p>Поскольку нейросеть не учитывает пожелания клиентов, итоговый результат всегда непредсказуем. Она может сгенерировать как смелый, так и, как в этом примере, местами банальный дизайн.</p></details><h3>Логотип для сервиса тайм-трекинга </h3><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/34a/60d/938/34a60d9386d595f266386e1584f30cac.jpg\" alt=\"\" title=\"\" width=\"1600\" height=\"900\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/34a/60d/938/34a60d9386d595f266386e1584f30cac.jpg\" data-blurred=\"true\"></figure><details class=\"spoiler\"><summary>Hidden text</summary><div class=\"spoiler__content\"><p>Это логотип студии Артемия Лебедева (Николай в его разработке не участвовал). </p></details><h3>Логотип для приложения видеозвонков </h3><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/c93/95a/406/c9395a40652601743afa99a02e9c0a9a.jpg\" alt=\"\" title=\"\" width=\"1600\" height=\"900\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/c93/95a/406/c9395a40652601743afa99a02e9c0a9a.jpg\" data-blurred=\"true\"></figure><details class=\"spoiler\"><summary>Hidden text</summary><div class=\"spoiler__content\"><p>Это работа нейросети <a href=\"https://looka.com/\" rel=\"noopener noreferrer nofollow\">Looka</a>.</p><p>Нейросеть не учла сочетание логотипа с носителями. Если бренд использует несколько паттернов, ему нужно будет обращаться к дизайнерам для дополнительной проработки фирменного стиля.</p></details><h3>Логотип для фабрики шляп </h3><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/fb7/4e8/88d/fb74e888d4e82814731ff271feb48922.jpg\" alt=\"\" title=\"\" width=\"1600\" height=\"900\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/fb7/4e8/88d/fb74e888d4e82814731ff271feb48922.jpg\" data-blurred=\"true\"></figure><details class=\"spoiler\"><summary>Hidden text</summary><div class=\"spoiler__content\"><p>Этот логотип разработали в брендинговом агентстве Супрематика.</p></details><h3>Секретный логотип</h3><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/ed3/771/246/ed3771246831d5522c2def615952f08d.jpg\" alt=\"\" title=\"\" width=\"1600\" height=\"900\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ed3/771/246/ed3771246831d5522c2def615952f08d.jpg\" data-blurred=\"true\"></figure><details class=\"spoiler\"><summary>Hidden text</summary><div class=\"spoiler__content\"><p>Пользователь Reddit решил протестировать нейросеть <a href=\"https://openai.com/dall-e-2/\" rel=\"noopener noreferrer nofollow\">DALL·E 2</a>: логотип свободен, кому интересно — в очередь!</p><p>P.S. Нейросети не всегда справляются с детализацией изображения. В этом варианте, приблизив быка, вы увидите его изломанные и асимметричные контуры.</p></details><h3>Можно ли считать нейросети полноценной заменой дизайнеров </h3><p>Пока нейросети находятся на стадии развития, штатные специалисты могут спать спокойно. Сейчас дизайнеры используют искусственный интеллект как прикладной инструмент, за которым нужно доделывать работу вручную, либо ограничивать его рамками шаблонов. Нейросети обладают большим потенциалом, однако со своими плюсами и минусами. </p><p><strong>Плюсы</strong></p><ul><li><p>Нейросети не устают работать: если дизайнеры создают для клиента от двух до пяти вариантов логотипа на выбор, то ИИ способен генерировать несколько тысяч изображений за 5 минут. </p></li><li><p>Нейросетям не нужно тратить много времени на поиск креативов, опираясь либо на свою насмотренность, либо на графические ресурсы в открытом доступе. ИИ — это совокупность опыта тысячи дизайнеров с бесконечным источником идей для реализации.</p></li></ul><p><strong>Минусы</strong></p><ul><li><p>Нейросети не могут оценить собственный дизайн: у них нет индикаторов, которые помогут отличить плохой дизайн от хорошего. Решение перекладывается на заказчика — нейросеть генерирует варианты, а человек выбирает, опираясь только на свою экспертизу.</p></li><li><p>Нейросети пока что плохо работают с внешними носителями. Они превращают логотип в паттерн, игнорируя фактуру, объём и характеристики специфических объектов. На данный момент, эту задачу могут прорабатывать только люди. </p></li></ul><p>Короче говоря, если футуристичный и современный логотип по силам искусственному интеллекту, глубокой проработке фирменного стиля он не обучен.</p><p>Рассказывайте в комментариях, сколько правильных ответов смогли угадать!</p><p></p>', 2, '2023-06-12 21:57:10', 490424, 92, '/ru/articles/732896/', 'В одной из частей дневника мы рассказывали о том как менялся арт игры от самого первого прототипа до того момента как мы начали дневник разработки. С тех пор прошло почти полгода и арт снова претерпел изменения.Сейчас, спустя несколько месяцев, забавно смотреть на то, что считалось финальным артом полгода назад. Теперь к изменениям приложили руку профессиональные художники и стало, как нам кажется, совсем хорошо.'),
(174, 'Collage_n — редактор для создания коллажей и спрайтов', '<figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/897/4c5/53f/8974c553f915dd0d946d8e77b552cb8d.png\" width=\"882\" height=\"652\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/897/4c5/53f/8974c553f915dd0d946d8e77b552cb8d.png\"></figure><p>Collagen работает на новой ссылке: <a href=\"https://sergey1234ovechkin.github.io/collagen_2/index.html\" rel=\"noopener noreferrer nofollow\">https://sergey1234ovechkin.github.io/collagen_2/index.html</a></p><p>Редактор позволяет вырезать, обрабатывать части изображений, создавать спрайты, коллажи, рисовать, добавлять текст, сохранять спрайты, сжимать и растягивать части изображений, работать с цветом, создавать маски, также поддерживает работу со слоями, имеется сетка для удобного позиционирования, поддерживает интернет шрифты например Google fonts. Также добавлена возможность создавать марионеточные изображения(сегментные  спрайты) и простой анимации.   </p><p>Редактор работает онлайн с github, достаточно просто перейти по ссылке выше, также его можно скачать себе и запустить на локальном сервере, например на node.js</p><p></p>', 2, '2023-06-12 21:57:11', 597808, 95, '/ru/articles/732844/', 'Здравствуйте, дорогие друзья. В последнее время Blender Studio продолжает нас радовать своими проектами трехмерных мультфильмов. «Страх эльфов» (Sprite Fright), «Заряд» (Charge) — эти мультфильмы студия выпустила за последние два года.19 января 2023 года (но, я сам узнал только недавно по рабочим материалам на Youtube‑канале проекта) был анонсирован новый проект — Pet Projects. ');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(175, 'Разработка игр на Go: шейдеры', '<p>Давненько я не писал никаких статей на Хабре.</p><br>\r\n<p>Я планировал вести серию заметок о <a href=\"https://t.me/go_gamedev\" rel=\"nofollow noopener noreferrer\">разработке игр на Go</a> и начал я с <a href=\"https://habr.com/ru/articles/671556/\">рендеринга текста</a>, но меня не хватило даже на второй текст. Что же, настало время возвращаться, ведь с того момента я успел создать ещё несколько игрушек.</p><br>\r\n<p>Сегодня я расскажу вам о <a href=\"https://ru.wikipedia.org/wiki/%D0%A8%D0%B5%D0%B9%D0%B4%D0%B5%D1%80\" rel=\"nofollow noopener noreferrer\">шейдерах</a> в <a href=\"https://github.com/hajimehoshi/ebiten\" rel=\"nofollow noopener noreferrer\">Ebitengine</a>. Большая часть примеров будет взята из <a href=\"https://quasilyte.itch.io/roboden\" rel=\"nofollow noopener noreferrer\">Roboden</a> и <a href=\"https://quasilyte.itch.io/decipherism\" rel=\"nofollow noopener noreferrer\">Decipherism</a> (обе игры имеют открытые исходные коды и вы можете найти их на гитхабе).</p><br>\r\n<img title=\"На скриншоте видны сразу несколько шейдеров, мы рассмотрим их всех\" src=\"https://habrastorage.org/r/w1560/webt/fq/jg/ed/fqjgedeltwlgpfj8h4s6v895r_8.png\" data-src=\"https://habrastorage.org/webt/fq/jg/ed/fqjgedeltwlgpfj8h4s6v895r_8.png\"><a name=\"habracut\"></a><br>\r\n<br>\r\n<h2 id=\"korotko-o-tom-chto-takoe-sheydery\">Коротко о том, что такое шейдеры</h2><br>\r\n<p>Я буду говорить только о <a href=\"https://thebookofshaders.com/01/?lan=ru\" rel=\"nofollow noopener noreferrer\">фрагментных шейдерах</a> (они же пиксельные), так как только такие поддерживаются в Ebitengine.</p><br>\r\n<p>Фрагментный шейдер — это такой алгоритм, который описывает как преобразить пиксели изображения перед его отображением. Чаще всего этот алгоритм описан в виде кода, но существуют визуальные способы создавать шейдеры. На каком именно диалекте языка шейдеров описываются эти программы зависит от движка, который вы используете, так как они могут пытаться скрыть от вас детали того, под какую именно видеокарту шейдер вы пишите (но об этом позже).</p><br>\r\n<p>Простейшим шейдером может быть программа, которая умножает alpha-канал каждого пикселя на 0.5, делая изображение полупрозрачным. Шейдеры могут быть очень комплексными и создавать эффекты, похожие на анимацию: искажения, волны, динамическое изменение цвета.</p><br>\r\n<h2 id=\"motivaciya\">Мотивация</h2><br>\r\n<p>А зачем нам вообще нужны шейдеры? Для изменения alpha-канала чаще всего есть способы, не требующие шейдеров. Создать анимацию волны можно и через несколько кадров.</p><br>\r\n<p>И отчасти это даже правда: задачу, которую можно решить шейдерами, можно решить и без них. Однако, у шейдеров есть неоспоримые преимущества:</p><br>\r\n<ul>\r\n<li>Шейдеры могут упростить имплементацию</li>\r\n<li>Они почти всегда будут более эффективны, чем альтернативы</li>\r\n<li>Код получается более поддерживаемый, чем набор компонентов, реализующих эффект</li>\r\n</ul><br>\r\n<p>Статья будет в формате задач и их решения. Мы ставить перед собой цель реализовать некоторый эффект, а затем будем воплощать это в жизнь через шейдеры.</p><br>\r\n<h2 id=\"raund-1-otobrazhenie-povrezhdeniy-na-obektah\">Раунд 1: отображение повреждений на объектах</h2><br>\r\n<p>Предположим, что у нас в игре есть здания. Вы можете захотеть графически отображать степень повреждённости здания. Как мы будем это делать?</p><br>\r\n<p>Спрайты зданий, вид сверху, четыре разновидности:</p><br>\r\n<p><img title=\"Спрайты наших зданий\" src=\"https://habrastorage.org/r/w1560/webt/qo/cd/65/qocd65hehbqrqncecv-fuace2is.png\" data-src=\"https://habrastorage.org/webt/qo/cd/65/qocd65hehbqrqncecv-fuace2is.png\"><br>\r\n</p><br>\r\n<p>Как насчёт маски повреждений, которую мы будем накладывать поверх здания? Когда повреждений нет, у этой маски будет нулевая непрозрачность. По мере получения повреждений, альфа-канал увеличивается в своём значении и маска становится более заметной.</p><br>\r\n<img title=\"4 вариации маски повреждений\" src=\"https://habrastorage.org/r/w1560/webt/xf/2d/wl/xf2dwlbrgjik6x7y-oez4jtaxs4.png\" data-src=\"https://habrastorage.org/webt/xf/2d/wl/xf2dwlbrgjik6x7y-oez4jtaxs4.png\"><br>\r\n<blockquote>Я нарисовал только одну маску и покрутил её шагом в 90 градусов, чтобы получить 4 спрайта.</blockquote><p>Теперь попробуем наложить их. Пусть количество урона равно ~100% и видимость маски близка к абсолютной.</p><br>\r\n<p><img title=\"Наложили маску повреждений на спрайты\" src=\"https://habrastorage.org/r/w1560/webt/aj/c3/uu/ajc3uuhcrywvxeao_vjbmkwaaws.png\" data-src=\"https://habrastorage.org/webt/aj/c3/uu/ajc3uuhcrywvxeao_vjbmkwaaws.png\"><br>\r\n</p><br>\r\n<p>Выглядит не очень аккуратно: такая маска подходит только для квадратных спрайтов.</p><br>\r\n<p>Что только люди не придумают, чтобы не прибегать к шейдерам:</p><br>\r\n<ul>\r\n<li>Рисуют разные по форме маски, чтобы они идеально подходили под спрайт.</li>\r\n<li>Или, наоборот, везде используют круглые текстуры повреждений, которые подойдут везде.</li>\r\n<li>Применяют режимы отрисовки (<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\" rel=\"nofollow noopener noreferrer\">composite mode</a>) по пересечению текстур.</li>\r\n</ul><br>\r\n<p>А давайте попробуем решить задачу через шейдер, не меняя картинку повреждений.</p><br>\r\n<p>Сначала я напишу шейдер, а затем уже покажу как его подключать к изображениям.</p><br>\r\n<pre><code class=\"go\">package main\n\nvar HP float // Значение уровня здоровья, от 0 до 1\n\nfunc Fragment(_ vec4, texCoord vec2, _ vec4) vec4 {\n    c := imageSrc0At(texCoord)    // Пиксель из спрайта здания\n    mask := imageSrc1At(texCoord) // Пиксель из маски\n    if c.a != 0.0 &amp;&amp; mask.a != 0.0 {\n        a := clamp(HP+(1.0-mask.a), 0.0, 1.0)\n        // Создаём более тёмный пиксель при повреждениях.\n        return vec4(c.r*a, c.g*a, c.b*a, c.a)\n    }\n    return c // Используем пиксель как есть\n}</code></pre><br>\r\n<p>Шейдеру требуются:</p><br>\r\n<ul>\r\n<li>Текстура самого изображения (Src0)</li>\r\n<li>Текстура повреждений (Src1)</li>\r\n<li>Параметр HP для вычисления цветовых компонентов</li>\r\n</ul><br>\r\n<p><img src=\"https://habrastorage.org/r/w1560/webt/eq/ht/gi/eqhtgiutnpeqyx6igdilz0mqgri.png\" data-src=\"https://habrastorage.org/webt/eq/ht/gi/eqhtgiutnpeqyx6igdilz0mqgri.png\"><br>\r\n</p><br>\r\n<p>Src0 и Src1 должны быть идентичных размеров, поэтому каждому пикселю из Src0 есть какой-то соответствующий пиксель из Src1. Для каждого пересечения непрозрачных пикселей из Src0 и Src1 мы вычисляем новый цвет.</p><br>\r\n<p>Шейдерный результат выглядит так:</p><br>\r\n<p><img title=\"Повреждения через шейдеры\" src=\"https://habrastorage.org/r/w1560/webt/uo/kc/qn/uokcqnu6jgp6ocxk37fkog_qfik.png\" data-src=\"https://habrastorage.org/webt/uo/kc/qn/uokcqnu6jgp6ocxk37fkog_qfik.png\"><br>\r\n</p><br>\r\n<p>При желании, можно доработать шейдер так, чтобы текстура повреждений не накладывалась на контуры объекта. Проверяя не только на <code>c.a</code>, можно определить, нужно ли слияние текстур в этом пикселе или нет.</p><br>\r\n<h2 id=\"o-yazyke-sheyderov-kage\">О языке шейдеров Kage</h2><br>\r\n<p>Вы обратили внимание, что шейдер мы написали на Go-подобном языке?</p><br>\r\n<p>В Ebitengine для написания шейдеров используется Kage, собственная разработка движка. Kage транслятор парсит Go-код, а затем генерирует из него сниппет на нужном диалекте. Например, на моей машине шейдер из прошлого примера преобразуется в следующий код:</p><br>\r\n<pre><code class=\"cpp\">#if defined(GL_ES)\nprecision highp float;\n#else\n#define lowp\n#define mediump\n#define highp\n#endif\n\nint modInt(int x, int y) {\n    return x - y*(x/y);\n}\n\nuniform vec2 U0;\nuniform vec2 U1[4];\n// ... много других uniform-деклараций.\n\nvarying vec2 V0;\nvarying vec4 V1;\n\nvec4 F5(in vec2 l0);\nvec4 F7(in vec2 l0);\nvec4 F12(in vec4 l0, in vec2 l1, in vec4 l2);\n\nvec4 F5(in vec2 l0) { /* ... */ }\n\nvec4 F7(in vec2 l0) { /* ... */ }\n\nvec4 F12(in vec4 l0, in vec2 l1, in vec4 l2) {\n    vec4 l3 = vec4(0);\n    vec4 l4 = vec4(0);\n    l3 = F5(l1);\n    l4 = F7(l1);\n    if ((((l3).a) != (0.0)) &amp;&amp; (((l4).a) != (0.0))) {\n        float l5 = float(0);\n        l5 = clamp((U8) + ((1.0) - ((l4).a)), 0.0, 1.0);\n        return vec4(((l3).r)*(l5), ((l3).g)*(l5), ((l3).b)*(l5), (l3).a);\n    }\n    return l3;\n}\n\nvoid main(void) {\n    gl_FragColor = F12(gl_FragCoord, V0, V1);\n}</code></pre><br>\r\n<p>Знакомые для Go концепции тоже неплохо переводятся:</p><br>\r\n<pre><code class=\"cpp\">// func F0() (int, int) { return 1, 2 }\nvoid F0(out int l0, out int l1) {\n    l0 = 1;\n    l1 = 2;\n    return;\n}</code></pre><br>\r\n<p>Моё мнение насчёт Kage неоднозначное. С одной стороны, я понимаю, почему добавили этот слой абстракции. С другой стороны, Kage затрудняет работу с шейдерами как новичкам, там и опытным создателям шейдеров. Первым сложнее изучать нечто с минимальным количеством документации, а вторым сложнее применить уже существующие знания.</p><br>\r\n<p>Плюсы Kage:</p><br>\r\n<ul>\r\n<li>Удобства редактирования как у Go: работает gofmt, автодополнение, go to definition</li>\r\n<li>Работают знакомые для Go концепции, типа multi-value return.</li>\r\n<li>Немного больше переносимости из-за возможности транслировать во что угодно.</li>\r\n<li>Kage-слой позволяет движку лучше контролировать шейдеры (завернуть их как требуется).</li>\r\n<li>Это прозвучит смешно, но Kage — это приятный для автора Ebitengine велосипед.</li>\r\n</ul><br>\r\n<p>Минусы Kage:</p><br>\r\n<ul>\r\n<li>Сложнее портировать шейдеры; приходится переписывать на Kage.</li>\r\n<li>Меньше документации, примеров, туториалов</li>\r\n<li>Меньше шейдерного тулинга (жду визуального редактора шейдеров от <a href=\"https://github.com/sedyh/\" rel=\"nofollow noopener noreferrer\">Артёма</a>).</li>\r\n<li>На практике отлаживать Kage сложнее.</li>\r\n</ul><br>\r\n<p>Вот некоторые полезные сведения о Kage, которые нам вскоре пригодятся:</p><br>\r\n<ul>\r\n<li>Точка входа — функция <code>Fragment()</code>, её параметры мы будем разбирать отдельно</li>\r\n<li>Есть типы <code>int</code>, <code>float</code>, <code>vec2</code>, <code>vec4</code></li>\r\n<li>Доступны встроенные функции, типа <code>distance()</code>, <code>clamp()</code> и <code>imageSrc0At()</code></li>\r\n<li>Мы можем определять новые функции и константы (только числовые)</li>\r\n<li>Доступны фичи типа <a href=\"https://ebitengine.org/en/documents/shader.html#Swizzling\" rel=\"nofollow noopener noreferrer\">свиззлинга</a></li>\r\n<li>Арифметические операции типа <code>*</code> так же работают для векторов (<code>vec2</code>, <code>vec4</code>)</li>\r\n</ul><br>\r\n<p>Координаты описываются через <code>vec2</code> (x, y), цвета через <code>vec4</code> (r, g, b, a).</p><br>\r\n<h2 id=\"podklyuchenie-sheydera-k-izobrazheniyu\">Подключение шейдера к изображению</h2><br>\r\n<p>Будем считать, что на игровой сцене у нас находятся объекты <code>Sprite</code>. Они содержат в себе <a href=\"https://pkg.go.dev/github.com/hajimehoshi/ebiten/v2#Image\" rel=\"nofollow noopener noreferrer\"><code>*ebiten.Image</code></a> и, опционально, скомпилированный шейдер.</p><br>\r\n<pre><code class=\"go\">type Sprite struct {\n    x, y float64\n\n    img *ebiten.Image\n\n    shader        *ebiten.Shader\n    shaderTexture *ebiten.Image\n    shaderParams  map[string]any\n}</code></pre><br>\r\n<p>Отрисовка спрайтов без шейдеров может выглядеть так:</p><br>\r\n<pre><code class=\"go\">func (s *Sprite) Draw(dst *ebiten.Image) {\n    var options ebiten.DrawImageOptions\n    options.GeoM.Translate(s.x, s.y)\n    dst.DrawImage(s.img, &amp;options)\n}</code></pre><br>\r\n<p>Далее мы в своём корневом <a href=\"https://pkg.go.dev/github.com/hajimehoshi/ebiten#Game\" rel=\"nofollow noopener noreferrer\"><code>game.Draw</code></a> вызываем <code>Sprite.Draw()</code> и получаем отрисовку всех спрайтов на экране.</p><br>\r\n<p>Теперь добавим рендеринг с шейдерами:</p><br>\r\n<pre><code class=\"go\">func (s *Sprite) Draw(dst *ebiten.Image) {\n    // Если шейдера нет, то делаем всё как раньше.\n    if s.shader == nil {\n        var options ebiten.DrawImageOptions\n        options.GeoM.Translate(s.x, s.y)\n        dst.DrawImage(s.img, &amp;options)\n        return\n    }\n    // Здесь нам нужен другой options-тип.\n    var options ebiten.DrawRectShaderOptions\n    options.GeoM.Translate(s.x, s.y)\n    options.Images[0] = s.img           // Src0\n    options.Images[1] = s.shaderTexture // Src1\n    options.Uniforms = s.shaderParams\n    b := s.img.Bounds()\n    drawDest.DrawRectShader(b.Dx(), b.Dy(), s.shader, &amp;options)\n}</code></pre><br>\r\n<p>Кода стало больше, но ничего принципиально сложного там нет. Нам нужно правильно заполнить <a href=\"https://pkg.go.dev/github.com/hajimehoshi/ebiten/v2#DrawRectShaderOptions\" rel=\"nofollow noopener noreferrer\"><code>DrawRectShaderOptions</code></a> и вызвать <a href=\"https://pkg.go.dev/github.com/hajimehoshi/ebiten/v2#Image.DrawRectShader\" rel=\"nofollow noopener noreferrer\"><code>DrawRectShader()</code></a> вместо <a href=\"https://pkg.go.dev/github.com/hajimehoshi/ebiten/v2#Image.DrawImage\" rel=\"nofollow noopener noreferrer\"><code>DrawImage()</code></a>.</p><br>\r\n<p>Откуда берутся <code>s.shaderParams</code> и <code>s.shaderTexture</code>? Я предлагаю закреплять их за спрайтом единожды при установке шейдера:</p><br>\r\n<pre><code class=\"go\">type ShaderParams struct {\n    Compiled *ebiten.Shader\n    Uniforms map[string]any\n    Src1     *ebiten.Image\n    // ... при желании можно добавить поля Src2, Src3\n}\n\nfunc (s *Sprite) SetShader(params ShaderParams) {\n    s.shader = params.Compiled\n    s.shaderParams = params.Uniforms\n    s.shaderTexture = params.Src1\n}</code></pre><br>\r\n<p><a href=\"https://pkg.go.dev/github.com/hajimehoshi/ebiten/v2#Shader\" rel=\"nofollow noopener noreferrer\"><code>*ebiten.Shader</code></a> можно переиспользовать для всех спрайтов, которым нужен эффект, реализуемый шейдером. Аналогично с <code>*ebiten.Image</code>, который будет использоваться как <code>Src1</code>. А вот \"данные\" (uniforms) для каждого спрайта будут свои.</p><br>\r\n<p>Так как <code>map</code> — это обёртка над указателем, изменения снаружи будут видны внутри <code>Sprite</code>. Этим мы будем пользоваться для изменения параметров шейдера.</p><br>\r\n<p>Код объекта, который использует спрайт с шейдером, будет похож на такой:</p><br>\r\n<pre><code class=\"go\">func (b *Building) Init() {\n    b.shaderData = map[string]any{\"HP\": 1.0}\n    b.sprite = NewSprite()\n    b.sprite.SetShader(damageShader, damageMask, b.shaderData)\n}\n\nfunc (b *Building) OnDamage(damage float64) {\n    b.hp -= damage\n    if b.hp &lt;= 0 {\n        b.destroy()\n        return\n    }\n    // Обновляем параметр шейдера.\n    // Обратите внимание: использовать нужно float32.\n    // Поддерживаются типа int, float32 и []float32, но не float64.\n    b.shaderData[\"HP\"] = float32(b.hp / b.maxHP)\n}</code></pre><br>\r\n<ul>\r\n<li><code>damageShader</code> — это <code>*ebiten.Shader</code>, созданный из нашего шейдер-сниппета</li>\r\n<li><code>damageMask</code> — это <code>*ebiten.Image</code>, который содержит маску повреждений</li>\r\n<li><code>b.shaderData</code> принадлежит объекту <code>Building</code>, а шейдер эти данные лишь читает</li>\r\n</ul><br>\r\n<p>Наш скрипт шейдера — это обычный файл, данные. Хранить его можно или рядом с приложением, либо встраивать прямо в бинарник через <code>go:embed</code>. Чтобы скомпилировать шейдер, нам нужно байтики исходного кода шейдера передать функции <a href=\"https://pkg.go.dev/github.com/hajimehoshi/ebiten#NewShader\" rel=\"nofollow noopener noreferrer\"><code>ebiten.NewShader()</code></a>.</p><br>\r\n<h2 id=\"raund-2-pick-effekt\">Раунд 2: pick-эффект</h2><br>\r\n<p>В интернете можно найти шрифты, которые выглядят как что-то рукописное. Однако каждая буква будет выглядеть идентично, что нереалистично. Нужна какая-то энтропия.</p><br>\r\n<p>Достичь этой энтропии можно по-разному, но я в игре <a href=\"https://quasilyte.itch.io/decipherism\" rel=\"nofollow noopener noreferrer\">Decipherism</a> просто рандомно перемешивал некоторые соседние пиксели при отрисовке текста:</p><br>\r\n<p><img title=\"Сравнение результата с шейдером и без\" src=\"https://habrastorage.org/r/w1560/webt/n1/k-/yk/n1k-yk7m4ggcr1j4fzlhxkeoluc.png\" data-src=\"https://habrastorage.org/webt/n1/k-/yk/n1k-yk7m4ggcr1j4fzlhxkeoluc.png\"><br>\r\n</p><br>\r\n<p>Давайте вспомним сигнатуру фрагментного шейдера (игнорируя неинтересные параметры):</p><br>\r\n<pre><code class=\"go\">func Fragment(_ vec4, texCoord vec2, _ vec4) vec4</code></pre><br>\r\n<p><code>texCoord</code> — это тексельная координата на текстуре, из которой мы читаем пиксели (source) для наложения на целевое изображение (destination).</p><br>\r\n<p>О текселях нам достаточно знать то, что они имеют значение в диапазоне от 0 до 1. Условно, если изображение имеет размер 500 пикселей, то 0.5 текселей будут описывать размер в 250 пикселей в контексте этого изображения.</p><br>\r\n<p>Функция <code>imageSrc0At()</code> принимает <strong>тексельные</strong> координаты. Но что, если мы хотим оперировать на уровне пикселей? Преобразования между текселями в пиксели и обратно возможны.</p><br>\r\n<p>Ebitengine позволяет определять функции для шейдеров, чем мы и воспользуемся:</p><br>\r\n<pre><code class=\"go\">// tex2pixCoord преобразует тексельную координату texCoord\n// в пиксельную координату, учитывая смещение на атласе.\nfunc tex2pixCoord(texCoord vec2) vec2 {\n    pixSize := imageSrcTextureSize()\n    originTexCoord, _ := imageSrcRegionOnTexture()\n    actualTexCoord := texCoord - originTexCoord\n    actualPixCoord := actualTexCoord * pixSize\n    return actualPixCoord\n}</code></pre><br>\r\n<p>Ebitengine объединяет несколько изображений в атласы, поэтому чаще всего наш source image находится на каком-то смещении от настоящей нулевой координаты. Из-за этого нам нужно вычитать origin для транслирования тексельной координаты в такую, которую мы затем можем интерпретировать как обычную пиксельную координату на изображении.</p><br>\r\n<p>Алгоритм у нас будет такой:</p><br>\r\n<ol>\r\n<li>Преобразуем тексели в пиксельные координаты;</li>\r\n<li>Применяем логику над пикселями;</li>\r\n<li>Конвертируем пиксели в тексели в самом финале.</li>\r\n</ol><br>\r\n<p>Для последнего шага нужна будет обратная <code>tex2pixCoord()</code> операция:</p><br>\r\n<pre><code class=\"go\">func pix2texCoord(actualPixCoord vec2) vec2 {\n    pixSize := imageSrcTextureSize()\n    actualTexCoord := actualPixCoord / pixSize\n    originTexCoord, _ := imageSrcRegionOnTexture()\n    texCoord := actualTexCoord + originTexCoord\n    return texCoord\n}</code></pre><br>\r\n<p>Далее нам нужно применить что-то вроде фильтра <a href=\"https://docs.gimp.org/2.10/nl/gimp-filter-noise-pick.html\" rel=\"nofollow noopener noreferrer\">pick</a>. Я могу предложить такую реализацию:</p><br>\r\n<pre><code class=\"go\">func applyPixPick(pixCoord vec2, dist float, m, hash int) vec2 {\n    // dist - на сколько пикселей сдвигаем;\n    // dir - куда именно сдвигаем.\n    // В Kage (язык шейдеров) пока нет switch,\n    // поэтому используем if/else.\n    dir := hash % m\n    // Если явно не приводить литерал к int, то возникнет ошибка\n    // \"operands of `==\' must have the same type\",\n    // потому что Ebitengine конвертирует литерал 0 в 0.0\n    // и драйвер будет считать это типом float.\n    if dir == int(0) {\n        pixCoord.x += dist\n    } else if dir == int(1) {\n        pixCoord.x -= dist\n    } else if dir == int(2) {\n        pixCoord.y += dist\n    } else if dir == int(3) {\n        pixCoord.y -= dist\n    }\n    // А иначе никуда не сдвигаем.\n    return pixCoord\n}</code></pre><br>\r\n<blockquote>Чем выше параметр <code>m</code>, тем чаще пиксель не будет сдвигаться ни в одну из сторон.</blockquote><p>Остаётся лишь один вопрос — а откуда взять <code>hash</code>? По идее, это некоторое псевдорандомное значение, которое определяет что делать с конкретным пикселем. Никакого <a href=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\" rel=\"nofollow noopener noreferrer\"><code>rand()</code></a> внутри шейдеров, конечно же, нет.</p><br>\r\n<p>Напишем функцию генерации псевдослучайных чисел:</p><br>\r\n<pre><code class=\"go\">func shaderRand(pixCoord vec2) int {\n    return int(pixCoord.x+pixCoord.y) * int(pixCoord.y*5)\n}</code></pre><br>\r\n<p>С помощью всех созданных выше функций выразим фрагментный процессор:</p><br>\r\n<pre><code class=\"go\">func Fragment(_ vec4, texCoord vec2, _ vec4) vec4 {\n    c := imageSrc0At(texCoord)\n    actualPixCoord := tex2pixCoord(texCoord)\n    if c.a != 0.0 {\n        h := shaderRand(actualPixCoord)\n        p := applyPixPick(actualPixCoord, 1.0, 15, h)\n        return imageSrc0At(pix2texCoord(p))\n    }\n    return c\n}</code></pre><br>\r\n<p>Этот шейдер будет производить желаемый нами pick-эффект.</p><br>\r\n<h2 id=\"raund-3-effekt-crt-displeya\">Раунд 3: эффект CRT-дисплея</h2><br>\r\n<p>В <a href=\"https://quasilyte.itch.io/decipherism\" rel=\"nofollow noopener noreferrer\">Decipherism</a> мне нужно было реализовать терминальный экран, который выглядел бы в стиле ретро. На экране терминала выводились элементы схемы, реализующие некий кодирующий алгоритм.</p><br>\r\n<p>Вот что из этого получилось:</p><br>\r\n<p><img title=\"Шейдеры включены\" src=\"https://habrastorage.org/webt/zw/13/9r/zw139rxmwe6fvvlhxl861pdfje8.gif\" data-src=\"https://habrastorage.org/webt/zw/13/9r/zw139rxmwe6fvvlhxl861pdfje8.gif\"><br>\r\n</p><br>\r\n<p>Если выключить шейдер:</p><br>\r\n<p><img title=\"Шейдеры выключены\" src=\"https://habrastorage.org/r/w1560/webt/5g/m5/nv/5gm5nvpsn3ruarhtyvsxtl_aony.png\" data-src=\"https://habrastorage.org/webt/5g/m5/nv/5gm5nvpsn3ruarhtyvsxtl_aony.png\"><br>\r\n</p><br>\r\n<p>Здесь нам потребуется более качественная генерация псевдорандомных чисел. Для этого мы введём два внешних параметра:</p><br>\r\n<ul>\r\n<li><code>Tick</code> — некоторое скользящее со временем значение</li>\r\n<li><code>Seed</code> — для каждого элемента будет создан свой сид для рандома</li>\r\n</ul><br>\r\n<p><code>shaderRand()</code> станет выглядеть следующим образом:</p><br>\r\n<pre><code class=\"go\">func shaderRand(pixCoord vec2) (seedMod, randValue int) {\n    pixSize := imageSrcTextureSize()\n    pixelOffset := int(pixCoord.x) + int(pixCoord.y*pixSize.x)\n    seedMod = pixelOffset % int(Seed)\n    pixelOffset += seedMod\n    return seedMod, pixelOffset + int(Seed)\n}</code></pre><br>\r\n<blockquote><code>seedMod</code> нам понадобится как дополнительный источник энтропии.</blockquote><p>Кроме этого, мы хотим создавать некие анимированные помехи. Я бы сказал, что это похоже на эффект <a href=\"https://docs.gimp.org/2.10/en/gimp-filter-video-degradation.html\" rel=\"nofollow noopener noreferrer\">video degradation</a>, но менее сильно выраженный.</p><br>\r\n<pre><code class=\"go\">func applyVideoDegradation(y float, c vec4) vec4 {\n    if c.a != 0.0 {\n        // Каждый 4-ый пиксель по оси Y будет затенён.\n        if int(y+Tick)%4 != int(0) {\n            return c * 0.6\n        }\n    }\n    return c\n}</code></pre><br>\r\n<p>Финальный код фрагментного шейдера:</p><br>\r\n<pre><code class=\"go\">func Fragment(pos vec4, texCoord vec2, _ vec4) vec4 {\n    c := imageSrc0At(texCoord)\n\n    actualPixCoord := tex2pixCoord(texCoord)\n    if c.a != 0.0 {\n        seedMod, h := shaderRand(actualPixCoord)\n        dist := 1.0\n        if seedMod == int(0) {\n            dist = 2.0\n        }\n        p := applyPixPick(actualPixCoord, dist, 5, h)\n        return applyVideoDegradation(pos.y, imageSrc0At(pix2texCoord(p)))\n    }\n\n    return c\n}</code></pre><br>\r\n<p>Здесь я впервые использую параметр <code>pos</code>. Это позиция в целевом (destination) изображении в пикселях. Используя это значение я избегаю проблем при вращении source текстур. Таким образом, волны помех всегда идут сверху вниз, а не справа-налево, как в случае поворота на 90 градусов.</p><br>\r\n<h2 id=\"raund-4-ciklichnaya-animaciya-tekstury\">Раунд 4: цикличная анимация текстуры</h2><br>\r\n<p>Возьмём текстуру энергетического луча:</p><br>\r\n<p><img title=\"Текстура для лазера\" src=\"https://habrastorage.org/r/w1560/webt/ej/uq/d2/ejuqd2gdaviqspfyk1z4ler1cs8.png\" data-src=\"https://habrastorage.org/webt/ej/uq/d2/ejuqd2gdaviqspfyk1z4ler1cs8.png\"><br>\r\n</p><br>\r\n<p>… и начнём циклично перемещать её по оси X:</p><br>\r\n<p><img title=\"Лазер с шейдером 1\" src=\"https://habrastorage.org/webt/eu/wy/lh/euwylhgbj0jb5q5pe2gbtxvm_pw.gif\" data-src=\"https://habrastorage.org/webt/eu/wy/lh/euwylhgbj0jb5q5pe2gbtxvm_pw.gif\"><br>\r\n</p><br>\r\n<p>Вот ещё пример:</p><br>\r\n<p><img title=\"Лазер с шейдером 2\" src=\"https://habrastorage.org/webt/wt/cl/fm/wtclfmg0rico_9la1n0oqbfl_w0.gif\" data-src=\"https://habrastorage.org/webt/wt/cl/fm/wtclfmg0rico_9la1n0oqbfl_w0.gif\"><br>\r\n</p><br>\r\n<p>Первая попытка решения:</p><br>\r\n<pre><code class=\"go\">var Time float\n\nfunc Fragment(_ vec4, texCoord vec2, _ vec4) vec4 {\n    pixSize := imageSrcTextureSize()\n    _, srcRegion := imageSrcRegionOnTexture()\n    width := pixSize.x * srcRegion.x\n    actualPixCoord := tex2pixCoord(texCoord)\n    p := vec2(slide(actualPixCoord.x, width), actualPixCoord.y)\n    return imageSrc0At(pix2texCoord(p))\n}\n\nfunc slide(v, size float) float {\n    return mod(v-(100*Time), size)\n}</code></pre><br>\r\n<p>Результат применения:</p><br>\r\n<img src=\"https://habrastorage.org/webt/se/qw/o2/seqwo2qrzblwbv5dafni5trc344.gif\" data-src=\"https://habrastorage.org/webt/se/qw/o2/seqwo2qrzblwbv5dafni5trc344.gif\"><br>\r\n<blockquote>Направление движения анимации зависит от того, уменьшается или увеличивается <code>Time</code>.</blockquote><p>Это почти то, что нам нужно, но цикл получается резким из-за грубого перехода на обоих концах отрезка. Чтобы получить результат, как в примерах выше, нужно добавить немного кода в этот шейдер:</p><br>\r\n<pre><code class=\"go\">func Fragment(_ vec4, texCoord vec2, _ vec4) vec4 {\n    pixSize := imageSrcTextureSize()\n    _, srcRegion := imageSrcRegionOnTexture()\n    width := pixSize.x * srcRegion.x\n    actualPixCoord := tex2pixCoord(texCoord)\n    p := vec2(slide(actualPixCoord.x, width), actualPixCoord.y)\n\n    c := imageSrc0At(pix2texCoord(p))\n    const cutoffThreshold = 10.0\n    if actualPixCoord.x &lt;= cutoffThreshold {\n        c *= actualPixCoord.x * 0.1\n    } else if actualPixCoord.x &gt;= (width - cutoffThreshold) {\n        c *= (width - actualPixCoord.x) * 0.1\n    }\n\n    return c\n}</code></pre><br>\r\n<p>Мы добавили градиент, уменьшающий непрозрачность изображения. Чем ближе к концам отрезка, тем выше прозрачность.</p><br>\r\n<p>А знаете, что ещё можно реализовать через похожий шейдер? Планеты. Нам потребуется прямоугольная текстура.</p><br>\r\n<p><img src=\"https://habrastorage.org/r/w1560/webt/kx/y9/mo/kxy9moqosqov78akosruiifoql0.png\" data-src=\"https://habrastorage.org/webt/kx/y9/mo/kxy9moqosqov78akosruiifoql0.png\"><br>\r\n</p><br>\r\n<p>Шейдер будет похож на предыдущие, но с добавлением тени и радиуса отрисовки:</p><br>\r\n<pre><code class=\"go\">var Time float\n\nfunc Fragment(_ vec4, texCoord vec2, _ vec4) vec4 {\n    _, srcRegion := imageSrcRegionOnTexture()\n    pixSize := imageSrcTextureSize()\n    sizes := pixSize * srcRegion\n    width := sizes.x\n    height := sizes.y\n    actualPixCoord := tex2pixCoord(texCoord)\n\n    // То, что дальше радиуса окружности (32) мы рендерить не будем.\n    // Так мы оставляем из всей текстуры только центральную часть.\n    const planetSize = 64.0\n    center := vec2(width, height) * 0.5\n    if distance(center, actualPixCoord) &gt; planetSize {\n        return vec4(0)\n    }\n\n    // Свет будет падать чуть левее и выше от центра.\n    lightPos := vec2(center.x*0.85, center.y*0.9)\n    lightDist := distance(lightPos, actualPixCoord) / planetSize\n    colorMultiplier := vec4(1, 1, 1, 1)\n    // Чем больше дистанция от освещённой точки, тем темнее будет цвет.\n    colorMultiplier.xyz *= clamp(1.8-lightDist*1.6, 0.0, 1.0)\n\n    // А дальше применяем уже известную нам анимацию.\n    p := vec2(slide(actualPixCoord.x, width), actualPixCoord.y)\n    return imageSrc0At(pix2texCoord(p)) * colorMultiplier\n}</code></pre><br>\r\n<p>Результат применения шейдера:</p><br>\r\n<img src=\"https://habrastorage.org/webt/n9/zi/qs/n9ziqsfxvnbx3zikgdjvtqpdto4.gif\" data-src=\"https://habrastorage.org/webt/n9/zi/qs/n9ziqsfxvnbx3zikgdjvtqpdto4.gif\"><br>\r\n<h2 id=\"raund-5-effekt-postroeniya-zdaniya\">Раунд 5: эффект построения здания</h2><br>\r\n<p>В <a href=\"https://quasilyte.itch.io/roboden\" rel=\"nofollow noopener noreferrer\">Roboden</a> можно строить базы и турели. Анимация конструирования нового здания сделана через шейдеры.</p><br>\r\n<p>В игре это выгдядит следующим образом:</p><br>\r\n<p><img title=\"Строительство колонии в Roboden\" src=\"https://habrastorage.org/webt/-5/0h/ol/-50holsyyz4vg7in_qhx92hyuv8.gif\" data-src=\"https://habrastorage.org/webt/-5/0h/ol/-50holsyyz4vg7in_qhx92hyuv8.gif\"><br>\r\n</p><br>\r\n<p>Для удобства, вот фреймы из анимации выше, в изоляции:</p><br>\r\n<p><img title=\"Несколько стадий строительства\" src=\"https://habrastorage.org/r/w1560/webt/if/eh/et/ifehetkbibgsa46_s3emuxu3kjk.png\" data-src=\"https://habrastorage.org/webt/if/eh/et/ifehetkbibgsa46_s3emuxu3kjk.png\"><br>\r\n</p><br>\r\n<p>Параметр <code>t</code> (в шейдере назван <code>Time</code>) управляется логикой игры. Когда рабочие строят здание, <code>t</code> увеличивается. <code>t</code> — это нормализованное значение прогресса строительства (от 0 до 1).</p><br>\r\n<p>Шейдер будет представлять из себя смесь того, что мы сегодня уже использовали:</p><br>\r\n<ul>\r\n<li>Отрисовка только той части текстуры, что находится за пределами окружности;</li>\r\n<li>Граница отрисовки затемняется, чтобы создать ощущение объёма;</li>\r\n<li>Пиксели близ контура перемещаются (эффект pick) и перекрашиваются.</li>\r\n</ul><br>\r\n<p>Начнём с введения хелпер-функций:</p><br>\r\n<pre><code class=\"go\">func shaderRand(p vec2) int {\n    return int(p.x+p.y) * int(p.y*5)\n}\n\nfunc sourceSize() vec2 {\n    pixSize := imageSrcTextureSize()\n    _, srcRegion := imageSrcRegionOnTexture()\n    return pixSize.x * srcRegion\n}</code></pre><br>\r\n<p>Сам шейдер имеет много параметров, которые я вручную подбирал для желаемого результата. Специально для статьи я немного изменил его, чтобы он стал более универсальным.</p><br>\r\n<pre><code class=\"go\">func Fragment(_ vec4, texCoord vec2, _ vec4) vec4 {\n    // texCoord гарантированно в пределах Src0, поэтому можно\n    // использовать unsafe версию, которая работает немного быстрее,\n    // но out-of-bounds доступ будет вести к неопределённому поведению.\n    c := imageSrc0UnsafeAt(texCoord)\n    if c.a == 0 {\n        return c\n    }\n\n    actualPixPos := tex2pixCoord(texCoord)\n\n    // Вычисления будем завязывать на вычисляемый размер текстуры.\n    // Это позволит использовать шейдер для изображений разного размера.\n    sizes := sourceSize()\n    width := sizes.x // Изображение квадратное, поэтому достаточно width\n\n    // Задаём окружность прорисовки и её перемещение по dt.\n    initialY := -2.0\n    offsetY := width * 0.15 * Time\n    circleCenter := vec2(width*0.5, initialY-offsetY)\n    dist := distance(actualPixPos, circleCenter)\n\n    progress := 1.4 - Time\n    if dist &gt; ((width * 0.95) * progress) {\n        // То, что уже далеко от окружности, рисуем без искажений.\n        return c\n    }\n\n    spread := 0\n    colorMultiplier := vec4(0)\n\n    // Определим несколько колец по диапазону дистанций.\n    // Свича нет, поэтому идём через if/else.\n    if dist &gt; ((width * 0.85) * progress) {\n        spread = 15\n        colorMultiplier = vec4(1, 1.1, 1.3, 1.0)\n    } else if dist &gt; ((width * 0.75) * progress) {\n        spread = 11\n        colorMultiplier = vec4(0.9, 1.2, 1.6, 1.0)\n    } else if dist &gt; ((width * 0.65) * progress) {\n        spread = 7\n        colorMultiplier = vec4(0.8, 1.4, 2.0, 1.0)\n    } else if dist &gt; ((width * 0.62) * progress) {\n        spread = 6\n        colorMultiplier = vec4(0.25, 0.25, 0.25, 1.0)\n    } else {\n        // Слишком близко к окружности, эту область пропускаем.\n        return vec4(0)\n    }\n\n    h := shaderRand(actualPixPos)\n    p := applyPixPick(actualPixPos, 1, spread, h)\n    if p == actualPixPos {\n        // Если пиксель не переместился, рисуем его без изменения цвета.\n        return c\n    }\n    return imageSrc0At(pix2texCoord(p)) * colorMultiplier\n}</code></pre><br>\r\n<p>С увеличением <code>Time</code> мы смещаем абстрактную окружность вверх, что меняет распределение отображаемых пикселей из-за обновлённой дистанции от центра окружности.</p><br>\r\n<p>Это был последний из шейдеров, который я хотел вам показать в рамках этой статьи.</p><br>\r\n<p>Хочется ещё шейдеров? Откройте <a href=\"https://github.com/hajimehoshi/ebiten/tree/main/examples/shader\" rel=\"nofollow noopener noreferrer\">examples/shader</a> из репозитория Ebitengine, там можно найти:</p><br>\r\n<ul>\r\n<li>Расстворение (dissolve)</li>\r\n<li>Радиальное размытие</li>\r\n<li>Эффект отражений в воде</li>\r\n<li>Хроматическую аберрацию</li>\r\n</ul><br>\r\n<p>Напоследок поделюсь с вами несколькими рекомендациями по работе с шейдерами в Ebitengine:</p><br>\r\n<ul>\r\n<li>Храните исходники шейдеров внутри бинарника, через <code>go:embed</code>.</li>\r\n<li>Компилируйте каждый шейдер только один раз, переиспользуйте <code>*ebiten.Shader</code>.</li>\r\n<li>Когда шейдер не нужен*, рисуйте через <code>DrawImage</code>, а не <code>DrawRectShader</code>.</li>\r\n<li>Пишите больше хелпер-функций в шейдерах, они значительно улучшают читабельность.</li>\r\n<li>Работайте на уровне пикселей, если это делает алгоритм понятнее.</li>\r\n</ul><br>\r\n<blockquote>(*) Пример: маска повреждения при <code>HP=1.0</code> не будет менять отображение, поэтому можно рисовать спрайт через <code>DrawImage()</code>, а не <code>DrawRectShader()</code>.</blockquote><br>\r\n<h2 id=\"chek-list-dlya-zainteresovannyh\">Чек-лист для заинтересованных</h2><br>\r\n<p>Хотите попробовать писать игрушки на Go, но не знаете, с чего начать?</p><br>\r\n<ol>\r\n<li>Вступайте в <a href=\"https://t.me/go_gamedev\" rel=\"nofollow noopener noreferrer\">русскоязычное сообщество разработки игр на Go</a>.</li>\r\n<li>Если знаете английский, <a href=\"https://discord.gg/3tVdM5H8cC\" rel=\"nofollow noopener noreferrer\">подключайтесь к официальному дискорду</a>.</li>\r\n<li>Пройдите <a href=\"https://ebitengine.org/en/tour/\" rel=\"nofollow noopener noreferrer\">мини-тур</a> по Ebitengine.</li>\r\n<li>Придумайте идею для своей первой игры на Go, что-то не очень сложное.</li>\r\n</ol><br>\r\n<p>Параллельно с этим:</p><br>\r\n<ul>\r\n<li>По мере создания игры, подглядывайте в <a href=\"https://github.com/hajimehoshi/ebiten/tree/main/examples\" rel=\"nofollow noopener noreferrer\">examples</a>.</li>\r\n<li>Если ищете 3rd-party библиотеки, загляните в <a href=\"https://github.com/sedyh/awesome-ebitengine\" rel=\"nofollow noopener noreferrer\">awesome-ebitengine</a>.</li>\r\n<li>Если не справляетесь, пишите в сообществах, вам точно помогут.</li>\r\n</ul><br>\r\n<p>Понравилась эта статья и вы хотите сказать автору спасибо? Ставьте плюсик. Мне ещё есть, о чём рассказать, а ваша поддержка может увеличить шанс появления следующих текстов из серии.</p><br>\r\n<p>Если хочется порадовать меня ещё сильнее, то можете посмотреть на мои игры. Они все с открытыми исходными кодами, но только две из них имеют отдельный репозиторий. Ссылочки в конце статьи.</p><br>\r\n<h2 id=\"ssylki-i-poleznye-resursy\">Ссылки и полезные ресурсы</h2><br>\r\n<ul>\r\n<li><a href=\"https://github.com/hajimehoshi/ebiten\" rel=\"nofollow noopener noreferrer\">Ebitengine</a></li>\r\n<li><a href=\"https://t.me/go_gamedev\" rel=\"nofollow noopener noreferrer\">Русскоязычное сообщество разработки игр на Go</a></li>\r\n<li><a href=\"https://github.com/tinne26/kage-desk\" rel=\"nofollow noopener noreferrer\">Kage desk</a> — англоязычные материалы по языку шейдеров</li>\r\n<li><a href=\"https://ebitengine.org/en/documents/shader.html\" rel=\"nofollow noopener noreferrer\">Страница документации шейдеров из Ebitengine</a></li>\r\n<li><a href=\"https://github.com/quasilyte/roboden-game\" rel=\"nofollow noopener noreferrer\">Репозиторий игры Roboden</a></li>\r\n<li><a href=\"https://github.com/quasilyte/decipherism-game/\" rel=\"nofollow noopener noreferrer\">Репозиторий игры Decipherism</a></li>\r\n<li><a href=\"https://github.com/sedyh/awesome-ebitengine\" rel=\"nofollow noopener noreferrer\">awesome-ebitengine</a></li>\r\n</ul>', 1, '2023-06-12 21:57:12', 376544, 77, '/ru/articles/730848/', 'У нас образовался некоторый перерыв в дневниках разработки, т.к. основную часть о ходе разработки игры мы уже описали. Все это время мы были заняты подготовкой игры к производству, версткой макетов компонентов, правилами игры и их оформлением.Сейчас, когда макеты уже сданы в печать самое время разобрать накопившиеся архивы рабочих прототипов, показать их вам и рассказать о роли каждой итерации в ходе разработки игры.Что такое рабочий прототип настольной игры? Собственно, это компоненты игры, как правила изготовленные вручную для того чтобы можно было сыграть в игру и понять игровую механику и как пользоваться всеми ее компонентами с точки зрения эргономики. Также рабочий прототип дает возможность понять как будут выглядеть компоненты игры при печати, особенно если прототип сделан не по классике на черно‑белом лазерном принтере, а с полноценной цветной печатью.Мы уже писали о том, как менялся пиксельный стиль игры. От почти примитивного 8-битного, до финального, который условно можно назвать 16- битным.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(176, 'Как ещё бороться с выгоранием', '<p>Каждый второй, читающий этот пост пережил выгорание (Burnout), а 75% выгоревших теряют место работы. Как дизайн-менеджер со стажем 18+ лет, я убедился, что основные причины выгорания часто связаны не только с работой, и стресс может накапливаться по иным причинам. Эта статья о том, какие ещё причины есть, и что с ними делать.</p><p>В вопросах физиологии мне помогала разбираться специалист международной ассоциации спортивных наук и Gray Institute Полина Рязанова. Я благодарен ей за поддержку и знания в этой области.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/d92/de4/c5c/d92de4c5c16a3218614c106b8edc142b.png\" alt=\"Untitled\" title=\"Stutz: Directed by Jonah Hill. With Jonah Hill, Phil Stutz\" width=\"1422\" height=\"750\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d92/de4/c5c/d92de4c5c16a3218614c106b8edc142b.png\"><div><figcaption><em>Stutz</em>: Directed by Jonah Hill. With Jonah Hill, Phil <em>Stutz</em></figcaption></figure><p>На Netflix есть классная документалка «Stutz» о Филе Штутсе, психотерапевте актера Джоны Хилла. Фил и Джона просто и весело рассказывают о ментальном здоровье и инструментах для борьбы с трудностями. Там есть про структуру работы с депрессией и это очень похоже на то, что рекомендуют от выгорания.</p><p>Депрессия и выгорание — не одно и то же, однако инструменты схожие.</p><h4>Структура работы с ментальным здоровьем</h4><ol><li><p>Базовый уровень — отношение со своим физическим телом</p></li><li><p>Средний уровень — отношения с другими людьми</p></li><li><p>Высший уровень — отношения с собой</p></li></ol><blockquote><p>Phil Stutz (про отношение со своим телом): Все, что нужно — заставить тело функционировать лучше, и это работает.</p></blockquote><blockquote><p>Jonah Hill: Какой процент на этом уровне позволяет почувствовать себя лучше?</p></blockquote><blockquote><p>Phil Stutz: Ну, на самом деле, наверное 85%</p></blockquote><blockquote><p>Jonah Hill: С ума сойти! В детстве: упражнения и диета подавались так, будто что-то не так с моей внешностью. Но мне ни разу не предложили упражнения или диету для психического здоровья. Хотелось бы, чтобы людям объяснили это по-другому.</p></blockquote><p>Итак, пробую объяснить.</p><h4>Еще раз, что такое выгорание</h4><p>Выгорание – это <s>когда ты ложишься на пол в прихожей, приходя с работы домой</s> результат продолжительного высокого уровня стресса.</p><h4>Как понять, что ты выгораешь</h4><ol><li><p>Физические симптомы: хроническая усталость, проблемы со сном, головные боли, проблемы с ЖКТ, изменения аппетита, иммунная система может ослабнуть, это приводит к частым простудным заболеваниям.</p></li><li><p>Эмоциональное истощение: безысходность, апатия, раздражительность и потеря интереса к ранее приятным вещам.</p></li><li><p>Снижение продуктивности: чувство бесполезности и неспособности справиться с повседневными задачами, трудности с концентрацией, памятью и принятием решений.</p></li><li><p>Отчуждение от работы или окружающих: ощущение изоляции и неспособности установить связь с другими людьми.</p></li><li><p>Изменения отношения к работе: цинизм, чувство безнадежности и негатив. Ранее важные ценности и цели могут потерять свое значение.</p></li></ol><h4>Основные рекомендации по борьбе с выгоранием</h4><ol><li><p>Питание</p></li><li><p>Физическая активность</p></li><li><p>Сон</p></li><li><p>Медитация и дыхательные упражнения</p></li><li><p>Общение и достижения</p></li></ol><h4>Питание</h4><p>85% физического состояния зависит от питания. Здесь важно определить свои потребности в энергии и питательных веществах и точно закрывать их, в общем и целом все. Да, и ещё еда должна быть вкусной, это важно.</p><p>Профит: потенциально +10-20 лет жизни высокого уровня качества (<a href=\"https://thl.fi/documents/189940/1496849/north_karelia_project.pdf\" rel=\"noopener noreferrer nofollow\">ссылка на исследование</a>).</p><p>Косты: не все будут считать вас настоящим рок-н-рольщиком, с этим можно жить.</p><h4>Потребности организма</h4><p>Потребность организма в энергии (те самые калории) — это индивидуальное значение, чем точнее он определен, тем проще его контролировать. Энергия нужна чтобы думать и двигаться, профицит энергии приводит к избыткам запасов — ожирению. Ожирение мощно влияет на «нормальность» функционирования организма. Дефицит энергии приводит к неосознанному сокращению физической и умственной активности.</p><p>Потребности организма в питательных веществах — это то, сколько в граммах нужно белков, жиров, углеводов, витаминов и минералов для того, чтобы ткани восстанавливались и организм не разрушался. Значения норм определяются индивидуально.</p><p>Некоторые питательные вещества несут в себе энергию, некоторые нет, но в итоге количество энергии не должно превышать общую потребность организма в энергии.</p><p>Лучший способ закрывать полученные потребности — иметь все питательные вещества в еде в нужном количестве. Закрывать потребности БАДами довольно рисковано, особенно из-за опасности профицитов синтетических витаминов и минералов. Профициты синтетикой очень опасны, профициты натуральными питательными веществами практически невозможны.</p><p>И да. Еда должна быть вкусной, не просто вкусной, а восхитительной, до стона, до слез счастья, до полного удовлетворения.</p><p>Получается довольно интересная задача: определить набор параметров и максимально точно предоставить их в виде меню, в соответствии с индивидуальными вкусовыми предпочтениями и возможными ограничениями.</p><p>Кажется, что такая задача уже решена, но нет. Мы говорим об уровне точности, стремящимся к 100%. Во всех известных решения потребности определяются с точностью +-20-30%, и закрываются с точностью +- 20-30%, в итоге получается драматически высокая вероятность ошибки. Такие ошибки не выдерживает нервная система, а мозг переполняется тревожными сигналами.</p><blockquote><p>Все зло от недостатка знаний (Дэвид Дойч «Начало бесконечности. Объяснения, которые меняют мир»)</p></blockquote><h4>Совершенный алгоритм</h4><p>В итоге вам понадобиться совершенный алгоритм. Он должен перебирать 5 млн вариантов сочетаний продуктов, а потребности определять функциями. Смотреть на влияние определенного продукта на уровень сахара в крови и предотвращать диабеты. Учитывать праздники, дни рождения и отпуски, не предлагать в рабочий день на обед рыбу. Приоритизировать продукты по цене. Подбирать минимально-необходимую физическую активность и учитывать ее в общей энергии.</p><p>Один из важнейших эффектов при нормализации питания — тревоги становится меньше, принимаются более качественные решения. Помните исследование про судей в Израиле, которые после обеда выносили менее суровые приговоры? Это просто кортизол ушел.</p><p><strong>Итого про питание: важно точно определить потребности организма и максимально точно их закрывать, параметры потребностей индивидуальны, плохо посчитанные программы опасны, БАДы не спасают.</strong></p><p>Поддержка систем в рабочем состоянии зависит не только от питания, для некоторых процессов нужна физическая активность.</p><h4>Физическая активность</h4><p>Без достаточной физической активности тело страдает, а ткани разрушаются. Физическая нагрузка — обязательное условие для нашего организма, речь не идет о развитии суперспособностей.</p><blockquote><p>Больше — не значит лучше. Меньше тоже плохо.</p></blockquote><p>Основные метрики это тип нагрузки и ее уровень.</p><p>Типы нагрузок: кардио и силовая. Кардио (танцы, бокс, бег, велосипед, капоэйра, etc.) — насыщает кровь кислородом, укрепляет сердечную мышцу. Раз в неделю может быть очень даже полезно, но этот вид нагрузки можно включать только после выполнении обязательной программы, и тут важно не перегрузить себя. Избыток кардио при низком белке в рационе разрушает мышцы, а они нужны для нормального функционирования тела.</p><p>Обязательная программа — это силовая нагрузка. Это все что нужно в большинстве случаев. Не путать с бодибилдингом и пауэрлифтингом, это другое. Самое важное здесь определить переносимый уровень стресса и следовать ему.</p><p>Упражнения не помогут вам похудеть, не помогут с кубиками пресса, и скорее всего не помогут с «бицухой» или «орешком», это контринтуитивно, но это важно принять. Эффективность большинства стандартных подходов не превышает погрешность.</p><p>Силовые упражнения помогут вам не терять мышцы, то немногое что есть сейчас, уходит само без нагрузки и восстановить мышечную ткань будет очень сложно. Упражнения помогут держать в порядке суставы, без нагрузки они не питаются. Упражнения помогут развить мышцы, без которых невозможна правильная походка, бег и стояние, это вызывает повышенную загрузку других мышц, те спазмируются и все начинает болеть — спина, шея, колени.</p><p><strong>Итого про физическую активность: кардио — фан, силовые нагрузки не сделают тебя качком, но поддержат мышцы и суставы в хорошем рабочем состоянии. А еще дофамина от силовых в десятки раз больше, чем от пирожных.</strong></p><p>Каждый из последующих пунктов достоин отдельной статьи, здесь описываю кратко.</p><h4>Сон. Недостаток сна может усугубить выгорание</h4><p>Для меня важнее всего оказалось вставать и ложиться в одно и тоже время всегда, даже в выходные, ну и время засыпания и пробуждения — всегда одно, иначе вечный джетлаг. Блэкаут шторы и свежий воздух тоже творят чудеса. Прочие инструменты и практики оказались менее эффективными, но это все индивидуально, надо пробовать.</p><h4>Медитация и дыхательные упражнения. Снижают уровень стресса</h4><p>Медитация просто необходима как минимум для того, чтобы вовремя заметить, что уровень стресса высокий, так как в первую очередь медитация учит замечать. Не религия, не эзотерика, просто тренировка раз в день на 15 минут.</p><blockquote><p>«Дыхательные упражнения творят чудеса» — Людвиг Быстроновский.</p></blockquote><h4>Общение. Общайтесь чаще и шире</h4><p>Без общения мы моделируем социальные связи в отрыве от реальности, коммуникация может стать сложной и даже токсичной, в конечном итоге люди перестают понимать друг друга.</p><p>Нам необходимо общаться не только для обмена информацией, но и для самовыражения и поддержки.</p><blockquote><p>Лично мне очень важно общение с людьми из иных <s>реальностей</s> предметных областей, эпох, культур, это почти всегда интересно. 75-летний тренер по боксу, который тренировал Валуева, за пару тренировок может рассказать историй на хорошую книгу.</p></blockquote><p>Если как в примере комбинировать инструменты, например физическую активность и расширение <s>сознания</s> кругозора, можно сэкономить много времени.</p><h4>Достижения. Не забывайте о своих достижениях</h4><p>Нам всем важно признание того, что мы делаем, если этого нет, мы чувствуем бесполезность и фрустрируем. И костылим рационализации.</p><p>Как дизайн-менеджер я стараюсь хвалить коллег как можно чаще — мозг будет тянуться в сторону развития того, за что тебя похвалили.</p><p>Крайне полезно значимую часть своего времени тратить на портфолио или CV — это помогает осознать что ты уже сделал много всего классного, ну или пора что-то менять в жизни.</p><h4>И финальное</h4><p>Как видно, многие пункты пересекаются и взаимосвязаны, важно начать с чего-то, это даст энергии на следующие действия и так далее. По опыту могу сказать — если план достаточно точный и учитывает все детали, это выглядит как несколько минорных фиксов, которые можно и в пятницу вечером релизить.</p><p>Проблемы неизбежны! Проблемы можно решить! (Дэвид Дойч «Начало бесконечности. Объяснения, которые меняют мир»).</p><p></p>', 2, '2023-06-12 21:57:49', 338195, 96, '/ru/articles/741220/', 'Каждый второй, читающий этот пост пережил выгорание (Burnout), а 75% выгоревших теряют место работы. Будучи дизайн-менеджером 18+ лет, я убедился, что основные причины выгорания часто связаны не только с работой, и стресс может накапливаться по иным причинам. Эта статья о том, какие ещё причины есть, и что с ними делать.В вопросах физиологии мне помогала разбираться специалист международной ассоциации спортивных наук и Gray Institute Полина Рязанова. Я благодарен ей за поддержку и знания в этой области.'),
(177, 'Пробел в самооценке: иллюзии экспертности и красная таблетка', '<p>Американское выражение fake it till you make it, взятое на вооружение нашим коллективным сознательным, похоже, сыграло с нами злую шутку. Мы, как водится, расслышали это только наполовину, и в обиход взяли только первую его часть. Fake it. По итогу наша уже почти целиком виртуальная реальность выглядит так: мы попросту транслируем и внутрь, и наружу себя то, чем мы не являемся, в конечном итоге просто начиная верить в это сами.</p><p>Представьте: к вам в компанию пришел славный с виду, скажем, маркетолог. Приехал на самокате. Представился, понятное дело, маркетологом, резюме у него классное, на собеседовании разговаривал уверенно. Вы ударили по рукам, и маркетолог влился в проект, но спустя некоторое время что-то пошло не так. У вас стало зарождаться смутное сомнение, что маркетолог не совсем маркетолог — а при глубокой проверке резюме выясняется, что соответствующее образование у него отсутствует, делает он унылую непрофессиональную шнягу, а при просьбах показать метрики заболевает или находится не в ресурсе.</p><p>Является ли человек на самом деле отличным маркетологом, вы не проверяли, — что тут проверять и портить ему настроение недоверием — сказал, маркетолог, значит так и есть. Более того, очевидно, что человек ни разу не врет — он на самом деле уверен в эксклюзивности своих профессиональных скилов. Он уверен, что он — маркетолог. Не уверены в этом только вы и огромная гора его криво реализованных задач.</p><p>Это — самая примитивная иллюстрация явления, которое порождено выражением <strong>accountability gap</strong>. В данном случае в него попали и вы, и самоназванный маркетолог. И про выражение это позвольте поговорить подробно отдельно.</p><p>Как-то раз я читал статью о прозрачности в организациях. Там встретился термин, который не давал мне покоя: я интуитивно чувствовал его смысл, но не мог подобрать ему названия в своей голове, не мог подобрать ему ни символ, ни ярлык, и не мог сознательно им оперировать. Он формировал в <a href=\"https://ru.wikipedia.org/wiki/%D0%A1%D0%B8%D0%BC%D1%83%D0%BB%D1%8F%D0%BA%D1%80\" rel=\"noopener noreferrer nofollow\"><u>моей карте реальности</u></a> серые пятна. До этого он был во мне ощущением, а потом, окутавшись в нарратив, стал <a href=\"https://medium.com/re-assembling-reality/intellectual-objects-d57c214f060\" rel=\"noopener noreferrer nofollow\"><u>интеллектуальным объектом</u></a>, у которого возникла удивительная возможность быть связанным с другими интеллектуальными объектами на сознательном уровне (и на бессознательном тоже). И пошло-поехало: меня накрыли инсайты, смыслы, мотивация и куча профитов.</p><p>В этой статье от Маккинзи говорилось о <a href=\"https://www.mckinsey.com/capabilities/people-and-organizational-performance/our-insights/the-dark-side-of-transparency\" rel=\"noopener noreferrer nofollow\"><u>темных сторонах прозрачности в организациях</u></a>, а многоликий термин звучал как <em>accountability gap</em>.</p><p>В контексте статьи посыл термина складывался в достаточно понятный смысл: сотрудники часто не отдают себе отчета в том, зачем и почему они требуют прозрачности, а топ-менеджмент не отдает себе отчета в том зачем они эту прозрачность внедряют. И тут у меня сложился паззл! Ведь мы в целом по жизни слабо умеем отдавать себе отчет, особенно сейчас, и особенно те, чья жизнь в большей степени завязана на информационных технологиях, и чем быстрее крутится наш информационный маховик — а крутится он просто сверхбыстро, тем сильнее видится мне эта проблема.</p><h2>Что такое accountability gap?</h2><p>Гугл переводит термин как “пробел в подотчетности”. Я же слышу это как “пробел в самооценке” или даже “неспособность отдавать себе отчет” — если гэп слишком большой. И это не проблема уровня “я знаю, что я ничего не знаю, но попытаюсь”, нет. Это когнитивное искажение уровня “я уверен, что знаю и могу”. На этом топливе уверенности ломается весь наш карточный домик, который мы строим в виде организаций, нацеленных на эффективную работу. Иными словами — кроме нас самих, больше никто не может подтвердить наши навыки: мы верим в то, что мы, например, крутые менеджеры, по факту таковыми не являясь, и все остальные воспринимают нас исходя из этой точки. Каким образом вообще возможно построить что-то адекватное, эффективное и устойчивое, если мы сами себя <a href=\"https://ru.wikipedia.org/wiki/%D0%93%D1%80%D0%B5%D0%B9%D0%B4%D0%B8%D0%BD%D0%B3\" rel=\"noopener noreferrer nofollow\"><u>грейдим</u></a> и назначаем себя кем-либо?</p><blockquote><p><em>Хинт: в статье про </em><a href=\"https://medium.com/@puzanov_25405/soft-skills-hard-skills-38297e00766f\" rel=\"noopener noreferrer nofollow\"><em><u>софт скилы и волшебный чемоданчик</u></em></a><em> я как раз говорю о необходимости верить в себя, но в рамках статьи, которую вы сейчас читаете, речь идет про слепую веру, когда отбрасываешь все факты и внешние метрики и попадаешь в антипаттерн “слабоумие и отвага”.</em></p></blockquote><p>Короче, для себя я вывел, что пробел в самооценке — это разница между тем, кем ты думаешь ты являешься, и кем ты на самом деле являешься. Для простоты будем этот сложный термин называть коротко и ясно — гэп. Я попал в гэп. Ты попал в гэп. Мы в гэпе. Все в гэпе.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/getpro/habr/upload_files/521/373/61c/52137361c101ddecd7ed37a3c79c4fd4.JPG\" alt=\"Все забываю, что нужно по-русски везде\" title=\"Все забываю, что нужно по-русски везде\" width=\"1400\" height=\"350\"><div><figcaption>Все забываю, что нужно по-русски везде</figcaption></figure><h2>Почему гэп — это проблема?</h2><p>Дело в том, что с уходом важности и влияния институтов, а также с уходом из ценностей классического образования мы живем в мире, где при формировании команд мы не требуем друг у друга никаких официальных и трастовых подтверждений образования и скилов.</p><p>При приеме на работу мы зачастую даже не требуем диплома от соискателей, а сами соискатели не требуют от компании какой-либо сертификации деятельности, налоговой порядочности, бэкграунд чека и так далее. Пример в начале статьи — показательный, но я, конечно, имею ввиду ситуацию в целом — понимая, что в частных случаях дипломы все же требуют, и зрелые кандидаты также требуют нечто похожее от компаний, куда собираются устраиваться. Но в большинстве, например, tech компаний, все происходит именно так, и кандидаты туда приходят тоже просто так. Требование каких-то бумажек с обеих сторон даже считается моветоном.</p><blockquote><p><em>Хинт: будет здорово, если бы каждая компания понимала важность бэкгрунд чека соискателя и сбора инфы из прошлых мест работы.</em></p></blockquote><p>Так вот, если руководители компании находятся в гэпе, и точно так же гэпуют сотрудники, судить они друг друга могут только по тому, что думают о себе, но не по тому, кем они являются на самом деле. То есть обе стороны находятся в синем левом квадратике.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/getpro/habr/upload_files/2ab/02b/41d/2ab02b41d8df2ea22293ff8381b75c2f.JPG\" width=\"1400\" height=\"350\"></figure><p>При таком раскладе у обоих сторон отсутствует <a href=\"https://chugreev.ru/st-principle/context.html\" rel=\"noopener noreferrer nofollow\"><u>контекст реальности</u></a>. Из чата вышла трезвость мышления, нет понимания учета своих сил. Люди, находящиеся в этих гэпах, верят только словам — поскольку фактического подтверждения в доступе не имеют. Происходит <em>круговое вранье, </em>в котором люди еще и сильно подвержены всевозможным <a href=\"https://ru.wikipedia.org/wiki/%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA_%D0%BA%D0%BE%D0%B3%D0%BD%D0%B8%D1%82%D0%B8%D0%B2%D0%BD%D1%8B%D1%85_%D0%B8%D1%81%D0%BA%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B9\" rel=\"noopener noreferrer nofollow\"><u>когнитивным искажениям</u></a>, а особенно “наивному реализму” — когда чувства спутываются с фактами.</p><p>Оно и понятно — ведь перестать гэповать и оказаться в квадратике Who You Are больно и страшно — там сплошные разочарования в себе, особенно, если ты там никогда не бывал и самого себя не касался. Представьте, огромное количество людей всю жизнь живет в иллюзии о себе — и все их круги общения точно такие же, подтверждающие иллюзии друг друга. Все, что ты любишь и ценишь, идет от фикции того, что ты о себе возомнил. Короче говоря, идет от самообмана. Неудивительно, что такой человек будет всеми силами огораживать себя от встречи с реальным “самим собой”.</p><p>Возможно, опытный читатель встречался с чем-то подобным, когда приходил устраиваться на работу в стартап, созданный тинейджерами на деньги родителей или любовников. Вангую, чем кончилось.</p><p>Теперь всем понятно, что пробел в самооценке, а говоря по-русски,  самообольщение, — это реальная проблема, которая пагубно влияет не только на рабочие отношения, но и на отношения в любых социальных группах, где есть какая-либо целеустремленность и результативизм. Возможно, двум гэпующим друзьям, тусующимся по приколу эта проблема и не столь важна — уважая друг друга, они просто еще сильнее будут цементировать свои Who you think you are, выталкивая из этой коробочки тех, кто в этом усомнится, но вот если дело касается более серьезных вещей, тут возникают вопросики.</p><h2>Откуда идет проблема?</h2><p>Перед тем как понять что с этим делать, как бороться и как исправлять, покопаемся в источниках проблемы.</p><p>Я вижу несколько причин:</p><p><strong>Раз<br></strong>Исчезает и размывается власть институтов. Это логично, потому что зарегулированные и находящиеся под медленной бюрократической государственной машиной учебные заведения просто не в состоянии дать нужное образование. Мы больше не уважаем и не доверяем классическому образованию. Мир ускоряется со страшной силой, мы полным ходом мчимся на соплах <a href=\"https://ru.wikipedia.org/wiki/%D0%98%D0%BD%D1%84%D0%BE%D1%80%D0%BC%D0%B0%D1%86%D0%B8%D0%BE%D0%BD%D0%BD%D0%B0%D1%8F_%D1%80%D0%B5%D0%B2%D0%BE%D0%BB%D1%8E%D1%86%D0%B8%D1%8F\" rel=\"noopener noreferrer nofollow\"><u>информационной революции</u></a>.</p><p>Требовать диплом о высшем образовании и копаться в оценках — глупо. (Повторюсь, не везде, но в большей части организаций на это не смотрят). Образование неважно, — говорили они, — важен ваш опыт, ваши софт скилы, ваш настрой, уверенность в себе, ваша страсть, и в этом есть доля правды. Но! Только когда внутри вашей системы есть маленький доморощенный аттестационный механизм. Об этом ниже.</p><p><strong>Два</strong><br>Капитализм как таковой меняет образовательные институты на мелкие бизнес-юниты, которые сами становятся институтами, микро-государствами со своими лекалами, законами и способами адаптации к внешней и внутренней среде. Правда, управляются они не евангелистами и не учителями, а <a href=\"https://ru.wikipedia.org/wiki/%D0%A0%D0%B0%D0%B4%D0%B8%D0%BA%D0%B0%D0%BB%D0%B8%D0%B7%D0%BC\" rel=\"noopener noreferrer nofollow\"><u>радикалами</u></a> — для достижения целей. Бизнес и образование очень сильно важны друг другу, но при этом тотально разнятся: бизнес быстрый, а образование медленное. Даже когда мы у себя в организациях строим систему онбординга через учебку и тратим на это несколько месяцев перед тем, как передать новобранца в некий коммерческий внутренний проект, весь энвайромент кричит нам “давай быстрей!”, и мы не можем его осудить.</p><p><strong>Три</strong><br>Более того, сужу по себе, бизнес в сфере информационных технологий, или как сейчас модно говорить, в tech, находится в cyber-space. То есть не на земле, которая твердая и на которую можно упасть и разбиться или получить физических люлей от соседа. Не в воде, которая мокрая, холодная и глубокая, и в которой можно утонуть и не в воздухе, в который вообще фиг попадешь и удержишься — а в <strong>виртуальном</strong> пространстве. Мир давно перетек в метавселенную, где не нужен даже VR-шлем, а достаточно телефона в кармане и нескольких аккаунтов в соцсетях, и в ней <em>минимум риска для физико-биологической жизни</em>. Нафига тут институты чтобы жить и выживать? Все рафинированно, смазано, управляемо и … безопасно для жизни.</p><p>Вход в эту виртуальную жизнь максимально упрощен. Никаких тебе посвящений, никаких научений, никто тебя не сожрет, машина не собьет, собака не покусает. Так кажется на поверхности. По факту же опасностей как раз дофига, об этом мы поговорим в другой статье.</p><blockquote><p><em>Хинт: Соглашусь с тем, как этой темы в ТикТоке </em><a href=\"https://vt.tiktok.com/ZS8CkRwUo/\" rel=\"noopener noreferrer nofollow\"><em><u>касается</u></em></a><em> Piers Morgan и подмечает момент с тем, что мы стали soft. Да, мы очень soft, потому что быть тем кто ты есть, на самом деле сопряжено с большим количеством фейлов и усилий. А вот оставаться в иллюзии себя и не стремиться к подтверждению своих навыков — очень </em><strong><em>софтово</em></strong><em>.</em></p></blockquote><p><strong>Четыре</strong><br>Вдобавок мы сильно обросли <a href=\"https://en.wikipedia.org/wiki/Tooling\" rel=\"noopener noreferrer nofollow\"><u>тулингом</u></a> и стабильной доступной дешевой инфраструктурой. Особенно те, кто рождается в более-менее развитых странах. Дороги есть, электричество есть, интернет везде, преступность на улице снижена за счет большого числа видеокамер и людей с телефонами в руках (попробуйте сейчас устроить в большом городе драку и не оказаться потом в Ютубе).</p><p>Про <a href=\"https://ru.wikipedia.org/wiki/Digital_Native\" rel=\"noopener noreferrer nofollow\"><u>digital native</u></a> поколение я вообще молчу. Оно с рождения попадает в cyber-space, где без подготовки можно добыть практически любой тул и научиться им пользоваться. Следовательно то, что ты в детстве о себе надумал, в виртуальном мире не размывается и не разбивается о реальную реальность, потому что ты с ней не взаимодействуешь. Молодой человек остается там, в своей метавселенной, где познал Майнкрафт, в него уже не стреляет солью сторож, когда он пытается сожрать тутовник на дереве. Проходя мимо чужого района, молодой человек уже не получает по морде — для него физический мир сводится к использованию физической построенной инфраструктуры, чтобы добраться из точки А в точку Сеть, чтобы опять утвердиться в том Who You Think You Are. Причем в сети ты не просто тусишь. Ты там учишься, работаешь и <em>добываешь деньги</em>. С таким вот гэпом о себе самом.</p><p><strong>Пять</strong><br>И наконец, заметили вы или нет, но у молодого поколения поменялись ценности статусности. Если раньше для добычи статуса в том же университете и школе (а статус для молодняка при взрослении и <a href=\"https://ru.wikipedia.org/wiki/%D0%A1%D0%BE%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%B0%D1%8F_%D0%B8%D0%B5%D1%80%D0%B0%D1%80%D1%85%D0%B8%D1%8F\" rel=\"noopener noreferrer nofollow\"><u>иерархии в группе</u></a> — вещь мегаважная) мы добивались значимых проверяемых результатов (хорошие оценки, первые места на олимпиадах), то сейчас такая ачивка статуса не добавляет. Сейчас, чтобы получить статус, внутри группы сверстников работает <em>отмена</em>, неважно кого и что. Важно, что ты натянул некий виртуальный неподтвержденный смысл на человека/процесс/обычай/привычку, получил хайп и голоса от своей социальной группы и за счет этого массового давления поломал устой. Ты взял Who You Think You Are, нашел себе подобных, провел агитпрограмму и поменял статус кво. Грубо говоря, натянул виртуальность на факты, и получил статус. Не просто самоутвердился, а получил подтверждения своим действиям. Как на такое не подсесть, если ты подросток?</p><h2>Какие риски это несет?</h2><p>Конечно, следует понимать, что проблема гэпа огромна, но не глобальна. Однозначно существуют организации и сообщества, которые четко отдают себе отчет об этой проблеме и стараются минимизировать свой гэп, приближая себя к контексту реальности и формируя энвайронмент, который не позволяет людям с большим гэпом проникать внутрь или удержаться в нем надолго. Такие тусовки могут иметь различные намерения. Хорошо, когда они нацелены на образование и развитие, но ведь бывает, что стремление в получении максимальной прибыли любыми способами.</p><p><strong>Риск первый</strong></p><p>Первый и очевидный риск связан с <strong>конкурентным превосходством</strong> при всех прочих равных на старте. Люди в гэпе все больше подвержены клиповому мышлению, они становятся зависимыми от тулинга, от готовых решений, от мнений о себе самих. Они все чаще попадают в иллюзию <a href=\"https://medium.com/@puzanov_25405/soft-skills-hard-skills-38297e00766f\" rel=\"noopener noreferrer nofollow\"><u>поиска волшебного чемоданчика</u></a> и это приводит их к отсутствию навыка <a href=\"https://www.amazon.com/Deep-Work-Focused-Success-Distracted/dp/1455586692\" rel=\"noopener noreferrer nofollow\"><u>мыслить и работать сфокусировано и глубоко</u></a>, то есть искать инсайты, факты и смыслы на глубине, где нет никакого тулинга, а есть только они и их мышление. Это трудно, медленно, долго и не модно. Но именно там, на дне, зарыты все ништяки. Кто поймет, что навык “мыслить глубоко” нужно крафтить как можно раньше, тот очень сильно оторвется в развитии от тех, кто мыслит клипово. Людям с большим гэпом скоро будет элементарно тяжело заработать себе нормальных денег, чтобы обеспечить себе адекватную жизнь.</p><p>Кроме того, тут мы сталкиваемся с риском отсутствия личностного и профессионального роста. Какой смысл расти, развиваться и улучшаться, если в своей голове ты уже итак бог всея управления и менеджмента мира? Вот именно — никакого.</p><p><strong>Риск второй</strong></p><p>Манипулировать рынком, где большинство участников находятся в иллюзии о себе, станет проще. Если вы в гэпе, вами легко управлять, причем вы даже никогда об этом не узнаете. Вы даже можете быть на сто процентов уверены, что вами управлять невозможно, вы весь такой из себя свободный, себе на уме, сильный, правда немножко зависите, например, от антидепрессантов и психотерапевтов. И живете, например, всю жизнь в одном месте, с полной уверенностью, что <em>у них </em>там все плохо, загнивают, так сказать.</p><p><strong>Риск третий</strong></p><p>Второй риск страшен, но все же не так, как <strong>третий — </strong>риск <em>“мнения большинства”</em>. Так или иначе мы глобально, или внутри государства, или внутри социальной группы подвержены <a href=\"https://en.wikipedia.org/wiki/Double-spending\" rel=\"noopener noreferrer nofollow\"><u>атаке 51%</u></a> в сообществах. Когда в сообществе участники, находящиеся в гэпе, получат, так сказать, большинство (или контрольный пакет), то начнут с еще большей скоростью <a href=\"https://www.throughtechnology.uk/post/common-information-effect\" rel=\"noopener noreferrer nofollow\"><u>распространять свое влияние</u></a>. По итогу, остальные участники либо будут принимать их точку зрения, либо несогласных будут исключать из групп, и — добро пожаловать в смуту! За обозримую историю цивилизаций мы несколько раз попадали в эту ловушку и нехило так откатывались назад в своем развитии. Да, классно когда умные управляют глупыми, но ведь если это выйдет из под контроля (а оно выйдет, если не формировать энвайронмент, фасилитирующий реальное подтверждаемое фактами развитие), то большинство гэповых захватит мир и просто на вилах, за счет своей массы и количества, вынесет остальных и сожжет их нахрен, принеся их в жертву богу Тиктока, гендерного рассинхрона и прочим новоэтичным штукам (я, кстати, тут утрирую. Тикток люблю!).</p><p>Напоследок сгущу краски еще больше: добро пожаловать в новый дикий запад, где ваша биологическая жизнь якобы вне опасности, но ваш мозг уже поражен. По сути в голове вы уже мертвы — вас сожрал энвайромент. Тело работает, мозг нет. Мозг танцует в Тиктоке и думает, что вы маркетолог. Вы зомби-автопилот.</p><h2>Очень страшно, скорее расскажи, как понять, что я в гэпе!</h2><p>Тут стоит провести красную линию: осознание, что ты уверенно гэпуешь, для неподготовленного человека очень болезненно. Именно поэтому мы лжем, занимаемся самообманом, добиваемся внимания любыми возможными способами, самоутверждаемся, клянчим лайкосы — всеми силами пытаемся отстоять свой виртуальный образ, чтобы не впасть в глубочайшую депрессию от осознания того, что в каких-то моментах мы — полный социальный ноль, полное ничтожество. Так что прежде чем читать дальше, выбирай: синяя или красная таблетка?</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/435/60c/93e/43560c93e2c555569cb61a1a9d4c51b5.jpg\" width=\"1400\" height=\"350\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/435/60c/93e/43560c93e2c555569cb61a1a9d4c51b5.jpg\" data-blurred=\"true\"></figure><p>В принципе, для любого типа читателя будет неплохим упражнением чуть больше о себе узнать, неважно, в гэпе он или нет. Кстати, когда мы в гэпе — мы не понимаем, что мы в нем. На то он и гэп, то есть “неспособность отдавать себе отчет”. Следовательно, для любого читателя будут полезны следующие упражнения, остановлюсь на самых, на мой взгляд, важных и рабочих.</p><h4>Упражнение №1</h4><p>Непохожие друг на друга люди готовы с некой регулярностью <strong>платить </strong>вам <strong>свои</strong> деньги за вашу работу или ваше время. Не путать с “готовы с вами работать”. Если человек не готов расстаться ради вашего value с чем-то ценным для себя, говорит о том, что ваши “навыки” нужны и важны лишь вам самим. Эта проверка, конечно, не идеальная, потому что любой смекалистый инфоцыган с легкостью будет годами хороводить “хомяков”, внушая им полезность от своих семинаров. Но, правды ради, стоит признать, что его гэп будет поменьше, чем гэп его клиентов и, подозреваю, что большинство таких хороводеров все же осознают, что они продают воздух и по сути обманывают своих подопечных.</p><h4>Упражнение №2</h4><p>Поэтому второе: ваше участие в любого рода соревнованиях, компетишенах, олимпиадах любого толка и — очень важно — <em>вне вашего комьюнити</em>. То есть, если вы пришли на соревнования по вашей специальности туда, где о вас никто не знает вообще и надрали там всем задницы — поздравляю, вы красавчик. Вообще тема с глобальными соревнованиями, как инструментом проверки навыков и сокращения гэпа — удивительно рабочий. Весь спорт крутится вокруг соревнований и, как ни странно, в спорте очень мало гэпа, если ты, конечно, не занимаешься им всю жизнь в соло или только у себя на районе, воображая, что ты суперчемпион мира.</p><ul><li><p>Думаешь, что хорошо дерешься? Добро пожаловать в UFC.</p></li><li><p>Думаешь, что быстро бегаешь? Почему тебя нет на олимпиаде или, хотя бы, на городских соревнованиях?</p></li><li><p>Думаешь, что круто гоняешь CS или Дотан? Уверен, ты и сам знаешь как себя тут проверить. Попробуй это сделать без криков “кто тут папочка”.</p></li><li><p>Думаешь, что хорошо играешь музыку? Выступи на концерте или попробуй пробраться в музыкальное училище или консерваторию и сорви аплодисменты.</p></li><li><p>Думаешь, что ты классный мамкин хакер? Тогда почему тебя нет в первой десятке или сотне в <a href=\"https://tryhackme.com/r/leaderboards\" rel=\"noopener noreferrer nofollow\"><u>лидерборде TryHackMe</u></a>?</p></li><li><p>Думаешь, что хорошо пишешь и у тебя куча читателей? Покажи свои премии</p></li><li><p>Думаешь, что ты классный продакт или скрам-мастер? По приколу пройди собесы в Big Tech</p></li><li><p>Думаешь, что хорошо умеешь учиться, попробуй на Coursera пройти выбранные тобою же курсы до самого конца. <em>(Спойлер: до конца доходят 1–3% участников)</em></p></li></ul><p>Если ты все это попробовал, облажался и теперь сокрушаешься с криками “да они там все тупые, не шарят, отсталые” — поздравляю тебя, мой друг. Ты в глубоком гэпе.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/getpro/habr/upload_files/bd3/fa5/937/bd3fa5937da31c43566f2bcd64089fd9.JPG\" width=\"1400\" height=\"300\"></figure><blockquote><p><em>Хинт: Нет ничего страшного в том, что тебя не привлекают соревнования и ты никаких первых мест занимать не хочешь. Если ты отдаешь себе в этом отчет, то и здорово. Задача этой статьи — разграничить выпендреж перед другими и осознание, насколько сильно ты врешь самому себе.</em></p></blockquote><p>Вообще, в оценке глубины собственной гэповости сильно помогают не мнения других о вас, а любые объективные метрики. Отличные примеры таковых - спорт и трейдинг. </p><p>Мировой спорт, опирающийся на цифры и четкие факты, безжалостно вымывает всех гэповых, да и любой профессиональный спортсмен найдет в своей карьере несколько гэповых эпизодов, когда он, будучи чемпионом в своем уездном городе N, попал на международные соревнования, объективно осознав свое двадцатое место в рейтинге. Да, мы все понимаем, что в большом спорте помимо самих спортсменов, рулит еще и фарма, но это не умаляет ваших личных заслуг, коммитмента, тренировок, фокуса, отдачи, целеустремленности. </p><p>В трейдинге и инвестировании такая же история - гэповать там получится недолго, поскольку через какое-то время  наглядно видно, как из депозита утекает бабос. </p><p>Кстати, популярная музыка тоже в целом фильтрует гэп. Даже самая, казалось бы, стремная, но достигающая миллионных прослушиваний песенка, дает нам понять, что под капотом находится огромный труд и много жертв. Особенно это заметно, если автор музыки регулярно пишет популярные треки, а не сделал один, а потом скурился и пропал.</p><h2>Почему гэп можно минимизировать, но нельзя полностью из него выйти?</h2><p>Нельзя скидывать со счетов то, что мы все же, хоть и держим хорошую мину, но давно существуем в мире иллюзорных пузырей реальности — их отлично поддерживает все наше окружение, в частности, ресурсы, откуда мы черпаем представление о мире — эти ваши интернеты и массовая культура. Миру настолько “продали” идею безрисковой жизни, что больше нет никакого смысла отдавать себе отчет ни в чем. В бизнесе активно культивируется идея быть не тем, кто ты есть, а тем, кем ты <strong>хочешь быть</strong> — и мы просто выбираем верить в эту иллюзию. Более того, быть тем, кто ты есть, сейчас попросту опасно — это скучно, душно, уныло, цинично, и плохо продается в инстаграмах. Массовые коммуникации активно тиражируют истории успеха тех, кто притворяется тем, кем не является, и мы с удовольствием это потребляем. Мы в мире “казаться, а не быть”, и тут я отказываюсь от оценок такого мира — плохо это или хорошо, это просто факт.</p><blockquote><p><em>Хинт: к слову, если вы не смотрели абсолютно, по моему мнению, гениальный фильм “</em><a href=\"https://www.imdb.com/title/tt11286314/\" rel=\"noopener noreferrer nofollow\"><em>Не смотрите наверх</em></a><em>”, сейчас самое время это сделать.</em></p></blockquote><h2>Вывод и что же теперь делать?</h2><p>Мой основной тейк к сокращению гэпа — постоянное стремление стать и закрепиться в состоянии <em>зрелой личности</em>. В 1957 году в своей работе Personality and Organization: the Conflict between System and the Individual <a href=\"https://en.wikipedia.org/wiki/Chris_Argyris\" rel=\"noopener noreferrer nofollow\"><u>Крис Арджирис</u></a> представляет модель (Argyris Maturity Theory) от незрелости к зрелости личности (сотрудника организации) и выглядит она вот так:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b76/6a8/d53/b766a8d53b39811d783aae5cfcaff0b4.png\" alt=\"Слишком оценочная табличка, согласен\" title=\"Слишком оценочная табличка, согласен\" width=\"1162\" height=\"653\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b76/6a8/d53/b766a8d53b39811d783aae5cfcaff0b4.png\"><div><figcaption>Слишком оценочная табличка, согласен</figcaption></figure><p>На основе этой модели в США по итогу начал развиваться <a href=\"https://en.wikipedia.org/wiki/Coaching\" rel=\"noopener noreferrer nofollow\"><u>профессиональный коучинг</u></a>, цель которого — помочь человеку с запросом самостоятельно найти в себе ресурсы для достижения поставленных целей.</p><p>Но так как вокруг коучинга появилось достаточное количество булшита и инфоцыганства, окунуться можно в <em>наш</em> аналог коучинга — в <a href=\"https://ru.wikipedia.org/wiki/%D0%90%D0%BA%D0%BC%D0%B5%D0%BE%D0%BB%D0%BE%D0%B3%D0%B8%D1%8F\" rel=\"noopener noreferrer nofollow\"><u>акмеологию</u></a> — науку, которая призвана изучать, раскрывать и удерживать ту самую зрелость личности, или ее <a href=\"https://ru.wikipedia.org/wiki/%D0%90%D0%BA%D0%BC%D0%B5\" rel=\"noopener noreferrer nofollow\"><u>акме</u></a>. Зрелая личность всегда стремится сократить свой пробел, так как уже поняла, что самообман до добра не доведет.</p><p>Зрелые личности формируют энвайромент, при котором влияние когнитивных искажений уменьшается. Они мыслят критически, сомневаются во всем и перепроверяют факты. В такой среде работа формируется по принципу разделения зон ответственности, где в зависимости от ситуации, лидировать может абсолютно любой участник. По сути, в окружении, которое фасилитирует зрелость, нет смысла выдумывать самого себя, а проще и выгодней оставаться тем, кто и что ты есть, ибо опираясь на то, где ты есть, становится эффективней попасть в то, куда ты хочешь.</p><p>Big tech на ключевые и ответственные позиции всегда старается нанимать зрелых, не гэповых людей, по двум банальным причинам: риски и менеджмент. Чем зрелее (трезвее) человек, тем меньше ошибок он будет совершать в принятии своих решений (особенно, если эти решения управленческие). И тем дешевле он обходится компании, ведь его не нужно менеджить, то есть не надо помимо него платить еще одному человеку, который регулярно говорит что делать и перепроверяет работу.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/getpro/habr/upload_files/e19/fa5/350/e19fa53505e85d4ce71664df567f3ec5.JPG\" alt=\"Не всегда проканывает, но все же лучше, чем гэповать\" title=\"Не всегда проканывает, но все же лучше, чем гэповать\" width=\"1400\" height=\"759\"><div><figcaption>Не всегда проканывает, но все же лучше, чем гэповать</figcaption></figure><p><strong>Зрелая</strong> организация отличается от <strong>незрелой</strong> тем, что энвайронмент в ней заточен таким образом, чтобы гэп у сотрудников был сведен к минимуму, — у сотрудника практически нет шансов долго быть в гэпе, система его выпалит или просто не даст перейти на другой уровень, в другой департамент или другую команду.</p><p>Подводя итог моих размышлений, могу с уверенностью сказать одно: способность быть зрелым/стремиться к зрелости/стремиться удержать свою зрелость сулит нам одни плюсы и профиты. Это, конечно, сопряжено с некоторым болезненным последствием в виде отказа от собственных иллюзорных воззрений о себе. Но живем мы всего раз, так почему бы не попробовать прожить эту жизнь собой настоящим? Более того — прожить ее эффективно?</p><p>Иными словами, посмотрите наверх.</p><hr><p><em>P.S. Автор статьи тоже частенько попадал, попадает и будет попадать в гэпы — от этой штуки в наш век никто не застрахован. Но это не означает, что с этой проблемой не нужно регулярно работать.</em></p><p></p>', 2, '2023-06-12 21:57:50', 441301, 83, '/ru/articles/741150/', 'Американское выражение fake it till you make it, взятое на вооружение нашим коллективным сознательным, похоже, сыграло с нами злую шутку. Мы, как водится, расслышали это только наполовину, и в обиход взяли только первую его часть. Fake it. По итогу наша уже почти целиком виртуальная реальность выглядит так: мы попросту транслируем и внутрь, и наружу себя то, чем мы не являемся, в конечном итоге просто начиная верить в это сами.Представьте: к вам в компанию пришел славный с виду, скажем, маркетолог. Приехал на самокате. Представился, понятное дело, маркетологом, резюме у него классное, на собеседовании разговаривал уверенно. Вы ударили по рукам, и маркетолог влился в проект, но спустя некоторое время что-то пошло не так. У вас стало зарождаться смутное сомнение, что маркетолог не совсем маркетолог — а при глубокой проверке резюме выясняется, что соответствующее образование у него отсутствует, делает он унылую непрофессиональную шнягу, а при просьбах показать метрики заболевает или находится не в ресурсе.Является ли человек на самом деле отличным маркетологом, вы не проверяли, — что тут проверять и портить ему настроение недоверием — сказал, маркетолог, значит так и есть. Более того, очевидно, что человек ни разу не врет — он на самом деле уверен в эксклюзивности своих профессиональных скилов. Он уверен, что он — маркетолог. Не уверены в этом только вы и огромная гора его криво реализованных задач.Это — самая примитивная иллюстрация явления, которое порождено выражением accountability gap. В данном случае в него попали и вы, и самоназванный маркетолог. И про выражение это позвольте поговорить подробно отдельно.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(178, 'Откуда берутся НЕфункциональные задачи?', '<p><em>Не искал бы в селе, а искал бы в себе</em></p><p>В предыдущей статье «<a href=\"http://potokzadach.ru/index.php/all-blog/111-glavnaya-sushchnost-zadacha/167-funkcionalnye-i-nefunkcionalnye-zadachi\" rel=\"noopener noreferrer nofollow\">Функциональные и НЕфункциональные задачи</a>» я рассказал про НЕфункциональные задачи и про то, что с ними надо бороться.</p><p>А чтобы понять, как это делать, надо разобраться, <strong><u>откуда они берутся? Как они возникают?</u></strong></p><p>Это весьма непраздный вопрос, учитывая, что НЕфункциональные задачи влекут нерациональное расходование ресурсов, увеличение затрат и, как следствие, снижение производительности интеллектуального труда, а их доля, как правило, неуклонно и самопроизвольно стремится к возрастанию.</p><p>Ответ на этот вопрос необходим, чтобы выработать механизмы противодействия появлению и росту НЕфункциональных задач в общем потоке задач организации.</p><p>НЕфункциональные задачи порождаются внутри организации — её сотрудниками, включая руководителей.</p><p>Одни порождают НЕфункциональные задачи умышленно, другие — не умышленно, не намереваясь нанести вред. Умышлено больше там, где много политики. Чаще, не умышлено.</p><p>НЕфункциональные задачи обычно являются следствием:</p><ul><li><p>не профессионализма</p></li><li><p>благих намерений</p></li><li><p>личных интересов</p></li></ul><p>В случае непрофессионализма часто НЕфункциональные задачи возникают:</p><ul><li><p>из-за недостаточности квалификации в области обоснования причинно-следственных связей. Когда выстраиваются планы, плохо прорабатывается алгоритм их реализации, то есть последовательность выполнения задач. Слабо анализируются причинно-следственные связи, чтобы понять, что и от чего зависит, чтобы осознать, что и зачем нужно сделать. В результате работу начинают, как говорится, не «с того конца». Делают, тратят время, ресурсы и приходят к тому, что надо было начинать с другого, что всё равно упёрлись в это — другое. Таким образом, многие выполненные задачи оказались НЕфункциональными для текущего периода времени.</p></li><li><p>из-за не умения так изменять и создавать системы и процессы, чтобы не надо было осуществлять огромное количество задач из области контроля, учёта и отчётности, сбора информации. Нередко руководители в систему и процессы закладывают      различные завороты на выполнение задач из области контроля, учёта и отчётности, сбора информации. Например, вставляют в процесс задачи по визированию договоров, согласованию их с массой подразделений, или дают кучу поручений типа, собрать сведения о том-то, или о том-то, составить раз в неделю отчёт такой-то или такой-то и т.д. Масса этих задач, как правило, на самом деле является НЕфункциональными задачами. Они нас к цели никак не продвигают, а время отнимают и ресурсы занимают. Совершаемый объём этих задач часто недооценивается. А если приглядеться, то во многих организациях сотрудники то и дело половину своего рабочего времени то визируют и согласовывают различные документы, то составляют какие-либо отчёты, то вносят информацию в какие-нибудь базы данных и системы. А это время можно было бы потратить на выполнение функциональных задач.</p></li><li><p>из-за незнания руководителями того, что надо делать. Не зная, что нужно делать реально, руководитель начинает загружать людей любыми задачами, лишь бы они были заняты, а он мог показать какую-то деятельность. Совершение этой ИБД — Имитации Бурной Деятельности — это и есть выполнение НЕфункциональных задач. Это тоже очень распространённое явление, которое, на мой взгляд, также      недооценивается.</p></li></ul><p>Далее вспоминается фраза «благими намерениями — дорога в ад». В ситуации благих намерений, не редко, люди выполняют НЕфункциональные задачи:</p><ul><li><p>когда они начинают полагать, что они на местах видят ситуацию лучше, чем руководители, и начинают действовать по своему усмотрению. Например, рассуждают так, мы здесь внизу лучше видим, что нужно клиенту, поэтому будем делать так, как считаем нужным и то, что считаем нужным. Но, часто, это не соотносится с целями и задачами организации, с отлаженными процессами и в результате делается не то, что нужно было делать и/или не так как надо было делать.</p></li><li><p>когда не получают ценных указаний сверху и начинают сами себя загружать и определять для себя задачи и приоритеты. Ответственные сотрудники не могут сидеть без дела, они чувствуют себя не уютно. Когда их не грузят задачами, они начинают придумывать себе их сами, исходя из своего видения ситуации. Это видение может совершенно не совпадать с целями организации. В результате эти люди могут загрузить себя сами НЕфункциональными задачами.</p></li></ul><p>В отдельных случаях выполнение НЕфункциональных задач продиктовано сугубо «шкурными» интересами людей, работающих в организации.</p><p>Преследуя личные интересы:</p><ul><li><p>одни лоббируют свои задачи, чтобы заработать деньги себе, а не организации;</p></li><li><p>другие, чтобы их заметили;</p></li><li><p>третьи, чтобы реализовать свои амбиции;</p></li><li><p>четвёртые, чтобы получить нужный им, а не организации, опыт;</p></li><li><p>пятые, чтобы казаться нужными и полезными;</p></li><li><p>шестые, чтобы быть занятыми — быть при деле;</p></li><li><p>седьмые, чтобы навредить, отвлечь ресурсы и время;</p></li><li><p>и т.д.</p></li></ul><p>Иногда это делается не осознанно, а часто вполне осознанно.</p><p>Обычно, вся совокупность НЕфункциональных задач в организации является следствием как не профессионализма, так и благих намерений, и личных интересов одновременно. </p><p>И довольно трудно рассортировать НЕфункциональные задачи по частным причинам их возникновения. Я бы сказал невозможно.</p><p>Но этого и не нужно делать.</p><p>Что нам даёт знание того, что явилось частной причиной появления НЕфункциональных задач? Ничего. </p><p>НЕфункциональные задачи сами по себе — проблема. Независимо от частных причин их порождающих.</p><p>Если система будет позволять, а более того провоцировать, то НЕфункциональные задачи будут появляться неизбежно, хотим мы этого или нет. </p><p>Борьба с ними, без изменения и совершенствования системы – это «борьба с ветряными мельницами». Бесполезна. </p><p>НЕфункциональные задачи – это следствие общих<sup>[1]</sup>, а не особых причин<sup>[2]</sup>. То есть проблема не в людях, а в системе.</p><p>Здесь я сошлюсь на авторитетное мнение Эдвардса Деминга: </p><ul><li><p>«Исходя из собственного опыта, я могу дать следующую оценку для большинства проблем и возможностей улучшений: 90% проблем принадлежит системе (ответственность менеджмента); 6% проблем – особые»<sup>[3]</sup>.</p></li><li><p>«Никакой контроль и никакой уровень профессионального мастерства не смогут побороть фундаментальные дефекты системы»<sup>[4]</sup>.</p></li><li><p>«Любое существенное улучшение должно быть следствием изменений в системе, за которые ответственен менеджмент»<sup>[5]</sup>.</p></li><li><p>«Для совершенствования системы требуется не вмешательство, а её фундаментальное изменение»<sup>[6]</sup>.</p></li></ul><p>Это говорит о том, что для устранения НЕфункциональных задач, для уменьшения их доли и влияния на производительность интеллектуального труда, надо изменять систему управления потоком задач. И делать это должны руководители, а не сотрудники. </p><p>При этом править систему надо так, чтобы она не позволяла навязывать организации или провоцировать НЕфункциональные задачи. И считаю, что внедрение системы УПЗ, описанной в моем блоге, как раз и есть такая правка. </p><p>Эта правка позволит так отстроить систему, чтобы исключить основные дефекты, приводящие к появлению НЕфункциональных задач, создающие условия для их возникновения. Кроме того, она откроет возможности для дальнейшего непрерывного совершенствования системы<sup>[7]</sup>. </p><p>Ведь, на самом деле борьба с НЕфункциональными задачами — это постоянное совершенствование процесса «менеджмент», то есть — Управления Потоком Задач. Аналогично борьбе с потерями и браком в физическом производстве. </p><p>Когда мы чётко понимаем и принимаем, что управление потоком задач — это процесс «менеджмент», а НЕфункциональные задачи — потери этого процесса, то мы понимаем, как построить непрерывное совершенствование процесса «менеджмент», выполняя цикл Деминга (PDCA) и измеряя показатели процесса — статистику по задачам, в том числе по доле и динамике НЕфункциональных задач. Статистика по НЕфункциональным задачам позволит достаточно однозначно и конкретно оценивать потери процесса «менеджмент» и обеспечит постоянство цели совершенствования оного процесса.</p><p>Полная версия статьи доступна в моей книге «Задачи чудесные, или Козырная «ТУЗ» Мотаева!» </p><p>С уважением к Вам и Вашему делу, <a href=\"http://potokzadach.ru/index.php/home/ob-avtore\" rel=\"noopener noreferrer nofollow\">Мотаев Александр</a></p><p>Обсудить эту и другие статьи блога вы можете в нашем <a href=\"https://t.me/potokzadach2022\" rel=\"noopener noreferrer nofollow\">Telegram-канале \"Управление потоком задач\"</a>.</p><hr><p>[1] - Общие причины – это дефекты системы (системные дефекты), то есть дефекты, обусловленные недостатками в самой системе, определяются системой, зависят от того, как система была спроектирована и построена, заложены в неё. Устранить общие причины можно только путём изменения и совершенствования системы. </p><p>[2] - Особые (специальные) причины – это дефекты, НЕ связанные с системой (внесистемные дефекты), а связанные с преходящими, быстротечными событиями, возникающими из источников, находящихся вне системы, мешающие работе системе в нормальном её режиме. </p><p>[3] - Стр. 278 «Общие и особые причины вариабельности и возможности улучшений. Стабильная система». «Выход из кризиса: Новая парадигма управления людьми, системами и процессами». Эдвардс Деминг. М.: Альпина Бизнес Букс, 2007. - 370 с. ISBN 978-5-9614-0567-5</p><p>[4] - Стр. 279 «Общие и особые причины вариабельности и возможности улучшений. Стабильная система». «Выход из кризиса: Новая парадигма управления людьми, системами и процессами». Эдвардс Деминг. М.: Альпина Бизнес Букс, 2007. - 370 с. ISBN 978-5-9614-0567-5</p><p>[5] - Стр. 275 «Общие и особые причины вариабельности и возможности улучшений. Стабильная система». «Выход из кризиса: Новая парадигма управления людьми, системами и процессами». Эдвардс Деминг. М.: Альпина Бизнес Букс, 2007. - 370 с. ISBN 978-5-9614-0567-5</p><p>[6] - Стр. 288 «Общие и особые причины вариабельности и возможности улучшений. Стабильная система». «Выход из кризиса: Новая парадигма управления людьми, системами и процессами». Эдвардс Деминг. М.: Альпина Бизнес Букс, 2007. - 370 с. ISBN 978-5-9614-0567-5</p><p>[7] - Подробнее об этом в статье «<a href=\"http://potokzadach.ru/index.php/all-blog/121-disput-po-menedzhmentu/420-elementy-tuz-zashchishchayushchie-ot-nefunkcional-nyh-zadach\" rel=\"noopener noreferrer nofollow\">Элементы ТУЗ, защищающие организацию от НЕфункциональных задач</a>» в разделе «<a href=\"http://potokzadach.ru/index.php/all-blog/121-disput-po-menedzhmentu\" rel=\"noopener noreferrer nofollow\">Диспут по менеджменту – по управлению потоком задач</a>».</p><p></p>', 2, '2023-06-12 21:57:50', 770017, 83, '/ru/articles/741180/', 'Не искал бы в селе, а искал бы в себеВ предыдущей статье «Функциональные и НЕфункциональные задачи» я рассказал про НЕфункциональные задачи и про то, что с ними надо бороться.А чтобы понять, как это делать, надо разобраться, откуда они берутся? Как они возникают?Это весьма непраздный вопрос, учитывая, что НЕфункциональные задачи влекут нерациональное расходование ресурсов, увеличение затрат и, как следствие, снижение производительности интеллектуального труда, а их доля, как правило, неуклонно и самопроизвольно стремится к возрастанию.Ответ на этот вопрос необходим, чтобы выработать механизмы противодействия появлению и росту НЕфункциональных задач в общем потоке задач организации.НЕфункциональные задачи порождаются внутри организации — её сотрудниками, включая руководителей.Одни порождают НЕфункциональные задачи умышленно, другие — не умышленно, не намереваясь нанести вред. Умышлено больше там, где много политики. Чаще, не умышлено.НЕфункциональные задачи обычно являются следствием:'),
(179, 'Собеседование наоборот: МойОфис, Банк РНКБ, Альфа Банк, билайн', '<figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b2e/35b/16d/b2e35b16d5f33c23c86c365553d366dc.png\" width=\"1480\" height=\"840\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b2e/35b/16d/b2e35b16d5f33c23c86c365553d366dc.png\"></figure><p>В апреле на Хабр Карьере проходила карьерная неделя тестировщиков. Карьерная неделя — это что-то вроде дня открытых дверей, который длится всю неделю. За специалистов боролись <a href=\"https://career.habr.com/companies/alfabank\"><u>Альфа-Банк</u></a>, <a href=\"https://career.habr.com/companies/myoffice\"><u>МойОфис</u></a>, <a href=\"https://career.habr.com/companies/rncb\"><u>Банк РНКБ</u></a> и <a href=\"https://career.habr.com/companies/beeline\"><u>билайн</u></a>.</p><p>В конце недели специалисты задают вопросы представителям компаний-работодателей, а мы выбираем самые интересные из тех, что не успели обсудить, и отправляем спикерам. </p><p>Спросили про трудоустройство, карьеру джунов, технологии и отношения к трендам. Если интересно почитать о внутренней жизни компаний — приглашаем в статью. </p><h2>Кто отвечал на вопросы</h2><div class=\"persona\" persona=\"true\"><img persona=\"true\" class=\"image persona__image\" src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/7b1/5c9/d32/7b15c9d32b05de66cb4c6c04edd1a736.jpg\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/7b1/5c9/d32/7b15c9d32b05de66cb4c6c04edd1a736.jpg\" data-blurred=\"true\"><h5 class=\"persona__heading\" persona=\"true\">Владимир Ананьев</h5><p>Руководитель группы автоматизации и тестирования в отделе технического контроля РНКБ Банка</p><div class=\"persona\" persona=\"true\"><img persona=\"true\" class=\"image persona__image\" src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/6a2/6db/58d/6a26db58d02da381107fcefded2a8398.jpeg\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/6a2/6db/58d/6a26db58d02da381107fcefded2a8398.jpeg\" data-blurred=\"true\"><h5 class=\"persona__heading\" persona=\"true\">Василий Сидоренко</h5><p>Начальник отдела технического контроля в Банке РНКБ</p><div class=\"persona\" persona=\"true\"><img persona=\"true\" class=\"image persona__image\" src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/14e/d76/a9c/14ed76a9ca9130026f4bfad8dd47225b.jpg\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/14e/d76/a9c/14ed76a9ca9130026f4bfad8dd47225b.jpg\" data-blurred=\"true\"><h5 class=\"persona__heading\" persona=\"true\">Айнур Мустафаева</h5><p>Главный специалист по тестированию в Альфа Банке</p><div class=\"persona\" persona=\"true\"><img persona=\"true\" class=\"image persona__image\" src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/026/4d0/5ca/0264d05ca592724c24bef1a13ecafa1e.jpg\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/026/4d0/5ca/0264d05ca592724c24bef1a13ecafa1e.jpg\" data-blurred=\"true\"><h5 class=\"persona__heading\" persona=\"true\">Антон Дикин</h5><p>Руководитель по тестированию в билайне</p><div class=\"persona\" persona=\"true\"><img persona=\"true\" class=\"image persona__image\" src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/c19/736/a56/c19736a56aacf83f58f1485630b29d17.jpg\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/c19/736/a56/c19736a56aacf83f58f1485630b29d17.jpg\" data-blurred=\"true\"><h5 class=\"persona__heading\" persona=\"true\">Виктория Кондратьева</h5><p>Руководитель тестирования группы общей разработки компании-разработчика ПО МойОфис </p><hr><h2>Трудоустройство</h2><h3>Обязательно ли язык написания E2E автотестов должен совпадать с языком написания продукта в вашей компании?</h3><p><strong>Владимир Ананьев, Банк РНКБ: </strong>Нет, необязательно. Более того, часто язык написания автотестов не совпадает с языком разработки продукта. Это связано с тем, что мы заинтересованы в развитии компетенции и обмене знаниями внутри группы по автоматизации тестирования, что проще делать с использованием одного языка программирования.</p><p><strong>Айнур Мустафаева, Альфа Банк: </strong>Нет, необязательно. Как правило, создается отдельный проект, в котором пишутся E2E тесты. </p><p><strong>Виктория Кондратьева, МойОфис:</strong> Нет, необязательно, потому что это не всегда целесообразно. В том числе имеет значение, кто будет писать и поддерживать автотесты — наличие компетенций у команды и высота порога вхождения. Иногда тесты для разных продуктов могут быть написаны на разных языках, и ни один из них не соответствует языку продуктов. Но мы не разводим «зоопарк» из разных инструментов без объективных причин.</p><h3>Учитывается ли работа на фрилансе, как коммерческий опыт?</h3><p><strong>Владимир Ананьев, Банк РНКБ: </strong>Да, учитывается. Наибольшее значение имеет то, какие задачи решал кандидат и насколько успешно он с ними справился.</p><p><strong>Айнур Мустафаева, Альфа Банк: </strong>При просмотре резюме мы, безусловно, смотрим на опыт работы, стек технологий. Как правило, если кандидат сильный, то никого работа на фрилансе не смущает. </p><p><strong>Виктория Кондратьева, МойОфис: </strong>Такой опыт — лучше, чем ничего. Думаю, стоит честно указать его в резюме, описав вашу зону ответственности и выполненные задачи на каждом из проектов. </p><h3>5 пунктов, по которым вы понимаете, что кандидат отлично подойдет для вашей компании?</h3><p><strong>Владимир Ананьев, Банк РНКБ:</strong></p><ol><li><p>Способность развиваться и приобретать знания для решения поставленных задач. </p></li><li><p>Умение работать в коллективе и отстаивать свои интересы.</p></li><li><p>Владение инструментами, которые необходимы для выполнения обязанностей в рамках текущей вакансии.</p></li><li><p>Знание теории тестирования.</p></li><li><p>Широкий технический кругозор, глубокое понимание принципов работы Web-приложений.</p></li></ol><p><strong>Айнур Мустафаева, Альфа Банк: </strong></p><ol><li><p>Стек технологий. Как правило, кандидатов, которые работали с похожим стеком, легче ввести в курс дела, и за две недели работы они уже полноценно могут самостоятельно без помощи наставника во всем разобраться. </p></li></ol><ol start=\"2\"><li><p>Глубина знаний. Важно на собеседовании не <strong>«</strong>лить воду<strong>»</strong>, а отвечать содержательно на те вопросы, которые тебе задают. Я очень люблю вопросы, отвечая на которые, сразу видно, понимает кандидат, что и зачем используется или нет. </p></li></ol><ol start=\"3\"><li><p>Понимание клиентской боли. Так как мы работаем по большей части на клиентов, кандидат должен понимать, какой кейс может вызвать у них дискомфорт.</p></li></ol><ol start=\"4\"><li><p>Во время проведения собеседований, как правило, дается задачка на выстраивание процессов. Если кандидат выстраивает похожий процесс, как у нас в команде на текущий момент — это повышает его шансы пройти. </p></li></ol><ol start=\"5\"><li><p>Общее впечатление о кандидате также важно. Сразу видно, готовился ли он к собеседованию, насколько ответственно подошел к вопросу. </p></li></ol><ol start=\"6\"><li><p>Коммуникабельность и уверенность в своем ответе.<br></p></li></ol><p><strong>Виктория Кондратьева: </strong>Не в порядке значимости: </p><ul><li><p>Наличие специфических для вакансии навыков и опыта;</p></li><li><p>Общая техническая грамотность;</p></li><li><p>Готовность учиться и заинтересованность в росте;</p></li><li><p>Умение работать в команде и принимать общие цели;</p></li><li><p>Ответственность, открытость, честность, конструктивность в общении.</p></li></ul><h3>Можно ли работать у компаний-участников, не находясь в РФ?</h3><p><strong>Василий Сидоренко, Банк РНКБ: </strong>На данный момент нет.</p><h3>А вы работаете удаленно? </h3><p><strong>Василий Сидоренко, Банк РНКБ: </strong>Да. Возможен как полностью удаленный, так и гибридный формат — с появлением в офисе 1-3 раза в месяц. Для нас непринципиален формат работы, главное, чтобы задачи выполнялись качественно и в срок. Наши сотрудники работают не только в регионах присутствия Банка, но и по всей России, а если сотрудник захочет, то наши коллеги из HR помогут с релокацией в Крым. </p><p><strong>Айнур Мустафаева, Альфа Банк: </strong>В Альфе можно работать удаленно, но я больше люблю ходить в офис. </p><p><strong>Виктория Кондратьева: </strong>Зависит от конкретной позиции. У нас есть дистанционные сотрудники, но при желании или необходимости посетить офис можно всегда. Помогаем коллегам с релокацией, если они готовы переехать в города присутствия компании. Мы сразу указываем в описании вакансии, какой формат работы предполагается. </p><h3>Как вы оформляете сотрудников (ТК РФ, ИП РФ, самозанятость, ИП иностранного гос-ва). Пожалуйста, ответьте по пунктам в формате: вот так оформляем, а вот так точно не оформляем.</h3><p><strong>Василий Сидоренко, Банк РНКБ:</strong> Оформляем согласно ТК РФ. </p><h2>Процессы</h2><h3>Насколько чисто выстроен процесс грейдов у вас в компании? Насколько прозрачно происходит повышение?</h3><p><strong>Владимир Ананьев, Банк РНКБ: </strong>В компании была проведена значительная работа по выстраиванию процесса грейдирования. Сейчас у нас оцениваются как soft skills, так и hard skills. На основе полученных оценок формируется индивидуальный план развития и уже принимается решение о дальнейшем повышении сотрудника. </p><p><strong>Айнур Мустафаева, Альфа Банк: </strong>Как правило, один-два раза в год проводится ассессмент по запросу. Собирается обратная связь от коллег, проводится оценка навыков вместе с другими лидами QA. После чего принимается решение и дальнейший план.</p><p><strong>Антон Дикин, билайн: </strong>Повышение в Билайне происходит максимально прозрачно: проводится оценка профессиональных компетенций сотрудников в области IT, целью которой является определение их текущего уровня, сильных и слабых сторон, а также перспективных возможностей для карьерного и финансового роста.  </p><h3>Проводите мероприятия по повышению квалификации специалистов? Если да, то какие?</h3><p><strong>Айнур Мустафаева, Альфа Банк: </strong>Да. Мы активно развиваем коллег, отправляем на различные конференции и поддерживаем мотивацию учиться. </p><p><strong>Виктория Кондратьева, МойОфис: </strong>Проводим внутренние курсы и вебинары, ведем базу рекомендованных учебных материалов. Например, прямо сейчас проходит внутренний курс повышения квалификации для начинающих руководителей — вебинары, практикумы, обмен опытом. Внешние курсы и конференции тоже активно используем.</p><p><strong>Антон Дикин, билайн: </strong>Являясь высокотехнологичной компанией, Билайн использует свои компетенции для улучшения качества жизни сотрудников, повышения их мотивации и продуктивности работы. В компании есть собственный корпоративный университет, кадровый резерв и различные программы, способствующие развитию карьеры: мы обучаем коллег новому, проводим полезные митапы, активно интегрируемся в профильные конференции и пишем статьи на Хабр.</p><h3>Как у вас происходит рассмотрение идей по введению новых тулов, каких-то новых механик в рабочие процессы? Есть ли кейсы, когда кто-то рядовой предложил попробовать тулу\\механику и это в итоге было принято на уровне команды\\компании?</h3><p><strong>Василий Сидоренко, Банк РНКБ:</strong> Мы не ставим «рамки» и всегда готовы выслушать предложение любого участника команды. Если идея действительно интересная, мы её поддержим и возьмем к реализации.</p><p><strong>Айнур Мустафаева, Альфа Банк: </strong>У нас это приветствуют, и, как правило, охотно подхватывают новые идеи. Обычно это озвучивается на созвоне. Это оценивается. Да здравствует холивар! Затем один из коллег, обычно кто проявил инициативу, берет на себя квартальную задачу, реализует свою идею, после чего рассказывает всем остальным участникам команды. Мы применяем любую технологию в течение какого-то промежутка времени и делаем пилотные версии. Если всех устраивает, то несем дальше в массы. </p><p><strong>Виктория Кондратьева, МойОфис: </strong>Можно и нужно просто поделиться с командой идеей в любое время и любой форме. С небольшими изменениями в рамках команды всё просто: обсуждаем, развиваем и корректируем, если нужно, затем выделяем время и пробуем, делимся результатами с коллегами из других отделов.</p><p>Мы внедряли идеи инженеров по улучшению организации документации, корректировали процессы в рамках отдела; инженеры по автоматизации свободно предлагают и внедряют решения (использование новых библиотек, новые вспомогательные скрипты и т.п.).  </p><p>С рассмотрением и согласованием масштабных или затратных изменений поможет непосредственный руководитель. Если идея не про вашу, а про любую другую команду или продукт — можно написать в общий чат, они увидят и обсудят.</p><h3>Как вы стимулируете развитие и поддерживаете сотрудников?</h3><p><strong>Василий Сидоренко, Банк РНКБ:</strong> Если у сотрудника есть интересная идея для развития проекта, мы можем выделить ему время и ресурс на реализацию, а также поддержим активность материально.</p><h3>Каким образом в вашей компании происходит начало работы тестировщиком: сразу с боевых задач или сначала необходимо вникнуть в проект по документации? В какой баг-трекинг системе фиксируются отчеты о дефектах?</h3><p><strong>Владимир Ананьев, Банк РНКБ: </strong>В качестве баг-трекинг системы мы используем аналог Jira. Работа тестировщика начинается с онбординга: он включает в себя комплекс обучающих материалов от службы обучения, который позволяет познакомиться с внутренней структурой банка и основными системами, которые необходимы для работы. Параллельно сотрудник приступает к знакомству с продуктом путём консультаций с лидом и коллегами, по документации и проходя часть регресс-плана.</p><p><strong>Айнур Мустафаева, Альфа Банк: </strong>Да, сразу боевые задачи идут в ход. Jira всегда и везде. </p><p><strong>Виктория Кондратьева, МойОфис: </strong>Срок перехода к реальным задачам зависит от сложности продукта и уровня новичка. </p><p>В моем отделе первые два-три дня выделяем на знакомство с командой, процессами и документацией, еще два-три дня — на настройку рабочего окружения и знакомство с продуктом. Примерно со второй недели начинаем подключать к боевым задачам.</p><p>Во всей компании принята практика выделения ментора для новичка. Ментор ведет человека весь испытательный срок, всё рассказывает и показывает, дает обратную связь. Это либо инженер из команды, либо руководитель, но последний в любом случае помогает влиться в процессы. </p><h3>На какие инструменты-аналоги вы перешли/планируете перейти всвязи с санкциями? Насколько активно разрабатываете внутри команды тестирования собственные инструменты (на каком языке, для каких задач)? Выделите от одного до трех решений, которые помогают вашей команде тестировать продукт лучше, чем ваши прямые конкуренты.</h3><p><strong>Виктория Кондратьева, МойОфис: </strong>Мы активно использовали и используем вне зависимости от санкций собственные продукты: редакторы документов, таблиц и презентаций, почтовые клиенты и календарь, единое цифровое рабочее пространство Squadus. Из стороннего — перешли на отечественные системы управления тестированием. </p><h2>О старте карьеры и найме джунов</h2><h3>На что обращают внимание hr при поиске тестировщика без опыта работы? Можно ли устроиться на работу тестировщиком после прохождения курса по тестированию?</h3><p><strong>Виктория Кондратьева, МойОфис: </strong>На данный момент у нас нет вакансий для специалистов без опыта работы. В целом обращаем внимание на образование и грамотность составления резюме, грамотность речи при живом общении, честность, готовность учиться. После прохождения курсов можно претендовать на позицию стажера.</p><p><strong>Антон Дикин, билайн:</strong> Говоря про наём, в билайне мы оцениваем кандидатов по навыкам, а не по «корочке»: если он соответствует требованиям, может вписаться в нашу культуру, имеет желание учиться и развиваться, мы обязательно дадим шанс и обеспечим мягкий онбординг. Для того, чтобы усилить знания, которые специалисты получают на «свободных» площадках и подготовить их к специфике работы в цифровой компании, мы интегрируем экспертов в образовательной процесс и предоставляем им возможность применить их знания на реальных кейсах и задачах.</p><h3>Можно ли устроиться на работу тестировщиком после прохождения курса по тестированию?</h3><p><strong>Ананьев Владимир, Банк РНКБ: </strong>Да, можно. Имеют значение ваши реальные знания и опыт, а не то, где вы обучались тестированию.</p><p><strong>Айнур Мустафаева, Альфа Банк: </strong>Да, после курсов можно. Многое зависит от самого кандидата и от требований к кандидату. </p><h3>Кто для вас идеальный кандидат уровня Junior, которого вы бы взяли не раздумывая? Что должен точно уметь делать, с чем должен быть точно знаком и что было бы огромным плюсом?</h3><p><strong>Владимир Ананьев, Банк РНКБ: </strong>Кандидат уровня Junior должен знать теорию тестирования, уметь пользоваться инструментами для тестирования, знать основы работы протокола HTTP и владеть инструментами для его тестирования (например, Postman).</p><p><strong>Айнур Мустафаева, Альфа Банк: </strong>От кандидата уровня Junior требуются уверенные знания теории, которые он смело может применять на практике. Плюсом будет совпадение стека, который принят и используется в компании.</p><p><strong>Виктория Кондратьева, МойОфис: </strong>Для позиции Junior мы подразумеваем наличие минимального опыта работы. Технические навыки, обязательные и которые были бы плюсом, зависят от проекта: мобильное тестирование, веб, настольные приложения, мы всё это указываем в описании вакансий. </p><p>Для ручного тестировщика плюсом будут навыки программирования. Общее обязательное для всех — знание теории тестирования, умение составлять грамотные тест-кейсы и баг-репорты, базовые знания об архитектуре ПО. </p><h3>Периодически смотрю интервью с приглашенными руководящими лицами компаний. Им задают вопрос: «Как вы выбираете кандидатов на вакансию?», большинство отвечают, что они хотят видеть в своей компании сотрудников с «горящими глазами». Что подразумевается под этим выражением?</h3><p><strong>Виктория Кондратьева, МойОфис: </strong>Мы это выражение стараемся не использовать — формулируем более конкретный профиль кандидата. Думаю, чаще всего подразумевается интерес к задачам и искреннее желание работать, готовность учиться новому, проактивность.</p><h3>Как можно самостоятельно проверять себя в тестировании, до трудоустройства на работу?</h3><p><strong>Виктория Кондратьева, МойОфис: </strong>Попробуйте составить чек-лист, тест-кейсы и баг-репорты для любого приложения. Можно попробовать найти проект для краудтестинга. Посетите профильные конференции или послушайте подкасты — понимаете ли вы хотя бы в общих чертах, о чем идет речь в большинстве докладов?</p><h3>В чем интерес компании при приеме на работу стажера?</h3><p><strong>Василий Сидоренко, Банк РНКБ: </strong>Поэтапное развитие профессионала, который заточен на процессы и проекты Банка, исключая пробелы и проблемы, которые мы замечаем даже у опытных кандидатов.</p><h3>Топ-3 инструмента, которыми стоит научиться пользоваться начинающему специалисту?</h3><p><strong>Владимир Ананьев, Банк РНКБ: </strong>Всё зависит от того, что мы тестируем: фронтенд или условный бэкенд. Для фронтенда основными инструментами я бы назвал Devtools, Fiddler и Mockoon.</p><p>Для тестирования бэкенда — Postman, инструменты командной строки для чтения логов (grep, head, tail и т.д.). </p><p><strong>Айнур Мустафаева, Альфа Банк: </strong>Postman, DevTools, Kibana.</p><h2>О карьере	</h2><h3>Чем кардинально отличаются задачи и обязанности автотестировщика от обычного тестировщика?</h3><p><strong>Айнур Мустафаева, Альфа Банк: </strong>На мой взгляд, очень сильно зависит от компании и от команды. Где-то тестировщик full-stack, то есть пишет автотесты и проверяет вручную. Где-то есть команда, которая отдельно занимается автоматизацией тестирования, и им поступают кейсы от тестировщиков, которые смотрят все вручную. </p><p><strong>Виктория Кондратьева, МойОфис: </strong>Чаще всего автотестировщик пишет код по подготовленным ручными тестировщиками сценариям, а ручной тестировщик код не пишет. Но на практике бывает по-разному. У нас есть универсальные специалисты: и пишут код, и составляют сценарии, и тестируют руками. Есть и выделенные ручные тестировщики, и автотестировщики, и SDET-ы, которые только пишут код и решают относительно сложные задачи, связанные с автоматизацией процессов. </p><h3>Какие учебные материалы посоветуете для старта в тестировании безопасности?</h3><p><strong>Виктория Кондратьева, МойОфис: </strong>Рекомендации по тестированию от OWASP. На <a href=\"https://owasp.org/)\"><u>их сайте</u></a> есть гайды по тестированию веб- и мобильных приложений. Можно начать с любых базовых курсов, где охватывается тема penetration testing.</p><p><strong>Антон Дикин, билайн:</strong> Лучше всего, конечно, учиться «на кошках»: принимать участие в проектах, где есть возможность попробовать новые технологии. Практика — самая эффективная учёба, не нужно бояться браться за новое, нужно творить, мы в каком-то смысле художники. </p><h2>О меняющих сферу деятельности и возрасте </h2><h3>Несколько раз встречался с эйджизмом, как с этим бороться?</h3><p><strong>Василий Сидоренко, Банк РНКБ</strong>: У нас таких проблем нет. Для нас идеальная команда — это симбиоз опыта и активности/молодости. Мы прекрасно совмещаем в командах ребят 18-25 лет и опытных специалистов 35-50 лет.</p><p><strong>Виктория Кондратьева, МойОфис: </strong>Если вы грамотно составили резюме и ваши навыки нам подходят — мы вас пригласим на интервью. Если вы успешно пройдете интервью — пригласим на работу.</p><p>Нет смысла скрывать возраст в резюме. Некоторые скрывают, но при этом оставляют опыт работы с датами и даты окончания университета — это выглядит странно. У нас нет фильтра на возраст, мы смотрим на профессиональные и личностные качества. </p><h2>О технологиях и трендах </h2><h3>Пользуются ли ChatGPT в работе? Какие реалии для тестировщиков в связи с гонкой развития ИИ?</h3><p><strong>Владимир Ананьев, Банк РНКБ: </strong>На наш взгляд, недавно появившиеся инструменты не решают задачи, связанные с непосредственной проверкой работы продукта. ChatGPT или аналогичные боты нами не применялись, но думаю, что они могут неплохо справиться с задачами составления тест-кейсов по имеющейся документации. Однако любое средство автоматизации упирается в необходимость качественных входных данных. В случае отсутствия таковых, ручной тестировщик всё ещё далеко впереди любого ИИ, т.к. тестировщик может более гибко подходить к решению задач.</p><h3>Как ИИ помогает в тестировании?</h3><p><strong>Виктория Кондратьева, МойОфис: </strong>ИИ может помочь с генерацией тестовых данных и тест-кейсов, генерацией кода, объяснением и дебагом кода, с анализом информации. В общем, может ускорить работу, если правильно использовать инструмент и интерпретировать результаты. Как говорится, ИИ многое знает, но мало понимает. </p><p><strong>Антон Дикин, билайн: </strong>У билайна амбициозные планы в области реализации продуктов и услуг, основанных на развитии цифровых решений, искусственного интеллекта и больших данных. Конкретно в тестировании мы используем ИИ для технического анализа проведенных тестов. Надеюсь, что в ближайшее время ИИ заберет море рутинной работы. </p><h3>Умрет ли профессия мануального тестировщика?</h3><p><strong>Владимир Ананьев, Банк РНКБ: </strong>Нет, скорее эволюционирует.</p><p><strong>Виктория Кондратьева, МойОфис: </strong>Профессия развивается и трансформируется, теснее переплетается с профессией разработчика. Но дело не только в автоматизации — продукты создаются для людей, и полностью заменить человеческий взгляд автотестами не получится. Если понимать под ручным тестированием проверку уже готового кода на соответствие спецификации, то такая узкая специализация уже не совсем актуальна. Если говорить об обеспечении качества в более широком смысле, пока нет предпосылок смерти профессии. </p><hr><h2>Что почитать</h2><p>Список книг, ссылок, статей, подкастов, курсов и всего остального, что обязательно нужно прочитать тестировщику. </p><p><strong>Айнур Мустафаева, Альфа Банк:</strong></p><ul><li><p>Рекс Блэк <strong>«</strong>Ключевые процессы тестирования». Училась по этой книге, периодически до сих пор перечитываю и нахожу что-то новое. </p></li><li><p>Дж. Уиттакер <strong>«</strong>Как тестируют в Google». Посоветовал книгу мой наставник, когда в свое время проходила стажировку. Достаточно интересная и полезная, чтобы иметь представление о том, на чем строится тестирование. </p></li><li><p>Джанет Грегори <strong>«</strong>Agile-тестирование». Помогает посмотреть на процессы в команде под другим углом. </p></li></ul><p><em>Курсы:</em><strong> </strong></p><ul><li><p>Alfa-Campus. Была ментором в школе тестирования от «Альфа-Банка». На мой взгляд, подается достаточно структурированная и полезная информация, которую можно применять в работе. </p></li></ul><p><br><strong>Виктория Кондратьева, МойОфис:</strong><br><br>Не считаю, что есть обязательный и универсальный список. Источников информации много, и они разные. Для формирования базовых представлений можно ознакомиться с классикой жанра, но будьте готовы фильтровать некоторую устаревшую информацию: </p><ul><li><p>Сэм Канер, Джек Фолк, Енг Кек Нгуен «Тестирование программного обеспечения».</p></li><li><p>Эндрю Таненбаум, Херберт Бос «Современные операционные системы».</p></li><li><p>Если владеете английским — Lee Copeland \'A Practitioner\'s Guide to Software Test Design\'.</p></li></ul><p></p>', 2, '2023-06-12 21:57:51', 928877, 83, '/ru/companies/habr_career/articles/741010/', 'В апреле на Хабр Карьере проходила карьерная неделя тестировщиков. Карьерная неделя — это что-то вроде дня открытых дверей, который длится всю неделю. За специалистов боролись Альфа-Банк, МойОфис, Банк РНКБ и билайн.В конце недели специалисты задают вопросы представителям компаний-работодателей, а мы выбираем самые интересные из тех, что не успели обсудить, и отправляем спикерам. Спросили про трудоустройство, карьеру джунов, технологии и отношения к трендам. Если интересно почитать о внутренней жизни компаний — приглашаем в статью. ');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(180, 'Как удержать айтишника: высокая зарплата, бесплатное пиво или миссия?', '<p>В мире информационных технологий, который продолжает стремительно развиваться, важно знать, как найти и удержать ценные кадры. Что сегодня мотивирует опытного айтишника — высокая зарплата, бесплатное пиво или миссия компании? Индустрия IT-услуг уже достигла объема в 1,2 триллиона долларов США, показав рост на 8,7% в 2022 году. С увеличением числа IT-специалистов, превышающего 20 миллионов человек по всему миру, актуальность вопросов об удержании и развитии профессионалов только возрастает. Мы поговорили с экспертами, чтобы понять, какие факторы оказывают наибольшее влияние на решение сотрудников остаться в компании или сменить место работы. Мы попытаемся разобраться в этом вопросе, оценив важность таких составляющих как заработная плата, дополнительные бонусы и привлекательность миссии компании.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/7db/e50/a60/7dbe50a60d83d5d385c705b26d85f372.jpg\" width=\"1280\" height=\"853\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/7db/e50/a60/7dbe50a60d83d5d385c705b26d85f372.jpg\" data-blurred=\"true\"></figure><p><a href=\"https://www.youtube.com/live/APirUiZDg8Q?feature=share\"><strong>Видео-версию дискуссии можно посмотреть тут </strong></a></p><h3>«Есть цель — взращивать специалистов и не допускать их хантинга»  </h3><p>В последнее время многие IT-компании в России заняли круговую оборону на кадровом рынке и вкладывают деньги в привлечение сотрудников и их удержание. Очевидно, что специалистов на рынке, особенно с опытом, в последнее время не хватает.</p><p>Об этом говорит Scrum-мастер <a href=\"https://www.comindware.ru/?utm_source=habr&amp;utm_medium=blog&amp;utm_campaign=article\"><u>Comindware</u></a> <strong>Алина Балашова</strong>. По ее словам, на российском рынке труда наметилась серьезная нехватка опытных разработчиков программного обеспечения. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/fbf/2c6/718/fbf2c67188c626f0ab0586706046a24c.jpg\" alt=\"Алина Балашова\" title=\"Алина Балашова\" width=\"1020\" height=\"585\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/fbf/2c6/718/fbf2c67188c626f0ab0586706046a24c.jpg\" data-blurred=\"true\"><div><figcaption>Алина Балашова</figcaption></figure><p>«Это проблема, которую мы видим не только в Comindware, но и во всей индустрии. В соответствии с последними статистическими данными, только 10% из общего числа специалистов, которые ищут работу, имеют более 6 лет опыта разработки ПО. Часто мы видим, что многие разработчики находятся в начале своей карьеры, и хотя это отлично для внедрения свежих идей, опытные разработчики играют ключевую роль в формировании культуры качества и передачи навыков младшим специалистам». И по словам эксперта, за кадры идет серьезная борьба на рынке.</p><p>Это подтверждает и <strong>Ольга Звагольская</strong>,<strong> </strong>руководитель инсорсинговых направлений ГК ITGLOBAL.COM</p><p>«В 2023 году мы заметили тенденцию к перетягиванию IT-специалистов в другие компании из-за их дефицита на рынке труда. Поэтому сейчас мы сосредоточились на нематериальной мотивации сотрудников и уделяем большое внимание развитию корпоративной культуры. У нас есть цель — развивать и взращивать наших специалистов и не допускать их хантинга. Поэтому считаю важным, чтобы сотрудник был предпринимателем в своей роли и четко понимал, как он будет развиваться и расти», — отмечает она.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/e1c/437/6e4/e1c4376e4e2e6b8dda73a20158c165db.jpg\" alt=\"Ольга Звагольская\" title=\"Ольга Звагольская\" width=\"1020\" height=\"585\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e1c/437/6e4/e1c4376e4e2e6b8dda73a20158c165db.jpg\" data-blurred=\"true\"><div><figcaption>Ольга Звагольская</figcaption></figure><p>О том, что нужно не допускать ухода специалистов говорит и <strong>София Воронцова, </strong>директор по персоналу QTIM.</p><p>«Специалисты сейчас очень важны и нужны, и за них идет борьба. Мы стараемся предоставлять нашим сотрудникам всевозможный выбор инструментов для комфортной работы. В QTIM есть своя корпоративная культура, которая заключается в создании полноценной экосистемы ценностей, заботы и благополучия. Каждый сотрудник, который работает в команде, не только чувствует себя частью единого рабочего процесса, но и получает возможность внести свой вклад в развитие компании, при этом не теряя свои ценностные качества. Выстраивание такой культуры очень сильно помогает нам привлекать специалистов», — отмечает она. </p><h3>«Хантинг актуален для специалистов высокого уровня»  </h3><p>Увы, но большого спроса на начинающих разработчиков, которых готовят на многочисленных курсах на ИТ-рынке нет. Компании сфокусированы на поиске опытных специалистов.</p><p>По словам<strong> Ольги Моисеенко, </strong>HR в IT-компании Outlines Tech,<strong> </strong>после существенного снижения количества вакансий в прошлом году, сейчас наблюдается их рост в области IT. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/528/9bb/5fd/5289bb5fd779da53db3c7515a312b3bb.jpg\" alt=\"Ольга Моисеенко\" title=\"Ольга Моисеенко\" width=\"1020\" height=\"585\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/528/9bb/5fd/5289bb5fd779da53db3c7515a312b3bb.jpg\" data-blurred=\"true\"><div><figcaption>Ольга Моисеенко</figcaption></figure><p>«После существенного снижения количества вакансий в области IT в прошлом году, сейчас наблюдается их рост. Специалисты все еще востребованы, и спрос на них не снижается, несмотря на изменения на рынке. Однако, судя по статистике с портала HeadHunter, количество IT-специалистов, ищущих работу, увеличилось в 3,5 раза по сравнению с количеством открытых вакансий. На сегодня хантинг актуален для специалистов высокого экспертного уровня, таких как старшие разработчики и solution архитекторы. Что касается специалистов среднего уровня (middle), имеющих 2-4 года опыта работы, на рынке труда идет глобальный отсев. Это не означает, что middle-специалисты не востребованы, на самом деле, среди них наблюдается самое активное движение на рынке труда. Однако не каждый опыт, имеющий длительность 4 года, одинаково подходит под требования проектов. Компании среди middle-специалистов ищут тех, кто максимально сможет принести пользу здесь и сейчас», — отмечает она. </p><p>По словам Scrum-мастера <a href=\"https://www.comindware.ru/?utm_source=habr&amp;utm_medium=blog&amp;utm_campaign=article\"><u>Comindware</u></a> <strong>Алины Балашовой</strong>, опытные разработчики уже имеют обширные навыки и знания, необходимые для выполнения работы. Они знают, как решать различные проблемы, которые могут возникнуть в процессе разработки, и они способны делать это быстро и эффективно.</p><p>«Новички могут потребовать значительного времени и ресурсов на обучение, прежде чем они смогут работать на том же уровне.Кроме того, опытные разработчики могут принести большую ценность в виде Наконец, найм опытных разработчиков может привести к более быстрому времени выхода на рынок. Опытные разработчики способны работать быстро и эффективно, что позволяет выпускать новые продукты и функции быстрее. Это, конечно, не означает, что мы должны полностью отказаться от найма и обучения новичков. Важно найти баланс между наймом опытных разработчиков и обучением новых талантов, чтобы обеспечить устойчивое будущее нашей индустрии», — говорит Scrum-мастер <a href=\"https://www.comindware.ru/?utm_source=habr&amp;utm_medium=blog&amp;utm_campaign=article\"><u>Comindware</u></a><strong>. </strong></p><h3>«Если человек работает удаленно, другие рекрутеры могут пытаться привлечь его на парт-тайм» </h3><p>Однако, даже если отбросить проблемы с поиском и наймом специалистов, то у компаний болит голова и о том, как в условиях удаленной работы обеспечить фокус работника только на рабочих задачах.</p><p>Как сказала <strong>Мария Орловская, </strong>основатель и управляющий партнер TeamSonance, командный и executive коуч PCC ICF, ex-CEO Oracle в России,<strong> </strong>после пандемии многие компании не вернулись к офисной работе, и это в особенности относится к IT-компаниям. Многие команды работают удаленно, что предоставляет преимущества для специалистов и работодателей, так как теперь они могут нанимать специалистов из других городов.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/703/86c/226/70386c226fc0480ab27c48a16f7a5c53.jpg\" alt=\"Мария Орловская\" title=\"Мария Орловская\" width=\"1020\" height=\"585\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/703/86c/226/70386c226fc0480ab27c48a16f7a5c53.jpg\" data-blurred=\"true\"><div><figcaption>Мария Орловская</figcaption></figure><p>«Возможно, рост количества вакансий связан именно с этим, поскольку люди ищут работу не только в своем регионе, но и в других местах. С другой стороны, удаленная работа позволяет специалистам работать на нескольких работодателей одновременно, что заставляет компании конкурировать за хороших сотрудников не только на этапе рекрутмента, но и в процессе работы», — отметила она. </p><p>«Привлекая специалистов на проекты, работодатели сталкиваются с борьбой за кадры не только на этапе найма, но и в процессе их работы в компании. Если человек работает удаленно, другие рекрутеры и компании могут пытаться привлечь его на парт-тайм или временные проекты. Ранее был доступен Upwork, на котором можно было официально работать с гарантиями от международных компаний», — говорит <strong>Руслан Абишев, </strong>ментор/коуч в IT.</p><p>По его словам, действительно, тренд на «многостаночную» работу на удаленке существует. </p><p>«Специалисты ищут подработки, потому что на основном месте работы процессы могут быть не оптимизированны, и специалисту не хватает интересных задач. Это может быть связано с проблемами в процессах и нематериальными активами, такими как мотивация и лояльность», — подчеркнул эксперт.</p><h3>«Эффективный способ удержать людей на удаленке — общение» </h3><p>Не так просто удержать людей в команде, которая редко бывает в офисе. </p><p><strong>«</strong>В QTIM большое количество удаленных сотрудников, и, безусловно, мы держим руку на пульсе, чтобы люди оставались в команде. Внутри компании мы выбрали на первый взгляд самый простой, но в то же время эффективный способ — общение», — рассказывает <strong>София Воронцова, </strong>директор по персоналу QTIM.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/687/7e8/2f6/6877e82f67e082933982b02af4756a0e.jpg\" alt=\"София Воронцова\" title=\"София Воронцова\" width=\"1020\" height=\"585\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/687/7e8/2f6/6877e82f67e082933982b02af4756a0e.jpg\" data-blurred=\"true\"><div><figcaption>София Воронцова</figcaption></figure><p>«Неформальное взаимодействие с сотрудниками позволяет сблизиться и понять их потребности, проблемы, учесть пожелания. Мы практикуем one-to-one встречи с каждым сотрудником, на которых проводятся опросы, связанные с возможными трудностями в работе, конфликтными ситуациями. Все озвученные вопросы решаются совместно в процессе общения. Такой подход действительно помогает: сотрудник получает возможность высказаться и поделиться своими опасениями. Если возникают тревожные моменты, мы стараемся решить их здесь и сейчас. В итоге специалист понимает, что ему не стоит беспокоиться, и при возникновении проблем ему помогут», — говорит она. </p><p>По словам<strong> Марии Орловской</strong> раньше, когда все работали в офисе, удержание означало, что человек проводит 8 часов в офисе и делает работу. На удаленке это понятие стоит декомпозировать на другие: лояльность и вовлеченность.</p><p>«Лояльность — это хорошее отношение к компании, но она не гарантирует удержание в том смысле, в котором мы его понимаем. Вовлеченность — это когда человек увлечен своей работой и видит, как достижение целей компании удовлетворяет его потребности. Тогда сотрудник будет работать эффективнее и уделять больше времени компании, даже если у него есть другие активности», — отмечает она.</p><p>«Для меня вовлеченность означает быть частью компании. В нашем подходе мы не акцентируемся на \"удержании\" сотрудников, а строим с ними индивидуальные годовые планы и вовлеченность в общее дело. Все сотрудники компании называются партнерами, и независимо от их текущей мотивации (опционы или доли в компании), они вовлечены в процесс создания продукта, достижение результатов и удовлетворение потребностей клиентов», — говорит <strong>Алексей Шабаршин, </strong>владелец онлайн-сервиса найма сотрудников Promopoisk.com</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/580/76b/0d1/58076b0d1b371fe349fbad3a514db8ac.jpg\" alt=\"Алексей Шабаршин\" title=\"Алексей Шабаршин\" width=\"1020\" height=\"585\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/580/76b/0d1/58076b0d1b371fe349fbad3a514db8ac.jpg\" data-blurred=\"true\"><div><figcaption>Алексей Шабаршин</figcaption></figure><p>«На данный момент не каждому сотруднику раздаются акции, всего два из них имеют опционы на доли, а двое уже владеют долями. Однако важно мотивировать сотрудников, прописывая в их планы развития и финансовую мотивацию», — резюмирует он.</p><h3>«В больших компаниях сотрудникам сложнее выделиться»  </h3><p>«Да, в своей практике ментора в IT я сталкиваюсь с разными ситуациями. Среди специалистов среднего и старшего уровня часто возникает такой запрос: им скучно на текущей работе и они не видят перспективы для дальнейшего развития. Очень часто в компании отсутствует четкий карьерный путь. Сотрудник получает определенный объем работы, но не имеет представления, что он будет делать дальше. После того, как его приняли на работу, с ним, как правило, перестают активно работать внутри компании», - говорит <strong>Руслан Абишев, </strong>ментор/коуч в IT.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/655/383/20c/65538320c6da626d6d97fdcbaddd4dde.jpg\" alt=\"Руслан Абишев\" title=\"Руслан Абишев\" width=\"1020\" height=\"585\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/655/383/20c/65538320c6da626d6d97fdcbaddd4dde.jpg\" data-blurred=\"true\"><div><figcaption>Руслан Абишев</figcaption></figure><p>«В больших компаниях сотрудникам сложнее выделиться. Поэтому я считаю, что даже при работе удаленно, большим компаниям следует помочь сотрудникам осознавать свое место в команде и видеть свой вклад. Раньше, когда мы все работали в офисе, можно было подойти к сотруднику, поблагодарить его за работу или просто поговорить в неформальной обстановке. С работой на дистанции, возможно, кажется странным писать сообщение с благодарностью или похвалой, но это важно», — говорит эксперт.</p><p>«На самом деле, здесь возникают два вопроса. Во-первых, это требования к компетенциям IT-лидеров, которые должны уметь управлять командой и поддерживать комфортную рабочую атмосферу. Во-вторых, IT сегодня предлагает множество сервисов для HR, которые могут помочь в решении этих задач. Существуют, например, системы, которые мониторят выгорание и анализируют контакты между сотрудниками, определяя изменения в их активности. Кроме того, коучинг перестал быть элитной услугой и стал доступным ресурсом для специалистов и команд среднего уровня. Однако, иногда руководители ошибочно полагают, что цели команды понятны всем, так как они ясны им самим. Это может привести к разному восприятию целей среди членов команды», — отмечает <strong>Мария Орловская, </strong>основатель и управляющий партнер TeamSonance, командный и executive коуч PCC ICF, ex-CEO Oracle в России.</p><h3>«Сотрудник утром может начать пить пиво»  </h3><p>Проблему удержания сотрудников каждая ИТ-компания решает по-своему. Например, можно установить кеги с пивом, чтобы сотрудники могли, но при этом не хотели его пить.</p><p>Об этом рассказывает<strong> Ольга Звагольская, </strong>руководитель инсорсинговых направлений ГК ITGLOBAL.COM</p><p>«Те, кто вернулся к гибридному формату работы, стали счастливее. Мы провели опросы и обнаружили, что уровень счастья у таких сотрудников возрос. Мы также добавили в офис новую услугу: установили кегераторы с пивом из собственной пивоварни в Севастополе. Теперь любой сотрудник может пить пиво после 16:00, а Production Unit и IT-специалисты могут наслаждаться пивом в течение всего дня. Таким образом, когда сотрудник приходит на работу утром, он может начать пить пиво, но интересное то, что он на самом деле не хочет этого делать. Ведь когда пива нет, кажется, что если оно будет в наличии, то хочется его пить целый день. Однако, когда оно доступно, сотрудники его не пьют. Человек так устроен, что если что-то постоянно доступно и бесплатно, то он этого не хочет», — отмечает она. </p><p>В <a href=\"https://www.comindware.ru/?utm_source=habr&amp;utm_medium=blog&amp;utm_campaign=article\"><u>Comindware</u></a> тоже занимаются переводом работы на привычные оффлайновые рельсы.</p><p>«Мы в настоящее время занимаемся возвратом наших сотрудников в офис с полностью удаленной работы. Наблюдается интересная тенденция: люди начинают работать лучше. Думаю, это связано с тем, что работая дома, сотрудник выполняет задачу и сам для себя определяет, достаточно он сделал или нет. Это порождает самоанализ, иногда слишком строгий, иногда, напротив, слишком лояльный», — говорит <strong>Алина Балашова, </strong>Scrum-мастер Comindware.</p><p>«В офисе же, в окружении своей команды, сотрудник видит, как работают другие, и это позволяет ему сравнить свой уровень производительности с коллегами. Это вызывает чувство сопереживания проекту. Осознание того, что он не один в этом проекте и что его работа имеет значение для всей команды. Кроме того, общение в офисе способствует более быстрой и эффективной работе. Вопросы решаются быстрее, чем если бы это делалось через мессенджеры или звонки. В ходе обсуждения могут возникнуть новые идеи, что способствует более глубокому погружению в проект и увлеченности им.</p><p>Тем не менее мы считаем, что должен сохраниться некий гибридный режим работы. Например, сотрудник может работать в офисе один или два дня в неделю, чтобы обсудить рабочие моменты или просто для общения. Но иногда есть моменты, когда сотрудникам нужно спокойно сесть и написать код без отвлечений. В такие дни они могут работать из дома. Итак, в целом, мы считаем, что лучше всего будет использовать гибридную модель работы», — отмечает Scrum-мастер Comindware.</p><h3>«Деньги не являются эффективным мотиватором»  </h3><p>Еще один инструмент удержания специалистов в ИТ — деньги. Но его принято критиковать и не считать эффективным. Как говорят эксперты — сколько разработчику не плати, это не решит его главную задачу — кадровый рост и развитие. </p><p>«Деньги являются гигиеническим минимумом, необходимым для закрытия базовых потребностей. Однако деньги не являются эффективным мотиватором. Нельзя просто увеличивать зарплату сотрудника в надежде на то, что это решит все его проблемы, например, проблемы с выгоранием», — отмечает <strong>Руслан Абишев, </strong>Head of Project Management Office, ментор/коуч в IT.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/20b/1f6/434/20b1f643417aaffbf09b58e9280b2b82.jpg\" alt=\"Руслан Абишев\" title=\"Руслан Абишев\" width=\"1020\" height=\"585\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/20b/1f6/434/20b1f643417aaffbf09b58e9280b2b82.jpg\" data-blurred=\"true\"><div><figcaption>Руслан Абишев</figcaption></figure><p>По его словам деньги могут помочь лишь на короткой дистанции, так как деньги не закроют проблемы нефинансового характера. Важно выяснить, где именно сотрудник испытывает трудности и понять, как их решить. </p><p>«Необходимо определить, что действительно важно для сотрудника: возможно, это признание, участие в социально значимом проекте или получение наград. Иногда человек может быть доволен занимаемой должностью директора с меньшей зарплатой, в то время как другой сотрудник, занимающий должность младшего специалиста с высокой зарплатой, будет недоволен. Я не согласен с утверждением, что деньги решают все проблемы», — считает эксперт.   </p><p>«Важно понимать, что разные люди ищут разные вещи на работе. Например, кто-то стремится к известности, работая в крупных компаниях, таких как Google, и чувствуя себя причастным к чему-то большому. Другим же может быть достаточно работы в небольшой компании или бутиковом агентстве, где они также будут удовлетворены.</p><p>Таким образом, у людей могут быть разные цели, и поэтому подходы к их достижению также различаются», — отмечает <strong>Руслан Абишев.</strong></p><p><strong>Алина Балашова</strong>, Scrum-мастер Comindware считает, что<strong> </strong>деньги, безусловно, важны, особенно если речь идет о базовых потребностях, таких как еда и жилье. Однако, когда эти потребности удовлетворены, люди начинают задумываться о более высоких ценностях, таких как смысл своей работы, свое место в будущем и свое самоощущение.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/e2b/012/055/e2b012055616b96e32141646f5a97a80.jpg\" alt=\"Алина Балашова\" title=\"Алина Балашова\" width=\"1020\" height=\"585\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e2b/012/055/e2b012055616b96e32141646f5a97a80.jpg\" data-blurred=\"true\"><div><figcaption>Алина Балашова</figcaption></figure><p>«Если человек страдает от выгорания и не может ответить на эти вопросы, то повышение зарплаты может помочь только на короткое время. Через месяц или два он снова начнет задумываться о своих целях и о том, насколько ему нравится его работа. Учитывая, что большинство людей проводят на работе более 40 часов в неделю, важно понимать, ради чего они это делают, иначе деньги не решат этот вопрос», — говорит она. </p><h3>Вместо вывода</h3><p>Ситуация на рынке труда в ИТ сейчас достаточно сложная. Разные компании тестируют разные стратегии привлечения и удержания специалистов. Мы бы хотели знать, как нанимают и удерживают специалистов у вас. Поделитесь своими историями в комментария под статьей или под трансляцией на Youtube-канале. </p><p>В свою очередь компания Comindware, ведущий разработчик инновационного программного обеспечения для автоматизации бизнес-процессов и управления работой, активно ищет талантливых специалистов в области программирования для расширения своей команды. Это идеальная возможность для тех, кто стремится применять свои навыки и знания на практике, работая над сложными и интересными проектами.</p><p></p>', 2, '2023-06-12 21:57:51', 335782, 86, '/ru/companies/comindware/articles/740920/', 'В мире информационных технологий, который продолжает стремительно развиваться, важно знать, как найти и удержать ценные кадры. Что сегодня мотивирует опытного айтишника - высокая зарплата, бесплатное пиво или миссия компании? Индустрия IT-услуг уже достигла объема в 1,2 триллиона долларов США, показав рост на 8,7% в 2022 году. С увеличением числа IT-специалистов, превышающего 20 миллионов человек по всему миру, актуальность вопросов об удержании и развитии профессионалов только возрастает. Мы поговорили с экспертами, чтобы понять, какие факторы оказывают наибольшее влияние на решение сотрудников остаться в компании или сменить место работы. Мы попытаемся разобраться в этом вопросе, оценив важность таких составляющих как заработная плата, дополнительные бонусы и привлекательность миссии компании.'),
(181, 'Я инженер, и мне нужно выступать перед людьми. Что делать?', '<p>Если вы успешный инженер или разработчик, то на определенном этапе карьеры вам придется, так сказать, выйти на сцену. Причем не перед дружелюбно настроенными коллегами, которые пришли послушать про какой-нибудь фреймворк. А перед «лицами, принимающими решения», которые могут сильно повлиять, например, на вашу будущую карьеру. В этом посте мы поделимся опытом Нила Томпсона, создателя курсов публичных выступлений Teachthegeek.com. Путь к собственному проекту и известности в качестве спикера Нил начинал как обычный инженер — и в подкасте InfoQ рассказал, что помогло ему в развитии.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/c74/9ef/10e/c749ef10e9ffccb3cd09e3c22703184d.png\" width=\"1000\" height=\"666\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/c74/9ef/10e/c749ef10e9ffccb3cd09e3c22703184d.png\"></figure><p>Я стал инженером, потому что так мне посоветовал отец. Я никогда не думал, что буду этим заниматься. В школе я неплохо справлялся с математикой и естественными науками. Отец спросил, почему бы мне не стать инженером, и я согласился.</p><p>Раньше я скрывал эту причину, она казалась мне чем-то постыдным. Обычно у всех на этот счет есть классная история о каком-нибудь школьном кружке робототехники или об увлечении Lego. Конструкторы меня не интересовали, да и кружка с роботами в моей школе не было. Сначала отец предложил окончить школу с этой специальностью. Потом получить высшее образование. И наконец, по его же совету я пошел получать степень доктора наук по инженерии материалов.</p><p>Тогда мне было 24 года. В какой-то момент жизни каждый начинает принимать решения самостоятельно, и примерно в это время такой момент наступил и у меня. Я не представлял себя доктором наук, через год забросил учебу. Потом, пока я семь месяцев искал работу, пришлось жить у отца. Вряд ли он был этому рад.</p><p>На первой работе я пытался разобраться, как что работает в индустрии да и вообще в этом мире. На второй работе меня назначили лидом проекта. Моя компания была слишком бедна, чтобы нанимать полноценных проджект-менеджеров, и всю ответственность они возлагали на инженеров. Так что каждый месяц мы, лидеры проектов, представляли презентации о нашей работе топ-менеджменту — CEO, COO, CTO и прочим «C».</p><h3>Страх публичных выступлений</h3><p>Первые презентации две вселяли в меня ужас. Я не знал, что человеческое тело способно выделить столько пота. Я был словно покрыт водой — ощущение не из приятных. Повторять такой опыт не хотелось, поэтому я решил, что стоит развивать навык презентаций, особенно перед людьми, которые технически не так подкованы, как я. К тому же проект, который я представлял тогда, компания в итоге закрыла. Сейчас я думаю, что, возможно, если бы я лучше выступал, проект бы не закрыли. Все еще думаю об этом, хотя прошло уже лет 13.</p><p>Я развивал навыки презентаций и в итоге присоединился к Toastmasters — международной организации, помогающей людям развивать навыки публичных выступлений. Я начал сознательно искать возможности для публичных выступлений. Все свои знания по теме я свел в курсе Teach the Geek to Speak. Так я получил огромные возможности для оттачивания навыков. Каждый месяц я выступаю перед комьюнити курса, даю консультации, решаю с другими техническими специалистами их проблемы.</p><p>Даже если страх публичных выступлений у вас сильнее страха смерти, прежде всего спросите себя: «Зачем мне нужно прокачивать навыки публичных выступлений?». Я довольно быстро понял, что такие люди как минимум быстрее других продвигаются по карьерной лестнице. Какой бы невероятной экспертизой ты ни обладал, никто об этом не узнает, пока ты не научишься общаться с людьми. Не упускайте эту мысль, и это поможет преодолеть страх.</p><h3>Находите общий язык с людьми и рассказывайте им истории</h3><p>Для начала вам нужно определить потенциальных зрителей и их уровень знаний. Если вы архитектор ПО, а говорить об архитектуре ПО приходится с не-архитекторами, важно понять, что они знают по теме. Они совсем новички? Или, может, они более продвинуты, чем вы считаете? Если это новички, то используйте меньше технического жаргона и больше общей лексики.</p><p><em>От редактора: в оригинале «находите общий язык с людьми» звучит как «meet people where they are», дословно «подходите к людям там, где они находятся». Легко подумать, что речь идет о физическом местоположении. Нет, не надо никого утомлять в перерыве у кофе-машины или затягивать созвоны личными историями. Речь здесь именно об уровне знаний, об экспертности.</em></p><p>Помню, на второй работе, когда я представлял обновления по проекту, мне приходилось взаимодействовать с группой ортобиологов. Если я сейчас продолжу углубляться в ортобиологию, вы вряд ли поймете, о чем вообще речь. Ортобиология занимается имплантами, сделанными из костной ткани человека. Моя компания, в частности, делала такие импланты для позвоночника. Если бы я продолжил просто называть всех ортобиологами, то вряд ли бы удержал интерес. Поэтому я использую слова, которые понятны всем: это про импланты из костей.</p><p>Второй важный момент — это сторителлинг. Я никогда не понимал, насколько он важен в презентациях, пока не задумался и не услышал, как другие люди ведут технические презентации с помощью сторителлинга. Я думал, что травить байки на технической презентации не стоит; важно сконцентрироваться на данных и фактах. Но если вы работаете с аудиторией, особенно нетехнической, сторителлинг очень важен. Им уже трудно мыслить на вашем уровне экспертизы — так постарайтесь хотя бы обернуть свои знания в нечто более понятное, чтобы зрители смогли-таки взобраться на эту вершину. Слово «ортобиолог» могло легко выключить ваше внимание, поэтому я сразу пояснил его на понятном языке.</p><p><em>От редактора: чтобы понять, как работает сторителлинг, можно почитать «</em><a href=\"https://alpinabook.ru/catalog/book-istoriya-na-million-dollarov-master-klass/\"><em><u>Историю на миллион долларов</u></em></a><em>» Роберта Макки. А чтобы вдохновиться магией сторителлинга, посмотрите «</em><a href=\"https://ru.wikipedia.org/wiki/%D0%91%D0%B0%D1%80%D1%82%D0%BE%D0%BD_%D0%A4%D0%B8%D0%BD%D0%BA\"><em><u>Бартон Финк</u></em></a><em>» братьев Коэн.</em></p><p>Подытожу этот пункт. Знайте, с кем работаете и какой у них уровень экспертизы. Если нужно, говорите словами из общей лексики, чтобы тебя с большей вероятностью слушали. И наконец, используйте сторителлинг.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/086/ade/5a5/086ade5a57dc73c5d8fd234541eb3dca.png\" alt=\"Источник Kandinsky 2.1\" title=\"Источник Kandinsky 2.1\" width=\"700\" height=\"509\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/086/ade/5a5/086ade5a57dc73c5d8fd234541eb3dca.png\"><div><figcaption><em>Источник </em><a href=\"https://habr.com/ru/companies/sberbank/articles/725282/\"><em><u>Kandinsky 2.1</u></em></a></figcaption></figure><h3>Взаимодействуйте с аудиторией</h3><p>Когда ваше взаимодействие с аудиторией одностороннее, стоит придерживаться принципа «меньше — лучше». Я много ходил на конференции в качестве зрителя, когда работал инженером. Сложно сохранять концентрацию и желание просиживать зад, если в аудитории тебя не сопровождает чашечка кофе или энергетик.</p><p>В этом заключается еще одна большая проблема. Многие технические специалисты, особенно руководители, во время презентации просто зачитывают со слайдов. Они даже не смотрят на зрителей. Такое чувство, что они дают презентацию, просто чтобы мысленно поставить галочку. «Я проведу презентацию» вместо «Вау, я собираюсь реально увлечь людей, и они узнают то, чего не знали раньше!». Если вы смотрите на слайды, а не в зал, то вы, вероятно, потеряете контакт с аудиторией.</p><p>Когда я говорю о профессиональных темах, то стараюсь, чтобы на моих слайдах было как можно меньше слов. Еще я очень люблю заменять текст картинками — это избавляет зрителей от необходимости читать. В итоге у них остается простой выбор: либо слушать вас, либо игнорировать. Да и у вас число сценариев сокращается до двух: вы смотрите либо на аудиторию, либо на свои ботинки.</p><p>Картинки стоит подбирать так, чтобы они были связаны с повествованием. Это поможет вспомнить нужные тезисы. Конечно, если на слайдах нет слов, вести презентацию может быть сложновато. Особенно если вы привыкли читать целые предложения и только потом оборачиваться к аудитории. Но, как я уже сказал, эта тактика опасна: вы можете потерять контакт с аудиторией.</p><p>Еще один важный совет. Если у вас на слайде есть графики или таблицы, добавьте к ним заголовок, где будет четко изложено то, что вы хотите донести с помощью графиков и таблиц. Не стоит сильно напрягать слушателей, чтобы они поняли смысл всех этих линий и цифр. Просто напишите, что хотите до них донести; это будет очень полезно, особенно для нетехнической аудитории.</p><h3>Участвуйте в панельных дискуссиях</h3><p>Для спикеров такой формат может быть непростым, особенно если для каждого участника панели имеется строго отведенное время. Вы должны уместить свои тезисы в строго отведенный промежуток, чтобы у коллег осталось достаточно времени. Если получится, узнайте о теме панельной дискуссии заранее — так вы сможете предварительно подготовить истории, чтобы не задерживаться на дискуссии.</p><p>Как я упоминал выше, очень важно умение выразить мысль в минимальном количестве слов. Мне, например, это всегда давалось легко, и я даже не задумывался, насколько это важно, пока о моих выступлениях не стали говорить как о лаконичных. Мне нравится, когда я могу уместить максимум смысла в как можно меньшее количество слов. Чем больше ты скажешь, тем больше зрителям придется думать.</p><p>Я хорошо помню, как читал техническую литературу в школе и университете. Чем длиннее предложение, тем сложнее понять, что оно значит. Даже если просто разбить такое предложение на две части, постичь смысл становится гораздо легче. Так что если вы участвуете в панельной дискуссии, постарайтесь говорить приветливо и лаконично, чтобы у других тоже было время ответить на вопросы. И вероятно, другие участники ответят вам тем же.</p><p><em>От редактора. Устная речь в принципе должна быть проще письменной. По возможности избегайте причастных и деепричастных оборотов, витиеватых сложноподчиненных конструкций. Старайтесь не ставить далеко зависимые члены предложения от их главных слов. Это может быть уместно в письменной речи, но фокус внимания у слушателей гораздо уже, чем у читателей.</em></p><h3>Аргументируйте и убеждайте, а не просто говорите</h3><p>Старайтесь привязывать свои цифры и факты к обоснованию какого-нибудь тезиса, а не просто сыпьте знаниями. Желательно с использованием сторителлинга.</p><p>Вернусь к тому проекту, который отменили лет 13 назад, как мне кажется, по моей вине. Да, причина была, скорее всего, в моей недостаточной убедительности. «Почему мы должны выделить больше денег на проект?». «Зачем вам нужны еще люди?». У меня не было ответов на эти вопросы. Я просто читал слайды, обливался потом и старался побыстрее сбежать. Но это мне никогда не удавалось. В конце презентации я получал вопросы, на которые уже вроде бы отвечал по ходу презентации, терялся и потел еще больше.</p><p>Когда ты убеждаешь людей в чем-то, они хотят знать, какие еще у них есть варианты. Но при этом им очень интересно, какой из вариантов лучший (да, ваш, конечно же). По моим наблюдениям, здесь может очень помочь сторителлинг.</p><p><em>От редактора. Оставшаяся часть </em><a href=\"https://www.infoq.com/podcasts/effective-communicator-engineer/\"><em><u>подкаста</u></em></a><em> посвящена проектам Нила Томпсона — </em><a href=\"https://teachthegeek.com/\"><em><u>курсам публичных выступлений</u></em></a><em> и детским книжкам. Тема ораторского мастерства очень популярна в западных источниках, она изучена на разных уровнях. Если вам интересно узнать о ней подробней, оставьте комментарий к этому посту, и мы продолжим в будущих публикациях.</em></p><p></p>', 2, '2023-06-12 21:57:52', 573899, 83, '/ru/companies/sberbank/articles/740862/', 'Если вы успешный инженер или разработчик, то на определенном этапе карьеры вам придется, так сказать, выйти на сцену. Причем не перед дружелюбно настроенными коллегами, которые пришли послушать про какой-нибудь фреймворк. А перед «лицами, принимающими решения», которые могут сильно повлиять, например, на вашу будущую карьеру. В этом посте мы поделимся опытом Нила Томпсона, создателя курсов публичных выступлений Teachthegeek.com. Путь к собственному проекту и известности в качестве спикера Нил начинал как обычный инженер — и в подкасте InfoQ рассказал, что помогло ему в развитии.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(182, 'Про метрики: как эффективно управлять несколькими проектами', '<figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/287/a21/135/287a21135266a1db5895e4b2a0ced239.png\" width=\"1202\" height=\"678\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/287/a21/135/287a21135266a1db5895e4b2a0ced239.png\"></figure><p>Вы тимлид, и у вас полный порядок с проектом. А если проектов будет несколько? Сможете сохранить контроль?<br>У Delivery Manager-а уже не один проект, приходится гораздо меньше погружаться в каждый. Контекст не тот, времени меньше, да еще и управлять приходится не самому, а руками тимлида.<br>В такой ситуации нужна хорошая система контроля. И лучше всего с этой задачей справляются данные – метрики. Про выбор метрики и их эффективность предлагаю почитать в этой статье.</p><hr><p>Привет! Меня зовут Илья Прахт, я тренер в OTUS и руководитель <a href=\"https://otus.pw/PC8H/\"><u>нового курса Delivery Manager</u></a>. Я прошел классический путь тимлид → Delivery Manager → CTO, и прекрасно помню чувства, которые испытывал на каждом переходе.</p><p>Особенно ярко помню переход на роль Delivery Manager-а: у тебя теперь свой портфель проектов и за каждым нужно следить. А времени и ресурсов, чтобы делать это также, как раньше, не хватает. И вот ты пытаешься балансировать между микроменеджментом и полной свободой. Иногда получается, иногда – нет. Но все это ненадежно.</p><p>Я для себя нашел решение в метриках. Тема довольно заезженная, холиварная. Кому-то они подходят, кто-то от них плюется. Данные – это просто данные. Важно уметь их правильно интерпретировать и использовать. Вот про это сегодня и поговорим.</p><h2>Проект vs Портфель</h2><p>В чем разница управления проектом от управления портфелем проектов? Если упростить, то есть 3 основных различия:</p><ol><li><p>Степень погружения – невозможно ходить на каждый дейлик, быть в постоянном контакте с командой, ревьюить каждый пулл-реквест. Приходится ограничивать свой “квант внимания” к каждому проекту, что неминуемо приводит к потере информации.</p></li><li><p>Управляемость – вы теперь не сами принимаете решения и тут же их имплементируете. Теперь вы управляете тимлидом, а уже он управляет проектом. В управлении тимлидами есть свои особенности, мы подробно разбирали их в <a href=\"https://habr.com/ru/companies/otus/articles/738824/\"><u>этой статье</u></a>. Но главная идея в том, что между вами и проектом есть еще один уровень менеджмента.</p></li><li><p>Доверие – дефицит доверия гораздо выше. Это, во многом, следствие первых двух пунктов: не получается держать под контролем всю информацию, не получается нормально по-старому управлять проектом. Как итог – вообще непонятно, команда справляется с работой или им уже нужна помощь.</p></li></ol><p>Чаще всего это выливается в 2 крайности: микроменеджмент или полное делегирование, без попыток хоть как-то следить за проектами. И то, и то – не то. А нужно что-то между, некоторый баланс между этими двумя состояниями.</p><p>Есть несколько вариантов, как этого добиться. Давайте их разберем.</p><h2>Варианты управления портфелем проектов</h2><h3>Вариант 1 – Верить “наслово”</h3><p>Основа модели – постоянная коммуникация с тимлидом и другими участниками команды. Таким образом складывается ваша собственная картина по состоянию дел на проекте, и можно принимать грамотные решения. Проблемы тут две.</p><p>Первая проблема – очень много времени тратится на разговоры. И заметьте, не только вашего времени. Вам же еще и команду приходится постоянно отвлекать.</p><p>Вторая проблема – как говорил доктор Хаус: “Все врут”. Не-не, я ни в коем случае не хочу сказать, что тимлиды хотят вас обмануть. Может и не хотят. Но они будут доносить до вас свою точку зрения, субъективную реальность. И далеко не факт, что она совпадает с реальным положением дел. Так уж вышло, люди бывают излишне оптимистичны.</p><h3>Вариант 2 – Масштабированная методология</h3><p>Многое уже давно придумано, велосипед изобретать не стоит. Фреймворк SAFe может помочь в данном вопросе. Из наиболее популярных методологий здесь LESS, Scrum of Scrums и т п. На мой взгляд, решение едва ли не идеальное. Но есть в нем серьезный такой недостаток.</p><p>Взять ради примера Scrum of Scrums. Он будет работать, только если во всех проектах портфеля развернут канонический Scrum. Во всех остальных случаях получаем игрушку с напильником. И получится ли в итоге сделать работающий процесс – большой вопрос. Может – да, может – нет. И главное преимущество – взять готовое решение из коробки, сразу же разваливается.</p><h3>Вариант 3 – Система метрик</h3><p>Метрики универсальнее. Здесь можно выбрать такой набор метрик, который будет доступен на всех проектах портфеля, какими бы разными они ни были с точки зрения управления. При должной сноровке можно даже собрать под единый интерфейс проекты на Scrum-е, Kanban-е и водопады. Не скажу, что задача простая, но выполнимая.</p><p>При этом, сбор метрик можно автоматизировать. Можно собрать все показатели в единой системе и строить на базе них графики и дашборды. Что дает ту самую объективную картину реальности без необходимости тратить кучу времени самому руководителю, и отвлекать для этого команду.</p><p>Конечно, проблемы есть и здесь. Я бы выделил две основные: отсутствие готового решения и сложность реализации. Здесь приходится самому выбирать метрики, самому выстраивать процесс их сбора и контроля. Есть разные рекомендации, но это только советы. А готовых рецептов, к сожалению, практически нет. Помогают методологии, которые используются в проектах. Но это не все фокусы, за которыми нужно следить.</p><p>И тем не менее, если у вас разные проекты и нужно построить общую систему для их контроля, лучшим вариантом, на мой взгляд, будут метрики.</p><h2>Построение системы метрик</h2><h3>Шаг 1 – Выбрать метрики</h3><p>Как выбрать метрики для своих проектов? У меня есть 2 рекомендации по этому поводу:</p><ol><li><p>Не изобретать велосипед.</p></li><li><p>Убедиться в сбалансированности.</p></li></ol><p>Начнем с первого. Великое множество метрик уже давно придумано до нас. Не меньшее множество метрик уже давно реализовано в популярных информационных системах. Взять ту же Jira – все, что касается метрик  Scrum-а, Kanban-а, уже собирается в ней, если настроить правильно проект. Вот этим и нужно в первую очередь пользоваться.</p><p><strong>Основные метрики Scrum:</strong></p><ul><li><p>Аккуратность оценки зада;</p></li><li><p>Burnout time – время сгорания;</p></li><li><p>Velocity – скорость команды;</p></li><li><p>Estimated time of delivery – оценочное время поставки.</p></li></ul><p><strong>Основные метрики Kanban:</strong></p><ul><li><p>Lead Time – время, которое задача проходит от момента создания до релиза;</p></li><li><p>Cycle Time – время, которое задача проходит от момента старта работ до релиза;</p></li><li><p>WIP – количество задач/SP в работе;</p></li><li><p>Wasted Time – время, которое задача находится в ожиданиях;</p></li><li><p>Effectiveness – время, которое задача находится в полезной работе;</p></li><li><p>Throughput – пропускная способность команды.</p></li></ul><p><strong>Основные метрики PMBOK:</strong></p><ul><li><p>Плановый объем бюджета;</p></li><li><p>Освоенный объем бюджета;</p></li><li><p>Прогнозный объем бюджета;</p></li><li><p>Отклонение по срокам;</p></li><li><p>Отклонение по стоимости.</p></li></ul><p><strong>Основные продуктовые метрики:</strong></p><ul><li><p>ARPU – средний доход на пользователя;</p></li><li><p>LTV – пожизненная ценность клиента;</p></li><li><p>Метрики привлечения клиентов;</p></li><li><p>Метрики вовлеченности клиентов;</p></li><li><p>Метрики удержания клиентов;</p></li><li><p>Метрики производительности и надежности.</p></li></ul><p>Согласитесь, списочек внушительный. Взять по 1-2 из каждого блока и уже проект под наблюдением. Главное выбрать их правильно. А вот для этого вторая рекомендация – весь ваш набор метрик должен покрывать основные сферы внимания проекта. Чтобы проверить это есть 2 фреймворка-чеклиста.</p><p><strong>Фреймворк HEART (больше подходит для продуктов):</strong></p><ul><li><p>H → Happiness — польза для клиента;</p></li><li><p>E → Engagement — вовлеченность ЦА;</p></li><li><p>A → Adoption — привлечение клиентов;</p></li><li><p>R → Retention — удержание клиентов;</p></li><li><p>T → Task Success — успех продукта.</p></li></ul><p><strong>Фреймворк PROJECT (больше подходит для проектов):</strong></p><ul><li><p>P → People – команда проекта и ее состояние;</p></li><li><p>R → Reliability – надежность, качество;</p></li><li><p>O → Operations – операционные показатели;</p></li><li><p>J → Job – состояние скоупа;</p></li><li><p>E → Economy – финансовые показатели;</p></li><li><p>C → Customer – удовлетворенность клиента;</p></li><li><p>T → Timetable – расписание.</p></li></ul><p>Если у вас есть хотя бы по одной метрике из каждого пункта, значит за проектом вы следите достаточно комплексно. Если где-то не хватает метрик, то оттуда могут прилететь проблемы, пока весь фокус внимания будет на других показателях. Так что, лучше это исправить.</p><p><em>Фреймворк PROJECT – мое собственное изобретение, результат модели, которую мы применяли в своей компании продолжительное время.</em></p><p><strong>Пример нашей компании:</strong></p><ul><li><p>P → People – Тим-мораль (оцифрованный уровень морали команды, собирался вручную с помощью специальных вопросов);</p></li><li><p>R → Reliability – Bug leakage rate (доля багов, долетевших до прода);</p></li><li><p>O → Operations – Commitment/Velocity (именно их соотношение);</p></li><li><p>J → Job – Прогноз по дате завершения (метрика из Scrum, поделить весь оставшийся скоуп на среднее velocity);</p></li><li><p>E → Economy – Бюджет + маржа;</p></li><li><p>C → Customer – NPS (собирали аккаунты вручную);</p></li><li><p>T → Timetable – Текущий майлстоун/релиз (успеваем или нет).</p></li></ul><h3>Шаг 2 – Запустить сбор метрик</h3><p>Собирать метрики можно вручную, можно автоматизировать этот процесс. Очевидно, что чем больше будет автоматизации, тем лучше. Не забывайте, что метрики должны куда-то складываться и отображаться, нужна система репортинга. И ответственность за сбор и качество метрик нужно сразу кому-то отдать, например, тимлиду или скрам-мастеру проекта.</p><h3>Шаг 3 – Запустить процесс контроля</h3><p>Мало собирать метрики, надо еще их проверять. Причем, на постоянной основе. Например, раз в неделю собираться с тимлидами и смотреть, что с проектами происходит. Либо озадачить их писать отчеты пару раз в неделю со всеми показателями и объяснениями по отклонениям.</p><p>Хорошей дополнительной практикой здесь может стать проектный статус. Это некоторая агрегированная метрика состояния проекта – такая единственная лампочка, по которой становится понятно, хорошо ли все с проектом или требуется вмешаться.</p><p>Проектный статус, как правило, собирается по всем метрикам. И в зависимости от отклонений метрик от нормы, будет выставляться и сам статус проекта. Также стоит учитывать кризисы проекта: конфликты, увольнения, высокий техдолг – все, что может повлиять на процесс delivery. Лучше, если для определения проектного статуса будет четкий алгоритм, прям блок-схема, по которой все будут одинаково понимать, как его определять и интерпретировать. Ну и каждый проектный статус должен подразумевать определенный алгоритм действий: предоставить план, информировать, эскалировать и т д.</p><p><strong>Пример нашей компании</strong></p><p>Мы формировали проектный статус по метрикам и по наличию кризисов. По сути, статус формировался по самой худшей метрике. Это могли быть значения Good, Warn, Critical и Uncertain (да, бывает такое, когда совершенно непонятно и нужно собирать информацию).</p><p>При статусе Warn мы должны были все исправить за неделю. При статусе Critical – предоставить план по исправлению и поддерживать ежедневно информированность стейкхолдеров.</p><p>Для контроля мы собирались еженедельно на встречу. Там были все Delivery Manager-ы, аккаунты, топы. На этих встречах происходили эскалации, а также могли решаться некоторые оперативные вопросы по проектам. А главное – раз в неделю подбивались все метрики и данные, мы получали четкую картину, что происходит с проектами. Хотя бы раз в неделю.</p><h3>Шаг 4 – Добавить мотивацию</h3><p>Чтобы все окончательно заработало, нужно продумать мотивацию для тимлидов и Delivery Manager-ов. Они должны отвечать за состояние проектов, за метрики, иметь возможность на них влиять и исправлять проблемы. Поэтому здесь нужны классические кнут и пряник, чтобы был баланс.</p><h2>Итого</h2><p>Система контроля проектов на базе метрик далеко не идеальна. В ней есть немало проблем и подводных камней, о которых нужно знать и помнить. Но тем не менее, она является хорошим и надежным решением по управлению портфелем проектов, если вам нужно собрать и унифицировать информацию по разным проектам и иметь возможность постоянно “держать руку на пульсе”.</p><p>Быть Delivery Manager-ом непросто. Здесь и новый режим работы, и возросшая зона ответственности, и новые подчиненные, которые сами менеджеры и требуют специального подхода. Чтобы помочь тем, кто только ступает на этот путь, мы сделали новый курс<a href=\"https://otus.pw/PC8H/\"> <u>Delivery Manager</u></a> в OTUS. Его идея – помочь вам получить необходимые знания и трансформировать свое управленческое сознание, чтобы большинство шишек осталось здесь, на обучении.</p><p>А по теме метрик и управления портфелем проектов мы проведем <a href=\"https://otus.pw/PC8H/\"><u>открытый урок 20 июня</u></a>. Регистрируйтесь и приходите, обсудим этот вопрос подробнее.</p><hr><p>Присоединяйтесь к моему телеграмм-каналу<a href=\"https://t.me/sedoydirector\"> <u>Седой директор</u></a>. Пишу там про управление людьми, про менеджмент в IT. Отвечаю на ваши вопросы и разбираю ваши кейсы.</p><p></p>', 3, '2023-06-12 21:57:53', 387370, 97, '/ru/companies/otus/articles/740834/', 'Вы тимлид, и у вас полный порядок с проектом. А если проектов будет несколько? Сможете сохранить контроль?У Delivery Manager-а уже не один проект, приходится гораздо меньше погружаться в каждый. Контекст не тот, времени меньше, да еще и управлять приходится не самому, а руками тимлида.В такой ситуации нужна хорошая система контроля. И лучше всего с этой задачей справляются данные – метрики. Про выбор метрики и их эффективность предлагаю почитать в этой статье.'),
(183, 'Как заставить программистов пахать? 5 неочевидных советов', '<p>Для начало придется забыть слово заставить. Задача помочь сотрудникам полюбить зарабатывать вам деньги.</p><p>Меня зовут Слава. Я создал и развалил сеть ночных клубов, прошел 300 собеседований на маркетолога, проработал как подрядчик и сотрудник в более 50 компаниях. Сейчас занимаюсь системным маркетингом.</p><p>Там, где я работал, были разные системы управления, но всегда работал один и тот же принцип.</p><blockquote><p><strong>Если сотрудник любит работодателя, он приносит ему деньги.</strong><br><strong>Если сотрудник НЕ любит работодателя, он вредит ему.</strong></p></blockquote><p>Если вас не любят, не помогут ни регламенты, ни постоянная слежка. Это про человеческие отношения: если с вами хорошо, вы отплатите добром, если с вами по-свински, отплатите тем же.</p><h2>1. Платите за плохую работу </h2><p>Очень больно платить, когда задачи выполнены плохо, результат не получен и явно по вине сотрудника или подрядчика. Это называется предпринимательские риски. Вы выбрали человека, вы в нем ошиблись, вам расплачиваться.</p><p>Ваш коллектив должен знать, что плохая работа вами будет также оплачена, как и хорошая, просто второй раз вы за ней не придете. Это по-человечески, это вызывает уважение.</p><blockquote><p>Заказывал работы по сайту (SEO), плохо отдал задачу и не прояснил, что вижу хорошим результатом. Согласовал план, где по факту анализ анализом погоняет.</p><p>По итогу понимаю, что специалист дает рекомендации, но руками делает очень мало. Он подразумевает, что я сам должен нанять программиста, копирайтера, проконтролить их работу по ТЗ, то есть плачу сеошнику за головняк себе же.</p><p>Плачу специалисту полную ставку, так как в его представлении работа сделана хорошо.</p><p>Мы не договорились, я несу ответственность за эту недоговоренность.</p></blockquote><h2>2. Верьте каждому слову сотрудника</h2><blockquote><p>Как-то программист не вышел на работу и написал, что его укусила лиса.</p><p>Как работодателю, мне стоит предложить ему оплатить уколы от бешенства</p></blockquote><p>Если ваши отношения с ребенком, второй половинкой или сотрудником не очень хороши – вам будут врать. Если дело доходит до “укуса лисицы”, просто попрощайтесь с сотрудником. А вот давать понять, что вы сомневаетесь в правдивости слов, точно не надо. Какая вам разница, человек просит выходной, потому что устал или он и правда заболел?</p><p>Сотрудники на правильном месте у приятного и вдохновляющего работодателя болеют мало, а работают много. И, думаю, лисы их кусают реже. Когда сотрудники поймут, что вам не важны благовидные предлоги, они перестанут их производить.</p><h3>3. Делегируйте осмысленно</h3><p>Обычно под делегированием многие понимают перекладывание задачи. Чтобы самому не работать, ты такой: “Вась, сделай-ка это ты, а я посмотрю на облака”.</p><p>В действительности это крайне серьезный навык, от которого зависит, как долго сотрудники с вами проработают, будет ли нравится сотруднику работа, будет ли работа сотрудника приносить пользу компании.</p><p>Что отличает правильное делегирование?</p><ul><li><p>Мы знаем, зачем делать эту задачу. Без понимания \"зачем\" мы получаем никому не нужную задачу. Мы не можем измерить ее успешность. Ну сдали и сдали. Сказали же \"надо\". А кому надо? Зачем надо?</p></li><li><p>Понимаем процесс в задаче: могли бы сделать сами – может быть в худшем качестве, но тем не менее, понимаем трудозатраты и подводные камни. Если не понимаем процесса – не сможем выставить адекватные сроки. Или вылезут сопутствующие расходы, а в смете их нет.</p></li><li><p>Знаем, как выглядит результат. А если не знаем, то красный цвет кнопки на лендинге всегда будет недостаточно красным.</p></li></ul><p>Если вы сами можете сделать задачу лучше сотрудника еще не значит что вы сможете это делегировать.</p><h3>4. Не играйте с чувством вины</h3><p>Обычно это целый стиль управления). Человеку дают почувствовать себя недостаточно хорошим для своей должности и на этом играют. Урезают зп, заставляют перерабатывать.</p><p>Если сотрудник постоянно косячит, нет смысла орать за каждый косяк. Если человек не делает выводов из ошибок, то, возможно, просто это не его должность, и сотрудника стоит поменять.</p><p>Задача хорошего руководителя определить, на каком месте человеку будет интересней всего работать, и в чем его сильные стороны. СПОЙЛЕР интересней всего то, что лучше всего получается.</p><h3>5. Не давайте бесполезных задач</h3><p>Я стараюсь постоянно сверяться с тем, чтобы делать исключительно полезные задачи.</p><p>Вроде как опубликовать пост ради ген.дира и проверить дурацкую рекламную гипотез не так уж и сложно, но на самом деле это очень фрустрирует. Делая задачу, вы не теряете ощущение бесполезности и в конце концов это приведет к ненависти к работе.</p><p>Иногда приходится идти на компромисс, но тогда все сотрудники знают, что это делается просто потому, что не смогли отбить эту задачу и проще сделать, как хочет клиент/работодатель.</p><h3>Банальные, но обязательные советы:</h3><h3>1. Поощряйте успехи</h3><p>Лучше публично. Если сотрудник что-то сделал хорошо и получил любой результат, обязательно акцентируйте на этом внимание и покажите, что вы это цените. Для любого человека это очень важно, для некоторых важнее денег.</p><p>Поднимайте зп, добавляйте привилегии и статуса, поручайте более серьезные задачи.</p><h3>2. ЗП, отпуск, выходные</h3><p>Платить ЗП вовремя, не “милость”, а обязанность работодателя. Контроль выхода сотрудников в отпуск, контроль передачи дел и помощи в этой передаче на время отпуска, отсутствие задач в выходные и праздники – обязанность работодателя. Если сотрудник напоминает про зп, про отпуск волнуется исключительно сам и работает в выходные, так как “задач накопилось”, скоро с его мотивацией помогать зарабатывать вам деньги будет все плохо.</p><p>В одной фирме владелец лично написал каждому сотруднику, когда задержал зп на 2 дня. Это, конечно, не поможет, если в день зп у вас выплата ипотеки, но хотя бы так человек дает понять, что понимает, насколько большой косяк с его стороны.</p><h3>3. Поддержка в тяжелых ситуациях</h3><p>Дать денег, поделиться своим опытом решения похожих проблем. Лучше сразу все.</p><h3>Вывод</h3><p>Я не написал низкая нагрузка. Так как соблюдая все выше перечисленное, сотрудник может пахать, но быть довольным работой.</p><p>Подписаться: <a href=\"https://t.me/ruminblog\" rel=\"noopener noreferrer nofollow\">https://t.me/ruminblog</a> </p><p>Почитать:</p><p><a href=\"https://habr.com/ru/articles/738772/\" rel=\"noopener noreferrer nofollow\">Про B2B маркетинг</a></p><p><a href=\"https://habr.com/ru/articles/737796/\" rel=\"noopener noreferrer nofollow\">Про B2C маркетинг</a></p><p><a href=\"https://habr.com/ru/articles/739082/\" rel=\"noopener noreferrer nofollow\">Как я открыл и развалил сеть ночных клубов</a></p><p></p>', 2, '2023-06-12 21:57:53', 429097, 83, '/ru/articles/740772/', 'Для начало придется забыть слово заставить. Задача помочь сотрудникам полюбить зарабатывать вам деньги.Меня зовут Слава. Я создал и развалил сеть ночных клубов, прошел 300 собеседований на маркетолога, проработал как подрядчик и сотрудник в более 50 компаниях. Сейчас занимаюсь системным маркетингом.Там, где я работал, были разные системы управления, но всегда работал один и тот же принцип.'),
(184, 'Активность найма на IT-рынке: май 2023 vs 2022 — фронтендеров ищут реже', '<figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/db5/7ec/d48/db57ecd48ef67505c30315207a94ea69.png\" width=\"1480\" height=\"840\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/db5/7ec/d48/db57ecd48ef67505c30315207a94ea69.png\"></figure><p>Ежемесячно мы смотрим, какие компании публикуют больше всего вакансий и изучаем активность найма в разрезе специализаций и квалификаций. А ещё собираем эффективные вакансии за месяц: те, которые привлекли больше всего внимания специалистов.</p><p>Подготовили рейтинг активности найма в мае. В этой статье не только сравниваем цифры с прошлым месяцем, но и <strong>добавляем данные мая 2022: по специализациям и квалификациям.</strong> Из интересного: несмотря на то, что бэкендеры остались самыми востребованными специалистами, другие лидеры сменились: например, системных аналитиков сейчас ищут чаще, чем фронтендеров. За подробностями зовем под кат.</p><hr><p>Всего в мае на Хабр Карьере можно было откликнуться на <strong>3626 вакансий</strong> — <strong>на 1% больше, чем в </strong><a href=\"https://habr.com/ru/companies/habr_career/articles/733592/\"><strong><u>апреле</u></strong></a><strong>, но на 22% меньше, чем год назад — в </strong><a href=\"https://habr.com/ru/companies/habr_career/articles/671530/\"><strong><u>мае 2022</u></strong></a><strong> . </strong></p><p>Доля вакансий с возможностью удаленной работы — 64%, это на 1% меньше, чем в прошлом месяце.</p><h2>Кто нанимал </h2><p>Как и в нашем <a href=\"https://career.habr.com/journal/rating\"><u>ежегодном рейтинге IT-работодателей</u></a>, мы не сравниваем большие компании на тысячи сотрудников с маленькими стартапами. Рейтинг компаний по найму делится на четыре группы по размерам организаций: огромные (более 5000 сотрудников), большие (1000−5000 сотрудников), средние (100−1000 сотрудников) и небольшие (10−100 сотрудников).</p><p>Но в этом рейтинге мы собираем топ-3 компании из всех на Хабр Карьере, которые разместили больше всего вакансий за месяц. Вот, что получилось в мае: </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/0ac/a1a/b18/0aca1ab1877e2a40110422145637a198.png\" width=\"1520\" height=\"622\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/0ac/a1a/b18/0aca1ab1877e2a40110422145637a198.png\"></figure><p>Лидеры по найму в мае по размерам компаний:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/cc0/d03/476/cc0d03476c30338e88e9767f78c054ae.png\" width=\"1520\" height=\"1510\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/cc0/d03/476/cc0d03476c30338e88e9767f78c054ae.png\"></figure><h2>Кого нанимали</h2><p>В этом блоке посмотрим на специализации и квалификации, которые чаще всего искали в мае и сравним эти данные с показателями мая прошлого года.</p><h3>Вакансии по специализациям</h3><p>Взяли все вакансии, которые компании публиковали в мае — напоминаем, что их было 3626 — выбрали специализации, которые искали активнее остальных, и собрали топ-5.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/311/118/cdf/311118cdf79660a8b193d1bf83ce6e23.png\" width=\"1520\" height=\"818\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/311/118/cdf/311118cdf79660a8b193d1bf83ce6e23.png\"></figure><p><br>Самой востребованной специализацией на Хабр Карьере остаётся <a href=\"https://career.habr.com/vacancies/backend_razrabotchik/?utm_source=habr&amp;utm_medium=journal&amp;utm_campaign=rating_august2022\"><u>бэкенд</u></a>: 806 вакансий. На втором месте — вакансии для <a href=\"https://career.habr.com/vacancies/sistemnij_analitik/?utm_source=habr&amp;utm_medium=journal&amp;utm_campaign=rating_august2022\"><u>системных аналитиков</u></a>, в мае их было 377. </p><p>Для <a href=\"https://career.habr.com/vacancies/frontend_razrabotchik/?utm_source=habr&amp;utm_medium=journal&amp;utm_campaign=rating_august2022\"><u>фронтендеров</u></a> и <a href=\"https://career.habr.com/vacancies?s%5B%5D=22&amp;type=all\"><u>девопс-инженеров</u></a> в мае опубликовали почти одинаковое количество вакансий — 218 и 216 соответственно. Для тестировщиков было 139 предложений. </p><h4>Сравниваем с маем 2022</h4><p>Если сравнить эти показатели с такими же, но <a href=\"https://habr.com/ru/companies/habr_career/articles/671530/\"><u>в мае прошлого года</u></a>, можно увидеть, как менялись лидеры по специализациям: несмотря на то, что бэкендеры остались самыми востребованными, доля вакансий для них снизилась на 3%. Немного реже стали нанимать фронтендеров и разработчиков мобильных приложений, но больше вакансий стало появляться для системных аналитиков и девопсов. </p><h3>Вакансии по квалификациям</h3><p>График ниже — квалификации, которые искали чаще всего на Хабр Карьере в мае. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/9c7/749/914/9c774991496ca035ee78558d30d6eb56.png\" width=\"1520\" height=\"818\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/9c7/749/914/9c774991496ca035ee78558d30d6eb56.png\"></figure><p>Ежемесячно больше половины вакансий, в которых указали квалификацию, опубликовали для мидлов — 1641 вакансия. Треть вакансий — для сеньоров: 1047. Для лидов в мае разместили 303 вакансии, а для джунов — 91. Для стажеров было только 18 предложений. </p><h4>Сравниваем с маем 2022</h4><p>В мае прошлого года вакансии для мидлов и сеньоров хоть и занимали лидирующие доли, но их процент был немного ниже: 58% и 29% соответственно. </p><h2>Эффективные вакансии</h2><p>В исследование мы добавляем вакансии, которые получили наибольшее число откликов на количество просмотров за месяц — мы назвали это эффективностью. Данные за май: </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/53a/4e3/2cf/53a4e32cf635e97444520e8c35e3cfa7.png\" width=\"1520\" height=\"706\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/53a/4e3/2cf/53a4e32cf635e97444520e8c35e3cfa7.png\"></figure><p><strong>Самая эффективная вакансия</strong> мая на Хабр Карьере была от компании ITentika, которая искала фронтендера. Вакансию посмотрели 2153 человека, из них откликнулись 421. На втором и третьим местах — вакансии для тестировщика и фронтендера от компаний VK и Банки.ру. </p><p>Эффективность всех вакансий можно увидеть в крайнем правом столбце графика. </p><hr><h2>Как мы считали</h2><p>Это не очень сложно: чтобы посмотреть, сколько вакансий компании опубликовали в мае, мы взяли данные нашего сервиса. Сложили все вакансии, на которые можно было откликнуться в мае — в них вошли в том числе те вакансии, которые были открыты в апреле, но действовали в мае. Далее мы посмотрели, кто размещал вакансии, и разделили работодателей по размерам компаний. А потом просто выбрали компании, которые чаще всего размещали вакансии в мае, и принесли вам. </p><p>Для расчёта эффективных вакансий нам также понадобились данные нашего сервиса, который умеет считать эффективность размещений — количество откликов, поделённое на количество просмотров. Нам оставалось только выбрать вакансии с высоким показателем. </p><p>А чтобы составить диаграммы по специалистам, мы взяли все вакансии за май и отфильтровали по необходимым для нас критериям: специализациям и квалификациям.</p><hr><p>Если вы работодатель и собираетесь <a href=\"https://career.habr.com/companies/habr/cp/vacancies/new\"><u>разместить вакансию</u></a> на Хабр Карьере, но не знаете, как это сделать, то мы составили подробную инструкцию в <a href=\"https://career.habr.com/info/help_hr#q2.2\"><u>хелпе</u></a>. Если у вас есть вопросы — пишите нам на hr@habr.team, и мы обязательно на них ответим.</p><p>Больше о карьере в наших соцсетях: <a href=\"https://vk.com/habr_career\">ВКонтакте</a>, <a href=\"https://t.me/habr_career\">Telegram</a>, <a href=\"https://twitter.com/habr_career\">Twitter</a>, <a href=\"https://zen.yandex.ru/habr_career\">Яндекс.Дзен</a>.</p>', 3, '2023-06-12 21:57:54', 572704, 90, '/ru/companies/habr_career/articles/740676/', 'Ежемесячно мы смотрим, какие компании публикуют больше всего вакансий и изучаем активность найма в разрезе специализаций и квалификаций. А ещё собираем эффективные вакансии за месяц: те, которые привлекли больше всего внимания специалистов.Подготовили рейтинг активности найма в мае. В этой статье не только сравниваем цифры с прошлым месяцем, но и добавляем данные мая 2022: по специализациям и квалификациям. Из интересного: несмотря на то, что бэкендеры остались самыми востребованными специалистами, другие лидеры сменились. Например, системных аналитиков сейчас ищут чаще, чем фронтендеров. За подробностями зовем под кат.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(185, 'Почему всем нужна обратная связь, как её принимать и запрашивать', '<p>Привет, Хабр! Меня зовут Екатерина Бутырская, я занимаюсь карьерным консультированием, HR в сфере IT, а сейчас — продакт карьерного трека в <a href=\"https://practicum.yandex.ru/catalog/programming/?utm_source=pr&amp;utm_medium=content&amp;utm_campaign=pr_content_programming_habr&amp;utm_content=08_06_23\">Практикуме</a>. В прошлом — Head of HR международной IT-компании. И сегодня хочу рассказать об обратной связи — зачем она нужна, как её запрашивать, получать, и что нам мешает делать это правильно. </p><p>Уже многое сказано о том, что обратная связь — это хорошо, но на практике многие её не любят или боятся получать. А получив, не умеют извлекать пользу. Мы собрали рекомендации, как относиться к обратной связи и почему фидбэк — это совсем не страшно, а, наоборот, хорошо для всех участников.</p><p><strong>Навигация по статье:</strong> </p><ul><li><p><a href=\"#1\">Зачем нужен фидбэк</a></p></li><li><p><a href=\"#%D0%B2%D0%B8%D0%B4%D1%8B\">Виды обратной связи </a></p></li><li><p><a href=\"#%D0%B3%D0%BE%D1%82%D0%BE%D0%B2%D0%B8%D0%BC%D1%81%D1%8F\">Готовимся давать обратную связь</a></p></li><li><p><a href=\"#%D0%BF%D1%80%D0%B8%D0%BD%D0%B8%D0%BC%D0%B0%D1%82%D1%8C\">Как принимать обратную связь</a></p></li><li><p><a href=\"#%D0%B7%D0%B0%D0%BF%D1%80%D0%B0%D1%88%D0%B8%D0%B2%D0%B0%D1%82%D1%8C\">Как запрашивать обратную связь</a></p></li><li><p><a href=\"#%D1%81%D0%BF%D0%BE%D1%81%D0%BE%D0%B1%D1%8B\">Какие способы получать персональную обратную связь приняты в IT-компаниях</a></p></li></ul><h2>Польза обратной связи</h2><p>Именно в IT обратную связь дают чаще всего, потому что мы имеем дело с разработкой продукта — как правило, сложного. В процессе взаимодействуют люди, которые не имели возможности притираться друг к другу годами. Очень важно быстро найти контакт: одно-два функциональных соприкосновения — и уже пора договориться, как работать дальше. Эта настройка происходит эффективно, если все готовы быстро принимать к сведению обратную связь. В противном случае команде будет тяжело с невосприимчивым человеком, и сотрудник даже рискует не пройти испытательный срок.</p><p>Важно помнить, получение фидбэка — единственный способ узнать о своих слабых местах. Он ускоряет развитие: как профессиональное, так и личностное. Если системно наблюдать за собой глазами коллег, лидов, стейкхолдеров, проще замечать и исправлять слабые места. </p><p>Рекомендую относиться к обратной связи как к зеркалу, в котором картинка получается более реалистичной. Именно поэтому нам не всегда нравится наше «отражение». Например, разработчик реализует решение задачи привычными методами. И только код-ревью поможет посмотреть на ситуацию под другим углом и попробовать новые приёмы и технологии.</p><a class=\"anchor\" name=\"1\" id=\"1\"></a><h2>Зачем нужен фидбэк </h2><p>Обратная связь приносит разработчику разнообразную пользу:</p><p><strong>Обучение</strong>. Ушли те времена, когда считалось, что человек с профильным образованием и дипломом уже навсегда стал специалистом. От современных профессионалов требуются ежедневные усилия и постоянная адаптация под меняющийся мир. Разработка в IT — одна из ниш, где наиболее успешными становятся специалисты, умеющие быстро учиться и адаптироваться к переменам. Помогает им это делать обратная связь. </p><p><strong>Атмосфера в команде</strong>. Эти проблемы также решаются через обратную связь. Если человек пренебрегает полученной информацией, другим участникам команды будет некомфортно с таким коллегой. </p><p><strong>Развитие. </strong>Предлагаю забыть стереотипный образ гения, который пилит что-то уникальное в одиночку. Для IT-специалиста обратная связь — неизбежный, обязательный инструмент для роста внутри команды. Благодаря обратной связи успешный разработчик растёт и личностно, и профессионально. И кроме этого — улучшает продукты, над которыми работает.</p><p><strong>Взаимодействие по процессам.</strong> В IT принято давать обратную связь по двум основным каналам: первый — по вертикали «руководитель — сотрудник»; второй — горизонтально, между коллегами в одном или нескольких подразделениях. Сотрудничество на разных проектах, в том числе в рамках аутстафа и аутсорса, прокачивает способность быстро перестраиваться и коммуницировать с разными командами. </p><a class=\"anchor\" name=\"%D0%B2%D0%B8%D0%B4%D1%8B\" id=\"виды\"></a><h2>Виды обратной связи</h2><p>Чтобы понять суть фидбэка, рекомендую хорошо структурированную книгу <a href=\"https://www.labirint.ru/books/465252/\"><u>«Спасибо за отзыв. Как правильно реагировать на обратную связь»</u></a> Дугласа Стоуна и Шейлы Хин. Там говорится о трёх основных типах обратной связи:</p><ul><li><p><strong>Признательность</strong>. Например, когда мы благодарим коллегу, говорим, как нам комфортно работать вместе, отмечаем эффективность его стиля работы. Благодарность не нужно держать в себе, такой отзыв мотивирует, помогает выстраивать коммуникацию и развиваться, ведь человек понимает, что именно он делает хорошо.</p></li></ul><ul><li><p><strong>Корректировка</strong>. Так мы подсказываем, что можно сделать лучше. При этом всё равно говорим, что коллега отлично справляется со своими задачами. Но предлагаем ему сделать что-то иначе, чтобы выстроить процессы ещё эффективнее.</p></li><li><p><strong>Оценка</strong>. Это более серьёзный вид обратной связи. Мы встречаемся с ним на performance review, подведении итогов проекта. Говорим о том, что действительно нужно исправить, что критично влияет на результат работы или взаимодействия. </p></li></ul><p>Конечно, в реальности виды обратной связи не встречаются обособленно. Мы миксуем их между собой, например можем добавить больше признательности в оценочный фидбэк.</p><blockquote><p>Обратная связь полезна в том случае, когда конструктивна. К нам в карьерный трек люди приходят учиться, в том числе тому, как взаимодействовать с работодателем. Часто для них критерий «конструктивная» = «положительная», а критику они склонны воспринимать как субъективную оценку.</p></blockquote><p><strong>Что же на самом деле означает конструктивный фидбэк?</strong></p><ol><li><p><strong>Подкрепляется информацией и помощью</strong>: что именно не так, как это можно улучшить. Человек, который хочет помочь вам, готов сопровождать эти улучшения конкретными рекомендациями. </p></li><li><p><strong>Содержит конкретные замечания.</strong> Не «Ты пишешь плохой код», а «Ты использовал в этом коде одну функцию, но приписал ей два разных действия, и я потратил больше 30 минут, чтобы разобраться в этом». </p></li><li><p><strong>Преподнесен экологично, бережно и в соответствующей обстановке. </strong>Конструктивная критика сосредоточена на созидании, деструктивная — на разрушении. Оценочные суждения не способствуют ни мотивации, ни росту. Они могут в один момент понизить человека по шкале профессионализма. Деструктивная критика применяется с личными целями — самоутверждение, нападки, снижение авторитета.</p></li></ol><p><strong>Чтобы оценить, какого рода обратная связь перед вами, обратите внимание на три маркера.</strong></p><ul><li><p><strong>Намерения<br></strong>Человек готов помочь. Пример: «В прошлый раз ты подал аналитику не в том формате, который запрашивали. Хочешь, я покажу свой отчёт, чтобы ты мог сделать черновик и подстраивать его под свои данные в будущем?»</p></li><li><p><strong>Форма подачи<br></strong>Всё, что мы считываем невербально: интонации, дружелюбие. Человек обычно чувствует эмоциональную атаку на себя, выраженную в мимике и жестах. </p></li><li><p><strong>Область критики<br></strong>Обратная связь сконцентрирована на действиях сотрудника. Не «Вы нам не понравились на собеседовании», а «На собеседовании нам показалось, что вы были несколько неподготовленны, а в самопрезентации не было ценной для нас информации по прошлым проектам».</p></li></ul><p>Кстати, в популярной <a href=\"https://podcasts.google.com/?feed=aHR0cHM6Ly9mZWVkcy5zb3VuZGNsb3VkLmNvbS91c2Vycy9zb3VuZGNsb3VkOnVzZXJzOjI5MTMzNzEwNi9zb3VuZHMucnNz&amp;episode=dGFnOnNvdW5kY2xvdWQsMjAxMDp0cmFja3MvOTAwODcyNjcx\"><u>серии подкастов </u></a><a href=\"https://www.labirint.ru/books/465252/\"><u>«</u></a><a href=\"https://podcasts.google.com/?feed=aHR0cHM6Ly9mZWVkcy5zb3VuZGNsb3VkLmNvbS91c2Vycy9zb3VuZGNsb3VkOnVzZXJzOjI5MTMzNzEwNi9zb3VuZHMucnNz&amp;episode=dGFnOnNvdW5kY2xvdWQsMjAxMDp0cmFja3MvOTAwODcyNjcx\"><u>Подлодка</u></a><a href=\"https://www.labirint.ru/books/465252/\"><u>»</u></a><a href=\"https://podcasts.google.com/?feed=aHR0cHM6Ly9mZWVkcy5zb3VuZGNsb3VkLmNvbS91c2Vycy9zb3VuZGNsb3VkOnVzZXJzOjI5MTMzNzEwNi9zb3VuZHMucnNz&amp;episode=dGFnOnNvdW5kY2xvdWQsMjAxMDp0cmFja3MvOTAwODcyNjcx\"><u> </u></a>есть один выпуск, посвященный обратной связи. В нём также говорится о том, что на восприятие обратной связи влияет авторитет человека. Чем важнее для нас личность того, кто даёт фидбэк, тем больше наша готовность воспринимать критику от него. </p><a class=\"anchor\" name=\"%D0%B3%D0%BE%D1%82%D0%BE%D0%B2%D0%B8%D0%BC%D1%81%D1%8F\" id=\"готовимся\"></a><h2>Готовимся давать обратную связь</h2><p>Известно несколько моделей обратной связи, среди них: <a href=\"https://www.mann-ivanov-ferber.ru/assets/files/bookparts/a_z_management/%D0%B0%D0%B7_%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D1%8C%207%D1%81.pdf\"><u>модель McKinsey</u></a>, <a href=\"http://dschool-old.stanford.edu/wp-content/themes/dschool/method-cards/i-like-i-wish-what-if.pdf\"><u>Стэнфордский метод (I Like, I Wish, What If)</u></a>, <a href=\"https://www.monkhouseandcompany.com/blog/the-best-technique-for-feedback-stop-start-continue/\"><u>SSC (start-stop-continue)</u></a>, всем знакомая <a href=\"https://www.labirint.ru/books/465252/\"><u>«</u></a><a href=\"https://ru.wikihow.com/%D0%B4%D0%B0%D0%B2%D0%B0%D1%82%D1%8C-%D0%BE%D0%B1%D1%80%D0%B0%D1%82%D0%BD%D1%83%D1%8E-%D1%81%D0%B2%D1%8F%D0%B7%D1%8C-%D0%BF%D0%BE-%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%83-%22%D0%B1%D1%83%D1%82%D0%B5%D1%80%D0%B1%D1%80%D0%BE%D0%B4%D0%B0%22\"><u>модель бутерброда</u></a><a href=\"https://www.labirint.ru/books/465252/\"><u>»</u></a>, которая в последнее время часто критикуется.</p><p>В каждой ситуации можно гибко выбирать из всех методов, ведь не всегда хочется действовать по шаблону. Соберём конструктор из элементов, которые точно пригодятся для предоставления обратной связи:</p><ul><li><p><strong>Определите цель:</strong> что именно вас не устраивает, не подходит вам или вашим процессам в работе, что важно изменить, какой результат будет наилучшим. Если это ваш коллега, стоит спросить, нужен ли ему фидбэк, готов ли он к нему. Если вы не работаете с человеком напрямую, возможно, лучше дать обратную связь вместе с результатами проекта — сразу его руководителю.</p></li></ul><ul><li><p>Продумайте и <strong>опишите, как именно текущая ситуация или результат влияет на вашу работу</strong> или результат команды.</p></li><li><p><strong>Предложите, чем можете посодействовать улучшениям</strong>, — не только конкретные шаги, но и свою помощь, это поможет снизить эмоциональный накал.</p></li></ul><p>Давать обратную связь не проще, чем её получать. Особенно если она действительно качественная, полезная и бережная. Учиться этому нужно на практике.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/9dc/d34/4ec/9dcd344ece0bf339c3a19dedccc46f59.png\" width=\"2160\" height=\"1050\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/9dc/d34/4ec/9dcd344ece0bf339c3a19dedccc46f59.png\"></figure><a class=\"anchor\" name=\"%D0%BF%D1%80%D0%B8%D0%BD%D0%B8%D0%BC%D0%B0%D1%82%D1%8C\" id=\"принимать\"></a><h2>Как принимать обратную связь</h2><p>В принятии фидбэка играет роль профессиональный и психологический аспект: гибкие навыки человека и его эмоциональное состояние, насколько он готов выдерживать сложный разговор. </p><p>Прежде чем запросить обратную связь, нужно понимать, что нормально испытывать от неё любые эмоции. На первом этапе обратная связь, особенно негативная, будет вызывать сильный эмоциональный всплеск. Все через это проходят. Первой реакцией может стать желание закрыться или защититься, и это нормально. Даже если мы сами запросили фидбэк, не всегда легко мгновенно обработать весь объём информации. </p><p>Как преодолеть неприятные чувства и адекватно реагировать на негативную обратную связь:</p><ol><li><p><strong>Выслушайте собеседника.</strong> Не пытайтесь спорить, что-то доказывать и оправдываться. Просто молчите, можете не кивать, вам не надо соглашаться со всем сейчас.</p></li><li><p><strong>Возьмите паузу, чтобы не начать парировать.</strong> Нужно успеть обдумать ответ и выключить защитную реакцию — пережить выброс адреналина. Если слишком сложно, можно, в зависимости от ситуации, выйти из комнаты, чтобы продышать стрессовое состояние.</p></li><li><p><strong>Поблагодарите собеседника</strong>. Так вы выразите признательность за обратную связь. Можно сказать: «Спасибо тебе, я понимаю, что ты говоришь важные вещи» или «Я благодарен за твой взгляд на ситуацию, это очень ценно», «Спасибо за твое мнение».</p></li><li><p><strong>Уточните информацию.</strong> Задавать вопросы желательно своевременно — пока вы ещё находитесь в условиях открытого диалога. Например, можно спросить: «Можешь чуть шире описать ситуацию, когда это происходило?», «Как бы ты поступил при этом?», «Как ты считаешь, что именно надо было сделать иначе?».</p></li><li><p><strong>Не пытайтесь сразу что-то предпринять.</strong> Даже если не согласны с критикой, не обязательно реагировать мгновенно. Дайте себе время переработать полученную информацию. Скажите: «Мне нужно некоторое время, чтобы всё переварить», «Если ты не против, я обдумаю и вернусь к тебе позже».</p></li><li><p><strong>Не спускайте всё на тормозах.</strong> Проанализировав критику, вернитесь к разговору. <br>Хорошим вариантом возврата к теме будет: «Ты знаешь, я попробовал сделать (что-то) так, как ты говорил, и это действительно оказалось (быстрее, лучше, проще), вот посмотри сам…». Или: «Спасибо, что обратил внимание на названия функций в моем коде, я не подумал, что они могут путать и быть неочевидными, теперь использую вот такие названия, смотри…., как тебе?» </p></li></ol><blockquote><p>Правильное действие после корректирующей обратной связи — всегда лучшее свидетельство роста специалиста.</p></blockquote><a class=\"anchor\" name=\"%D0%B7%D0%B0%D0%BF%D1%80%D0%B0%D1%88%D0%B8%D0%B2%D0%B0%D1%82%D1%8C\" id=\"запрашивать\"></a><h2>Как запрашивать обратную связь</h2><p>Часто, чтобы получить фидбэк, нужно инициировать этот процесс самостоятельно. </p><p><strong>У работодателя после отказа.</strong> Работодатели опасаются, что кандидат излишне эмоционально реагирует и выносит фидбэк на обсуждение в соцсетях. Человек по ту сторону экрана не знает, готовы ли вы к критике, и поэтому даёт стандартный неинформативный ответ «Спасибо, всё хорошо, мы остановились на другом кандидате» вместо полезной обратной связи.</p><p>Как действуем: Рекомендую писать персональные сообщения рекрутерам. Объясните, что вам действительно важен фидбэк, чтоб поработать над пробелами и податься на вакансию снова. Ваша задача — заслужить доверие рекрутера в том, что вы с пользой используете эту информацию.</p><p><strong>У тимлида.</strong> Если что-то не получается в работе, то первый, к кому стоит обратиться за фидбэком, это тимлид. Участники команды и её руководитель хорошо вас знают, и в контексте ваших задач им можно напрямую задать вопросы. Но желательно приходить не только с проблемой, но и с собственными вариантами решения.</p><p>Как действуем: Подходим к тимлиду с таким вариантом вопроса, чтобы он мог выбрать ответ за несколько секунд. Мы называем это “Yes or No questions” — вопросы, на которые можно ответить односложно (красная или синяя таблетка, помните?). Прелесть этого подхода в том, что часто ответ находится ещё на этапе формулирования вопроса.</p><p><strong>У ментора.</strong> Если в команде нет подходящего человека, можно обратиться к внешнему наставнику. Но нужно учесть, что ментор будет вне контекста. Чтобы он смог помочь, нужно быть максимально открытым. Специалист может развеять ваши сомнения: действительно ли к вам необъективны или в их критике есть зерно истины?</p><p>Как действуем: «Знаешь, последнее время я уже несколько раз слышал в свой адрес вопросы по моей документации на проекте, не могу понять: в ней реально есть проблема или это мне показалось?»</p><p><strong>У приятеля. </strong>Когда опыт запроса фидбэка ещё невелик, рекомендуют развивать его с помощью людей, которым вы доверяете. Это может быть близкий коллега. Часто ребята рассказывают о взаимопомощи между новичками на проекте. Это комфортно, не так страшно, как получить отзыв от руководства.</p><p>Как действуем: «Слушай, что ты думаешь про последнее демо, где я …., было ли достаточно информации на моих слайдах? Я переживаю, что не совсем понятно рассказал про последние фичи».</p><p>В единичных случаях, если не получается взять обратную связь, люди просто не дают ответов, отшучиваются или избегают разговора: это звоночек. Стоит обратить внимание, всё ли хорошо с вашими софтами. Может, окружающие опасаются обсуждать с вами вопросы работы, профессионального роста и взаимодействия?</p><a class=\"anchor\" name=\"%D1%81%D0%BF%D0%BE%D1%81%D0%BE%D0%B1%D1%8B\" id=\"способы\"></a><h2>Какие способы получать персональную обратную связь приняты в IT-компаниях</h2><p>Кроме личной инициативы в компаниях предусмотрены варианты получить фидбэк официально. Ниже два наиболее популярных способа. Они позволяют получить подробную обратную связь для профессионального развития.</p><h3>Performance review</h3><p>Любого специалиста в IT-сфере оценивают на performance review — традиционно раз в квартал или каждое полугодие. Именно performance review даёт возможность посмотреть на пройденный этап и свою работу с позиции достижений; спланировать будущие подвижки в карьере или задачах.<br><br><strong>Что стоит в целях performance review:</strong></p><ul><li><p><strong>Динамика изменений.</strong> Отметить, что получилось развить, освоить, улучшить. </p></li><li><p><strong>Смена приоритетов. </strong>Что конкретно кажется наиболее важным для развития в будущем. Кому-то актуально расширять стек и работать с новыми фреймворками, потому что этого требует проект, а для кого-то важнее прокачивать свои навыки коммуникации, потому что работа предполагает плотное общение с заказчиками.</p></li></ul><p>Перед Performance review принято делать саморефлексию. А далее проводить встречу с тимлидом, где обязательно проговариваются выводы. Обсудите, в чём ваш рост за последние месяцы. Спросите, актуально ли это для проекта и что ещё нужно усилить. Высока вероятность, что лид может предложить вам другие опорные точки. Возможно, вы считаете себя классным техническим специалистом и хотите сделать акцент на мягкие навыки. Напротив, руководитель отметит ваши способности к коммуникации и предложит уделить внимание чистоте кода. Накладывая эти две схемы друг на друга, мы видим, какие следующие шаги предпринять. </p><h3>One-to-one</h3><p>One-to-one, встреча «один на один», — отдельный вид обратной связи. Опытные разработчики сами запрашивают его, а джунам бывает сложно понять, зачем он нужен. На этой сессии можно пообщаться о своих белых пятнах и будущем развитии карьеры, попросить у лида совет по профессиональному развитию. Об этой встрече просят не когда всё идёт плохо, а, наоборот, чтобы спланировать свою карьерную дорожную карту. </p><p>Чтобы сессия One-to-one прошла эффективно, нужно подготовиться. Желательно дать возможность руководителю проанализировать несколько ваших кейсов и проговорить, что было сделано хорошо, а что слабо. Также важно рассказать, что вам нравится, а что нет, и чем именно вы хотите заниматься в будущем. Вместе вы составите рекомендации, на чём вам сконцентрироваться и какие карьерные шаги предпринять. </p><h3>Что мешает принимать обратную связь</h3><p>Часто новичкам мешают характерные триггеры, из-за которых трудно принимать даже конструктивную обратную связь. О них тоже рассказывается в книге <a href=\"https://www.labirint.ru/books/465252/\"><u>«Спасибо за отзыв. Как правильно реагировать на обратную связь»</u></a> Дугласа Стоуна и Шейлы Хин.</p><ul><li><p><strong>Триггер истины<br></strong>Если человек сам не видит своё «белое пятно», ему трудно поверить другому лицу. Защищаясь, он назовёт обратную связь субъективной и не придаст ей значения.</p></li><li><p><strong>Триггер отношений<br></strong>Трудно воспринимать критику от кого-то, кто не обладает достаточным авторитетом в наших глазах или просто не нравится нам как человек. Проще поверить, что неприятный нам человек говорит неправду.</p></li><li><p><strong>Триггер самолюбия<br></strong>Самооценку некоторых людей невозможно поколебать внешней информацией. Человек живёт с установкой, что он крутой, и не хочет слышать других.</p></li></ul><p>Если что-то из указанных триггеров откликнулось вам — это уже большой шаг к пониманию, где именно может быть проблема с восприятием обратной связи. </p><p>Далее стоит пробовать «отключать» этот триггер искусственно в период сложного разговора. Делать паузу, выходить подышать, когда замечаете, что он срабатывает, и возвращаться к разговору вновь. Со временем вы увидите, что открытое принятие информации действительно делает вас лучше и помогает развиваться. </p><hr><p>Итак, мы широко посмотрели на тему обратной связи со всех сторон. Теперь вы ещё больше понимаете её важность в вашем развитии и продвижении по выбранному роадмапу. </p><p>Во время работы в IT-cфере (и не только) вы будете оказываться по обе стороны фидбэка. Помните о том, что это непростой процесс и для дающего, и для принимающего обратную связь. Дающему нужно учиться и практиковаться формулировать максимально полезную и бережную обратную связь. Принимающему нужно работать над собой, чтобы получать от неё пользу.</p><p>Используйте предложенные формулировки, наблюдайте за тем, как вы «взрослеете» в работе с обратной связью, и пусть ваш карьерный путь в любой специальности будет максимально гладким и светлым. </p>', 1, '2023-06-12 21:57:54', 492302, 98, '/ru/companies/yandex_praktikum/articles/739274/', 'Привет, Хабр! Меня зовут Екатерина Батырская, я занимаюсь карьерным консультированием, HR в сфере IT, а сейчас — продакт карьерного трека в Практикуме. В прошлом — Head of HR международной IT-компании. И сегодня хочу рассказать об обратной связи — зачем она нужна, как её запрашивать, получать, и что нам мешает делать это правильно. Уже многое сказано о том, что обратная связь — это хорошо, но на практике многие её не любят или боятся получать. А получив, не умеют извлекать пользу. Мы собрали рекомендации, как относиться к обратной связи и почему фидбэк — это совсем не страшно, а, наоборот, хорошо для всех участников.'),
(186, 'Большая перемена: как за 3 года мы пересмотрели управление проектами во «Фланте»', '<p>Всем привет. Мы давно не писали на тему менеджмента команд и проектов. Начнем с краткой вводной. Помимо продуктовой разработки, которой мы занялись около 5 лет назад, основным направлением деятельности «Фланта» остается DaaS (DevOps as a Service). Мы помогаем клиентам с обслуживанием инфраструктуры. И эта деятельность накладывает большой отпечаток на наш внутренний процесс управления проектами, так как у нас много специфичных процессов и практик: у команды может быть несколько разноплановых проектов, ей необходимо обеспечить SLA по каждому из них. Важно и то, что наши команды на 100% удаленные. </p><p>Три года назад нам казалось, что мы нашли лучшее решение для управления распределенными командами и многочисленными проектами. Но это оказалось не так. С тех пор в нашей работе произошло столько изменений, что нам пришлось полностью пересмотреть модель таск-менеджмента. В этой статье мы проследим, как и почему появлялись новые практики и как они повлияли на эволюцию наших процессов. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/93b/339/4d3/93b3394d37e14b06838dd8c8d74a8bbe.png\" width=\"1878\" height=\"1080\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/93b/339/4d3/93b3394d37e14b06838dd8c8d74a8bbe.png\"></figure><p>Этот материал, по сути, является сиквелом <a href=\"https://habr.com/ru/companies/flant/articles/469453/\"><u>публикации</u></a>, которую мы разместили на Хабре более 3 лет назад. Чтобы понять сюжет в деталях, советуем с ней ознакомиться. </p><h2>Как было раньше</h2><p>Три года назад, когда нам приходила новая задача от клиента, у нее было 2 пути: она  назначалась инженеру или отправлялась в бэклог. При этом, когда мы создавали карточку в рабочем плане инженера, мы не задумывались о том, сколько карточек реально вместить в его план на день. Объем каждой задачи тимлиды оценивали на глаз, эта оценка и определяла, сколько времени инженеру нужно потратить на конкретную задачу. Такая система неплохо работала, но у нее были свои недостатки.</p><h3>И выросла стена задач </h3><p>Прежний подход приводил к тому, что в индивидуальном рабочем плане инженера можно было найти 6, 8, а то и все 10 задач. Естественно, в течение дня в работе оказывались не все задачи из списка.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/741/26b/047/74126b047a58c944cada5d0d42e40813.png\" alt=\"Типичный дневной план инженера в 2019 году\" title=\"Типичный дневной план инженера в 2019 году\" width=\"638\" height=\"958\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/741/26b/047/74126b047a58c944cada5d0d42e40813.png\"><div><figcaption>Типичный дневной план инженера в 2019 году</figcaption></figure><p>У «стены задач» было много недостатков и для наших инженеров, и для клиентов:</p><ul><li><p><em>Инженеры чувствовали себя вечными должниками</em>. Когда в твоем плане 10 и более задач, из которых ты доберешься максимум до 3-4, появляется ощущение вечного долга. Это демотивировало инженеров. </p></li><li><p><em>Никогда или почти никогда не было ощущения сделанной работы</em>. Сколько бы задач ни сделал инженер, к концу дня число несделанных задач, как правило, превышало число завершенных. Это тоже было демотивирующим фактором.</p></li><li><p><em>Не было прозрачности, создавалась</em> <em>иллюзия, что много задач в работе</em>. При таком огромном числе задач на доске каждого инженера ни нам, ни клиенту было невозможно понять, какие из них будут в работе сегодня и на какой стадии находится каждая задача. </p></li><li><p><em>Непрозрачность увеличивала нагрузку на менеджера проекта</em>: именно у него клиенты постоянно уточняли, взята ли задача в работу и каковы сроки ее выполнения.</p></li><li><p>А еще появилась <em>проблема «подвала»</em>. Задачи, которые находились ниже третьей или четвертой позиции в списке, часто были обречены на забытье. </p></li></ul><p>Мы решили избавиться от этих проблем и стали искать варианты решения. </p><h2>Что мы поменяли: WIP-лимиты или ограничение работы в работе</h2><p>Естественно, все давно было придумано за нас и шаг, который сам собой напрашивался, — это ввести WIP-лимиты (Work in Progress Limits), то есть ограничить число задач в работе у каждого инженера. Но тут мы столкнулись со сложностью: мы не могли оценить емкость команды, так как, во-первых, инженеры работали с разной скоростью, во-вторых, задачи были разными и по сложности, и по длительности их выполнения. </p><p>В качестве первого решения мы хотели реализовать «вытягивающую модель» — в ней инициатива о начале работы или запросе ресурсов исходит от исполнителя. То есть по завершении задачи инженер может самостоятельно взять следующую. Но необходимость учитывать приоритеты по 10 и более проектам команды и незнание этих приоритетов инженерами поставили крест на идее. </p><p>Зато мы поняли, что перед каждым планированием нам нужно знать свободную емкость команды. А так как планируем мы ежедневно по будням, к утру каждого рабочего дня мы должны понимать, сколько новых задач сможем взять в работу. При этом мы осознавали, что задачи могут быть разными, но в этой парадигме только задача могла быть единицей измерения емкости. </p><h3>Как мы рассчитали WIP-лимиты и попробовали применить их на практике </h3><p>У нас были исторические данные по работе каждого инженера. На их основе мы посчитали, сколько задач в день в среднем закрывает инженер. Это значение, по сути, и стало индивидуальным WIP-лимитом. В первый день работы по новой методике мы оставили каждому инженеру в плане то количество задач, которое получили при расчете WIP-лимитов. Кроме того, сделали простую Google-таблицу: в нее внесли  лимит, число назначенных задач и свободных слотов по каждому инженеру.  Дежурных в команде мы отмечали цветом и новых задач им, естественно, не назначали.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/d4c/b6c/275/d4cb6c27521ba6f5822157c3b42f961e.png\" alt=\"Планирование загрузки команды по WIP-лимитам\" title=\"Планирование загрузки команды по WIP-лимитам\" width=\"1600\" height=\"577\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d4c/b6c/275/d4cb6c27521ba6f5822157c3b42f961e.png\"><div><figcaption>Планирование загрузки команды по WIP-лимитам</figcaption></figure><h3>Первые сложности: понимание приоритетов и элементы вытягивающей модели</h3><p>Буквально с первого дня мы столкнулись со сложностью: инженер мог заблокироваться по всем запланированным задачам и в результате оставался без работы на день. В этом случае инженеры просто просили тимлида или проджект-менеджера выдать им еще задачу. </p><p>Параллельно с этим нам стало необходимо отмечать в бэклоге более приоритетные для клиентов или  техдолга задачи. Задолго до этих изменений в нашем трекере задач — основательно доработанном <a href=\"https://ru.wikipedia.org/wiki/Redmine\"><u>Redmine</u></a> — коллеги из внутренней команды разработки добавили возможность помечать задачи флагом. Собственно, это был прекрасно подходящий и уже существующий инструмент, которым мы и стали отмечать важные задачи из бэклога на еженедельных встречах с клиентами.</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/bc3/ead/5e3/bc3ead5e382dd7f05cac62ac5ed1611e.png\" width=\"158\" height=\"98\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/bc3/ead/5e3/bc3ead5e382dd7f05cac62ac5ed1611e.png\"></figure><p>Тогда все сошлось: у нас был список отранжированных важных задач, команда высококлассных инженеров и просто умных людей и спонтанно возникающая у них потребность в новых задачах. Соединив все вместе, мы сформулировали для команды следующие правила:</p><ul><li><p>Если вы заблокировались по всем задачам, вы можете прийти и взять из списка с флажками любую понравившуюся вам задачу.</p></li><li><p>Если вы сделали все задачи и вам хочется поработать еще, вы можете прийти и взять из списка с флажками любую понравившуюся вам задачу или пойти отдыхать.</p></li></ul><p>Так у нас появились элементы вытягивающей модели.</p><h3>Работа с блокировками, или при чем тут груминг</h3><p>Еще одной неожиданной неприятностью в новом флоу стал статус Blocked. В предыдущей модели мы, переводя задачу в Blocked, оставляли карточку в плане инженера на день. А теперь, во избежание стены, мы ее почти всегда удаляли и, разумеется, успешно забывали о задаче. Такое положение дел никуда не годилось. </p><p>В мире собаководов существует термин «груминг» — это специальная гигиеническая процедура по уходу за шерстью, кожей, ногтями и ушами собак, в том числе для подготовки к выставке. По аналогии, в методологии Scrum существует Backlog Grooming, только «причесывается» и актуализируется там бэклог. В нашей системе управления задачами такой процесс номинально тоже существовал, но не использовался, хотя потребность в «причесывании» бэклогов была. В новой модели он стал критически необходим, причем помимо бэклога причесывать мы начали еще и статус Blocked. В результате мы перестали продалбывать задачи в Blocked и имели актуальные приоритеты в бэклоге.  </p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/6c2/79f/632/6c279f632442973e18ee517880bede00.png\" width=\"462\" height=\"140\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/6c2/79f/632/6c279f632442973e18ee517880bede00.png\"></figure><h3>Час тимлида и «миты у кулера»</h3><p>Раньше мы обсуждали заблокированные задачи раз в день на командном мите, но с новым процессом такой оперативности перестало хватать. Так как у каждого инженера было в работе небольшое число задач, стало критически важно разрешать блокировки инженеров как можно быстрее. Осложнялась ситуация еще и тем, что для решения задач с блокировками нужен тимлид, а его расписание зачастую под завязку заполнено встречами. </p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/0c7/5ec/962/0c75ec962337ee51c17eb66b82adac1f.png\" width=\"418\" height=\"420\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/0c7/5ec/962/0c75ec962337ee51c17eb66b82adac1f.png\"></figure><p>Решение было очевидным: назначить в середине дня дополнительную ежедневную встречу на 30-60 минут — чтобы обсудить возникшие блокировки по задачам.</p><p>В некоторых командах «Фланта» уже была и показала свою эффективность практика с «митами у кулера»: команда собиралась в видеоконференции и находилась в ней в течение всего рабочего дня. Кто-то — постоянно, кто-то — периодически. Тимлид команды по мере возможности тоже подключался к такой конференции. Инженеры, заходя в тупик, сразу задают возникшие вопросы, и команда сразу же на них отвечает: синергетический эффект коллективного разума в действии.</p><p>Обе эти практики довольно эффективно решали вопрос блокировок по задачам, в особенности для новичков. </p><h2>Чего не хватало в модели с WIP-лимитами</h2><p>Благодаря этим нехитрым правилам, нам удалось улучшить мотивацию инженеров, снизить нагрузку и стресс, добавить прозрачности как для клиентов, так и для команды. И даже увеличить производительность труда, чему мы сами удивились. Кроме того, мы теперь понимали емкость команды в задачах.</p><p>Но мы все еще не понимали, как в таких показателях оценить объем работ, который мы продали клиентам, и, самое главное, не имели критериев оценки проектов на основе этих данных. Оценку стоимости обслуживания для каждого проекта мы проводили сравнительным методом: после технической экспертизы сравнивали новый проект с несколькими имеющимися, определяли, сколько он может потребовать ресурсов, и отсюда выводили стоимость.</p><p>Вопрос расчета стоимости был далеко не единственным. Да, у нас появился инструмент, который позволял отметить флагом и приоритезировать важные для клиента задачи. Но часто случалось так, что клиент считал важными значительно больше задач, чем мы могли выполнить за неделю. В результате, нам после оценки объема задач приходилось говорить что-то вроде: «Ну да, наверное, эти три задачи успеем сделать» — или отстаивать, что такой объем невозможно реализовать за неделю. При этом у нас не было четкого ответа на вопрос, сколько инженерного времени будет потрачено на проект за неделю.  </p><p>Эти недостатки побудили нас к дальнейшему развитию системы планирования.  </p><h3>Этап первый: что дает клиентам «Флант» или поиск баланса</h3><p>На первом этапе требовалось понять, какую ценность мы приносим клиентам. Мы расписали всё по пунктам и получили следующий список:</p><ul><li><p>готовый к production кластер Kubernetes на базе <a href=\"https://deckhouse.ru/\"><u>нашей платформы Deckhouse</u></a>;</p></li><li><p>мониторинг «из коробки» с первого дня;</p></li><li><p>техническая поддержка production 24/7 с SLA на реакцию в 5 минут;</p></li><li><p>настраиваемая система эскалации, в том числе в команду клиента;</p></li><li><p>постоянная команда инженеров для обслуживания проекта — следовательно, они накапливают экспертизу и знания по нему;</p></li><li><p>поддержка команды разработки, в том числе консультации в чате или в конференциях;</p></li><li><p>выполнение задач по развитию и модернизации инфраструктуры;</p></li><li><p>менеджмент команды и обеспечение достижения результата (это про разницу между «мы делали» и «мы сделали»);</p></li><li><p>нивелирование различных рисков, которые есть у инженера в штате: bus factor, отпуск, ошибки найма.</p></li></ul><p>Ого! После минуты гордости и самолюбования мы все же вспомнили, ради чего этот список создавался, и перешли к следующему этапу.</p><h3>Этап второй: в поисках универсальной единицы</h3><p>Итак, список приносимой ценности есть, но тут мы столкнулись с проблемой героев небезызвестного мультфильма: в чем измерять? Нужен был кандидат на роль универсального «попугая», в котором можно измерять и емкость команды, и объем проданных услуг. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/867/2be/06c/8672be06cd7428899b0030d76aa96a0a.jpeg\" width=\"800\" height=\"600\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/867/2be/06c/8672be06cd7428899b0030d76aa96a0a.jpeg\" data-blurred=\"true\"></figure><p>Часть ценностей, которые мы приносили, требовала одинаковых или почти одинаковых ресурсов команды для проектов разного размера. Здесь речь идет как об использовании наших продуктов (<a href=\"https://deckhouse.ru/\">Deckhouse</a>, <a href=\"https://ru.werf.io/\">werf</a>, <a href=\"https://okmeter.ru/\">Okmeter</a>), так и о других ценностях из категории постоянных: менеджмент, дежурный инженер, служба L1. Стоит оговориться, что с определенных объемов это правило не работает и нужно выделять на проект либо отдельного дежурного, либо целую команду с менеджментом — но это нестандартные случаи, обычно в больших или особенных проектах. Мы решили, что надо сделать универсальное решение, а нетипичные проекты просто будут рассматриваться в частном порядке. </p><p>Постоянные элементы из списка мы вынесли за скобки и поняли, что переменным для обычного проекта остается объем услуг, который нужен клиентам для работы с плановыми задачами по развитию и модернизации инфраструктуры. </p><p>В модели с WIP-лимитами в качестве единицы для измерения емкости команды использовалась задача или, если быть абсолютно точным, — выполненная задача. Такая единица нам категорически не подходила, потому что не имела эталонного значения — все задачи были разные даже в рамках одного проекта. </p><p>Следующий очевидный кандидат на универсальную единицу измерения — это время работы инженера. С одной стороны, в отрасли все понимали, что такое 10 часов инженера. С другой стороны, час Senior-инженера — это совсем не то же самое, что час Junior-инженера. А нам хотелось оставить за собой право определять, какой инженер будет работать с задачей в проекте, и при этом распределять ресурсы согласно договоренностям. Поэтому мы отказались от почасовой единицы измерения и решили создать свою, универсальную. </p><p>Перед тем как мы к ней перейдем, подсветим один важный момент. Опыт работы с большим количеством технологий, на который позитивно обречена сильная инженерная команда, а главное — возможность его переиспользовать в разных проектах — дают мощный синергетический эффект. Самый яркий пример: с нашей платформой Deckhouse мы за считанные часы получаем готовый к боевой эксплуатации кластер Kubernetes с набором необходимых модулей. Без подобных инструментов автоматизации квалифицированный инженер будет выполнять аналогичную задачу несколько недель, а затем потратит еще много сил и времени на доводку и поддержку такого решения. Такой синергетический эффект сильно повышает ценность часа инженера «Фланта» в глазах клиента. </p><p>С учетом этого фактора мы и вывели свою универсальную единицу измерения работ инженера. Нам необходимо было выбрать достаточно большой промежуток времени, чтобы за него можно было произвести существенное изменение по задаче. Но он должен был быть не настолько большим, чтобы инженер выгорел, занимаясь одной задачей долгое время. </p><p>Такой единицей стал слот WIP — 2 часа работы опытного инженера «Фланта». При этом новичок мог сделать аналогичную задачу за 3 часа, но для клиента базовой единицей измерения и оплаты все равно остается слот WIP.  </p><p>Как это выглядит для клиента: он приобретает WIP-лимит на определенное количество задач, одновременно находящихся в работе. Этот лимит определяет, какое количество слотов WIP будет ежедневно выделяться для задач проекта. </p><p>С этого момента мы стали понимать емкость команды, смогли определить объем проданных услуг и управлять их балансом, увеличивая число проектов команды или нанимая в нее инженеров. </p><h3>Этап третий: изменения в планировании команды</h3><p>Когда мы начали оперировать слотами определенной продолжительности, мы стали по-другому оценивать количество задач, которые назначали инженеру в работу на день. Так, для опытного инженера это было 3 задачи в индивидуальном плане на день, каждой из которых инженер уделял около 2 часов своего рабочего времени, а для джуниора — 2 задачи по 3 часа каждая. Если какая-то задача явно должна была занять менее 2 часов, это учитывалось в планировании дня.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/50f/f97/7ac/50ff977aced26b581c80cf350a4fceba.png\" alt=\"Пример планирования по новой модели\" title=\"Пример планирования по новой модели\" width=\"1104\" height=\"550\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/50f/f97/7ac/50ff977aced26b581c80cf350a4fceba.png\"><div><figcaption>Пример планирования по новой модели</figcaption></figure><p>Почему и откуда взялись 3 задачи? Все просто: у нас во «Фланте» семичасовой рабочий день (мы понимаем, что необходимо время на переключение между задачами или дополнительные коммуникации, которые никак не учитываются), еще 1 час уходит на ежедневный командный митинг. Итого на работу по плановым задачам остается 3 двухчасовых слота. </p><h3>Этап четвертый: делать именно то, что нужно</h3><p>С новой системой управления ресурсами мы четко обозначили объем услуг, который предоставляет команда. Но мы решили еще улучшить систему для клиентов: во-первых, добавить прозрачности в понимание того, как будет вестись работа по задачам, и, во-вторых, дать больше возможностей для выбора тех задач, которые нужно взять в работу. </p><p>Самым простым, понятным и, как показало время, удачным решением стал вариант диаграммы Ганта, которую мы применяли для планирования. Сперва, естественно, мы просто нарисовали форму для планирования в электронных таблицах, но после того как убедились, что она нужна клиентам, наша внутренняя команда разработки сделала удобный инструмент — Planner.  </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/cdf/d23/946/cdfd23946e4aac76de69bcdc1975da34.png\" alt=\"Интерфейс нашего планера\" title=\"Интерфейс нашего планера\" width=\"1600\" height=\"351\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/cdf/d23/946/cdfd23946e4aac76de69bcdc1975da34.png\"><div><figcaption>Интерфейс нашего планера</figcaption></figure><p>По сути, теперь все планирование на еженедельных встречах с клиентами сводится к 4 этапам:</p><ol><li><p>Сначала мы обсуждаем прошедшую неделю: что из запланированных задач было выполнено, что еще в работе, какие изменения в плане произошли и по каким причинам.</p></li><li><p>На втором этапе мы собираем бэклог спринта: набираем из бэклога задачи, по которым требуется поработать на текущей неделе. Задачи, важные для развития бизнеса заказчика, приоритезирует клиент, а инфраструктурные изменения, которые требуют внимания, подсвечиваем мы. </p></li><li><p>На третьем этапе мы совместно планируем задачи: прогнозируем в слотах срок, за который выполнится задача, и проставляем слоты прямо в диаграмме. Ограничением служит пропускная способность (WIP-лимит).</p></li><li><p>Когда лимит исчерпан, оставшиеся незапланированными задачи убираются в бэклог.</p></li></ol><p>Любой человек, взглянув на эту идеальную картинку, сразу задается парой вопросов:</p><ul><li><p><em>Что будет, если более срочная задача появится между планированиями?</em> Конечно, такие истории случаются. В этих случаях по просьбе клиента мы поменяем задачи, и в работе окажется нужная.  </p></li><li><p><em>Всегда ли вы попадаете в обещанные сроки?</em> Конечно, не всегда. Мы живем в реальном мире и на момент планирования задачи обычно не знаем всех «подводных камней». В этом случае мы продолжаем работы по более приоритетной задаче, а менее приоритетные двигаются дальше по плану, причины таких изменений обсуждаем с клиентом текстом или на следующей встрече. </p><p>Чтобы точно спрогнозировать сроки, необходимо получить и максимально точное техническое задание. К нам же задачи часто приходят на этапе исследования или проектирования элементов инфраструктуры, когда сделать точный прогноз сроков невозможно. Зато это позволяет нашим клиентам получить результат работы не только «рук», но и «голов» инженеров «Фланта». Для наших клиентов это ценно и часто становится причиной выбора нас в качестве партнера. </p></li></ul><h2>Наследие? Наследство!</h2><p>Мы забрали много элементов из предыдущих моделей планирования:</p><ul><li><p>мы все так же планируем работу команды каждый день на ежедневных командных митингах;</p></li><li><p>мы проводим груминг бэклога и статуса Blocked;</p></li><li><p>у нас сохраняется практика «часов тимлида» и «митов у кулера»; </p></li><li><p>в некоторых командах мы по-прежнему формируем списки помеченных флагами задач.</p></li></ul><p>Мы предпочитаем сохранять хорошие практики, улучшать посредственные и отказываться от плохих, постоянно становясь лучше, проще и более гибкими для клиентов и команд. Новый подход к планированию загрузки команды помог нам не только снизить нагрузку на инженеров, но и сделать работу над проектами более прозрачной для клиентов. </p><h2>P.S.</h2><p>Читайте также в нашем блоге:</p><ul><li><p><a href=\"https://habr.com/ru/companies/flant/articles/469453/\">«Управление распределенной командой в режиме многопроектности»</a></p></li></ul><p></p>', 2, '2023-06-12 21:57:55', 627492, 99, '/ru/companies/flant/articles/740192/', 'Всем привет. Мы давно не писали на тему менеджмента команд и проектов. Начнем с краткой вводной. Помимо продуктовой разработки, которой мы занялись около 5 лет назад, основным направлением деятельности «Фланта» остается DaaS (DevOps as a Service). Мы помогаем клиентам с обслуживанием инфраструктуры. И эта деятельность накладывает большой отпечаток на наш внутренний процесс управления проектами, так как у нас много специфичных процессов и практик: у команды может быть несколько разноплановых проектов, ей необходимо обеспечить SLA по каждому из них. Важно и то, что наши команды на 100% удаленные. Три года назад нам казалось, что мы нашли лучшее решение для управления распределенными командами и многочисленными проектами. Но это оказалось не так. С тех пор в нашей работе произошло столько изменений, что нам пришлось полностью пересмотреть модель таск-менеджмента. В этой статье мы проследим, как и почему появлялись новые практики и как они повлияли на эволюцию наших процессов. ');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(187, 'Мягкость – сестра таланта: soft skills как важнейшая точка роста специалиста', '<p>Представьте, вы проснулись в 2045 году, ваш голосовой помощник на основе ИИ напомнил о предстоящем собеседовании в Первом Межпланетном Банке, рассказал, что проанализировал все отзывы о работодателе, изучил психологический портрет вашего потенциального руководителя и взял в учет еще 128 показателей, и, как оказалось, получение крутого оффера зависит на 41,74239321% от 20-и софт скиллов. Опа, думаете вы, закрывая свою любимую книгу Марти Лэйни \"Преимущества интровертов\"… Как-то обидно, что в 2023 году вам не попалась ни одна статья на тему важности саморазвития не только в мире репликаций и шардинга, но и по части общения с командой таких же неисправимых айтишников.</p><figure class=\"bordered full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/a41/8fb/825/a418fb825cc5870e0d07ff369ca7b1a5.jpg\" width=\"1500\" height=\"838\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a41/8fb/825/a418fb825cc5870e0d07ff369ca7b1a5.jpg\" data-blurred=\"true\"></figure><p>Меня зовут Вера, я HR в компании Quillis. И я хочу обезопасить вас от такого неприятного происшествия. Для этого мне нужно рассказать вам о некоторых перспективных навыках группы \"soft skills\" и поделиться рекомендациями, как их можно развить. </p><p>Считаю тему важной, поскольку развитые мягкие навыки уже сейчас помогают адаптироваться к происходящим изменениям и быть успешным в условиях быстро меняющихся требований, и этот тренд будет неумолимо расти. Однако, говорить, что \"софты\" просто \"полезны\" для IT-специалиста, это тоже небольшое лукавство, ведь мало кто заметил, как безобидная рекомендация уже почти превратилась в \"монстра\" с названием \"Требование\". Ведь очень сложно представить <strong>эффективную </strong>продуктовую команду, которая не способна взаимодействовать и договариваться, управлять задачами и сроками, принимать ответственность за свои действия и решения.</p><p>Кроме того, практикуя найм сотрудников, периодически сталкиваюсь с тем, что технически компетентный специалист не всегда может презентовать свои результаты и навыки, что может влиять на исход собеседования. Также, некоторые сотрудники могут испытывать затруднения в период адаптации на новом месте, например, потому, что имеют сложности в коммуникации. Поэтому хочу поделиться опытом и рекомендациями, запасайтесь, пожалуйста, чаем и вкусняшками, потому что информации будет много.</p><p>Мир подобно скоростному поезду несется вперед с такой большой и трудновоспринимаемой скоростью, что пассажиры тревожатся, что рано или поздно контроллеры этого поезда высадят кого-то после первой же невинной ошибки или из-за \"непоспевания\" за постоянными прогрессом, изменениями и развитием. Появилась даже специальная трактовка новой реальности – <strong>BANI-мир (brittle, anxious, non-linear, incomprehensible)</strong>, которую придумал Джамаис Кашо. И вот некоторые из рекомендаций, к которым автор сводит свою модель сегодняшнего мира:</p><ul><li><p>Необходимо ослабить тревогу и беспокойство по поводу будущего. В этом поможет сопереживание \"в моменте\" и внимательность к настоящему.</p></li><li><p>Необходима большая прозрачность и задействование интуиции.</p></li></ul><p>А это значит, что для того, чтобы быстро адаптироваться к изменениям, быть успешным в новой реальности, и в условиях быстро меняющихся требований, потребуется развивать мягкие навыки. </p><p> Переходим к делу! Давайте сегодня разберем следующие важнейшие компетенции:</p><ul><li><p>Управление изменениями;</p></li><li><p>Критическое мышление.   </p></li></ul><h2>Начнем с управления изменениями</h2><p>Управление изменениями – это процесс, который помогает компаниям планировать, разрабатывать, внедрять и оценивать изменения, которые станут необходимыми в будущем. Важно обеспечить плавный переход от старой практики к новой, без значительных нарушений бизнес-процессов.</p><p>Для IT-специалистов важно оперативно адаптироваться к изменениям: уметь анализировать новые требования бизнеса, технологические изменения в сжатые сроки, быть готовыми использовать/внедрять новые инструменты и технологии, а также оценивать воздействие изменений на бизнес-процессы компании.</p><p>Изменения в технологических процессах происходят довольно часто, поэтому умение адекватно реагировать на них, управлять процессом внедрения изменений, обеспечивать стабильность систем, инфраструктуры, даже в условиях неопределенности, является важным условием для успешной деятельности IT-специалиста.</p><p>Нередкая практика, когда в ходе разработки меняются требования к продукту, что может влиять на его функциональность, качество, совместимость с другими системами. Наличие данного навыка позволит оценить влияние этих изменений на продукт, а также предложить альтернативные планы, чтобы снизить риск возможных негативных последствий.</p><blockquote><p><em>От бизнеса поступил запрос реализовать решение, которое будет находить потенциальных клиентов на b2b маркетплейсах через парсинг объявлений. Однако, при проверке данной гипотезы были получены  неудовлетворительные результаты, по ряду причин: объявления с разных площадок имеют различные форматы, не все маркетплейсы имели API для взаимодействия с ними в требуемом режиме, полнотекстовый поиск по объявлениям, зачастую, выдавал нерелевантные результаты. </em></p><p><em>В качестве альтернативы обсуждалось решение, представляющее собой интерфейс маркетолога для  выполнения поисковых запросов по аналогии с интернет-поисковиками, однако, оценка затрат на реализацию данного варианта оказалось слишком велика. </em></p><p><em>В конечном счёте, соизмерив желание с возможностями, задача трансформировалась: бизнесу было предложено решение анализировать торговый оборот компаний, путем анализа информации из платных источников данных и таможенной статистики, поскольку среди описаний товаров можно найти те, производители которых, потенциально интересны бизнесу в качестве клиентов (содержат определённые ключевые фразы). Был выполнен выбор наиболее полных источников данных, для получения описания продукции, а затем, реализован поиск с применением методов ML. </em></p><p><em>Несмотря на изменение изначальной постановки требований, конечная цель бизнеса была достигнута, благодаря оперативному и корректному управлению изменениями командой исполнителей. </em></p></blockquote><p><strong>Моделей управления изменений много, одна из них ADKAR</strong></p><p>Изменения вызывают, зачастую, отрицательные реакции и процесс внедрения сопровождается сопротивлением со стороны сотрудников, поэтому важно внедрять их постепенно, чтобы не \"сломать\" действующую систему.</p><p>Считаю важным сохранять принцип открытости – сообщать сотрудникам об изменениях, объяснять их цель, обозначать роль команды в этом процессе.</p><p>Существует более десяти моделей управления изменениями, применение которых позволит сделать этот процесс мягче. Расскажу про одну из них – модель <strong>ADKAR</strong>, автором которой является – Джеффри Хаятт. Модель универсальная – может быть применима в случае организационных изменений на уровне компании, а также в IT-проектах при реализации изменений, связанных с внедрением новых технологий, или на этапах разработки продуктов. </p><p>Согласно данному подходу, успешный результат от внедрения изменений зависит от подготовленности команды и ее понимания необходимости этих изменений. Модель включает пять этапов:</p><ul><li><p><strong>A</strong>wareness (осведомленность)</p></li><li><p><strong>D</strong>esire (желание)</p></li><li><p><strong>K</strong>nowledge (знания)</p></li><li><p><strong>A</strong>bility (способность)</p></li><li><p><strong>R</strong>einforcement (подкрепление)</p></li></ul><p>Разберем подробнее каждый из них.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/1a3/802/270/1a3802270a7ef0e55d28a1d31dfaae9c.jpg\" alt=\"\" title=\"\" width=\"800\" height=\"564\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/1a3/802/270/1a3802270a7ef0e55d28a1d31dfaae9c.jpg\" data-blurred=\"true\"></figure><p><strong>Awareness (осведомленность) – пусть все в команде знают, зачем на них летом надевают пуховики.</strong>   </p><p>Первично необходимо сообщить команде о цели изменений. Важно, чтобы участники процесса понимали, чем обусловлена необходимость нововведений. Если у вас новый проект на Аляске – отлично, давайте всем об этом расскажем! В случае молчаливых изменений, подозрительный дядька доставит в офис 100 пуховиков, в которые сотрудникам предлагается облачиться – это странно и вызовет, мягко говоря, встревоженный климат.</p><p><strong>Как?</strong></p><ul><li><p>Объясните причины и необходимость изменений, расскажите о возможных последствиях в случае их отсутствия;</p></li><li><p>Получите первичную обратную связь, что позволит спрогнозировать возможные риски до реализации изменений;</p></li><li><p>Расскажите об успешных примерах/практиках, чтобы стимулировать интерес к изменениям.</p></li></ul><p>По сути, вам нужно донести следующую информацию:</p><ul><li><p><strong>Зачем меняться</strong></p></li><li><p><strong>Почему сейчас</strong></p></li><li><p><strong>Что будет, если</strong></p></li></ul><p><strong>Desire (желание) – сотрудники сами попросят пуховики, если узнают, что впереди холодные времена.</strong>   </p><p>На данном этапе важно заинтересовать команду: показать, как изменения повлияют на компанию и почему изменения важны для сотрудников лично, так сказать, сформировать \"желание перемен\".  </p><p>Продвигайте идею внедрения изменений, обозначайте их необходимость и пользу для компании и сотрудников:</p><ul><li><p>Проводите презентации, встречи, рассказывайте о преимуществах нововведений;</p></li><li><p>Давайте возможность высказаться сотрудникам, обсудите мысли, опасения относительно нововведений.</p></li></ul><p><strong> </strong>Объясните сотрудникам:</p><ul><li><p>Почему, как раньше – неэффективно, или \"работать не будет\";</p></li><li><p>Какую роль они играют в процессе изменений и как изменения повлияют на них.</p></li></ul><p><strong>Knowledge (знания) – пуховики обычно несколько стесняют движения, поэтому важно научиться жить в них.</strong></p><p>Изменения подразумевают применение новых знаний, поэтому на данном этапе, важно определить, какие навыки будут актуальными и убедиться, что сотрудники обладают ими.</p><p><strong>Что делать:</strong></p><ul><li><p>Оцените знания сотрудников до начала изменений;</p></li><li><p>Разработайте программу обучения с учетом актуальных потребностей;</p></li><li><p>Контролируйте процесс обучения.</p></li></ul><p><strong>Ability (способность) – привыкнуть к тяжелой одежде лучше заранее, чтобы это не отражалось на эффективности труда, поэтому самостоятельная тренировка приветствуется.</strong></p><p>Обучение не гарантирует фактическое применение знаний, поэтому важно обеспечить сотрудников необходимыми ресурсами и инструментами для возможности формирования навыка на практике. </p><p><strong>Действия:</strong></p><ul><li><p>Помогайте и поддерживайте сотрудников, например, путем наставничества;</p></li><li><p>Оперативно реагируйте на возникающие вопросы.</p></li></ul><p><strong>Reinforcement (подкрепление) – даже после акклиматизации к суровой реальности, пуховики лучше не снимать.</strong></p><p>Может так случиться, что азарт прошел, инициаторы изменений стали менее активны в этом вопросе, и постепенно команда возвращается к прошлым методам работы. </p><p>Поэтому, даже после реализации изменений, важно поддерживать интерес команды, собирать обратную связь и оперативно реагировать на нее. Помимо этого, необходимо убедиться, что реализованные изменения приносят ожидаемый результат.</p><p><strong>Чтобы сохранить мотивацию команды:</strong></p><ul><li><p>Обеспечивайте доступность ресурсов и инструментов, необходимых для поддержки изменений;</p></li><li><p>Собирайте обратную связь;</p></li><li><p>Наблюдайте за прогрессом, разработайте метрики для оценки эффективности изменений.</p></li></ul><p>Отмечу, что при использовании данной модели (как и любой другой) важно последовательно реализовывать каждый этап, в противном случае, результат не принесет нужного эффекта.   </p><p>Данный инструмент поможет управлять процессом изменений и обеспечить эффективную адаптацию к новым условиям.</p><p><strong>Что почитать на данную тему:</strong></p><ul><li><p>Ицхак Адизес – \"Управление изменениями без потрясений и конфликтов\";</p></li><li><p>Эстер Дерби – \"Психология управления изменениями\";</p></li><li><p>Эстер Камерон, Майк Грин – \"Управление изменениями. Полное руководство по моделям, инструментам и техникам внедрения изменений в организации\".   </p></li></ul><h2>Где применить критическое мышление в IT</h2><p>Критическое мышление – это способность анализировать, оценивать достоверность и пользу информации, принимать взвешенные решения.</p><p>Ситуации, когда на задачу тратится множество часов – уже становится \"непростительной роскошью\". Наличие данного навыка позволит вам ориентироваться в технологиях, определять для них лучшее применение, а также поспособствует более быстрому и эффективному решению проблем. Прокачал критическое мышление – сэкономил время. </p><p>На самом деле, данный навык, по моему мнению, применим к любой специализации в IT. Например, вам нужно выбрать технологию для разработки продукта – критическое мышление поможет принять наилучшее обоснованное решение, учитывая не только функциональные возможности, но и скорость разработки, масштабируемость решения в будущем. </p><p>Критическое мышление полезно при разработке сложной архитектуры и ее интеграции с другими системами; при проектировании функционального и удобного интерфейса; для обнаружения уязвимостей в системе безопасности системы.        </p><p>Что происходит, если у специалиста отсутствует этот навык?</p><blockquote><p><em>У инженера данных увеличился объем входных данных для расчёта, и потребление памяти, которая используется во время расчётов. Ресурсов стало недостаточно, при сборе результатов на одной ноде для последовательной записи расчёт стал падать. Специалист пытался решить эту проблему доступными способами: попробовал перевести расчёт на параллельную запись, чтобы не исключать необходимость сбора данных на одной ноде. В результате, проблема с памятью переместилась с ноды на которой осуществлялся сбор результатов – на произвольную ноду, выполнявшую обработку данных, т. к. процесс обработки данных тоже стал требовать больше ресурсов. </em></p><p><em>В конечном счёте, для решения исходной проблемы, пришлось исключать данные логически: часть входных данных отбрасывать по бизнес-ключу, чтобы отфильтровать на входе те данные, которые бизнес не был заинтересован видеть в результирующем наборе данных. </em></p></blockquote><p><strong>Эффект Даннинга-Крюгера</strong></p><p>В моей практике были случаи, когда специалист, имея небольшой опыт работы и знаний, считает себя экспертом в данной области. Подобное явление наблюдается, как при поиске кандидатов на вакантные должности, так и среди сотрудников, неспособных объективно оценивать собственные знания.      </p><p>Есть объяснение, чем подкреплена неоправданная самоуверенность таких людей (так проявляется эффект Даннинга-Крюгера), это метакогнитивное искажение у людей с низкой квалификацией, или, простыми словами, склонность людей оценивать свои способности выше, чем они есть на самом деле. </p><p><strong>Как проявляется:</strong></p><ul><li><p>Склонность переоценивать собственные способности;</p></li><li><p>Неспособность адекватно оценивать и признавать профессионализм других.</p></li></ul><p><strong>На что это может повлиять?</strong></p><ul><li><p>Неоправданное принятие рисков и некорректных решений;</p></li><li><p>Невозможность распознать ошибки и исправить их из-за уверенности в своей компетентности, повтор этих ошибок в будущем.</p></li></ul><h2>Как развить критическое мышление?</h2><p><strong>1. Системный подход</strong></p><p>Используйте системный подход для решения задач: наличие последовательного плана процесса решения позволит проработать задачу пошагово и выявить проблемные места. Структурируйте процесс решения задачи – ознакомьтесь с требованиями, определите ожидания к результату, выработайте решение.</p><p><strong>2. Принимайте взвешенные решения</strong></p><p>Для принятия взвешенного решения важно опираться на факты и устанавливать причинно-следственные связи. При обработке информации, мозг может подсказать решение, опираясь на опыт в прошлом. Попробуйте найти новые варианты решений, чтобы сделать наилучший выбор. Формулируйте задачу разными способами, обдумывайте различные варианты развития событий, составляйте список возможных решений, даже, если они кажутся невероятными, и выбирайте наиболее подходящий вариант, учитывая \"за\" и \"против\".</p><p><strong>3. Развивайте творческое воображение</strong></p><ul><li><p>Рассматривайте рабочие и бытовые ситуации с разных точек зрения;</p></li><li><p>Используйте технику мозгового штурма для генерации нестандартных идей;</p></li><li><p>Общайтесь с разными людьми, посещайте новые места – это поможет разнообразить мышление;</p></li><li><p>Развивайте свои творческие способности: пробуйте что-то новое, не бойтесь экспериментировать.</p></li></ul><p><strong>Рекомендую к прочтению:</strong></p><ul><li><p>Том Чатфилд – \"Критическое мышление. Анализируй, сомневайся,  формируй свое мнение\";</p></li><li><p>Даниэль Канеман – \"Думай медленно… Решай быстро\";</p></li><li><p>Никита Непряхин – \"Анатомия заблуждений. Большая книга по критическому мышлению\";</p></li><li><p>Дарелл Хафф – \"Как лгать при помощи статистики\".</p></li></ul><h2>Что нужно для карьерного роста в 2045 году?</h2><p>Все больше работодателей уделяют внимание soft skills, как при найме сотрудников, так и при работе с действующей командой, хоть на сегодняшний день это и не повсеместно. Но одно можно сказать наверняка: в том самом 2045 году, когда ИИ будет готов выполнять значительно большую часть «хардов», чем сейчас, ценность сотрудников будет складываться и из того, насколько хорошо он умеет «софтить». И теперь для тех счастливчиков, кто прочитал нашу статью, это уже не сможет быть неожиданностью, а собеседование в Первом Межпланетном Банке пройдет более гладко.</p><p>Подписывайтесь, ставьте лайки, оставляйте комментарии – это тоже soft skills.</p><p></p>', 2, '2023-06-12 21:57:56', 991011, 90, '/ru/companies/quillis/articles/740542/', 'Представьте, вы проснулись в 2045 году, ваш голосовой помощник на основе ИИ напомнил о предстоящем собеседовании в Первом Межпланетном Банке, рассказал, что проанализировал все отзывы о работодателе, изучил психологический портрет вашего потенциального руководителя и взял в учет еще 128 показателей, и, как оказалось, получение крутого оффера зависит на 41,74239321% от 20-и софт скиллов. Опа, думаете вы, закрывая свою любимую книгу Марти Лэйни \"Преимущества интровертов\"… Как-то обидно, что в 2023 году вам не попалась ни одна статья на тему важности саморазвития не только в мире репликаций и шардинга, но и по части общения с командой таких же неисправимых айтишников.'),
(188, 'Должен ли руководитель знать больше, чем сотрудники?', '<img src=\"https://habrastorage.org/r/w780q1/getpro/habr/post_images/8dc/003/8bd/8dc0038bd348e4dffe89c324b6d4a079.jpg\" alt=\"image\" data-src=\"https://habrastorage.org/getpro/habr/post_images/8dc/003/8bd/8dc0038bd348e4dffe89c324b6d4a079.jpg\" data-blurred=\"true\"><br>\r\n<br>\r\nОб уровне экспертизы руководителя нет единого мнения: одни считают, что руководитель должен знать больше сотрудников, другие, что нужно знать также или немного хуже сотрудника, а некоторые вообще говорят, что вполне достаточно иметь хорошие управленческие навыки без экспертизы.<br>\r\n<br>\r\nСтоит начать с того, что понятие экспертизы практически невозможно как-то конкретизировать и оцифровать. Конечно, если мы говорим, например, про руководителя учителей английского языка, здесь все достаточно просто — уровень С2 и сертификат IELTS. Но ведь большинство руководителей вынуждены руководить разнородными специалистами, процессами и проектами, а это в разы увеличивает объем возможной экспертизы. И, как следствие, делает невозможным для руководителю быть во всем лучше своих подчиненных, или хотя бы быть наравне с ними. Так, к примеру, руководитель отдела маркетинга не может одновременно быть экспертом и в копирайтинге, и в дизайне, и в продвижении, и в аналитике, и в разработке брэнда продукта. Это большие области, которые практически невозможно охватить одному человеку.<br>\r\n<br>\r\nP.S. В примере с руководителем учителей английского языка я существенно упростил требования. Я написал только про знание английского, при этом не учел смежные навыки. Так, учитель, кроме экспертной части профессии (английского языка) должен иметь знания и навыки преподавания. А это уже дополнительная ветвь экспертизы….<br>\r\n<a name=\"habracut\"></a><br>\r\nКакой же уровень экспертизы должен быть? Так как уровень невозможно как-то оцифровать, мерилом предлагаю использовать следующую формулировку: “уровень экспертизы должен быть достаточным для эффективного управления”. На первый взгляд ясности больше не стало …, но это только на первый взгляд. Давайте покопаемся в словах.<br>\r\n<hr><br>\r\n<h2>“… достаточным для эффективного управления”</h2><br>\r\nЧто такое “эффективное управление”? Эффективное управление — это такое управление, при котором объект управления (в нашем случае, команда) достигает поставленных целей оптимальным путем (наименее ресурсозатратным). Итого, перед нами 2 важных условия:<br>\r\n<br>\r\n<ul>\r\n<li>цели достигнуты;</li>\r\n<li>затрачено минимум ресурсов.</li>\r\n</ul><br>\r\nКак на это условия влияет экспертиза руководителя? Для ответа на этот вопрос буду использовать технологию, которую использую сам (на картинке). Детально о технологии вы можете почитать <a href=\"https://t.me/OS_management/125\" rel=\"nofollow noopener noreferrer\">тут</a><br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/f5d/960/185/f5d960185c5b5664ebc34507fc6c6a41.png\" alt=\"image\" data-src=\"https://habrastorage.org/getpro/habr/post_images/f5d/960/185/f5d960185c5b5664ebc34507fc6c6a41.png\"><br>\r\n<br>\r\nНа этой схеме изображены все этапы, через которые проходит любая задача. Рассмотрим каждый из них в разрезе нашего вопроса:<br>\r\n<br>\r\n<ol>\r\n<li><u>Квалификация.</u> На этом этапе к нам поступает какая-то вводная (информация/задача), по которой нам нужно принять решение: делаем/не делаем, и если делаем, то с каким приоритетом? Если наша экспертиза недостаточна, мы не сможем правильно принять решение ни по одному из вопросов.</li>\r\n<li><u>Разработка решения.</u> Допустим, что задача продвинулась дальше: мы решили ее делать и настало время за нее браться. Она перешла на этап “Разработка решения”. Цель этапа: поставить цель по задаче и определить условия ее достижения (бюджет, параметры, показатели, технологии, …). Если наша экспертиза недостаточна, мы не сможем правильно принять решение ни по одному из вопросов.</li>\r\n<li><u>Планирование.</u> Мы приступили к организации выполнения. На этапе “Планирование” нам нужно декомпозировать задачу, определить исполнителей, обеспечить ресурсы для выполнения, запланировать мероприятия по контролю. Если наша экспертиза недостаточна, мы не сможем правильно принять решение ни по одному из вопросов.</li>\r\n<li><u>Делегирование.</u> Мы определили исполнителей и приступаем к делегированию. Цель этапа: делегировать задание таким образом, чтобы оно было сделано согласно установленных требований (бюджеты, сроки, параметры качества, …). Я неоднократно наблюдал попытки поставить задачу человеком, который не понимает, о чем он вообще говорит и как это работает. Печальное зрелище. Поэтому, если наша экспертиза недостаточна, мы не сможем адекватно (конкретно, в полном объеме, со всеми условиями) поручить задание.</li>\r\n<li><u>Поддержка.</u> Задание делегировано, нужно быть готовым помочь исполнителю (хотя бы, консультационно). Стоит ли говорить, что при отсутствии экспертизы невозможно будет как-то помочь (кроме призывов “у тебя все получится”)? Поэтому, если наша экспертиза недостаточна, мы не сможем помочь исполнителю в случае, если … .</li>\r\n<li><u>Контроль.</u> Задание делегировано и хотелось бы проследить за его выполнением, чтобы своевременно повлиять (если будет отклонение от намеченного плана). Но контроль без экспертизы будет проходить формально, так как придется верить всему, что отвечает и показывает исполнитель. Когда не знаешь, как должно быть, приходится верить. Поэтому, если наша экспертиза недостаточна, мы не сможем своевременно увидить отклонение и предпринять какие-то действия к выравниванию.</li>\r\n<li><u>Собственная работа.</u> Если мы решили что-то делать самостоятельно, а не делегировать, нам понадобиться экспертиза. А если наша экспертиза недостаточна, мы не сможем сами сделать работу.</li>\r\n<li><u>Завершение работы.</u> Когда все работы выполнены, важно оглянуться назад, посмотреть, как эти работы выполнялись, понять, что было хорошо/плохо и запланировать какие-то задачи на будущее, которые помогут предотвратить/повторить получившийся результат. Но если наша экспертиза недостаточна, мы не сможем ничего понять и сделать какие-то выводы.</li>\r\n</ol><br>\r\nКонечно, на каждом из этих шагов есть решение — привлечь эксперта. Но в таком случае руководитель находится полностью в зависимости от этого эксперта и надеется на его порядочность.<br>\r\n<br>\r\nЯ ни в коем случае не предлагаю руководителю становится экспертом во всех областях. Нет, это как раз противоречит второму условию эффективного управления, так как на получение такой экспертизы будет затрачено много лишних ресурсов (включая то, что проект начнется и закончится позже, чем мог). Если мы говорим про разовые работы/услуги, нужно спокойно довериться экспертам (тем более, что речь в статье не об этом, так как подобные эксперты не входят в команду, а чаще всего привлекаются разово). В основной же деятельности нужно иметь достаточно экспертизы, чтобы управлять своей командой.<br>\r\n<br>\r\nКак понять, что уровень экспертизы достаточен для эффективного управления? Предлагаю использовать условия эффективного управления. Уровня моей экспертизы достаточно, если:<br>\r\n<br>\r\n<ul>\r\n<li>поставленные перед моей командой цели преимущественно достигаются;</li>\r\n<li>достижение поставленных целей происходит преимущественно оптимально.</li>\r\n</ul><br>\r\nУточнение! Я не зря написал слово “преимущественно”. 100% результат может быть, но он маловероятен, если компания рационально расходует свои ресурсы. В рациональной компании не бывает такого, что “работы меньше, чем ресурсов”.<br>\r\n<br>\r\nИтак, мы определили, что экспертиза все-таки необходима. Но чтобы поставить точку, предлагаю еще тезисно рассмотреть пользу и вред от экспертизы.<br>\r\n<br>\r\n<hr><br>\r\n<h3>Что позволяет экспертиза?</h3><br>\r\n<ol>\r\n<li>Низкий риск сопротивления. Люди понимают, что вы эксперт и по этому параметру более склонны прислушиваться.</li>\r\n<li>Правильность решений. Встречали ли вы руководителя, который придя в новую компанию предлагает откровенную дичь? Это исключено, если есть достаточный уровень экспертизы</li>\r\n<li>Скорость принятия решений. Решения принимаются более правильно и более оперативно</li>\r\n<li>Перфекционизм “+”. Понимание, как должно быть правильно позволяет требовать нужного исполнения и повышает качество итогового результата. А при правильном использовании, требовательность руководителя позволит сотрудникам выйти на новый уровень качества. То есть, сотруднику приходится выходить на новый уровень, так как руководитель этого требует. Сильная такая мотивация!</li>\r\n<li>Возможность обучать и развивать. Экспертиза позволяет делиться своими знаниями и повышать эффективность команды и компании.</li>\r\n<li>Низкий риск “развода”. Какими бы отличными не были управленческие навыки руководителя, они не помогут ему избежать откровенного “разводняка” со стороны сотрудников. К примеру, сотрудник может существенно завысить оценку трудозатрат на задачу (сказать, что ему нужно не 20 часов, а 40). Только экспертиза позволит заметить неладное и как минимум начать задавать вопросы.</li>\r\n</ol><br>\r\n<h3>Чем опасна высокая экспертиза?</h3><br>\r\n<ol>\r\n<li>Перфекционизм “-”. Экспертный руководитель может требовать выполнить работу идеально. Хотя для дела вполне достаточно (и бюджетнее) было бы сделать просто “хорошо”. Кроме того, такая излишняя придирчивость “выжимает соки” из сотрудников и демотивирует.</li>\r\n<li>Сам сделаю быстрее. Экспертный руководитель может начать самостоятельно выполнять всю работу, что приведет к нерациональному использованию вверенных ресурсов и сотрудников.</li>\r\n<li>У сотрудников нет шанса проявить себя. Экспертного руководителя сложно удивить новым результатом, так как он “все знает”. Кроме того, руководитель может придержать на себе сложные и важные задачи, что не позволит сотруднику стать победителем.</li>\r\n<li>Сотрудники не развиваются. Несмотря на то, что руководитель при наличии экспертизы имеет все возможности для передачи ее сотрудникам, это редко происходит. У руководителей нет мотивации тратить время на обучение. Да и процесс это достаточно неприятный для обучающего, ведь часто ученики не проявляют должной благодарности, а еще могут обучиться и уйти к конкурентам.</li>\r\n<li>Низкая вовлеченность. Имея достаточную экспертизу у руководителя отпадает необходимость подключать сотрудников к принятию решений. Как следствие участие сотрудников останавливается на уровне “получить приказ и выполнить его”.</li>\r\n</ol><br>\r\nПонравилась статья? Находите больше статей о менеджменте в моем телеграм-блоге <b><a href=\"https://t.me/OS_management\" rel=\"nofollow noopener noreferrer\">OSмысленный менеджмент</a></b>. <br>\r\n<br>\r\nПодписывайтесь, далее будет!<br>\r\n<br>\r\n<hr>', 3, '2023-06-12 21:57:57', 820325, 99, '/ru/articles/740228/', 'Сотрудники российских IT-компаний рассказывают, как забег RUNIT изменил их жизнь и корпоративную политику.'),
(189, '«Классно, когда тебя на работе держит что-то большее, чем высокая зарплата». Зачем IT-компаниям спортивные сообщества', '<p>Сотрудники российских IT-компаний рассказывают, как забег RUNIT изменил их жизнь и корпоративную политику.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/993/eed/fb2/993eedfb29ad706525ebc9d367dbb6bc.png\" width=\"1080\" height=\"600\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/993/eed/fb2/993eedfb29ad706525ebc9d367dbb6bc.png\"></figure><p>Всем привет!<br><br>Каждый год мы проводим спортивный фестиваль для IT-сообщества RUNIT. <a href=\"https://runit.digital/\"><u>В этом году он пройдет 18 июня в Измайловском парке.</u></a> За 4 года его проведения вокруг мероприятия образовалось целое комьюнити — некоторые участники приходят к нам из раза в раз. Зачастую это люди, которые увлекаются бегом и работают в IT-компаниях. В их случае RUNIT — это отличный повод совместить приятное с полезным.</p><p>Но есть и другие участники: те, кто раньше серьезно не увлекался бегом и кого RUNIT вдохновил на регулярные пробежки. Мы поговорили с некоторыми из таких людей и приводим ниже их истории. Больше того, появились целые компании, которые благодаря нашему забегу расширяют диапазон корпоративных бонусов и открывают для сотрудников беговые клубы. Мы спросили у них, какую пользу это приносит бизнесу.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/1a3/a22/370/1a3a2237085faba39a087b29fbfed0ee.jpeg\" width=\"1280\" height=\"960\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/1a3/a22/370/1a3a2237085faba39a087b29fbfed0ee.jpeg\" data-blurred=\"true\"></figure><h2>Ольга Шашкарова, директор по персоналу РТЛабс</h2><p>В прошлом году мы впервые услышали про забег RUNIT. Мероприятие показалось интересным, мы кинули клич по компании. И удивились. Оказалось, что среди сотрудников много тех, кто занимается спортом — например, бегает. Мы этот факт учли и зарегистрировались на забег. И это стало отправной точкой, чтобы в компании появилось беговое движение.</p><p>Сначала это была просто стихийно организованная тусовка из тех, кто любит пробежки. Но было очевидно, что из этого может вырасти что-то большее. Мы начали бегать все вместе по воскресеньям. Потом начали выходить дважды в неделю. Людей становилось всё больше. И теперь мы уже в корпоративном формате запускаем беговой клуб с собственным тренером.</p><p>Если в RUNIT мы участвовали, чтобы познакомить людей и просто вместе провести время, то теперь мы уже хотим соревноваться. Может быть, пока не побеждать, но соревноваться. Побеждать — наша следующая цель. Мы хотим быть компанией здоровых людей. И бег — один из кирпичиков. Он не только физически улучшает выносливость и дает энергию. Он здорово работает на ментальное здоровье.<br><br>Беговой клуб — это мотиватор. Бежать с кем-то легче, расстояние преодолевать легче… Это чувствуется на забегах. Плюс происходит обмен опытом. Например, я пробежала марафон в прошлом году. По мне не видно, что я человек, который бегает марафоны, но я смогла. И когда мне кто-то говорит: «Я не могу», — я отвечаю: «На меня посмотри». </p><p>Кроме того, бег — это еще довольные лица коллег, выброс эндорфинов. Для нас это важно, это как раз история про психологическое здоровье, социальную реализацию. Поэтому идея создать беговой клуб внутри компании показалась хорошей — чтобы поощрять коллег к бегу, вдохновлять, мотивировать. Раньше люди бегали поодиночке, а мы хотим бегать вместе, увеличивать корпоративную составляющую.<br><br>Мы бегаем в «Лужниках». У нас есть чат в Телеграме, в нем 120 человек. Не все приходят каждый раз, но есть основной костяк из тех, кто не пропускает. Всегда бегаем по воскресеньям, еще один день на неделе — плавающий. Перед тренировкой встречаемся в заданной точке и бежим. В «Лужниках» классно: там есть вода, инфраструктура, резиновые дорожки — всё способствует хорошей тренировке. Потом все заряженные разбегаются по своим делам.<br><br>Беговой клуб приносит пользу не только его участникам, но и компании. Во-первых, это позиционирование: мы себя показываем, как компанию здоровых людей. Наличие бегового клуба сообщает внешнему миру, кого мы ждем в коллективе, что нам важно. Во-вторых, главный ресурс IT-компании — это люди. Они должны быть в ресурсе, должны быть энергичными, не должны выгорать. Бег — один из способов позаботиться о здоровье коллег: о физическом и ментальном.<br><br>В-третьих, бег — это про взаимодействие: люди бегают, у них появляются новые контексты для общения, человеческий контакт. Решать рабочие задачи с людьми, которых хорошо знаешь, проще. Поэтому бег в нашем случае — это не только спорт, но и один из способов сделать компанию сильнее.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/992/0d2/4f7/9920d24f71a58725d7a165fbf918d566.jpg\" width=\"3000\" height=\"1998\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/992/0d2/4f7/9920d24f71a58725d7a165fbf918d566.jpg\" data-blurred=\"true\"></figure><h2>Мария Крылосова, руководитель проектов по внутреннему и внешнему бренду работодателя X5 Tech</h2><p>В прошлом году ребята из AGIMA пригласили нас на забег RUNIT. Мы узнали, что это за мероприятие: полторы тысячи айтишников собираются в одном месте, чтобы пробежать свою дистанцию. Идея нам понравилась, потому что спорт всегда присутствовал в жизни X5. В итоге в RUNIT от нас участвовало 77 человек. Мы устроили настоящий тимбилдинг: собрались на поляне для общения и совместных фото, сняли душевный ролик об участии и обменялись эмоциями после забега. Специально к мероприятию отшили брендированные футболки и флаги и в итоге смотрелись как одна большая команда бегунов. </p><p>Вскоре начались вопросы: когда следующий забег? Пошли на второй забег — уже на Московский марафон. Команда выросла до 80 участников и двух беговых команд. Стало очевидно, что это точно не история на один раз и ее стоит развивать. Тогда-то мы и начали искать, кто из наших сотрудников сможет возглавить беговой клуб, чтобы сделать легкоатлетические тренировки частью нашей корпоративной культуры. Так появился беговой клуб X5 Tech Run. В нем сейчас состоит более 250 сотрудников, и он набирает обороты.</p><p>Причем мы хотим развивать это сообщество. Разработали стратегию бегового клуба, определили, для кого его делаем, прописали основные ценности, поставили себя KPI. В начале годе анонсировали сотрудникам план забегов на год: от больших многотысячных забегов до фановых. Особенно нам интересны эстафеты, потому что это командная работа. А главная цель клуба — объединять и вовлекать людей. Да, занимать призовые места — это круто, для нас это будет классным побочным эффектом, но всё-таки это не самоцель. </p><p>Цель — объединять людей в неформальные сообщества внутри компании. После бегового клуба у нас появилось еще 4 спортивных клуба: лыжный, волейбольный, баскетбольный и футбольный. Но первым стал беговой, и он запустил цепочку остальных активностей. Люди начали приходить с инициативами, многие готовы брать на себя ответственность, быть лидерами. Но беговой клуб, можно сказать, флагманский: он самый активный, в него проще всего вступить.<br><br>Тренировки проходят по понедельникам, четвергам и субботам, с нами всегда работает профессиональный тренер. Он разрабатывает программы для 3 групп: для начинающих, среднего уровня и продвинутых бегунов. Если ты находишься в другом городе, это не проблема. Мы дистанционно для каждого желающего разрабатываем индивидуальный план беговых тренировок, даже если ты в Ижевске или Иннополисе. <br><br>Сейчас мы готовимся к очередному RUNIT. Это один из наших самых массовых забегов. Тренер составил специальный план, чтобы подготовить бегунов. Вообще ко всем крупным дистанциям мы начинаем готовиться за несколько месяцев. Продумываем даже питание, проводим вебинары с приглашенными экспертами. Недавно обсуждали, как питаться перед длинными дистанциями, что делать после. Осенью и зимой мы занимаемся в закрытом помещении в ЦСКА, весной и летом — в Лужниках.<br><br>Если говорить о том, что нам дает беговой клуб… Многие говорят, что бег помогает быть более продуктивными. Не буду лукавить, проверить это почти невозможно. Но если действительно так работает, то это отличный побочный результат. На самом деле чаще всего наши ребята ценят клуб за нетворкинг, теплое комьюнити и общение, возможность поддерживать и развивать свою физическую форму. И для нас это гораздо ценнее, так как работа с вовлеченностью сотрудников и их лояльностью к компании — одна из наших постоянных долгосрочных целей.<br><br>Классно, когда тебя на работе держит что-то кроме интересных проектов и зарплаты. Это может быть атмосфера в команде, увлеченные коллеги, продуманные активности для людей, традиции, ритуалы. Через спортивные сообщества мы создаем добавленную ценность нашей компании как работодателю. Тем более, что с момента начала пандемии крупные офлайн-события надолго ушли в онлайн. А тут появилась отличная возможность всем регулярно собираться. Многие коллеги впервые друг друга увидели и лично познакомились  Не зря говорят, что спорт позволяет строить крепкие связи на горизонтальном и вертикальном уровнях. Наш опыт тому подтверждение. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/512/301/935/512301935659c924da0f2fdb6f7fb2ed.jpeg\" width=\"640\" height=\"640\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/512/301/935/512301935659c924da0f2fdb6f7fb2ed.jpeg\" data-blurred=\"true\"></figure><h2>Никита Любомудров, руководитель отдела продаж Ekleft</h2><p>Бегом раньше не увлекался. В моей жизни преобладал экстремальный спорт: сноуборд, скейт, серфинг. Так что первым шагом в сторону именно бега стал как раз RUNIT. Я принял в нем участие в прошлом году, и понеслось. Решился довольно просто: в телеграм-чат компании кинули клич, что нужны ребята, которые побегут от нас. Сперва отозвалось много людей, хотели участвовать в эстафете. Но в итоге до RUNIT добрался я один — мне хотелось проверить себя и познакомиться с коллегами из других компаний.<br><br>Это был мой самый первый забег в жизни. Хотел начать тренироваться к нему за месяц, но в итоге начал за неделю. Эх, лень-матушка! Но я был уверен, что 3 километра пробегу легко. В первую тренировочную пробежку поставил цель — осилить 3 километра. Но где-то в конце первого километра у меня начало жутко колоть в боку. Оставшийся путь проковылял кое-как.</p><p>Так я понял, что к забегу не готов и что нужно разогреваться. Оставшиеся до забега дни занимался физкультурой по утрам. В итоге организм привык. Трехкилометровую дистанцию я пробежал довольно легко, хотя на протяжении всего пути было сложно понять, когда уже финиш. То есть не было ясно, когда ускоряться. В целом я бежал в среднем темпе, чтобы снова в боку не заболело.</p><p><br>На когда добрался до финиша, почувствовал себя победителем. Несмотря на то, что многие пробежали быстрее, всё равно было это неповторимое ощущение: «Ты это сделал!» Теперь, после участия в RUNIT, я начал бегать. Не каждый день, но несколько раз в месяц на пробежку выхожу. Бег мне помогает уйти от мыслей и погрузиться в физический астрал. Ты просто бежишь и чувствуешь свое тело. Это особенно круто после постоянного сидения в офисе.</p><p>А что касается стереотипа о неподвижных айтишниках, то это точно неправда. Последние 3 месяца я жил на Бали и познакомился с огромным количеством IT-специалистов. Почти все занимаются спортом: зал, бег, серфинг, плавание. Это помогает держать себя в тонусе.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/589/511/f2f/589511f2ffe26c3529b4189e7c59b5c3.jpg\" width=\"3024\" height=\"4032\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/589/511/f2f/589511f2ffe26c3529b4189e7c59b5c3.jpg\" data-blurred=\"true\"></figure><h2>Дмитрий Грачев, руководитель центра компетенций ПАО «Росбанк»</h2><p>RUNIT 2022 сподвиг меня на регулярные пробежки. Моя история, я так думаю, весьма банальна, но все же. Устроился на новое место работы, руководителем одного из подразделений в IT-домене ПАО «Росбанк». Проходил испытательный срок и знакомился с новыми коллегами/процессами. В один день пришла общая рассылка по сотрудникам: <em>«Кто хочет принять участие в забеге RUNIT? Мы тут собираем команду от нашей компании»</em>.</p><p>Нужно сказать, что в «Росбанке» социальная составляющая и культура на очень высоком уровне. Много активностей для сотрудников по всем направлениям: мероприятия, встречи, группы по видам спорта и т. д. Первой моей мыслью было: <em>«О, надо же, как здорово! Народ совместно принимает участие в спортивных соревнованиях»</em>. А спустя минуту: <em>«А почему я изначально отказываюсь от этой затеи?» </em>И моментально записался. Да ещё и на 21 километр.</p><p>Спортом я время от времени занимался. Но не сказать, чтобы уделял внимание бегу. А тут сразу 21 км. Пришлось побольше погрузиться в этот вид спорта, подобрать инвентарь и почитать/посмотреть умных людей, которые в этом понимают гораздо больше, чем я. Предварительная подготовка, безусловно, помогла мне перед непосредственным забегом. Однако полностью волнения перед стартом не убрала. </p><p>Поскольку опыта в спортивных забегах у меня ранее не было, я стартовал одним из последних. И сразу же понял, что совершил ошибку — пришлось обгонять много участников, чей темп бега был значительно ниже моего. Но не скажу, что весь забег мне дался легко. После 18-го километра я бежал на «морально-волевых», просто не позволяя себе остановиться, так как уже было столько сил вложено. </p><p>Кстати, помогали пейсмейкеры, по ним было удобно ориентироваться, с каким темпом бежать. Еще очень сильно помогала команда поддержки с барабанами, дудками и прочей атрибутикой. Каждый раз, пробегая мимо них, я старался сделать вид «лихой и молодецкий», чтобы никто не заподозрил, что я на последнем издыхании и мысленно заставляю себя бежать дальше. </p><p>А поскольку команда поддержки стояла на прямой линии, видимость на которой была, может, метров 200–300, то я заранее морально себя готовил, чтобы мимо них промчаться как лесной олень, едва касаясь ногами земли, а не как сутулый бобер. Уже на финише я несколько минут не мог поверить, что всё-таки пробежал эту дистанцию. И сразу же появился азарт. Захотелось узнать, кто из тех, кто бежал вместе со мной, преодолел дистанцию намного лучше меня. Это был мой первый опыт участия в каких-либо соревнованиях по бегу, но я отлично провёл время. Пробежал 21 км, остался весьма доволен результатом. И с тех пор стараюсь почаще выходить на пробежки.</p><p>Ранее я бегал очень редко. Преимущественно на беговой дорожке в фитнес-центре. </p><p>Уже на этапе подготовки к RUNIT 2022 начал бегать больше и чаще. А после забега я продолжил тренировки, чтобы выработать привычку к бегу. Затем принял участие в зимнем забеге Mad Fox Ultra Inspiration, он проходил в декабре 2022. И теперь готовлю к очередному RUNIT. Выбрал дистанцию в 25 километров. Стараюсь выходить на пробежку 2 раза в неделю, обычно пробегаю 7–10 километров.</p><p>И что круто, на работе такие увлечения поддерживают. Постоянно предлагают какие-то слоты на забеги в разных городах, оплачивают участие сотрудников. Так что ждем лета, впереди много забегов. Рад, что RUNIT в прошлом году открыл для меня новое увлечение.</p><hr><p>Если эти истории вдохновили вас участвовать в RUNIT, <a href=\"https://runit.digital/\"><u>регистрируйтесь</u></a> и приходите 18 июня в Измайловский парк. Участников ждет не только большой забег, но и море других активностей: фудкорт, интерактивные площадки, концерт, зоны нетворкинга, зоны отдыха. Участвовать можно даже с семьей: мы предусмотрели дистанции для детей. А если бегать вам не хочется, можно просто прийти и поболеть за друзей и коллег — для болельщиков вход свободный.<br><br>Что об этом почитать:</p><ul><li><p><a href=\"https://t.me/rundigital\"><u>Телеграм-канал RUNIT.</u></a></p></li><li><p><a href=\"https://habr.com/ru/companies/agima/articles/737878/\"><u>Мнение врача: профессиональные заболевания айтишников — как лечить и как не допускать.</u></a></p></li><li><p><a href=\"https://habr.com/ru/companies/agima/articles/678404/\"><u>9 упражнений для тех, кто весь день за компом.</u></a></p></li><li><p><a href=\"https://habr.com/ru/companies/agima/articles/678830/\"><u>Звезды бега: как и зачем айтишники бьют спортивные рекорды.</u></a></p></li><li><p><a href=\"https://habr.com/ru/companies/agima/articles/679366/\"><u>Сотрудники семи IT-компаний рассказывают, зачем занимаются спортом и как мотивируют себя не бросать.</u></a></p></li></ul><p></p>', 3, '2023-06-12 21:57:57', 760797, 83, '/ru/companies/agima/articles/739852/', 'Наша рубрика «Где работать в IT» — это интервью с интересными айти-компаниями, в которых они делятся подробностями о процессах своей работы. Представители индустрии отвечают на вопросы о найме, условиях, командах и технологиях. В этом выпуске мы расскажем про компанию «АйТи Бастион» — российский разработчик системы контроля удаленного доступа.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(190, 'Где работать в IT в 2023: АйТи Бастион', '<figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/7ea/ab2/370/7eaab2370ea65a8ff022625616c91f90.png\" width=\"1480\" height=\"840\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/7ea/ab2/370/7eaab2370ea65a8ff022625616c91f90.png\"></figure><p>Наша рубрика «<a href=\"https://career.habr.com/journal/workplace\"><u>Где работать в IT</u></a>» — это интервью с интересными айти-компаниями, в которых они делятся подробностями о процессах своей работы. Представители индустрии отвечают на вопросы о найме, условиях, командах и технологиях. </p><p>В этом выпуске мы расскажем про компанию «<a href=\"https://career.habr.com/companies/it-bastion\"><u>АйТи Бастион</u></a>» — российского разработчика системы контроля удаленного доступа.</p><blockquote><p>А ещё в выпусках мы иногда рассказываем об оценках компаний на Хабр Карьере, чтобы вы были в курсе, за что их любят (или нет?) сотрудники. Кстати, если вы тоже оцените своего работодателя, то это поможет тем, кто ищет работу в IT.</p><p>→ <a href=\"https://career.habr.com/profile/company_ratings/new\"><u>оценить работодателя</u></a></p></blockquote><hr><h2>Кто отвечал на вопросы</h2><p>Обо всех процессах в компании нам подробно рассказали:</p><div class=\"persona\" persona=\"true\"><img persona=\"true\" class=\"image persona__image\" src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/402/45c/4bc/40245c4bcb4794ba2a254dabb1a65e30.jpg\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/402/45c/4bc/40245c4bcb4794ba2a254dabb1a65e30.jpg\" data-blurred=\"true\"><h5 class=\"persona__heading\" persona=\"true\">Евгения Борисова</h5><p><em>Руководитель отдела маркетинга и PR</em></p><div class=\"persona\" persona=\"true\"><img persona=\"true\" class=\"image persona__image\" src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/b3f/909/c9f/b3f909c9f04a24eb220c55bf6d02e5fa.jpg\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b3f/909/c9f/b3f909c9f04a24eb220c55bf6d02e5fa.jpg\" data-blurred=\"true\"><h5 class=\"persona__heading\" persona=\"true\">Анна Чигирина</h5><p><em>HR-менеджер</em></p><div class=\"persona\" persona=\"true\"><img persona=\"true\" class=\"image persona__image\" src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/30e/aec/f8e/30eaecf8e1d6568fabb9fa84691720e8.jpg\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/30e/aec/f8e/30eaecf8e1d6568fabb9fa84691720e8.jpg\" data-blurred=\"true\"><h5 class=\"persona__heading\" persona=\"true\">Павел Токатлы</h5><p><em>Менеджер проектов разработки</em></p><hr><h2>О компании</h2><p><strong>Компания «АйТи Бастион» </strong>—<strong> </strong>российский разработчик системы контроля удаленного доступа привилегированных пользователей СКДПУ НТ (PАM-систем), входящий в реестр аккредитованных IT-компаний, на рынке с 2014 года. Продукты «АйТи Бастион» входят в реестр отечественного ПО. В первую очередь компания занимается разработкой и поддержкой ИБ-решения по организации удаленного доступа, анализом и мониторингом активностей в рамках сессий удаленного доступа СКДПУ НТ.</p><p>Продукт СКДПУ НТ востребован в разных сферах экономики: от госсектора до энергетики и промышленных предприятий. Компания участвует в отраслевых конференциях, представляет свои продукты на мероприятиях разных форматов, уделяет большое внимание развитию коллектива и внутренним коммуникациям.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/df3/bbf/be1/df3bbfbe1120dcee739936b214e6be3f.png\" width=\"1280\" height=\"960\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/df3/bbf/be1/df3bbfbe1120dcee739936b214e6be3f.png\"></figure><h2>Об условиях работы</h2><p><em>Отвечает Евгения Борисова</em></p><h3>Какой в вашей компании сложился рабочий график и какое отношение к переработкам?</h3><p>В вакансии мы пишем, что график с 10.00 до 19.00, работа в офисе. Однако мы работаем в довольно свободном режиме: никто не контролирует приход и уход с работы, все работают в комфортном для себя режиме.</p><p>Переработки бывают крайне редко, только если от этого зависит выполнение поставленной задачи. Стараемся таких ситуаций не допускать. Учим сотрудников распределять свое время. Проводим внутреннее обучение основам тайм-менеджмента.</p><h3>Какие бытовые условия ждут нового сотрудника на рабочем месте?</h3><p>Офис у нас, что называется, классический. Кабинеты на 3-5 человек, большие окна, кухни, переговорки, места для отдыха. Сейчас мы арендуем офисные помещения на первых этажах жилых домов — тут капитальные стены, хорошая отделка, новая мебель. В общем, всё довольно удобно.</p><h3>Есть ли возможность удалённой работы?</h3><p>В пандемию мы все сидели на удаленке, но потом вернулись в офис, потому что у нас дружный коллектив и мы ценим старое доброе офлайн-общение. Однако если нужно поработать удаленно — не вопрос, работай. Некоторые из наших сотрудников работают на удаленке постоянно.</p><p>Команда у нас распределённая по России: Санкт-Петербург, Казань, Калининград, Красноярск, Воронеж, Нижний Новгород.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/43b/990/ed3/43b990ed3340f39ba25ccefe326d4f91.png\" width=\"1280\" height=\"961\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/43b/990/ed3/43b990ed3340f39ba25ccefe326d4f91.png\"></figure><h3>Какой социальный пакет получают сотрудники?</h3><p>Соцпакет у нас работает в виде так называемого «кафетерия льгот» — каждый из сотрудников имеет определенное количество «баллов», которые может потратить на ДМС (со стоматологией или без), изучение английского, оплату фитнеса, проф. и доп. обучение, уикенд в санатории и др. Однако все эти плюшки доступны только после прохождения испытательного срока. К слову, у нас присутствует частая практика досрочного «закрытия» испытательного срока: если руководитель видит, что новый человек справляется, выполнил все задачи, поставленные ему на время ИС, и рвётся в бой, то коллегиальным решением испытательный срок может быть окончен гораздо раньше стандартных 3-х месяцев.</p><h3>Какие бонусы, премии и компенсации предусмотрены в компании?</h3><p>По итогам года в «АйТи Бастион» выплачиваются годовые премии, решение принимается по каждому сотруднику отдельно.</p><h3>Какие есть перспективы для образования и личного развития у сотрудников?</h3><p>В компании есть график профессионального обучения, его формирует HR-отдел. Туда можно заявиться со своими «хотелками», и если они соотносятся с твоими должностными обязанностями, то компания берет на себя оплату обучения. </p><p>Также как раз сейчас разрабатывается система индивидуальных планов развития сотрудников (ИПР). Могу сказать, что за 2022 год около 20% сотрудников выросли как профессионалы и перешли на уровень выше в должности.</p><h2>О найме</h2><p><em>Отвечает Анна Чигирина</em></p><h3>Во сколько этапов проходит наём, и что ожидает соискателя?</h3><p>У нас в компании наём проходит обычно в три этапа: телефонный разговор с кандидатом с целью знакомства и уточнения всех деталей; техническое собеседование, и по итогу уже очное собеседование/знакомство в офисе для тех кандидатов, кто находится в Москве.</p><p>На техническом интервью обычно спрашиваем о предыдущем опыте, можем предложить решить задачу или найти ошибку в коде, в это время оцениваем кандидата, смотрим на то, как он думает. Если, например, это алгоритмическая задачка, то хочется слышать рассуждения. Если это теория, то можем задать вопрос близкий по теории и услышать, как кандидат будет отвечать на него.</p><p>На очном интервью мы обычно задаем кандидату спокойные и последовательные вопросы об образовании, опыте работы, причинах поиска новой работы, ожиданиях и карьерных планах. Задача такого интервью — познакомиться с кандидатом и узнать его получше.</p><h3>Даете ли вы тестовое задание кандидатам? </h3><p>Тестовое задание даем только для инженеров технической поддержки. Так как мы не можем выдавать дистрибутив своего продукта без подписания NDA, но необходимо определить уровень владения кандидатом ОС Linux и Windows. Предлагается использовать решение, имитирующее разграничение доступа, являющееся свободным ПО. Основная задача — узнать, как настраивается ПО, произвести настройку доступа тестового пользователя по протоколам SSH и RDP.</p><p>Для кандидатов в команду разработки или на другие позиции тестирование проводится в устной форме в формате диалога.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a3d/632/25e/a3d63225e171d43c683e1cd7710b22d8.png\" width=\"1024\" height=\"681\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a3d/632/25e/a3d63225e171d43c683e1cd7710b22d8.png\"></figure><h3>Как отличается подход к найму в зависимости от позиции и стека?</h3><p>В целом подход у нас один — найти такого кандидата, который на своей позиции внесет вклад в достижение компанией поставленных целей и впишется в наш дружный коллектив, но уровень профессионализма стоит, наверное, все-таки на первом месте.<br>Обычно мы используем ситуационное кейс-интервью для оценки кандидата, а для кандидатов на топовые позиции проводим более углубленные интервью по компетенциям.</p><h3>Какая фраза от кандидата на собеседовании точно заставит вас выкинуть его резюме?</h3><p>Резюме мы не выкидываем в принципе. Другое дело, что отказать кандидату или задуматься о необходимости брать такого человека в команду может заставить отсутствие мотивации с его стороны, когда, приходя на собеседование, кандидат ничего не знает о компании и о том, чем она занимается.</p><h3>Кого последнего вы уволили и почему?</h3><p>Увольнение у нас случается крайне редко, исключительно по причине отсутствия вовлеченности сотрудника и ответственности за результат.</p><h3>Как происходит онбординг нового сотрудника?</h3><p>В день выхода нового сотрудника мы представляем его всем коллегам в общем чате и, если сотрудник выходит в офис, знакомим его с ними очно. Отправляем новичку приветственное письмо с базовой информацией о компании, прикрепляем наставника. </p><p>В ходе прохождения испытательного срока у нас проходят регулярные встречи для понимания того, как проходит онбординг. Этапы онбординга: 1 неделя, один месяц, два месяца. В эти контрольные даты мы встречаемся с новичком, узнаем, насколько ему комфортно работается, как идет выполнение задач, поставленных на ИС, чем занимается в данный момент, есть ли сложности, собираем обратную связь у наставника.</p><h2>О команде</h2><p><em>Отвечает Анна Чигирина</em></p><h3>Какая методология разработки у вас используется и почему?</h3><p>Мы используем различные практики из agile и scrum, формируя корпоративную методологию. У нас недельные итерации, отрабатываемые на канбан-доске, ретроспективы и ежедневные статус-митинги.</p><h3>Каковы размеры и структуры команд?</h3><p>Структура команды разработки из 18 человек:</p><ul><li><p>Тимлид </p></li><li><p>Проджект менеджер</p></li><li><p>Бизнес-аналитик</p></li><li><p>Back-end разработчик</p></li><li><p>Front-end разработчик</p></li><li><p>DevOps инженер</p></li><li><p>Data Scientist</p></li><li><p>Тестировщики</p></li><li><p>Инженеры по автоматизации тестирования</p></li></ul><h3>По каким критериям вы разбиваете разработчиков на джунов, мидлов и сеньоров?</h3><p>Если кратко, то:</p><ul><li><p>Джуну в команде нужна помощь и поддержка, чтобы расти. Он сфокусирован на коде, а не на решении проблемы. Пока не видит всей картины и процессов.</p></li></ul><ul><li><p>Миддл уже достаточно автономен, работает вместе с аналитиком, архитектором. Понимает сценарии цикла разработки, видит результаты возникающих проблем и учится избегать их в будущем.</p></li></ul><ul><li><p>Сеньор ответственен за успехи команды. Он умеет долгосрочно планировать, оценивать время и понимает цель, к которой идёт команда.</p></li></ul><h3>Кто чаще возглавляет команды — продуктовый специалист или технический?</h3><p>Технический специалист со знанием продукта.</p><h3>Как часто люди меняют команды?</h3><p>У нас команды довольно молодые, им около года. Случаев перехода еще не было. Если сотрудник хочет поменять направление своей деятельности, развиваться по горизонтали и уйти в другую команду, то, в целом, относимся к таким изменениям позитивно.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/4d0/f85/5b5/4d0f855b56035781b3754ade452a2573.png\" width=\"1280\" height=\"960\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/4d0/f85/5b5/4d0f855b56035781b3754ade452a2573.png\"></figure><h3>Что важнее, софт-скилы или хард-скилы?</h3><p>Hard и soft skills хорошо работают в паре: профессиональная компетентность будущего сотрудника необходима однозначно, но и определенные личностные качества также нужны для командной работы. При просмотре резюме обращаем внимание на hard skills, при очном/онлайн собеседовании оцениваем еще и soft skills.</p><h3>Как много собраний у вас проводится? Есть ли особые подходы к ним?</h3><p>Общие собрания проводятся обычно раз в два месяца. Стараемся их проводить в неформальной обстановке. На них мы обсуждаем, что нового произошло за это в время в компании, выступают спикеры из числа сотрудников, которые хотят рассказать про свой отдел, группу и личный вклад в общее дело. Команды созваниваются обычно раз в день на 30-50 минут для обсуждения текущих задач.</p><h3>Как вы боретесь с выгоранием сотрудников?</h3><p>У нас проводятся регулярные опросы удовлетворенности сотрудников, на основе их результатов мы постоянно дорабатываем и улучшаем такие факторы мотивации, как признание заслуг, перспектива роста, полезность для команды, отношения с начальством и коллегами, зарплата, соц.пакет и бонусы, условия работы.</p><p>Но всё же мы стараемся не допускать таких ситуаций. Нагрузка распределяется равномерно между сотрудниками, отпуска ими не игнорируются, но если вдруг становится понятно, что сотрудник близок к выгоранию, то мы предлагаем  изменить расписание, снять часть обязанностей, если становится понятно, что нужен помощник. </p><p>В целом мы стараемся соблюдать work-life balance, чтобы не допускать переутомления и как следствие — выгорания сотрудников.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/902/2a8/374/9022a837428add22e86c900ea3e97c43.png\" width=\"1600\" height=\"1066\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/902/2a8/374/9022a837428add22e86c900ea3e97c43.png\"></figure><h2>О технологиях</h2><p><em>Отвечает Павел Токатлы, менеджер проектов разработки</em></p><h3>Какие языки, фреймворки и библиотеки используются на проекте?</h3><p>Основной язык — Python, но также есть возможность поработать с C кодом. Множество фреймворков и библиотек используется в проекте, одни из них — это flask, alembic, marshmallow, jinja и openapi.</p><h3>Что вы можете рассказать об архитектуре проектов?</h3><p>В целом мы придерживаемся идеологии микросервисной архитектуры. Сейчас перед нами стоит важная веха реализации распределённой архитектуры в основном продукте.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/0f3/9ca/202/0f39ca2028744490dcb9f8dec8ebfde0.png\" width=\"1243\" height=\"932\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/0f3/9ca/202/0f39ca2028744490dcb9f8dec8ebfde0.png\"></figure><h3>Какая у вас принята политика код-ревью?</h3><p>Каждый merge-request проходит код-ревью коллегами. Если замечаний нет, после двух апрувов код сливается в мастер-ветку.</p><h3>Как тестируется код?</h3><p>Первичное тестирование производится автором написанного кода, также мы тестируем код мануально и с помощью авто-тестов.</p><h3>Как устроен процесс документации и ведения базы знаний на проектах?</h3><p>Документация начинается на этапе докстрингов разработчика. Любой реализуемый функционал сначала описывается бизнес-аналитиком и после реализации передаётся в отдел технического документирования.</p><p></p>', 3, '2023-06-12 21:57:58', 931069, 83, '/ru/companies/habr_career/articles/740114/', 'Ещё во время учёбы и преподавания мне попадались два типа студентов: одни ловили всё на лету, другие старательно и долго вникали и разбирались, иногда доводя вопросами до белого каления. И не сказать, что первые были успешнее вторых — напротив, у старательных «тугодумов» информация усваивалась лучше и глубже. Это было понятно по тому, что они активно применяли свои знания в последующих модулях. Себя удавалось обнаружить чаще среди тех, кто «на лету» и казалось, что в шкуре «тугодумов» побывать не удастся. Работа в бизнесе показала, что можно оказаться и там, и там, а иногда вообще принципиально важно закопаться в технологию или софт как можно глубже. Мой путь лежал через CRM. Сфера узкая, а вот советы — универсальные.'),
(191, 'Как разобраться в технологии, даже если вы очень крутой?', '<p>Ещё во время учёбы и преподавания мне попадались два типа студентов: одни ловили всё на лету, другие старательно и долго вникали и разбирались, иногда доводя вопросами до белого каления. И не сказать, что первые были успешнее вторых — напротив, у старательных «тугодумов» информация усваивалась лучше и глубже. Это было понятно по тому, что они активно применяли свои знания в последующих модулях. Себя удавалось обнаружить чаще среди тех, кто «на лету» и казалось, что в шкуре «тугодумов» побывать не удастся. Работа в бизнесе показала, что можно оказаться и там, и там, а иногда вообще принципиально важно закопаться в технологию или софт как можно глубже. Мой путь лежал через CRM. Сфера узкая, а вот советы — универсальные.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/289/40a/72c/28940a72ced19089c537130ff35b7b68.png\" width=\"1335\" height=\"950\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/289/40a/72c/28940a72ced19089c537130ff35b7b68.png\"></figure><h3>Если вам кажется, что всё понятно, вам кажется</h3><p>Первый мой контакт с CRM-системой произошёл на другой работе, где моя функция аналитика предполагала активное участие в рабочей группе по внедрению дико дорогой и жутко кастомизированной импортной системы. Процесс длился без малого два года, были встречи на русском и на английском, мы выстраивали процесс обучения, разрабатывали и классифицировали требования, заставляли заново писать модули для бухгалтерской системы (это была специфическая история, не 1С). Мой стол был завален пачками документации, спецификациями, протоколами и прочей бумажной историей огромного проекта. Нужно сказать, что использование системы оказалось не столь бодрым, как внедрение (компанию поглотил другой гигант и там были свои автоматизационные игрушки), но мне посчастливилось побывать ещё и в роли внутреннего эксперта. Казалось, что с этих позиций про CRM и отчасти про ERP я знаю всё. Право слово, ну что ещё-то надо?</p><p>После включения в проект <a href=\"https://www.regionsoft.ru/\"><u>RegionSoft CRM</u></a> стало понятно, что всё непонятно. Во-первых, клиенты (малый и средний бизнес) совсем иначе смотрели на вещи, чем мой дотационный гигант с безграничным бюджетом и дикими хотелками, во-вторых, система оказалась более цельной и самодостаточной, чем та, которую приходилось внедрять: совсем другие требования, доработки и технические задания. Чуть позже, при погружении уже в российский рынок, стали понятны причины: CRM развивается по требованиям того сегмента, на который она нацелена. Это не абстрактное нечто, не конструктор, а цельная и продуманная штука: бери и пользуйся. Импортный продукт был скорее перечислением «вот вам общая формо-морда, но при случае можем сделать под вас за пару млн $».  </p><h4>Итак, первое, что вам нужно понять про технологию</h4><ul><li><p>Для кого она предназначена. Это определяет все её ключевые параметры и характеристики. Целевую аудиторию и конечного пользователя нужно изучать так же пристально, как архитектуру и функциональность системы. Это поможет разработчику и продакт-менеджеру точно понимать все требования и составлять корректные технические задания, а коммерции — правильно позиционировать и продавать продукт (а не довольствоваться собственной фантазией).</p></li><li><p>Насколько она цельная и какие задачи и потребности пользователя она закрывает (самокат можно использовать только летом, хранилище паролей должно быть защищённым, смартфон может больше фотографировать и писать, чем говорить и т. д.). Исходя из этого можно продумывать возможности кастомизации, доработки и формировать бэклог новых фич, руководствуясь при этом принципами рациональности (приделать к самокату крышу и кузов — не рационально, а расширить ёмкость аккумулятора смартфона — вполне).</p></li><li><p>Чтобы погрузиться в технологию, нужно стать её полноценным пользователем и не просто тестировать от релиза к релизу, но и периодически становиться клиентом, проходить его пути, находить проблемы, сложности и способы улучшения опыта.</p></li></ul><h3>Работает — и ладно</h3><p>Этой позицией часто страдают маркетологи и прочие коммерсы: они видят готовую технологию, разработчики им разжёвывают и презентуют спецификации и функциональные возможности, а дальше — всё по старым учебникам Котлера (это в лучшем случае). Как-то во время кабинетного исследования мне захотелось расспросить продажников конкурентов о технологическом стеке: на каком языке написаны модули, какие сервера использует облачная версия, какой там аптайм, какая СУБД используется. Результат подтвердил мою гипотезу: ни один менеджер без помощи технаря не ответил ни на один из этих вопросов. И я знаю, что многие сейчас внутренне (или в комментариях) поспорят со мной: а какое это значение имеет для покупки-продажи?</p><p>Огромное! Например, мне не нужна устаревшая или платная СУБД, я не хочу, чтобы моя облачная арендуемая система хостилась у второсортного провайдера, а язык модулей мне важен на тот случай, если я как клиент решу нанять для доработки фрилансера или сотрудника и мне нужно будет оценить стоимость его привлечения.</p><p>Но и это поверхностные мелочи. Не зная архитектуры и принципов работы технологии, нельзя понять её до конца. И то, что для маркетологов и продажников является магией, в реальности объясняется простыми и доступными понятиями: реляционная СУБД, хранимые процедуры, действия по расписанию, триггеры, дизайнер отчётов, формы, события и т. д. Условно говоря, если ты понимаешь, откуда в печатной форме счёта-фактуры берутся данные, ты не будешь верещать и звонить коллегам, если наименования не окажется, а просто пойдёшь в справочник номенклатуры и проверишь, куда делся товар или услуга. Это минимальное знание, которое значительно облегчает жизнь всем. Специально оговорюсь, что нужно именно понимать, а не попугайничать умные слова и жить по принципу «слышал звон, не знаю, где он» — такой подход может подвести и навредить и компании, и пользователям технологии.</p><h4>Итак, второе, что вам нужно сделать, изучая технологию</h4><ul><li><p>Внимательно изучить документацию — не прочитать, а именно изучить, то есть: распечатать, взять в руки, сесть перед софтом, железом или программно-аппаратным комплексом и внимательно проделать всё, что написано в документации, добавляя стикеры, пометки, выделения маркером. Это первый и главный фактор прокачки владения новой технологией. Кстати, не знаю, как сейчас, а в начале 2010-х во многих ИТ-компаниях именно так начинали обучение новичков: оставляли их наедине с тем ПО, которое разрабатывает компания и давали канцелярский набор и распечатанную документацию. Было круто и эффективно!  </p></li><li><p>Разобраться в технологическом стеке. Никто не заставляет выучить язык программирования, но важно разобраться в общей архитектуре и в том, как работает программа изнутри. Лучше всего попросить помощи у разработчиков — как правило, они быстро и доходчиво объясняют устройство софта или связки софта и оборудования. Убедитесь в том, что вы всё правильно поняли и не путаете реляционные базы данных с релятивистской теорией, а снапшот со скриншотом ;-)</p></li></ul><h3>Читать книги и статьи</h3><p>Казалось бы, читать книги, например, по CRM, весьма странно: бери, ковыряй, работай в системе, изучай её. Тем не менее, статьи и книги (в том числе зарубежные о самой парадигмы) помогают понять философию продукта, его изначальную эволюцию. Вместе с этим можно отследить изменения окружения технологии. Опять же, изначально CRM были контакт-менеджерами, потом системами для управления продаж, потом резко разделились на аналитические и операционные и казалось, вот она, вершина эволюции — так и будем жить с двумя типами систем. И вдруг совершенно внезапно развиваются облака, резко растёт вся IT-сфера, разработчики могут позволить себе и аналитические, и операционные модули — и появляются <a href=\"https://www.regionsoft.ru/\"><u>универсальные CRM</u></a> — те, с которыми мы имеем дело сегодня. И на них действительно колоссальный спрос, потому что они всеохватны и понятны пользователям: вот колоночки с данными, вот таблички с действиями и событиями, всё это дружит и работает в одном интерфейсе. Кра-со-та. Так вот, книги и статьи помогают проследить эволюцию, обнаружить тренды и на основании практики и вот этой полученной теории буквально создавать будущее: предвидеть, что зайдёт, а что нет, что будет новой функцией, а что — временная игрушка.</p><h4>Итак, третье, что вам нужно сделать, изучая технологию</h4><ul><li><p>Найти книги по теме и прочитать с заметками на полях. Попробовать соотнести прошлое и настоящее технологии, уловить направление развития.</p></li><li><p>Читать статьи, которые пишут практики: Хабр, vc.ru, профильные издания и сайты. так вы поймёте, как используют программу или оборудование, с какими проблемами уже столкнулись другие пользователи, какие решения они предлагают, какой информацией делятся. </p></li></ul><h3>Писать статьи</h3><p>Моим любимым предметом в школе была биология. Всё было отлично: пятёрки, места на олимпиадах, школьные конференции. С генетикой не заладилось (как у многих) — задачи шли еле-еле, контрольные приходилось переписывать по два раза. Масло в огонь добавил мой конкурент, который шарил. Положение спас реферат: мне удалось систематизировать и переложить в схемы весь раздел. Это заняло две недели в областной библиотеке (интернета у меня не было). В вузе мой скорбный труд легко бы зашёл за курсовую, а хромосомная теория наследственности и решётка Пеннета плотно лежат в голове на своих полочках. Секрет прост: сложное нужно объяснить. Коллегам, коту, широкой аудитории на Хабре. Главное, попробовать донести достоверную, точную, выверенную информацию в простой и доступной форме. Тогда и сам поймёшь :-) Особенно здорово, когда есть старший брат по разуму, которые внесёт правки, подредактирует, объяснит и проведёт фактчекинг. </p><h4>Итак, четвёртое, что вам нужно сделать, изучая технологию</h4><p>Взять и написать статью на ту тему, которая вам интересна и кажется достаточно сложной. Шаг за шагом, дополняя и переписывая части и главы, добавляя схемы собственной разработки. Сложно первые три раза. После этого вы найдёте оптимальный для себя способ изложения информации и сможете писать статьи, заметки, новости по теме и проч. Это кажется муторным и сложным, но именно после первых статей про технологию ты начинаешь ощущать себя настоящим профессионалом. Это вдохновляет, окрыляет и раскрывает новые способности. Кстати, раньше мне нравилось писать ручкой и казалось, что это здорово сказывается на мышлении. Но потом пришла лень и клавиатура победила ручку. </p><h3>Исследовать рынок</h3><p>Давным-давно мне удалось поработать с довольно популярным англо/франко/итальяно/испано-язычным приложением российской разработки — оно зародилось в середине 2000-х и было весьма популярным в своём сегменте. Разработчики почивали на лаврах, лили рекламный трафик и собирали плату за лицензии. Но мир и особенно конкуренты на лаврах не почивали и вот, в 2014 году компания обнаружила себя в конкурентном поле новых разработок, новых платформ и подросших пользователей. Рынок стал другим: старые методы продвижения не работали, функциональность морально устарела, дизайн был скорее винтажным. Начали с дизайна, вбухали деньги, переписали сайт — не помогло. Написали кучу новых функций (без исследования рынка) — конечно, не помогло. Добавили денег на продвижение — ну, провайдеры рекламы неплохо заработали,  а конверсия подорожала от 2 до 10 раз в зависимости от географии. Падение продаж на 40%, сокращения и уход сотрудников к конкурентам, ситуация «отстали навсегда». А всего-то надо было исследовать рынок: изучить приложения и сайты конкурентов, собрать отзывы, почитать форумы и всякие медиумы, провести опрос пользователей, пересобрать бэклог. Всё это называется кабинетным исследованием рынка, которое практически не требует денег, но должно проводиться ежегодно (а ещё лучше на постоянной основе), благо что современные технологии максимально упрощают эту задачу.</p><h4>Итак, пятое, что вам нужно сделать, изучая технологию</h4><p> Научитесь исследовать рынок.</p><ul><li><p>Обзвоните конкурентов, запросите онлайн-презентации, задайте вопросы, проанализируйте. Обратите внимание на то, что вам «продают» с наибольшим напором: в ИТ-сфере это чаще всего тренд спроса.</p></li><li><p>Исследуйте аудиторию: проводите опросы, делайте рассылки, разговаривайте голосом с фокус-группами из существующих и будущих клиентов, читайте чужие исследования (но держите в голове, что там всегда правильно сформулированная за деньги цель). Делайте выводы, формулируйте портрет пользователя.</p></li><li><p>Используйте всю доступную информацию по клиентской базе, выстраивайте аналитику, используйте Google Analytics и Яндекс.Метрику.</p></li><li><p>Мониторьте социальные сети, профильные сайты, комментарии, в том числе на иностранных языках — так вы сможете уловить не только потребности, но и в целом отношение и настроение, которое у пользователей вызывает технология.  </p></li></ul><p>Кажется, что нужно сделать много. Но если всё это постепенно и поступательно вплетать в ежедневные рутинные задачи, анализ станет хорошей привычкой и вы почувствуете настоящую глубину погружения в то, с чем вы работаете. Обучения это тоже касается.</p><p><strong>P.S.: </strong>А ещё сегодня 22 года компании <a href=\"https://www.regionsoft.ru/\"><u>РегионСофт</u></a>, а завтра 7 лет нашему блога на Хабре (и это 202-ая по счёту статья). Как говорил мой научный руководитель, и вновь я не вижу повода, чтобы не выпить… кефира, конечно, ибо минздрав предупреждает :-) </p><p></p>', 2, '2023-06-12 21:57:58', 864208, 98, '/ru/companies/regionsoft/articles/740038/', 'Меня зовут Вячеслав. До 30 лет я открыл и развалил сеть из 6 ночных клубов. Сейчас уже в порядке, работаю маркетологом.ВНИМАНИЕ! Все трюки выполнены профессиональными каскадерами. Не пытайтесь повторить в домашних условиях! Опасно для жизни и благосостояния.'),
(192, 'Сколько стоит открыть 6 ночных клубов? Как я справился «без вложений»', '<p>Меня зовут Вячеслав. До 30 лет я открыл и развалил сеть из 6 ночных клубов. Сейчас уже в порядке, <a href=\"https://t.me/ruminblog\" rel=\"noopener noreferrer nofollow\">работаю маркетологом</a>.</p><blockquote><p>ВНИМАНИЕ! Все трюки выполнены профессиональными каскадерами. Не пытайтесь повторить в домашних условиях! Опасно для жизни и благосостояния.</p></blockquote><h3>Кассовый разрыв</h3><p>За месяц до открытие первого ночного клуба мое концертное агентство попало в серьезный кассовый разрыв. Запасов денег не было, а долги были.</p><p>Билеты продавались плохо: в Мурманске думали что GUF действительно умер, за день до концерта Незлобина случилась авиакатастрофа и был объявлен траур с переносом даты, видео с нетрезвым пением Владимира Кузьмина обвалило продажи в Липецке.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/d8d/545/759/d8d545759cd6c9f5de689766e74b97e2.jpeg\" alt=\"Из соц. сетей Александра Незлобина \" title=\"Из соц. сетей Александра Незлобина \" width=\"607\" height=\"1080\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d8d/545/759/d8d545759cd6c9f5de689766e74b97e2.jpeg\" data-blurred=\"true\"><div><figcaption>Из соц. сетей Александра Незлобина </figcaption></figure><p>Помню, как на концерте ЧАЙФ ждал перевод денег из точки продажи билетов в Петрозаводске. Нечем было рассчитаться с прокатчиками звука. Если им не заплатить до концерта, концерта не будет, если концерта не будет — скандал с группой и зрителями.</p><h2>КАСПИЙСКИЙ ГРУЗ спасает</h2><p>Концертный директор Гуфа дал мой контакт, когда директор набирающей популярность группы попросил рекомендаций организаторов по городам Псков и Великий Новгород.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/getpro/habr/upload_files/8e3/dd5/74d/8e3dd574d4a8a2091c5e2a005eacdc10.JPG\" alt=\"КАСПИЙСКИЙ ГРУЗ: слева Брутто, справа Весъ, посередине я.\" title=\"КАСПИЙСКИЙ ГРУЗ: слева Брутто, справа Весъ, посередине я.\" width=\"960\" height=\"719\"><div><figcaption>КАСПИЙСКИЙ ГРУЗ: слева Брутто, справа Весъ, посередине я.</figcaption></figure><p>Ничего не знал о Каспийском грузе, пока не запустили билеты в продажу. Был дикий ажиотаж: билеты скупали.</p><p>И тут мы придумали \"план\", который потом и привел всю клубную “империю” к развалу.</p><blockquote><p>Я взял деньги с продаж билетов Каспийского груза, чтобы закрыть долги по другим концертам. Так как расплачиваешься ты с группой через 2-3 месяца, а деньги с продаж у тебя уже на руках, получается своеобразный кредит.</p></blockquote><p>Концертные долги были не огромными, а денег с продажи билетов становилось все больше. Каспийский груз разрывал. На руках остался кэш, который через 2-3 месяца нужно было отдать за концерт.</p><h3>Свой ночной клуб</h3><p>Чтобы не платить аренду на концертах была идея открыть ночной клуб. Взяли концертные деньги из оборотки. \"Кредитных\" денег с продажи билетов на открытие клуба все равно не хватало, и мы решили позвать бывшего коллегу третьим \"инвестором\". А в концерта партнеров было два.</p><p>Рассчитывали на <a href=\"https://habr.com/ru/articles/739082/\" rel=\"noopener noreferrer nofollow\">окупаемость в первые недели</a>. Открыться было важно быстро, так как надо было успеть вытащить первые деньги, чтобы расплатиться с группой.</p><h3>Ночной клуб в аренду</h3><p>Идея была взять клуб в аренду. Тот что выбрали был симпатичный, а его единственная проблема была в отсутствии посещаемости.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/e08/005/8dd/e080058dd905ad46d037247fef62d395.jpeg\" alt=\"В LED night club до нас людей было в 5 раз меньше. \" title=\"В LED night club до нас людей было в 5 раз меньше. \" width=\"960\" height=\"639\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e08/005/8dd/e080058dd905ad46d037247fef62d395.jpeg\" data-blurred=\"true\"><div><figcaption>В LED night club до нас людей было в 5 раз меньше. </figcaption></figure><p>Мы даже не поленились приходить в него несколько выходных подряд, чтобы оценить масштаб трагедии.</p><p>К слову эта оценка, не помешала нафигачить смету, где мы сами вывели, что нам будет ОК платить 350к аренды в месяц за помещение.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f30/e6f/0c6/f30e6f0c657a00e69a4774c79531280b.png\" alt=\"Примерная смета и предложение по аренде\" title=\"Примерная смета и предложение по аренде\" width=\"519\" height=\"652\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f30/e6f/0c6/f30e6f0c657a00e69a4774c79531280b.png\"><div><figcaption>Примерная смета и предложение по аренде</figcaption></figure><h3>Дневник трат на примере первого клуба</h3><h3>Залог – 600к</h3><p>Когда снимаете квартиру в Питере вас попросят внести 100% залог в размере одного месяца аренды на случай, если вы сожжете мебель в квартире, а сами эмигрируете в Казахстан. В аренде клуба также. Залог не возвращался бы в случае досрочного расторжения договора.</p><p>СПОЙЛЕР: залог обратно не получил.</p><h3>Алкоголь, безалкоголь, сиропы – 270к</h3><p>Обычно вся эта сумма идет с оплатой через месяц, поэтому не обязательно держать эти деньги на руках. Самое яркое воспоминания погони за экономией: пиво халзан, до 30р в закупе. После вечеринки весь бар стоял в недопитом пиве, пить его невозможно.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/306/4b1/1d7/3064b11d7e56d98a84814bada3f25e70.jpeg\" alt=\"Вы все еще можете насладится этим напитком. \" title=\"Вы все еще можете насладится этим напитком. \" width=\"938\" height=\"1018\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/306/4b1/1d7/3064b11d7e56d98a84814bada3f25e70.jpeg\" data-blurred=\"true\"><div><figcaption>Вы все еще можете насладится этим напитком. </figcaption></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/getpro/habr/upload_files/041/f93/66a/041f9366ad69c37d684565bd116f08e0.PNG\" alt=\"Обычно заявку подают бармены. Посуда бьется в промышленных масштабах: за ночь улетает в среднем 20 единиц.\" title=\"Обычно заявку подают бармены. Посуда бьется в промышленных масштабах: за ночь улетает в среднем 20 единиц.\" width=\"812\" height=\"798\"><div><figcaption>Обычно заявку подают бармены. Посуда бьется в промышленных масштабах: за ночь улетает в среднем 20 единиц.</figcaption></figure><h3>Кассовые аппараты и детекторы банкнот – 50к</h3><p>Все самое дешманское. По 2 шт. на бар и по 1 шт. на ресепшн.</p><h3>Лицензия на продажу алкашки – 40к</h3><p>Готовят месяц, оформлял сам, экономил 50к: писал заявление, оплачивал госпошлину, собирал доки, проверял соответствие требованиям, проходил выездную проверку.</p><h3>Стриптиз – 25к</h3><p>За 45к как-то к нам приезжало шоу, где светящиеся бусы доставали оттуда, куда обычно все летит в тяжелой ситуации.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/getpro/habr/upload_files/f2f/fa0/b76/f2ffa0b765b2cc13e592365292619718.JPG\" alt=\"Фото старое. К моменту открытия сети клубов морда лица была крупнее и выглядела опоечно\" title=\"Фото старое. К моменту открытия сети клубов морда лица была крупнее и выглядела опоечно\" width=\"666\" height=\"869\"><div><figcaption>Фото старое. К моменту открытия сети клубов морда лица была крупнее и выглядела опоечно</figcaption></figure><h3>Оформление юр.лица – 10к</h3><p>Делали на 3-х учредителей, первый вышел через год, второй предусмотрительно покинул учредительство, когда дело шло к разорению и начало пахнуть жареным.</p><h3>Браслеты на вход – 10к</h3><p>Красивые ленточки, которые вам клеят на руку на мероприятиях. Суммы хватает на 10 000 браслетов, это на месяц бурных вечеринок и концертов. В какой-то момент в припадке экономии перешли к печатям на руку на входе)</p><p>Печати очень плохо. Бумажный браслет любой охранник видит издалека, а вот чтобы посмотреть на печать нужно каждого просить показать руку. На массовых мероприятиях часто выходят покурить, в туалет, встретить друзей: идет постоянное хождение, и контролировать “зайцев” с печатью крайне сложно. Но экономия важнее неудобств охранников!</p><h3>Мелочи – 100к</h3><p>Тряпки, швабры, средства для уборки, туалетная бумага, мыло, салфетки в диспенсеры + на бар и столы, трубочки короткие и длинные, дисконтные клубные карты, печать организации и для накладных, кассовая лента, ламинированное меню для бара и официантов (обычную бумагу заливают мгновенно), лимоны, сахар на сауэр микс для коктейлей, мята для мохито, сливки на пинаколаду, лаймы, апельсины на украшения, острый табаско на шоты</p><p>“Мелочей” десять я, думаю, забыл.</p><p>Когда считаешь бизнес-план обычно об этом не думаешь, а в итоги все мелочи встают в круглую сумму.</p><h3>За что не платили?</h3><ul><li><p>Сан. книжки. Брали персонал с мед книжками или покупали с последующем вычетом из зп.</p></li><li><p>Реклама: у нас были концертные сообщества + друзья в СМИ и пабликах + тогда классно работали встречи ВК. Поэтому розыгрыши клубных карт и стриптиз и так набили полный клуб. Плюс мы разом ставили крупные мероприятия: Егор Крид, Каспийский груз итд</p></li><li><p>Металлодетектор на входе и рации: обычно шли в комплекте с охраной.</p></li><li><p>Терминалы для приема банковских карт получали от сбербанка в обмен на комиссию в 2,5% с оборота.</p></li><li><p>Холодильники: дают поставщики.</p></li><li><p>Оборудование и инвентарь для кухни. У арендодателей была кухня ресторана, договорились покупать их продукцию, забирая 30% с оборота кухни. Также чай и кофе.</p></li></ul><h3>Очень много входило в аренду:</h3><ul><li><p>Льдогенераторы (2 штуки)</p></li><li><p>Мебель</p></li><li><p>Звуковое, световое и диджейское оборудование</p></li><li><p>Вентиляция, кондиционер, видеонаблюдение, требования пожарки.</p></li><li><p>Номерки в гардероб</p></li><li><p>Сейф тоже шел в подарок. Как-то клуб грабили и выяснилось, что сейфы легко распиливаются)</p></li></ul><p>Итого: 1 205 000 руб. на 2016 год в городе Великий Новгород.</p><p>Остальные открытия стоили плюс минус столько же, только залог менялся на “строительные расходы”. Где-то нужно перетянуть мебель дермантином и построить гардероб, где-то поменять банеры и наклейки, где-то провести видеонаблюдение или купить проектор.</p><p>Итого ответ сколько стоит 6 ночных клубов:<strong> 7,23 млн рублей*</strong></p><p>*я просто умножил)</p><p>Деньги на следующие открытия также брались из оборота и часто также рискованно, что в итоге и привело к закономерному финалу)</p><h3>P.S</h3><p>Последние 4 года отдавал долги, теперь я маркетолог: <a href=\"https://t.me/ruminblog\" rel=\"noopener noreferrer nofollow\">https://t.me/ruminblog</a> </p><p><a href=\"https://habr.com/ru/articles/738772/\" rel=\"noopener noreferrer nofollow\">Про B2B маркетинг</a></p><p><a href=\"https://habr.com/ru/articles/737796/\" rel=\"noopener noreferrer nofollow\">Про B2C маркетинг</a></p><p><a href=\"https://habr.com/ru/articles/739082/\" rel=\"noopener noreferrer nofollow\">Еще про клубы</a></p><p></p>', 1, '2023-06-12 21:57:59', 317407, 96, '/ru/articles/740068/', 'Время – самый ценный ресурс, требующий умелого и грамотного обращения. Об этом хорошо известно каждому владельцу бизнеса, фрилансеру или руководителю проекта. Чтобы всегда и все успевать, вам пригодится хороший календарь. С его помощью можно спланировать любые мероприятия на неделю, месяц или текущий день. Используя электронный календарь, вы будете видеть все важные задачи перед глазами. Вам не придется лихорадочно перелистывать бумажные органайзеры и блокноты с записями. Вам будет проще согласовывать действия с коллегами или подчиненными.Личный онлайн помощник пригодится в организации личных дел. Вы можете установить напоминания о датах и событиях, которые нельзя пропустить. «Умная программа» заблаговременно пришлет вам соответствующее сообщение. Так вы избавите себя от необходимости хранить в голове кучу информации и будете всегда в курсе важных дел.На всех современных цифровых устройствах установлены программы календари с базовым набором функций, которые можно использовать в качестве личной напоминалки. Но для серьезной проектной работы они не очень удобны. Сегодня мы рассмотрим самые популярные электронные ежедневники и органайзеры, подходящие для решения любых бизнес задач, получившие максимальное количество положительных отзывов от экспертов и пользователей.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(193, 'ТОП-10 лучших электронных календарей для заметок', '<h2>Подборка лучших электронных календарей для заметок </h2><p>Время – самый ценный ресурс, требующий умелого и грамотного обращения. Об этом хорошо известно каждому владельцу бизнеса, фрилансеру или руководителю проекта. Чтобы всегда и все успевать, вам пригодится хороший календарь. С его помощью можно спланировать любые мероприятия на неделю, месяц или текущий день. Используя электронный календарь, вы будете видеть все важные задачи перед глазами. Вам не придется лихорадочно перелистывать бумажные органайзеры и блокноты с записями. Вам будет проще согласовывать действия с коллегами или подчиненными.</p><p>Личный онлайн помощник пригодится в организации личных дел. Вы можете установить напоминания о датах и событиях, которые нельзя пропустить. «Умная программа» заблаговременно пришлет вам соответствующее сообщение. Так вы избавите себя от необходимости хранить в голове кучу информации и будете всегда в курсе важных дел.</p><p>На всех современных цифровых устройствах установлены программы календари с базовым набором функций, которые можно использовать в качестве личной напоминалки. Но для серьезной проектной работы они не очень удобны. Сегодня мы рассмотрим самые популярные электронные ежедневники и органайзеры, подходящие для решения любых бизнес задач, получившие максимальное количество положительных отзывов от экспертов и пользователей.</p><h2>ТОП-10 электронных календарей, доступных в России  </h2><p>В наш список вошли приложения, имеющиеся в свободном доступе в Интернет-пространстве. Большинство из них имеет бесплатные пробные версии, которые можно скачать и установить. Предлагаем ближе познакомиться с возможностями, функционалом, преимуществами цифровых программ-органайзеров для заметок и планирования. Возможно, среди них вы найдете лучший для себя вариант.</p><h4>1. ЛидерТаск – для командной работы и планирования</h4><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/0cc/50b/146/0cc50b14692a2619cd07ae4292b318a9.png\" width=\"2048\" height=\"1503\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/0cc/50b/146/0cc50b14692a2619cd07ae4292b318a9.png\"></figure><p><a href=\"https://www.leadertask.ru/\" rel=\"noopener noreferrer nofollow\">ЛидерТаск</a> - удобнейшее приложение для составления списков дел, ежедневного планирования, эффективной проектной деятельности. Программу можно использовать как календарь для заметок или задействовать все инструменты ее мощнейшей CRM системы, предоставляющей полноценное информационное пространство для обмена информацией с коллегами, командного планирования, ведения банка данных клиентов и проектов.</p><h3>Преимущества</h3><ul><li><p>Быстрое создание задач с возможностью настройки «под себя» или делегирования их другим исполнителям.</p></li><li><p>Интеллектуальные уведомления, держащие в курсе важных дел и задач.</p></li><li><p>Удобная система меток для распределения задач по важности или другим критериям.</p></li><li><p>Функциональный ежедневник, в котором можно мгновенно переносить встречу или задачу на другой день, добавлять новые задания или быстро просматривать, что нужно сделать в ближайшее время.</p></li><li><p>Контроль над исполнением задач других сотрудников с функцией «супер-администратора».</p></li><li><p>Создание и ведение списков дел с их структуризацией по тематическим разделам.</p></li><li><p>Ведение командных проектов.</p></li><li><p>Создание задач прямо из ящика электронной почты.</p></li><li><p>Практичные виджеты, помогающие создавать задачи из браузера с сохранением вкладки сайта.</p></li></ul><h3>Платформы</h3><ul><li><p>Windows;</p></li><li><p>Android;</p></li><li><p>Web;</p></li><li><p>MacOS;</p></li><li><p>iOS.</p></li></ul><h3>Тарифы</h3><ol><li><p>Для одного устройства – бесплатный.</p></li><li><p>Премиум, для персональных целей – от 217 руб.</p></li><li><p>Бизнес, для двух и более участников – от 332 руб.</p></li><li><p>Бизнес плюс – от 499 руб.</p></li></ol><h4>2. Google Calendar – быстрый доступ с любых устройств и браузеров</h4><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/635/5ef/e1b/6355efe1b84d3156eea615b1967d0e0c.png\" width=\"1024\" height=\"570\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/635/5ef/e1b/6355efe1b84d3156eea615b1967d0e0c.png\"></figure><p>Известный практически каждому пользователю электронный календарь онлайн, который можно использовать в любом месте в любое время. Если ваши интересы ограничены поиском удобного ежедневника, - обязательно обратите внимание на это приложение. С помощью <a href=\"https://calendar.google.com/\" rel=\"noopener noreferrer nofollow\">Google Calendar</a> можно вести несколько отдельных календарей, оформив каждый из них в своей цветовой гамме. Один использовать для работы, в другом создавать расписание дел в выходные, в третьем делать пометки о днях рождения родственников и коллег, а в четвертом устанавливать ежедневные напоминания.</p><h3>Преимущества</h3><ul><li><p>Возможность доступа с любого браузера.</p></li><li><p>Выделение выходных дней серым цветом.</p></li><li><p>Разнообразный набор тем для оформления, привлекательный интерфейс в фирменном стиле Windows.</p></li><li><p>Создание «социальных» событий, связанных с решением коллективных вопросов с указанием времени и места проведения мероприятия.</p></li><li><p>Обеспечение или ограничение доступа для других участников команды.</p></li></ul><h3>Платформы</h3><p>Приложение совместимо со всеми платформами.</p><h3>Тарифы</h3><p>Бесплатный для всех пользователей.</p><h4>3. Яндекс.Календарь - карты и быстрое создание задач в календаре</h4><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/15c/80f/608/15c80f608045dc6261131a834500d0f5.jpg\" width=\"1024\" height=\"648\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/15c/80f/608/15c80f608045dc6261131a834500d0f5.jpg\" data-blurred=\"true\"></figure><p><a href=\"https://calendar.yandex.ru\" rel=\"noopener noreferrer nofollow\">Яндекс.Календарь</a> - отечественный сервис с функциональным онлайн-календарем, который можно успешно использовать для организации дел, планирования, распределения текущих и стратегических задач. Приложение располагает полноценными спутниковыми картами, которые можно использовать для создания напоминаний по месту пребывания. Для работы с приложением нужно зарегистрироваться и создать собственную учетную запись. Его внешний вид будет зависеть от типа устройства, на котором он установлен. Для мобильных телефонов и смартфонов существуют разные версии.</p><h3>Преимущества</h3><ul><li><p>Быстрое создание событий одинарным щелчком по ячейке дня.</p></li><li><p>Привязка событий к географической карте.</p></li><li><p>Выделение выходных дней и праздников.</p></li><li><p>Создание нескольких напоминаний для одного события.</p></li><li><p>Настройка уведомлений с указанием периодичности показа сообщений, времени и названия события.</p></li></ul><h3>Платформы</h3><ul><li><p>Windows;</p></li><li><p>Android;</p></li><li><p>MacOS;</p></li><li><p>iOS.</p></li></ul><h3>Тарифы</h3><p>Без оплаты, по подписке.</p><h4>4. Trello – работа в команде по системе Kanban</h4><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/027/be0/56d/027be056d1daece100653fa8c186ebf0.png\" width=\"1024\" height=\"614\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/027/be0/56d/027be056d1daece100653fa8c186ebf0.png\"></figure><p><a href=\"https://trello.com/\" rel=\"noopener noreferrer nofollow\">Trello</a> - приложение с виртуальными досками Kanban, по которым перемещаются карточки с задачами. Для каждой карточки можно установить собственную дату с доступом к календарю в этот день. В приложение встроен календарь с отображением задач на день, неделю или месяц. Если для карточки установлен определенный срок, ее исполнение автоматически растягивается на несколько дней.</p><h3>Преимущества</h3><ul><li><p>Сортировка задач по времени с точностью до секунды.</p></li><li><p>Гибкие настройки фильтрации с поиском по меткам, датам, исполнителям или ключевым словам.</p></li><li><p>Возможность добавления в календарь одной задачи или целого списка, который отобразится в виде отдельного столбца.</p></li><li><p>Создание чек-листов с назначением исполнителей на каждый пункт.</p></li><li><p>Мультиязыковая поддержка.</p></li></ul><h3>Платформы</h3><ul><li><p>Windows;</p></li><li><p>MacOS;</p></li><li><p>iOS;</p></li><li><p>Android.</p></li></ul><h3>Тарифы</h3><p>Бесплатный</p><h4>5. Sunsama – для работы с задачами</h4><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/da1/104/3b0/da11043b02b9a6c8de4e734574cee798.jpg\" width=\"1024\" height=\"539\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/da1/104/3b0/da11043b02b9a6c8de4e734574cee798.jpg\" data-blurred=\"true\"></figure><p>Сервис <a href=\"https://www.sunsama.com/\" rel=\"noopener noreferrer nofollow\">Sunsama</a> объединяет возможности канбан-доски для ведения командных проектов и практичного онлайн календаря-планировщика. Эффективно функционирует совместно с Trello, Jira и Asana. Используя эти удобные инструменты, вы сможете легко планировать свое время и всегда держать на контроле важные задачи. Функция еженедельного обзора поможет отслеживать личную эффективность. Задачи в приложении можно создавать прямо в календаре в автоматическом режиме.</p><h3>Преимущества</h3><ul><li><p>Доски Канбан для визуализации рабочих процессов.</p></li><li><p>Автоматический перенос незавершенных дел на следующий день.</p></li><li><p>Организация совещаний с добавлением повестки в календарные события.</p></li><li><p>Отдельные цветовые отметки для разных событий и задач в календаре.</p></li><li><p>Опция «Таймбоксинг» для концентрации на приоритетных задачах.</p></li></ul><h3>Платформы</h3><p>Web и MacOS.</p><h3>Тарифы</h3><p>Без оплаты.</p><h4>6. YouGile – организация дел и создание заметок</h4><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/32f/2c3/db8/32f2c3db817bc349d595a863385da387.png\" width=\"1024\" height=\"669\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/32f/2c3/db8/32f2c3db817bc349d595a863385da387.png\"></figure><p>Главный экран программы реализован в виде календарной недели, в графах которой присутствуют данные об исполнителе, названии задачи, сроке ее завершения. Цвет карточек идентичен оттенку их столбца на доске для лучшей ориентации при совместной работе над задачами. Вы видите, кто над ними работает, какие из них завершены или находятся в работе. <a href=\"https://ru.yougile.com/\" rel=\"noopener noreferrer nofollow\">Посетить сайт YouGile</a>.</p><h3>Преимущества</h3><ul><li><p>Быстрый доступ к задачам через карточки.</p></li><li><p>Эффективная система напоминаний о дедлайне задачи.</p></li><li><p>Опция «Таймер», показывающая срок завершения задачи с точностью до минуты.</p></li><li><p>Демонстрация текущего времени в виде красной пунктирной черты.</p></li><li><p>Восстановление удаленных файлов.</p></li></ul><h3>Платформы</h3><ul><li><p>Linux;</p></li><li><p>Android;</p></li><li><p>iOS;</p></li><li><p>Windows;</p></li><li><p>Mac OS.</p></li></ul><h3>Тарифы</h3><ol><li><p>До 10 пользователей – бесплатно.</p></li><li><p>От 11 участников – от 333 рублей ежемесячно за каждого.</p></li></ol><h4>7. Zoho Calendar – календарь с открытым доступом</h4><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/168/202/868/1682028681e9c09e18c69e1c1afd7688.png\" width=\"1020\" height=\"669\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/168/202/868/1682028681e9c09e18c69e1c1afd7688.png\"></figure><p><a href=\"https://www.zoho.com/calendar/\" rel=\"noopener noreferrer nofollow\">Zoho</a> - практичный онлайн-календарь, который можно использовать для создания списков дел, планирования личных и рабочих задач, организации различных мероприятий. Календарь можно одновременно использовать в нескольких приложениях. Устанавливать в нем напоминания по различным событиям, в том числе, о памятных событиях, днях рождения знакомых и коллег, в виде писем из почты или всплывающих сообщений. Сервис удобен для организации совместных митингов, конференций и совещаний.</p><h3>Преимущества</h3><ul><li><p>Виртуальные конференции, командные митинги с опцией Zoho Meeting.</p></li><li><p>Переадресация событий.</p></li><li><p>Ссылки по месту пребывания.</p></li></ul><h3>Платформы</h3><ul><li><p>Web;</p></li><li><p>iPhone;</p></li><li><p>Windows;</p></li><li><p>Android.</p></li></ul><h3>Тарифы</h3><p>Без оплаты.</p><h4>8. Weeek – система для управления проектами</h4><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/db5/f3e/18f/db5f3e18f481fb413e1725dca911cc0d.jpg\" width=\"1024\" height=\"580\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/db5/f3e/18f/db5f3e18f481fb413e1725dca911cc0d.jpg\" data-blurred=\"true\"></figure><p><a href=\"https://weeek.net/ru\" rel=\"noopener noreferrer nofollow\">Weeek</a> - элегантный сервис для удобного и быстрого решения любых командных задач. Приложение базируется на Kanban-технологии. Представляет собой электронною доску, каждый столбик которой соответствует определенному дню недели. Объединяет возможности таск-менеджера, планировщика, эргономичного рабочего пространства и научной базы знаний для команды.</p><h3>Преимущества</h3><ul><li><p>Задачи отображаются на календаре или в режиме доски.</p></li><li><p>Быстрые вложения, прикрепление любых файлов к задачам.</p></li><li><p>Индивидуальные настройки для колонок досок.</p></li><li><p>Создание личных задач, проектов, с ограничением доступа для других пользователей.</p></li><li><p>Таймер Pomodoro для эффективного распределения времени.</p></li><li><p>Фильтрация задач по приоритетности, исполнителям.</p></li></ul><h3>Платформы</h3><ul><li><p>iPhone;</p></li><li><p>iOS;</p></li><li><p>Android;</p></li><li><p>Web.</p></li></ul><h3>Тарифы</h3><ol><li><p>Пробная версия – бесплатно.</p></li><li><p>Персональная подписка от 190 руб. ежемесячно.</p></li><li><p>Командный тариф – от 590 руб.</p></li></ol><h4>9. Basecamp – для коммуникации в команде</h4><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f1a/277/03b/f1a27703b12f9d1d2d925400c60f6716.png\" width=\"1024\" height=\"382\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f1a/277/03b/f1a27703b12f9d1d2d925400c60f6716.png\"></figure><p><a href=\"https://basecamp.com/\" rel=\"noopener noreferrer nofollow\">Basecamp</a> - компактный электронный планер, таск-менеджер, использующийся для организации взаимодействия между отдельными исполнителями и группами, работающими над общими проектами. В приложении имеется встроенный календарь для хранения встреч, событий, важных мероприятий с уведомлениями о приближении их срока. Работа в программе организуется в едином информационном пространстве, в котором присутствуют все задачи, чат, проекты и команды. В ленте новостей публикуются последние данные по проекту, идеи, планы команды. Списки задач группируются по исполнителям или командам.</p><h3>Преимущества</h3><ul><li><p>Единое информационное пространство для комфортной и безопасной работы в рамках проекта.</p></li><li><p>Синхронизация с Google календарем и Outlook.</p></li><li><p>Быстрый обмен информацией, планами с другими участниками проекта.</p></li><li><p>Лента новостей, удобный чат, не отвлекающий от основной работы.</p></li></ul><h3>Платформы</h3><ul><li><p>Windows;</p></li><li><p>Android;</p></li><li><p>MacOS;</p></li><li><p>iOS.</p></li></ul><h3>Тарифы</h3><ol><li><p>До 30 дней, бесплатный.</p></li><li><p>Платный – от 99 долларов ежемесячно.</p></li></ol><h4>10. Nook - информативный и простой</h4><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/627/5ed/0db/6275ed0db712a1b99a97c48906668daa.png\" width=\"1024\" height=\"615\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/627/5ed/0db/6275ed0db712a1b99a97c48906668daa.png\"></figure><p><a href=\"https://www.nookcalendar.com/\" rel=\"noopener noreferrer nofollow\">Nook</a> - бесплатная для всех пользователей программа-календарь для составления расписаний и отслеживания дел. С функцией «Люди» вы сможете сравнивать календари других сотрудников с собственным расписанием, чтобы быстро назначать встречи или организовывать другие мероприятия.</p><h3>Преимущества</h3><ul><li><p>Несколько видов календарей с быстрым переключением между ними.</p></li><li><p>Создание конференций, митингов, встреч, видеоконференций одним кликом.</p></li><li><p>Интеграция с Microsoft Teams, Google Meet и Zoom.</p></li><li><p>Разные виды настройки для страниц расписаний.</p></li><li><p>Упрощенный вид единого календаря для лучшей визуализации.</p></li></ul><h3>Платформы</h3><p>Все платформы.</p><h3>Тарифы</h3><p>Бесплатно для всех пользователей.</p><h2>Заключение  </h2><p>Большинству рядовых пользователей вполне хватает стандартных календарей Google Calendar или Outlook. Но, если вы планируете масштабную работу в команде, обратите внимание на более серьезные сервисы с развернутым функционалом. Их можно использовать как полноценные средства для управления проектами или комбинировать с другими приложениями.</p><p>Оптимизировав свое личное и рабочее время, вы сможете достичь большего, меньше напрягаясь. Удобный электронный онлайн-календарь поможет вам лучше концентрироваться на первостепенных задачах, все и всегда успевать.</p><p></p>', 2, '2023-06-12 21:57:59', 948558, 99, '/ru/articles/739740/', 'Лишь теория решает, что мы ухитряемся наблюдать!Эйнштейн Альберт[1]Название моего блога начинается со слов «управление сложностью». Проблема возрастающей сложности мира и, как следствие, организаций[2] была обозначена в «Прологе» к блогу[3]. Там я описал эту проблему и констатировал, что «наступил кризис управления сложностью». Затем сформулировал главный проблемный вопрос блога: как управлять сложными организациями при возрастании их сложности (разнообразия)?В итоге заключил, что «пока не будет получен ответ на него, избежать возрастания хаоса, неопределённости и энтропии в мире будет невозможно»[4].И в завершении написал: «столкновение с этой проблемой в моей практике менеджмента и стало прологом для разработки мною Технологии Управления Задачами (ТУЗ, Tasks Management Technology, TMT, Total Tasks Management, TTM®) и толчком для написания блога».Думаю, сейчас пришло время подвести итог и ответить на вопрос: почему Технология управления задачами (ТУЗ) – это управление возрастающей сложностью организаций, а, отсюда, и сложностью вообще?Ответом на данный вопрос, я постараюсь убедить вас в том, что благодаря разработке ТУЗ мне удалось найти способ преодоления проблемы «управления сложностью». Что ТУЗ – это как раз именно то, что требуется для этого. Что это чёткий и однозначный ответ на вопрос: как управлять сложными организациями при возрастании их сложности (разнообразия)? Теперь я твёрдо могу сказать: путём применения Технологии Управления Задачами (ТУЗ, Tasks Management Technology, TMT, Total Tasks Management, TTM®). И это я вам сейчас обосную. И пусть кто-нибудь опровергнет мои доводы или поставит их под сомнение. '),
(194, 'Как зарегистрировать программу для ЭВМ через личный кабинет ФИПС', '<p><strong>Сложность:</strong> легко</p><p><strong>Цена вопроса:</strong> 4500 ₽ (для организаций)</p><p><strong>Сроки рассмотрения заявления:</strong> от 3 дней до 2 месяцев</p><p><strong>Что дает:</strong> юридическую защиту разработанного вами ПО </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/f7b/786/8cd/f7b7868cd78d588f8fb3abc448d3082a.jpg\" alt=\"Как зарегистрировать программу для ЭВМ через личный кабинет ФИПС\" title=\"Как зарегистрировать программу для ЭВМ через личный кабинет ФИПС\" width=\"1920\" height=\"1080\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f7b/786/8cd/f7b7868cd78d588f8fb3abc448d3082a.jpg\" data-blurred=\"true\"><div><figcaption><em>Как зарегистрировать программу для ЭВМ через личный кабинет ФИПС</em></figcaption></figure><p>В начале этого года мы задались целью получить грант ФСИ, и одним из обязательных условий участия в конкурсе было наличие прав на результат интеллектуальной деятельности. Проще говоря, нам требовалось свидетельство о государственной регистрации программы для ЭВМ.</p><p>Для получения такого свидетельства вы можете подать заявление в Роспатент одним из трех способов:</p><ul><li><p>на бумажном носителе по почте;</p></li><li><p>в электронном виде через Госуслуги;</p></li><li><p>в электронном виде через личный кабинет на сайте Федеральный институт промышленной собственности (далее – ФИПС).</p></li></ul><p>Первый и второй варианты мы отмели сразу из-за длительности процесса и невозможности оперативно узнавать об изменении статуса заявки. В обоих случаях уведомления приходят на бумажных носителях по почте. Оставался последний вариант ‒ подача заявления в электронном виде через личный кабинет на сайте ФИПС. Сразу оговоримся, что подобный формат предполагает наличие у генерального директора организации усиленной квалифицированной электронной подписи (далее ‒ УКЭП). Без нее подать электронное заявление не получится.</p><p><strong>Как зарегистрироваться в личном кабинете ФИПС?</strong></p><p>Зарегистрироваться <a href=\"https://new.fips.ru/office/\" rel=\"noopener noreferrer nofollow\"><strong>в личном кабинете ФИПС</strong></a> просто, достаточно заполнить все поля формы.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/a6f/35d/310/a6f35d31018ce4b49b29958aa8e86259.jpg\" alt=\"Регистрация личного кабинета на сайте ФИПС \" title=\"Регистрация личного кабинета на сайте ФИПС \" width=\"1680\" height=\"946\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a6f/35d/310/a6f35d31018ce4b49b29958aa8e86259.jpg\" data-blurred=\"true\"><div><figcaption><em>Регистрация личного кабинета на сайте ФИПС </em></figcaption></figure><p>В графах ФИО и СНИЛС нужно указать данные генерального директора, поскольку именно его подписью придется заверять электронное заявление на последнем шаге регистрации программы. А вот в поле e-mail лучше вписать почту сотрудника, отвечающего за подачу заявления. </p><p>Логин присваивается автоматически, поэтому вам остается придумать надежный пароль и сохранить все регистрационные данные в безопасном месте для последующей авторизации в личном кабинете.</p><p>После авторизации в ЛК смело переходите в раздел «Заявки» → «Подать заявку» → «Заявление о государственной регистрации программы для ЭВМ или базы данных» и следуйте инструкциям на экране.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/8d3/a46/510/8d3a465107f82861c55cb95e468ba162.jpg\" alt=\"Подача заявления о государственной регистрации программы для ЭВМ или базы данных через личный кабинет ФИПС\" title=\"Подача заявления о государственной регистрации программы для ЭВМ или базы данных через личный кабинет ФИПС\" width=\"1680\" height=\"946\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/8d3/a46/510/8d3a465107f82861c55cb95e468ba162.jpg\" data-blurred=\"true\"><div><figcaption><em>Подача заявления о государственной регистрации программы для ЭВМ или базы данных через личный кабинет ФИПС</em></figcaption></figure><p><strong>Как выглядит форма подачи заявления?</strong></p><p>Форма подачи заявления разделена на 11 последовательных шагов (страниц):</p><ol><li><p>сведения о лице, подающем заявление</p></li><li><p>тип регистрируемого объекта и количество правообладателей</p></li><li><p>информация о создании объекта по государственному или муниципальному контракту </p></li><li><p>сведения о правообладателе (юридическом или физическом лице)</p></li><li><p>сведения о регистрируемом объекте и количестве авторов</p></li><li><p>сведения об авторах программы для ЭВМ</p></li><li><p>загрузка файлов</p></li><li><p>информация для переписки</p></li><li><p>информация об оплате госпошлины</p></li><li><p>проверка данных</p></li><li><p>подпись и отправка заявления</p></li></ol><p>Переход на следующий шаг возможен только после заполнения всех обязательных полей. Чтобы сэкономить ваши время и нервы, прилагаем скриншоты каждого этапа с пояснениями. Скачать файлы можно, перейдя <a href=\"https://drive.google.com/drive/folders/1vPZzUhlDJGbJ1pmpoGpkdeiWDQaXrtDY\" rel=\"noopener noreferrer nofollow\"><strong>по этой ссылке</strong></a>.</p><details class=\"spoiler\"><summary>Что делать, если скачать файлы не удаётся?</summary><div class=\"spoiler__content\"><p>Проверьте разрешение на использование сторонних файлов cookie для сайта <a href=\"https://drive.google.com/\" rel=\"noopener noreferrer nofollow\"><u>https://drive.google.com/</u></a> в настройках конфиденциальности вашего браузера.</p></details><p>После заполнения полей на каждом шаге не забывайте сохранять черновик, чтобы не потерять данные.</p><p><strong>Какие документы нужны для подачи заявления?</strong></p><p>Список необходимых документов представлен на сайте ФИПС в разделе «<a href=\"https://www.fips.ru/documents/formy-dokumentov/index.php#7\" rel=\"noopener noreferrer nofollow\"><strong>Формы документов</strong></a>». Для подачи электронного заявления достаточно скачать и заполнить только два из них:</p><ul><li><p>согласие на обработку персональных данных</p></li><li><p>согласие на указание сведений об авторе</p></li></ul><p>Помимо установленных форм, к заявлению необходимо приложить реферат для программы ЭВМ (краткое описание ПО) и часть кода регистрируемого программного обеспечения (листинг). </p><p>Утвержденного шаблона реферата не существует, однако в нормативной документации четко прописаны следующие требования:</p><ul><li><p>объем до 900 знаков</p></li><li><p>описание назначения, области применения, функциональных возможностей </p></li><li><p>язык программирования, который был использован при разработке продукта </p></li><li><p>объем программы (в Мб или Гб)</p></li><li><p>тип и версия операционной системы, для которой разработана программа</p></li><li><p>количество авторов</p></li></ul><p>В личном кабинете этот шаг выглядит так:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/e3f/b9f/415/e3fb9f4155a5441cf7c935702933ea87.jpg\" alt=\"Как и куда подгрузить документы при подаче заявки\" title=\"Как и куда подгрузить документы при подаче заявки\" width=\"1680\" height=\"946\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e3f/b9f/415/e3fb9f4155a5441cf7c935702933ea87.jpg\" data-blurred=\"true\"><div><figcaption><em>Как и куда подгрузить документы при подаче заявки</em></figcaption></figure><p>К оформлению листинга предъявляются следующие требования:</p><ul><li><p>объем до 700 страниц</p></li><li><p>титульный лист с наименованием программы, указанием правообладателя и авторов</p></li></ul><p>Вы можете воспользоваться <a href=\"https://docs.google.com/document/d/1Y44y30tFifCR8dVFnU9nQXob6suN7oVC/edit\" rel=\"noopener noreferrer nofollow\"><strong>шаблоном титульного листа</strong></a>, который мы использовали для предоставления кода в Роспатент.</p><p>Опционально можно предоставить дополнительные материалы, раскрывающие функциональность регистрируемой программы (инструкции, руководства пользователя и т.д.).</p><p>Все документы загружаются в систему исключительно в формате .pdf единым файлом. Так, например, скан-копии согласия на обработку персональных данных разных людей необходимо объединить в один документ. </p><p>Еще один обязательный пункт для государственной регистрации программы – оплата госпошлины (4 500 ₽ для организации, 3 000 ₽ для физических лиц).</p><blockquote><p><strong><em>Лайфхак:</em></strong> если вы оплатите госпошлину до финального шага и загрузите в личный кабинет платежное поручение, заявление будет рассмотрено в ускоренном режиме. Необходимые реквизиты можно скачать <a href=\"https://rospatent.gov.ru/content/uploadfiles/rekviziti-pril2.pdf\" rel=\"noopener noreferrer nofollow\"><strong>здесь</strong></a>.</p></blockquote><p><strong>Nota Bene! </strong></p><p>На шаге 8 укажите реальные контактные данные человека, ответственного за регистрацию программы – именно на его имя придет письмо со свидетельством внутри, и никто другой без его ведома получить это письмо не сможет. (По крайней мере, у нашего офис-менеджера не получилось.)</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/d52/bd2/fd6/d52bd2fd61168c094b447a43ca7a0268.jpg\" alt=\"Правило указания контактных данных\" title=\"Правило указания контактных данных\" width=\"1680\" height=\"946\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d52/bd2/fd6/d52bd2fd61168c094b447a43ca7a0268.jpg\" data-blurred=\"true\"><div><figcaption><em>Правило указания контактных данных</em></figcaption></figure><p>На десятом шаге вы можете перепроверить все данные еще раз, а после перейти  к подписи заявления УКЭП.</p><p><strong>Подписали? Готово!</strong> Выдыхайте и ждите заветное письмо со свидетельством внутри.</p><p>А если у вас остались вопросы, пишите их в комментариях, будем рады ответить на них :)</p><p></p>', 2, '2023-06-12 22:01:44', 921242, 100, '/ru/articles/740696/', 'В начале этого года мы задались целью получить грант ФСИ, и одним из обязательных условий участия в конкурсе было наличие прав на результат интеллектуальной деятельности. Проще говоря, нам требовалось свидетельство о государственной регистрации программы для ЭВМ.Для получения такого свидетельства вы можете подать заявление в Роспатент одним из трех способов...');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(195, 'Как и зачем MicroStrategy покупает Bitcoin', '<p>Более двух с половиной лет компания MicroStrategy активно вкладывает в Bitcoin. Данная инвестиционная политика позволила ей стать крупнейшим держателем Bitcoin в мире.  </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/9a3/385/560/9a3385560c6a71e3b28155eabd454847.png\" width=\"1838\" height=\"861\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/9a3/385/560/9a3385560c6a71e3b28155eabd454847.png\"></figure><p>В 2020 году MicroStrategy стала первой публичной компанией, которая купила Bitcoin. С тех пор она является крупнейшим холдером первой криптовалюты и имеет на своем балансе 140 000 монет на сумму более $4,17 млрд. Агрессивные инвестиции MicroStrategy заставили многих институциональных инвесторов обратить внимание на сектор криптовалют. Позже технологические гиганты, такие как Tesla Илона Маска и Square Джека Дорси, также заявили о покупке Bitcoin. </p><p><strong>О Майкле Сейлоре и MicroStrategy</strong></p><p>В 1989 году Майкл Сейлор и Санджу Бансал основали MicroStrategy — компанию, которая занимается разработкой программного обеспечения для анализа внешних и внутренних данных с целью принятия бизнес-решений. Компания довольно быстро развивалась и в 1998 году стала публичной, ее акции начали торговаться на бирже. С 20 апреля 1999 года акции MicroStrategy показывают стремительный рост (+4500%). <br><br>Однако в 2000 году Комиссия по ценным бумагам и биржам США (SEC) обвинила MicroStrategy в завышении показателей выручки за последние два года. В итоге компания выплатила штраф в размере $11 млн, но акции рухнули более чем на 95%. Тем не менее MicroStrategy остается лидером в своей отрасли и продолжает разрабатывать новые продукты. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/891/684/4b7/8916844b7c2e1d96461d97db29e1e530.png\" alt=\"Рост акций MicroStrategy.  \" title=\"Рост акций MicroStrategy.  \" width=\"1834\" height=\"907\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/891/684/4b7/8916844b7c2e1d96461d97db29e1e530.png\"><div><figcaption><em>Рост акций MicroStrategy.</em>  </figcaption></figure><p>В 2020 году Майкл Сейлор решил перевести часть казначейских резервов MicroStrategy в Bitcoin. И компания совершила первую покупку криптовалюты: 21 454 BTC за $250 млн. Средняя цена одной монеты составила $11 652.</p><p>«Политика дешевых денег», которая проводилась центральными банками для стимуляции экономики во время пандемии, привела к сильному увеличению денежной массы. В будущем это вызовет высокий уровень инфляции. Поэтому, по словам Сейлора, покупка Bitcoin была стремлением защититься от рисков девальвации фиатных валют. </p><blockquote><p><em>«Это вложение отражает нашу веру в то, что биткоин, как самая популярная криптовалюта в мире, является надежным средством сохранения стоимости и привлекательным инвестиционным активом. Его долгосрочный потенциал выше, чем у фиатных денег»</em>, — утверждал<em> </em>Майкл Сейлор.</p></blockquote><p>Кроме того, Майкл Сейлор неоднократно заявлял, что Bitcoin — это революционная новая технология, как Facebook или Google, но только в «мире денег». Цифровая трансформация активов продвигается очень быстро и, по словам Сейлора, будущее за мобильными цифровыми кошельками. А их повсеместное использование приведет к внедрению надежных цифровых активов, включая Bitcoin. </p><p>Также Майкл Сейлор считает, что Bitcoin — это новый резервный актив, в который скоро и другие компании переведут часть своих средств. К тому же в долгосрочной перспективе доходность от инвестиций в Bitcoin будет намного выше, чем в другие активы. </p><p>В итоге MicroStrategy запустила стратегию покупки Bitcoin, и за 2020 год компания приобрела криптовалюты на сумму $1,125 млрд. </p><p><strong>Покупки Bitcoin в 2020 году</strong></p><ul><li><p><strong>11 августа 2020 года:</strong> покупка 21 454 BTC за $250 млн. Средняя цена — $11 652. <a href=\"https://twitter.com/saylor/status/1306636046948610049\" rel=\"noopener noreferrer nofollow\"><u>Twitter</u></a>/<a href=\"https://www.sec.gov/Archives/edgar/data/1050446/000119312520215604/d921849d8k.htm\" rel=\"noopener noreferrer nofollow\"><u>Form K-8 (sec.gov)</u></a></p></li><li><p><strong>14 сентября 2020 года:</strong> покупка 16 796 BTC за $175 млн. Средняя цена — $10 419. <a href=\"https://twitter.com/saylor/status/1305850568531947520\" rel=\"noopener noreferrer nofollow\"><u>Twitter</u></a>/<a href=\"https://www.sec.gov/Archives/edgar/data/1050446/000119312520244732/d937119d8k.htm\" rel=\"noopener noreferrer nofollow\"><u>Form K-8 (sec.gov)</u></a></p></li><li><p><strong>4 декабря 2020 года:</strong> покупка 2 574 BTC за $50 млн. Средняя цена — $19 427. <a href=\"https://twitter.com/saylor/status/1334990791496884224\" rel=\"noopener noreferrer nofollow\"><u>Twitter</u></a>/<a href=\"https://www.sec.gov/Archives/edgar/data/1050446/000119312520310787/d22733d8k.htm\" rel=\"noopener noreferrer nofollow\"><u>Form K-8 (sec.gov)</u></a></p></li><li><p><strong>21 декабря 2020 года:</strong> покупка 29 646 BTC за $650 млн. Средняя цена — $21 925. <a href=\"https://twitter.com/saylor/status/1341006691408752640\" rel=\"noopener noreferrer nofollow\"><u>Twitter</u></a>/<a href=\"https://www.sec.gov/Archives/edgar/data/1050446/000119312520315971/d225117d8k.htm\" rel=\"noopener noreferrer nofollow\"><u>Form K-8 (sec.gov)</u></a></p></li></ul><p>Инвестиции MicroStrategy в Bitcoin вызвали интерес у всей криптоиндустрии, а каждая новая покупка освещалась во всех СМИ на первых полосах. Множество крупных институциональных инвесторов начало обсуждать криптовалюты, что в итоге привлекло крупный капитал в отрасль. </p><p>По состоянию на 30 декабря 2020 года, под управлением частных и публичных компаний, а также ориентированных на криптовалюты фондов было сосредоточено 1,151 млн BTC на общую сумму свыше $32,4 млрд.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/fa4/b68/5a5/fa4b685a553274eeec0cd8e774071dae.png\" alt=\"Компании, инвестировавшие в Bitcoin. Данные на 30 декабря 2020 года. Источник: bitcointreasuries.net  \" title=\"Компании, инвестировавшие в Bitcoin. Данные на 30 декабря 2020 года. Источник: bitcointreasuries.net  \" width=\"1514\" height=\"851\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/fa4/b68/5a5/fa4b685a553274eeec0cd8e774071dae.png\"><div><figcaption><em>Компании, инвестировавшие в Bitcoin. Данные на 30 декабря 2020 года. Источник: bitcointreasuries.net</em>  </figcaption></figure><p>Акции компании начинают стремительно расти. 8 января 2020 года финансовый конгломерат Morgan Stanley приобретает 11,9% акций MicroStrategy. <br><br>С момента первой покупки Bitcoin и до 9 февраля 2021 года акции MicroStrategy выросли на 900%. А Bitcoin начал свой исторический буллран и за этот же период вырос на 320%.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f47/9a3/99d/f479a399d3ef4dbbc507debda73bde72.png\" alt=\"Рост акций MicroStrategy и Bitcoin.  \" title=\"Рост акций MicroStrategy и Bitcoin.  \" width=\"1836\" height=\"907\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f47/9a3/99d/f479a399d3ef4dbbc507debda73bde72.png\"><div><figcaption><em>Рост акций MicroStrategy и Bitcoin.</em>  </figcaption></figure><p>В начале 2021 года рынок всколыхнула новость, что компания Tesla Илона Маска присоединилась к инвестициям в Bitcoin, купив монет на $1,5 млрд. А Майкл Сейлор заявлял, что инвестиции в Bitcoin являются привлекательнее, чем в Apple и Facebook:</p><blockquote><p><em>«Я вкладывал во все подряд. Я был ранним инвестором Apple, Facebook, Amazon, Google, OpenTable, eBay и PayPal. И поднял огромные деньги. Я увеличил капитал в десять, двадцать раз. И хочу сказать, что инвестиции в биткоин выглядят куда привлекательнее».</em></p></blockquote><p>Весь 2021 год компания активно покупала Bitcoin не только на собственные средства, но и выпуская долговые бумаги, прибыль от которых направляла на покупку криптовалюты. И здесь интересный момент: обеспечением облигаций выступали активы компании, в том числе и Bitcoin. <br><br>Компания совершила несколько крупных покупок прямо на самой вершине рынка, практически по максимальной цене: 5 апреля MicroStrategy приобрела 253 BTC по цене $59 339, а 29 ноября — 7 002 BTC по цене $59 187. При этом, когда в середине 2021 года Bitcoin потерял более 50% стоимости, Сейлор заявлял, что они готовы терпеть любую просадку и не собираются продавать криптовалюту.</p><p><strong>Покупки Bitcoin в 2021 году</strong></p><ul><li><p><strong>22 января 2021 года:</strong> покупка 314 BTC за $10 млн. Средняя цена — $31 808. <a href=\"https://twitter.com/saylor/status/1352614708797464582\" rel=\"noopener noreferrer nofollow\"><u>Twitter</u></a>/<a href=\"https://www.sec.gov/Archives/edgar/data/1050446/000119312521014227/d113711d8k.htm\" rel=\"noopener noreferrer nofollow\"><u>Form K-8 (sec.gov)</u></a></p></li><li><p><strong>2 февраля 2021 года: </strong>покупка 295 BTC за $10 млн. Средняя цена — $33 810. <a href=\"https://twitter.com/saylor/status/1356600103193182210\" rel=\"noopener noreferrer nofollow\"><u>Twitter</u></a>/<a href=\"https://www.sec.gov/Archives/edgar/data/1050446/000119312521025369/d124926d8k.htm\" rel=\"noopener noreferrer nofollow\"><u>Form K-8 (sec.gov)</u></a></p></li><li><p><strong>24 февраля 2021 года:</strong> покупка 19 452 BTC за $1,026 млрд. Средняя цена — $52 765. <a href=\"https://twitter.com/saylor/status/1364561973363490817\" rel=\"noopener noreferrer nofollow\"><u>Twitter</u></a>/<a href=\"https://www.sec.gov/Archives/edgar/data/1050446/000119312521048555/d130600d8k.htm\" rel=\"noopener noreferrer nofollow\"><u>Form K-8 (sec.gov)</u></a></p></li><li><p><strong>1 марта 2021 года:</strong> покупка 328 BTC за $15 млн. Средняя цена — $45 710. <a href=\"https://twitter.com/saylor/status/1366375915559792640\" rel=\"noopener noreferrer nofollow\"><u>Twitter</u></a>/<a href=\"https://www.sec.gov/Archives/edgar/data/1050446/000119312521062322/d103788d8k.htm\" rel=\"noopener noreferrer nofollow\"><u>Form K-8 (sec.gov)</u></a></p></li><li><p><strong>5 марта 2021 года: </strong>покупка 205 BTC за $10 млн. Средняя цена — $48 888. <a href=\"https://twitter.com/saylor/status/1367824821011296257\" rel=\"noopener noreferrer nofollow\"><u>Twitter</u></a>/<a href=\"https://www.sec.gov/Archives/edgar/data/1050446/000119312521105625/d113059d8k.htm\" rel=\"noopener noreferrer nofollow\"><u>Form K-8 (sec.gov)</u></a></p></li><li><p><strong>12 марта 2021 года:</strong> покупка 262 BTC за $15 млн. Средняя цена — $57 146. <a href=\"https://twitter.com/saylor/status/1370360546986430467\" rel=\"noopener noreferrer nofollow\"><u>Twitter</u></a>/<a href=\"https://www.sec.gov/Archives/edgar/data/1050446/000119312521078715/d154639d8k.htm\" rel=\"noopener noreferrer nofollow\"><u>Form K-8 (sec.gov)</u></a></p></li><li><p><strong>5 апреля 2021 года:</strong> покупка 253 BTC за $15 млн. Средняя цена — $59 339. <a href=\"https://twitter.com/saylor/status/1379042960994668548\" rel=\"noopener noreferrer nofollow\"><u>Twitter</u></a>/<a href=\"https://www.sec.gov/Archives/edgar/data/1050446/000119312521105625/d113059d8k.htm\" rel=\"noopener noreferrer nofollow\"><u>Form K-8 (sec.gov)</u></a></p></li><li><p><strong>13 мая 2021 года:</strong> покупка 271 BTC за $15 млн. Средняя цена — $55 387. <a href=\"https://twitter.com/saylor/status/1392814015181635584\" rel=\"noopener noreferrer nofollow\"><u>Twitter</u></a>/<a href=\"https://www.sec.gov/Archives/edgar/data/1050446/000119312521159855/d540617d8k.htm\" rel=\"noopener noreferrer nofollow\"><u>Form K-8 (sec.gov)</u></a></p></li><li><p><strong>18 мая 2021 года:</strong> покупка 229 BTC за $10 млн. Средняя цена — $43 663. <a href=\"https://twitter.com/saylor/status/1394625128257007618\" rel=\"noopener noreferrer nofollow\"><u>Twitter</u></a>/<a href=\"https://www.sec.gov/Archives/edgar/data/1050446/000119312521164617/d167554d8k.htm\" rel=\"noopener noreferrer nofollow\"><u>Form K-8 (sec.gov)</u></a></p></li><li><p><strong>21 июня 2021 года:</strong> покупка 13 005 BTC за $489 млн. Средняя цена — $37 617. <a href=\"https://twitter.com/saylor/status/1406946140344442882\" rel=\"noopener noreferrer nofollow\"><u>Twitter</u></a>/<a href=\"https://www.sec.gov/Archives/edgar/data/1050446/000119312521189600/d148411d8k.htm\" rel=\"noopener noreferrer nofollow\"><u>Form K-8 (sec.gov)</u></a></p></li><li><p><strong>24 августа 2021 года:</strong> покупка 3 907 BTC за $177 млн. Средняя цена — $45 294. <a href=\"https://twitter.com/saylor/status/1430145340976648202\" rel=\"noopener noreferrer nofollow\"><u>Twitter</u></a>/<a href=\"https://www.sec.gov/Archives/edgar/data/1050446/000119312521254529/d384256d8k.htm\" rel=\"noopener noreferrer nofollow\"><u>Form K-8 (sec.gov)</u></a></p></li><li><p><strong>13 сентября 2021 года: </strong>покупка 5 050 BTC за $242,9 млн. Средняя цена — $48 099. <a href=\"https://twitter.com/saylor/status/1437386724443926535\" rel=\"noopener noreferrer nofollow\"><u>Twitter</u></a>/<a href=\"https://www.microstrategy.com/content/dam/website-assets/collateral/financial-documents/financial-document-archive/form-8-k_09-13-2021.pdf\" rel=\"noopener noreferrer nofollow\"><u>Form K-8 (sec.gov)</u></a></p></li><li><p><strong>29 ноября 2021 года: </strong>покупка 7 002 BTC за $414,4 млн. Средняя цена — $59 187. <a href=\"https://twitter.com/saylor/status/1465305537210458115\" rel=\"noopener noreferrer nofollow\"><u>Twitter</u></a>/<a href=\"https://www.sec.gov/Archives/edgar/data/1050446/000119312521341815/d191335d8k.htm\" rel=\"noopener noreferrer nofollow\"><u>Form K-8 (sec.gov)</u></a></p></li><li><p><strong>9 декабря 2021 года:</strong> покупка 1 434 BTC за $82,4 млн. Средняя цена — $57 477. <a href=\"https://twitter.com/saylor/status/1468930815421820932\" rel=\"noopener noreferrer nofollow\"><u>Twitter</u></a>/<a href=\"https://www.sec.gov/Archives/edgar/data/1050446/000119312521352140/d270832d8k.htm\" rel=\"noopener noreferrer nofollow\"><u>Form K-8 (sec.gov)</u></a></p></li><li><p><strong>30 декабря 2021 года:</strong> покупка 1 914 BTC за $94,2 млн. Средняя цена — $49 229. <a href=\"https://twitter.com/saylor/status/1476539985562152960\" rel=\"noopener noreferrer nofollow\"><u>Twitter</u></a>/<a href=\"https://www.sec.gov/Archives/edgar/data/1050446/000119312521369767/d261142d8k.htm\" rel=\"noopener noreferrer nofollow\"><u>Form K-8 (sec.gov)</u></a></p></li></ul><p>Весь 2022 год на рынке криптовалют наблюдался медвежий тренд. Bitcoin терял 78% своей стоимости, и на фоне каждого нового снижения криптовалюты падали и акции MicroStrategy. Но, несмотря на это, Майкл Сейлор продолжал покупать Bitcoin и в каждом интервью заявлял о его преимуществах:</p><blockquote><p><em>«Биткоин — самая надежная вещь в очень нестабильном мире. Он более надежен, чем другие 19 000 криптовалют, чем любые акции, чем владение собственностью в любой точке мира».</em></p></blockquote><p>8 августа 2022 года Сейлор покидает пост CEO MicroStrategy и становится исполнительным председателем. По его словам, такое решение позволит эффективнее заниматься Bitcoin-направлением. </p><p><strong>Покупки Bitcoin в 2022 году</strong></p><ul><li><p><strong>1 февраля 2022 года:</strong> покупка 660 BTC за $25 млн. Средняя цена — $37 865. <a href=\"https://twitter.com/saylor/status/1488498422495817728\" rel=\"noopener noreferrer nofollow\"><u>Twitter</u></a>/<a href=\"https://www.sec.gov/Archives/edgar/data/1050446/000119312522024027/d275576d8k.htm\" rel=\"noopener noreferrer nofollow\"><u>Form K-8 (sec.gov)</u></a></p></li><li><p><strong>5 апреля 2022 года:</strong> покупка 4 167 BTC за $190,5 млн. Средняя цена — $45 714. <a href=\"https://twitter.com/saylor/status/1511315882886246409\" rel=\"noopener noreferrer nofollow\"><u>Twitter</u></a>/<a href=\"https://www.sec.gov/Archives/edgar/data/1050446/000119312522095632/d292215d8k.htm\" rel=\"noopener noreferrer nofollow\"><u>Form K-8 (sec.gov)</u></a></p></li><li><p><strong>29 июня 2022 года:</strong> покупка 480 BTC за $10 млн. Средняя цена — $20 817. <a href=\"https://twitter.com/saylor/status/1542117682207678465\" rel=\"noopener noreferrer nofollow\"><u>Twitter</u></a>/<a href=\"https://www.sec.gov/Archives/edgar/data/1050446/000119312522184423/d374401d8k.htm\" rel=\"noopener noreferrer nofollow\"><u>Form K-8 (sec.gov)</u></a></p></li><li><p><strong>20 сентября 2022 года:</strong> покупка 301 BTC за $6 млн. Средняя цена — $19 851. <a href=\"https://twitter.com/saylor/status/1572196173334839303\" rel=\"noopener noreferrer nofollow\"><u>Twitter</u></a>/<a href=\"https://www.sec.gov/Archives/edgar/data/1050446/000119312522247427/d355455d8k.htm\" rel=\"noopener noreferrer nofollow\"><u>Form K-8 (sec.gov)</u></a></p></li><li><p><strong>21 декабря 2022 года:</strong> покупка 2 395 BTC за $42,8 млн. Средняя цена — $17 871. <a href=\"https://twitter.com/saylor/status/1608086703843180544\" rel=\"noopener noreferrer nofollow\"><u>Twitter</u></a>/<a href=\"https://www.sec.gov/Archives/edgar/data/1050446/000119312522313098/d398241d8k.htm\" rel=\"noopener noreferrer nofollow\"><u>Form K-8 (sec.gov)</u></a></p></li><li><p><strong>22 декабря 2022 года:</strong> продажа 704 BTC за $11,8 млн. Средняя цена — $16 761. <a href=\"https://twitter.com/saylor/status/1608086703843180544\" rel=\"noopener noreferrer nofollow\"><u>Twitter</u></a>/<a href=\"https://www.sec.gov/Archives/edgar/data/1050446/000119312522313098/d398241d8k.htm\" rel=\"noopener noreferrer nofollow\"><u>Form K-8 (sec.gov)</u></a></p></li><li><p><strong>24 декабря 2022 года:</strong> покупка 810 BTC за $13,6 млн. Средняя цена — $16 845. <a href=\"https://twitter.com/saylor/status/1608086703843180544\" rel=\"noopener noreferrer nofollow\"><u>Twitter</u></a>/<a href=\"https://www.sec.gov/Archives/edgar/data/1050446/000119312522313098/d398241d8k.htm\" rel=\"noopener noreferrer nofollow\"><u>Form K-8 (sec.gov)</u></a></p></li></ul><p>В начале 2023 года MicroStrategy совершила еще 2 покупки BTC, приобретя в общей сложности 7500 BTC на сумму $179,3 млн. <br><br><strong>Покупки Bitcoin в 2023 году</strong></p><ul><li><p><strong>23 марта 2023 года:</strong> покупка 6 455 BTC за $150 млн. Средняя цена — $23 238. <a href=\"https://twitter.com/saylor/status/1640325496654143488\" rel=\"noopener noreferrer nofollow\"><u>Twitter</u></a>/<a href=\"https://www.sec.gov/Archives/edgar/data/1050446/000119312523079839/d467124d8k.htm\" rel=\"noopener noreferrer nofollow\"><u>Form K-8 (sec.gov)</u></a></p></li><li><p><strong>5 апреля 2023 года:</strong> покупка 1 045 BTC за $29,3 млн. Средняя цена — $28 016. <a href=\"https://twitter.com/saylor/status/1643586872839471105\" rel=\"noopener noreferrer nofollow\"><u>Twitter</u></a>/<a href=\"https://www.sec.gov/Archives/edgar/data/1050446/000119312523091616/d486424d8k.htm\" rel=\"noopener noreferrer nofollow\"><u>Form K-8 (sec.gov)</u></a></p></li></ul><p>В данный момент компания MicroStrategy владеет 140 000 BTC на сумму более $4,17 млрд. Средняя стоимость одной монеты составляет $29 803.<br><br><strong>График всех покупок Bitcoin </strong>  </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f97/d10/906/f97d1090673a46ffc62bec1123807da3.png\" alt=\"График всех покупок и продаж Bitcoin компанией MicroStrategy\" title=\"График всех покупок и продаж Bitcoin компанией MicroStrategy\" width=\"1834\" height=\"907\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f97/d10/906/f97d1090673a46ffc62bec1123807da3.png\"><div><figcaption>График всех покупок и продаж Bitcoin компанией MicroStrategy</figcaption></figure><p>Компания решительно показала, что не планирует отходить от своей стратегии накопления Bitcoin даже во время медвежьего рынка. Хотя многие и критикуют Сейлора, он заявляет, что MicroStrategy будет и дальше накапливать криптовалюту, не планируя ее продавать:</p><blockquote><p><em>«Биткоин переживет всех нас, и его нельзя отнести к финансовым пузырям. Его можно покупать небольшими объемами в течение длительного времени. Вы можете хранить криптовалюту всю свою жизнь и передать ее следующим поколениям».</em></p></blockquote><hr><div class=\"persona\" persona=\"true\"><img persona=\"true\" class=\"image persona__image\" src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f4d/c99/fd9/f4dc99fd996a405c44c31bd82ec96e6c.png\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f4d/c99/fd9/f4dc99fd996a405c44c31bd82ec96e6c.png\"><h5 class=\"persona__heading\" persona=\"true\">SpaceFinance</h5><p><a href=\"https://t.me/space_finance_crypto\" rel=\"noopener noreferrer nofollow\">Телеграм Канал</a></p><p></p>', 1, '2023-06-12 22:01:44', 110911, 101, '/ru/articles/733200/', 'В 2020 году MicroStrategy стала первой публичной компанией, которая купила Bitcoin. С тех пор она является крупнейшим холдером первой криптовалюты и имеет на своем балансе 140 000 монет на сумму более $4,17 млрд. Средняя стоимость одной монеты составляет $29 803.Агрессивные инвестиции MicroStrategy заставили многих институциональных инвесторов обратить внимание на сектор криптовалют. Позже технологические гиганты, такие как Tesla Илона Маска и Square Джека Дорси, также заявили о покупке Bitcoin.   '),
(196, 'Как Splunk поплатился за жадность, или почему в бизнесе важна справедливость', '<p>Далеко не все в России знают про компанию Splunk. Splunk разрабатывает IT-сервисы (программы для сбора и обработки логов, SIEM системы и т.д.) и зарабатывает около 3 млрд.$ в год. У нас данная американская компания известна, прежде всего, двумя вещами:</p><ul><li><p>Ее продукты стоят как “чугунный мост”. Средний чек Splunk - несколько сотен тысяч долларов в год.</p></li><li><p>Подключив несколько сотен корпоративных клиентов в России, Splunk ушла с российского рынка одним днем в 2019 году, оповестив клиентов в пресс-релизе. После чего все в горящем режиме переходили на Elastic и другие решения.</p></li></ul><p>Данная статья будет как раз о первом пункте - неадекватной цене, и почему лучше так не делать (хотя уходить одним днем тоже не лучшая идея). Материалы для статьи мы случайно нашли, когда выбирали решение для анализа логов. История показалась нам весьма интересной. </p><hr><p>То, что стоимость решений Splunk завышена, отмечали клиенты по всему миру. Splunk тарифицирует сервисы по объему обрабатываемых логов. Если у вас большая IT-инфраструктура, это могут быть сотни тысяч терабайтов, а значит - миллионы долларов ежегодных расходов. </p><p>Если клиент готов заплатить N денег за сервис, значит, в его глазах, ценность сервиса не меньше N денег (даже если возникает мысль, что “дорого”). И, кажется, все честно: есть хороший и дорогой продукт, который тарифицируется по объему данных, и клиенты готовы за него платить. Но был один нюанс. Он заключался в том, что у компании Splunk была технология “Splunk to Splank”, позволяющая кардинально, буквально в разы сокращать количество обрабатываемых данных без потери их смыслового содержания. И то ли клиентам “забыли” про нее рассказать, то ли нужно было в ней целых два-три спринта дорабатывать функционал, но факт есть факт - клиенты продолжали платить за неоптимизированный объем круглые суммы. </p><p>По чистой случайности это “недоразумение” заметили три сотрудника Splunk - Clint Sharp, Dritan Bitincka и Ledion Bitincka. История умалчивает о корпоративной войне за справедливость внутри Splunk. Но точно известно, что эти три сотрудника уволились и основали свою компанию - Crible. Как легко догадаться, основным продуктом Crible стала технология стриминга данных (логов), позволяющая обрабатывать их так, чтобы объем снижался в несколько раз без потери смысла/качества.</p><p>	Пикантность ситуации добавляет факт, что у основателей Crible по понятным причинам оказались контакты всех клиентов Splunk. И что бы они красивого ни писали на сайте, но ценностное предложение, сказанное по телефону,  - “Вы сейчас платите миллион баксов в год за Splunk, а могли бы платить в пять раз в меньше”, - может вызвать только вау-реакцию “А так можно было?”. В совокупности с тем, что сам продукт получился неплохим, начался резкий рост Crible, подкрепленный 402 млн.$ привлеченных венчурных денег.</p><p>	Когда выручка Splunk от некоторых ключевых клиентов упала, а руководство увидело рекламный щит Crible, призывающий сотрудников Splunk сменить работу прямо перед своей штаб-квартирой, засуетились корпоративные юристы. </p><p>	Splunk выдвинул судебный иск о том, что Crible украл их технологию, на основе которой построил свой продукт. Чем закончится спор неизвестно. Возможно, Crible и правда “позаимствовал” код, хотя они утверждают, что построили решение на основе только открытого кода Splunk с Open Source лицензией. Возможно, Splunk их просто купит. Но, в любом случае, теперь клиенты Splunk точно знают, что можно платить меньше. </p><p>	Важное замечание - эта статья не рекламирует Crible. Они не работают с клиентами из России, и даже вход с Российского IP заблокирован. Мне просто показалось, что найденная история может быть интересна читателям Хабр.</p><p>	P.S. Теперь уже на правах рекламы;)</p><p>Мы развиваем сервис контейнерного облака <a href=\"https://amvera.ru/cloud\"><u>Amvera Cloud</u></a> для хостинга IT-приложений, который работает по аналогии c сервисом Heroku. Сейчас проводим <strong>бесплатный бета-тест</strong>. Буду благодарен, если протестируете сервис и дадите обратную связь, чтобы мы могли вычистить все “баги” и добавить действительно нужный функционал. На время бета-теста и немного после него облако будет бесплатным. Ведь мы не Splunk! </p>', 3, '2023-06-12 22:01:46', 176865, 100, '/ru/companies/amvera/articles/731590/', 'Меня зовут Дмитрий Серов, и я являюсь руководителем направления промышленного интернета вещей в компании UMNO.digital. В ИТ-индустрии я работаю около 20 лет, последние 5 из которых занимаюсь проектами IIoT в таких отраслях как телеком, сельское хозяйство, ЖКХ, сейчас развиваю это направление для ж/д и промышленных предприятий. Я часто сталкиваюсь с ситуациями, когда при работе с проектами нет очевидных узких мест и болевых точек производственной системы, которые надо решить с помощью цифровизации.  Чаще задача от бизнеса звучит как общее повышение эффективности активов. В этом случае встает вопрос: «Как найти кейсы для цифровизации, которые дадут ожидаемый результат и повысят эффективность производства?». В этой статье я поделюсь своим опытом и расскажу, о проблемах, с которыми сталкиваюсь при поиске кейсов, а также, как можно искать точки старта для начала работы с такими проектами. '),
(197, 'Ищем кейсы для внедрения проектов IIoT', '<p>Меня зовут Дмитрий Серов, и я являюсь руководителем направления промышленного интернета вещей в компании <a class=\"mention\" href=\"/users/umnodigital\">@UMNODigital</a> В ИТ‑индустрии я работаю около 20 лет, последние 5 из которых занимаюсь проектами IIoT в таких отраслях как телеком, сельское хозяйство, ЖКХ, сейчас развиваю это направление для ж/д и промышленных предприятий. </p><p>Я часто сталкиваюсь с ситуациями, когда при работе с проектами нет очевидных узких мест и болевых точек производственной системы, которые надо решить с помощью цифровизации. Чаще задача от бизнеса звучит как общее повышение эффективности активов. В этом случае встает вопрос: «Как найти кейсы для цифровизации, которые дадут ожидаемый результат и повысят эффективность производства?». В этой статье я поделюсь своим опытом и расскажу, о проблемах, с которыми сталкиваюсь при поиске кейсов, а также, как можно искать точки старта для начала работы с такими проектами. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/703/74d/aef/70374daef2ecd2ded0742ddd0004eb1c.png\" width=\"621\" height=\"371\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/703/74d/aef/70374daef2ecd2ded0742ddd0004eb1c.png\"></figure><p>В сегодняшней парадигме IIoT направлен, в первую очередь, на повышение прозрачности технологических процессов и накопления данных о них. При реализации проектов IIoT необходимо учитывать множество факторов, таких как текущее состояние производства, потенциал технологий, цели, задачи и готовность инфраструктуры. </p><p>Как правило в начале любого такого проекта идет стадия обследования производственного актива, во время которой мы собираем необходимую информацию и начинаем ее анализировать. Но уже на этом этапе возникает ряд типовых трудностей, которые усложняют этот процесс, а порой и ставят в тупик неопытных «цифровизаторов». </p><h2>Незаинтересованность производства в проектах по цифровизации</h2><p>Первая проблема, с который вы можете столкнутся при начале работы — незаинтересованность производства в проектах по цифровизации и вообще каких‑либо изменениях зачастую ввиду низкой культуры производства или отсутствия осведомленности о возможных решениях.</p><p>Когда вы приходите на предприятие для проведения обследования, то, как правило, слышите от большинства руководителей: «У нас проблем нет, все хорошо, план выполняем, в бюджет укладываемся!». т. е. для многих компаний выполнение плана = успешная работа предприятия. </p><figure class=\"float full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/ab8/818/c07/ab8818c07c6ca52b4de3daa6b5e98c8a.jpg\" width=\"676\" height=\"875\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ab8/818/c07/ab8818c07c6ca52b4de3daa6b5e98c8a.jpg\" data-blurred=\"true\"></figure><p>Естественно, что при таком подходе руководство концентрирует все усилия на выполнении плановых показателей, и не видит смысла в изменениях и улучшениях производственного процесса. А цифровизация, по их мнению, может, наоборот, добавить бесполезную работу, сократить пространство для маневра, все усложнить и негативно повлиять на достижение плана. Отсюда и возникает сопротивление новым проектам.<br><br>Выполнение плана производства — безусловно важный показатель, но негативная сторона для предприятий заключается в том, что план зачастую не учитывает реальный потенциал актива, возможности оборудования, его техническое состояние, реальную загрузку и узкие места. </p><p>И уж тем более не влияет на эффективность производства, особенно если план заранее составляют «выполнимым». </p><blockquote><p>И когда завод ставит для себя выполнение плана как основную задачу и главный показатель успешности работы предприятия, то компания теряет массу возможностей для повышения эффективности работы. </p></blockquote><p>Например, зная фактический ресурс работы оборудования и его пропускную способность можно грамотно настроить сменно‑суточное планирование, обеспечить равномерную загрузку оборудования и исключить простои. Или установив необходимые датчики высвободить рабочее время персонала от регулярных обходов. Тем самым увеличить ритмичность работы предприятия, а также производственные показатели и снизить издержки. </p><ul><li><p>В такой ситуации прежде всего нужно помочь предприятию осознать необходимость изменений и провести диагностику его цифровой зрелости в совместной работе с экспертами. </p></li><li><p>Важной задачей является также «разрушение стен» между подразделениями и «стен», которые тормозят и искажают информационные и материальные потоки, проходящие сквозь предприятие. </p></li><li><p>При этом наша задача как «цифровизаторов» — находить людей, которые уже проходили путь трансформации от разрухи к современной компании, учиться у них и на их примерах мотивировать другие предприятия идти вперед и не боятся перемен. Только совместными усилиями можно способствовать созданию быстрых и гибких к изменениям компаний. Ведь только они имеют шансы стать лидерами, сместив крупных, но неповоротливых конкурентов, обремененных регламентами и пережитками прошлого.</p></li></ul><h2>Сбор достоверной информации</h2><figure class=\"float \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/ba8/d44/b42/ba8d44b42c0fc5cd61e929ab37c91be2.jpg\" width=\"338\" height=\"253\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ba8/d44/b42/ba8d44b42c0fc5cd61e929ab37c91be2.jpg\" data-blurred=\"true\"></figure><p>Еще одна сложность при поиске кейсов для цифровизации может возникнуть со сбором достоверной информации о работе предприятия и состоянии производственных активов. Главная проблема — отсутствие системной фиксации информации и ее дальнейшей аналитики. Как правило вся информация о процессах производства собирается разрозненно на отдельных постах, эти данные оседают на уровне отдельных участков и цехов, и никак не аккумулируются в общую систему. </p><p>При этом получается, что объективную полноценную картину по предприятию не видит никто — ни руководители цехов, ни директора предприятий, ни владельцы бизнеса. Планирование происходит как правило на основании данных прошлых лет об объемах производства и бюджетах, а также исходя из плана заказов и продаж продукции. </p><blockquote><p>Важно понимать, что для собственников бизнеса такой метод планирования — прямая потеря эффективности производства. Здесь необходима разработка единых метрик эффективности производства, которая невозможна без комплексного представления о реальной картине состояния предприятия и его возможностях. </p></blockquote><p>Вот тут и приходит на помощь IIoT как источник достоверных данных! Ведь правильное планирование невозможно без актуальных и объективных данных! И первый шаг в любом проекте — поиск точек потенциальной потери эффективности. Есть простые примеры, когда один человек может переписывать одну и ту же информацию в три! разных журнала. Вероятность совершения ошибки будет крайне велика.</p><p>Надо понимать, что приходить на завод и спрашивать у главных инженеров и руководителей цехов, «что вам надо тут цифровизировать?» — бесполезно. Во‑первых, одно это слово звучит для многих пугающе и непонятно. А уж если такими терминами начнете сыпать, как IIoT, Big Data, искусственный интеллект и пр., то диалога может совсем не получится. Просто представьте, что предлагать сходу персоналу предприятий цифровизацию, это все равно что предлагать пенсионерам IPhone последней модели. Красиво, но ни черта не понятно. </p><p>Кроме того, мы же помним, что все процессы выстроены и … конечно! План выполняем! </p><h2>С чего же начать?!</h2><ol><li><p>Для начала стоит провести «продуктовые» интервью с главным инженером, главным механиком и другим руководящим составом предприятия, подготовив при этом заранее вопросы такого характера относительно оборудования и основных процессов:</p></li></ol><ul><li><p>Как эта операция делается сейчас? (просите приводить конкретные примеры)</p></li><li><p>Как и где фиксируются результаты работы оборудования? </p></li><li><p>Куда затем попадет информация? Где она хранится?</p></li><li><p>Как информация анализируется и как используется в дальнейшем?</p></li><li><p>Как часто стоит это оборудование, а как часто работает? </p></li><li><p>Как вы это понимаете, на основании каких данных? </p></li><li><p>Какое оборудование является уникальным или единичным на производстве?</p></li><li><p>При выходе из строя какого оборудования может встать весь производственный процесс? и т. п. </p></li></ul><p>Основная задача — получить от них информацию об узких местах производственного процесса. Также нужно обращать внимание и на те ответы, которые сформулированы как: «Не знаю» или «Ориентировочно…», «Мы это не анализируем», «Нет точных данных». Они как правило являются маркерами того, что в производственном процессе существуют серые зоны, которые никак не контролируются, либо о них у персонала недостаточно информации. Такие области могут вести к потере эффективности или появлению дополнительных затрат для производства. </p><p><strong>В результате такого опроса мы получим субъективную, но достаточно полную картину работы предприятия «As is», с которой в дальнейшем будем работать. Дополнить ее достоверными данными можно за счет следующих шагов.</strong>  </p><ol start=\"2\"><li><p>Еще один эффективный метод при работе с проектами IIoT — поиск на производстве обходчиков и сотрудников, которые задействованы в постоянном осмотре, регулярном съеме показаний состояния оборудования, датчиков и пр. т. е. тех людей, которые фактически выполняет функционал машин и работу которых как раз имеет смысл автоматизировать в первую очередь. И не надо думать, что после этого всех обходчиков надо уволить, это не так, наоборот вместо постоянной беготни их усилия можно сосредоточить на точках особого внимания или разгрузке особенно сложных участков производства.</p></li></ol><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/8cd/df4/786/8cddf47867ee8a3f5a88a80110a49074.jpg\" width=\"551\" height=\"368\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/8cd/df4/786/8cddf47867ee8a3f5a88a80110a49074.jpg\" data-blurred=\"true\"></figure><ol start=\"3\"><li><p>Полезным бывает поиск документации по аварийному и внеплановому ремонту оборудования. Такая информация укажет на болевые точки производственного процесса, поможет выявить на какие станки или участки производства стоит обратить пристальное внимание и оценить их фактическое состояние. </p></li></ol><blockquote><p>В целом любые кейсы возникновения незапланированных затрат для предприятия — это потенциальные участки для IIoT. </p></blockquote><p><strong>Результатом п.2 и п.3 должна стать объективная картина работы актива, которую мы совместим с результатами, полученными по итогу п.1, и получим максимально полное представление о работе предприятия и его возможных узких местах на текущий момент.</strong> </p><ol start=\"4\"><li><p>Чтобы дополнить уже полученную информацию также важно поговорить с аудиторами и посмотреть их отчеты.  Как правило в документах, которые они проверяют можно найти информацию по проблемным местам производственного процесса. Стоит обращать внимания на замечания, связанные с некорректным заполнением тех или иных документов, или возможностью достоверно проверить какие-либо цифры. Наиболее распространённые кейсы — это маршрутные листы, нормы и реальные списания ГСМ. Здесь можно достаточно быстро найти экономически эффективный проект.</p><p><em>Вот пример заключения аудита, на который стоит обратить внимание:<br>«Проанализировав маршрутные листы отмечаем, что бригады не указывают в них фактический расход топлива за смену, количество принятого и переданного топлива. В маршрутных листах, в которых указан расход топлива, составляет Х литров в смену.<u> </u>Исходя из нормы расхода топлива Y литров - перерасход топлива от установленной нормы составляет более Z %. В связи с тем, что расход и количество топлива не отображаются в маршрутных листах, топливо списывается без оснований». </em></p><p>Таким образом, мы понимаем, что есть реальная проблема перерасхода топлива, и это говорит о целесообразности оснащения техники  системами телематики и контроля расхода топлива. Это даст понимание по фактическому расходу топлива и сократит его необоснованные списания.</p></li><li><p>Заключительным этапом стоит провести интервью с собственником предприятия. Важно понять, что именно он хочет узнать о своем производстве и на сколько амбициозны его планы. Исходя их этого строить дальнейший план реализации IIoT проектов. </p><p>Как и в случае опросов сотрудников предприятия здесь важно задавать «наводящие» вопросы, которые, в том числе, помогут и самому руководителю задуматься над узкими местами в бизнес-процессах. Зачастую можно спрашивать:</p></li></ol><ul><li><p>Какую аналитику Вы проводите?</p></li><li><p>Как организован сбор данных?</p></li><li><p>Знает ли Вы откуда эти данные собираются?</p></li><li><p>Как часто Вы получаете анализ этих данных и обрабатываете его?</p></li><li><p>Какие решения на основании этой аналитики Вы принимаете?</p></li><li><p>Как реагируете на замечания аудита?</p></li><li><p>Какие решения на основании этого принимаете, и дают ли они результат?</p></li><li><p>Принимает ли решение об оптимизации крупных статей затрат на производстве? </p></li><li><p>Что это обычно за решение, как оно ищется?</p></li><li><p>На что полагаетесь при необходимости принимать решение о модернизации производства?</p></li></ul><p>Тут наша задача — узнать о реальном понимании собственником положения дел. Ведь может быть и так, что, полагаясь на отчеты, сформированные «с земли», собственник прибывает в розовых очках идеального производственного процесса.</p><p> Но когда он начинает задумываться над заданными вопросами, появляются сомнения и желание пролить больше света на все происходящее.</p><p>А бывает и обратная ситуация, когда человек понимает, что есть проблема, например, воровства. Однако испробовав огромное количество административных методов, пускает этот вопрос на самотек, т.к. не находит действенного решения и не хочет увольнять работников. Ведь нового найти сложно, а старый хоть и ворует, но дело делает.</p><p>В данной ситуации мониторинг через IIoT решения может стать работающим инструментом для решения подобных проблем. </p><hr><p>После того, как вы соберете достаточный объем данных важно помнить, что не стоит хвататься за все сразу и пытаться оптимизировать все производственные и бизнес‑процессы, нужно грамотно проанализировать всю информацию и выбрать приоритетные зоны, чтобы начать закладывать точки разрастания цифровизации! Здесь важно быстро показать ценность подобного решения и для персонала, и для руководства предприятия. А главное уходить от стереотипов, что цифровизация это такой вид плетей, вздымающийся над персоналом, и стремление наказать за любую ошибку или вовсе заместить людей на роботов. </p><p>Важно показать коллегам, что на основе полученных данных можно принимать управленческие решения и внедрять необходимые изменения в производственный процесс. Это может быть как оптимизация работы оборудования и сокращение времени простоя, так и сменно‑суточное планирование и общее повышение ритмичности и качества производства. </p><p></p>', 3, '2023-06-12 22:01:46', 569790, 102, '/ru/articles/725870/', 'Большинство статей по включению ПО в единый реестр российского ПО посвящено индивидуальному опыту разработчика или правообладателя, который не является универсальным. Проще говоря, если вы точь-в-точь повторите чей-то путь, это не гарантирует положительного решения по вашему заявлению.Меня зовут Софья, я IP/IT юрист Центра интеллектуальной собственности «Сколково». Мы с коллегами на постоянной основе сопровождаем большое количество заявок в реестр российского ПО (Реестр). В этой статье я хочу поделиться опытом и разобрать наиболее типичные ошибки при включении сведений о ПО в Реестр.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(198, 'Как избежать отказа Минцифры при подаче заявки в реестр российского ПО?', '<p>Большинство статей по включению ПО в единый реестр российского ПО посвящено индивидуальному опыту разработчика или правообладателя, который не является универсальным. Проще говоря, если вы точь-в-точь повторите чей-то путь, это не гарантирует положительного решения по вашему заявлению.</p><p>Меня зовут Софья, я IP/IT юрист Центра интеллектуальной собственности «Сколково». Мы с коллегами на постоянной основе сопровождаем большое количество заявок в реестр российского ПО (Реестр). В этой статье я хочу поделиться опытом и разобрать наиболее типичные ошибки при включении сведений о ПО в Реестр.</p><h3>Зачем нужен Реестр? Основные преимущества</h3><p>-   Освобождение от НДС при реализации ПО</p><p>-   Преимущества при участии в госзакупках</p><p>-   Гранты и гос. поддержка <a href=\"https://%D1%80%D1%84%D1%80%D0%B8%D1%82.%D1%80%D1%84\" rel=\"noopener noreferrer nofollow\"><sup>[1]</sup></a><sup>, </sup><a href=\"https://%D0%B8%D1%82-%D0%B3%D1%80%D0%B0%D0%BD%D1%82%D1%8B.%D1%80%D1%84\" rel=\"noopener noreferrer nofollow\"><sup>[2]</sup></a></p><p>В 2022 году преимуществ стало еще больше – теперь запись в Реестре позволяет компании пройти ИТ-аккредитацию в упрощенном порядке. ИТ-аккредитация была одной из самых горячо обсуждаемых тем прошлого года, поэтому мы обозначим лишь основные причины для прохождения процедуры: пониженные тарифы по страховым взносам, «обнуление» налога на прибыль в 2022-2024 гг., а также льготная ипотека и отсрочка от частичной мобилизации для сотрудников ИТ-компаний.</p><h3>Основные требования Правил Реестра </h3><p>Требования, предусмотренные Правилами формирования и ведения Реестра, утв. Постановлением Правительства РФ от 16.11.2015 № 1236 (далее – Правила Реестра), можно условно разделить на три группы: (1) Юридическая «чистота»; (2) Технологический стек и документация; (3) Информация на сайте. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/getpro/habr/upload_files/6d1/ab3/01e/6d1ab301e9a1d7de0fd95c08045784cb.PNG\" alt=\"Основные требования Правил Реестра\" title=\"Основные требования Правил Реестра\" width=\"1026\" height=\"432\"><div><figcaption><em>Основные требования Правил Реестра</em></figcaption></figure><p>Несоблюдение хотя бы одного из обозначенных требований может стать основанием для отказа во включении ПО в Реестр. По каждому из них есть свой набор часто задаваемых вопросов и рекомендаций, однако в этой статье я сосредоточилась на разборе наиболее типичных ошибок, встречающихся на практике.</p><h4>I. Отсутствие правоустанавливающих документов</h4><p>Для успешного включения в Реестр исключительное право на ПО должно принадлежать заявителю, и необходимо предоставить сведения об основаниях возникновения такого права.</p><p>Часто задаваемый вопрос: достаточно ли свидетельства Роспатента и нужно ли оно вообще для подтверждения прав на ПО?</p><p>Свидетельство Роспатента не является обязательным документом. Более того, свидетельство не может быть единственным документом, подтверждающим права на ПО. Ранее в Реестр было включено много записей только на основании свидетельства Роспатента, однако в 2022 году эксперты Минцифры стали проверять заявки строже, направляя запросы на предоставление дополнительных документов:</p><div><div class=\"table\"><table><tbody><tr><td data-colwidth=\"281\" width=\"281\"><p align=\"left\"><em>А) Если вы сами разработали ПО, то подготовьте:</em></p></td><td><p align=\"left\"><em>Б) Если ПО было создано не вами, то подготовьте:</em></p></td></tr><tr><td data-colwidth=\"281\" width=\"281\"><p align=\"left\">1.                Приказы о начале и об окончании разработки</p><p align=\"left\">2.                Служебные задания, отчеты, уведомления об их   выполнении</p></td><td><p align=\"left\">1.                Договор об отчуждении исключительного права или договор на разработку, в котором указано, что исключительное право принадлежит вам</p><p align=\"left\">2.                Акт приема-передачи (если момент перехода   права связан с подписанием акта)</p></td></tr><tr><td colspan=\"2\" data-colwidth=\"281,0\" width=\"281\"><p align=\"left\">3.                Приказ о введении ПО в эксплуатацию</p><p align=\"left\">4.                Карточку НМА или оборотно-сальдовую ведомость по НМА</p></td></tr></tbody></table><p>Обратите внимание, что наименование ПО, указанное в правоустанавливающих документах, должно совпадать с наименованием в заявлении.</p><p><strong>Чек-лист</strong></p><ol><li><p>Наличие документов, подтверждающих основание возникновения права на ПО (свидетельство Роспатента не может быть единственным документом!)</p></li><li><p>ПО введено в эксплуатацию и поставлено на учет в качестве НМА (разработка завершена)</p></li></ol><h3>II. Использование сторонних компонентов</h3><p>Одним из требований Реестра является отсутствие ограничений, которые не позволяют свободно распространять ПО на территории Российской Федерации. Под ограничениями, как правило, понимаются экспортные запреты и санкционные оговорки, предусмотренные лицензиями иностранных правообладателей сторонних компонентов, используемых при разработке.</p><p>Например, рассмотрим условия использования ОС CentOS. Лицензия устанавливает запрет использования компонента на территории Крыма, это означает, что ПО не может правомерно распространяться на территории РФ. Такое ПО в Реестр не возьмут.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/getpro/habr/upload_files/2a4/1ea/b2c/2a41eab2c9ca4ee035034106534037e8.PNG\" alt=\"URL: https://www.centos.org/legal/\" title=\"URL: https://www.centos.org/legal/\" width=\"1120\" height=\"822\"><div><figcaption>URL: <a href=\"https://www.centos.org/legal/\" rel=\"noopener noreferrer nofollow\">https://www.centos.org/legal/</a></figcaption></figure><p>В <a href=\"https://ru-ikt.ru/metodicheskiye_rekomendatsi/\" rel=\"noopener noreferrer nofollow\">методических рекомендациях Центра компетенций по импортозамещению в сфере информационно-коммуникационных технологий</a> (ЦКИТ) есть перечень компонентов, лицензии которых содержат экспортные запреты и санкционные оговорки («запрещенные компоненты»). Обратите внимание, что перечень не является исчерпывающим, так как он формируется в зависимости от условий лицензий, которые могут быть изменены правообладателем стороннего компонента.</p><p><strong>Чек-лист</strong></p><ol><li><p>Если в ПО используются сторонние компоненты, проверьте условия лицензий на наличие экспортных ограничений, при их наличии, такие компоненты необходимо заменить</p></li><li><p>При использовании открытого ПО (open-source (OS)) проверьте соблюдение условий открытых лицензий (<em>более подробный анализ использования OS заслуживает отдельной статьи, однако здесь отметим, что использование OS, само по себе, допустимо, при условии соблюдения требований OS лицензий</em>)</p></li></ol><h3>III. Отсутствие информации о домене</h3><p>При формировании заявления необходимо предоставить ссылку на сайт, где размещена информация о ПО, включаемом в Реестр (стоимость ПО, описание функциональных характеристик, информация об установке и эксплуатации). Администратором сайта при этом может быть как правообладатель ПО, так и иное лицо. Во втором случае важно продемонстрировать, что информация о ПО размещена на сайте правомерно.</p><p>Большинство заявителей не знают об указанном требовании, так как напрямую оно не указано в Правилах Реестра, а также не следует из формы заявления в личном кабинете на сайте Реестра. При непредоставлении необходимых сведений, как правило, со стороны Минцифры направляется дополнительный запрос, что может увеличить срок рассмотрения заявления на 20 рабочих дней.</p><p><strong>Чек-лист</strong> </p><ol><li><p>При проверке сайта в сервисе WhoIS администратором отображается правообладатель — никаких дополнительных документов предоставлять не требуется</p></li><li><p>Сведения об администраторе скрыты настройками приватности (отображается как private person) — необходимо приложить к пакету документов справку или свидетельство от регистратора доменного имени</p></li><li><p>Администратор не является правообладателем — необходимо также приложить документ, подтверждающий правомерное использование домена правообладателем, например, договор об использовании доменного имени, согласие администратора на размещение информации о ПО на сайте</p></li></ol><h3>Вместо заключения</h3><p>В этой статье разобраны наиболее типичные ошибки, надеюсь материал поможет вам успешно пройти процедуру. Однако на практике возникает множество других вопросов, в том числе по способам предоставления проверочного экземпляра ПО, объему сведений для размещения на сайте и др. Если этот формат найдет отклик на «Хабр», то напишу еще одну статью с разбором ошибок.</p><p>Буду рада обратной связи и вашим вопросам в комментариях :) </p><p></p>', 2, '2023-06-12 22:01:47', 539958, 100, '/ru/articles/724598/', 'Всем привет, это adlook!Вы хотите зарабатывать на сайтах и стать крутым пабом? У вас есть сын маминой подруги, который может помочь быстро наклепать сайт на коленке? Отличный вариант, если ваши планы — отсутствие профита и постоянные 404-ошибки. Недавно написали лонгрид про монетизацию сайтов для начинающих пабов. Бегло пробежались по SEO, но не сказали главного — чтобы интернет-проекты приносили деньги, нужна грамотная seo-оптимизация веб-ресурса. Сегодня речь пойдет о базовых основах SEO, которые помогут разобраться в некоторых тонкостях продвижения и монетизации сайтов. Давайте разбираться с самого начала. Как подготовиться к созданию seo-сайта?В первую очередь нужно проанализировать конкурентов. Это эффективный способ, помогающий определить функциональные возможности других веб-ресурсов. Взгляд со стороны выявляет сильные и слабые места в рамках поисковой оптимизации (SEO). Стратегия такая: мы берем самое лучшее у конкурентов, дорабатываем и внедряем на свою площадку. Далее нужно выстроить структуру платформы. То есть логическую связь страниц на сайте. Грамотная структура влияет на скорость работы поисковых роботов, а также на легкость перемещения пользователей по просторам вашей площадки. '),
(199, 'Как seo-оптимизировать сайт: основы поисковой оптимизации и проверка эффективности сайтов', '<p>Всем привет, это adlook!</p><p>Вы хотите зарабатывать на сайтах и стать крутым пабом? У вас есть сын маминой подруги, который может помочь быстро наклепать сайт на коленке? Отличный вариант, если ваши планы — отсутствие профита и постоянные 404-ошибки. </p><p>Недавно написали лонгрид про <a href=\"https://vc.ru/marketing/589735-kak-monetizirovat-sayt-instrukciya-dlya-chaynikov\" rel=\"noopener noreferrer nofollow\"><u>монетизацию сайтов для начинающих пабов</u></a>. Бегло пробежались по SEO, но не сказали главного — чтобы интернет-проекты приносили деньги, нужна грамотная seo-оптимизация веб-ресурса. Сегодня речь пойдет о базовых основах SEO, которые помогут разобраться в некоторых тонкостях продвижения и монетизации сайтов. Давайте разбираться с самого начала. </p><p><strong>Как подготовиться к созданию seo-сайта?</strong></p><p>В первую очередь нужно проанализировать конкурентов. Это эффективный способ, помогающий определить функциональные возможности других веб-ресурсов. Взгляд со стороны выявляет сильные и слабые места в рамках поисковой оптимизации (SEO). Стратегия такая: мы берем самое лучшее у конкурентов, дорабатываем и внедряем на свою площадку. </p><p>Далее нужно выстроить структуру платформы. То есть логическую связь страниц на сайте. Грамотная структура влияет на скорость работы поисковых роботов, а также на легкость перемещения пользователей по просторам вашей площадки. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/f56/d65/a65/f56d65a6516bceaf4cb8835738734f5d.jpeg\" width=\"1280\" height=\"599\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f56/d65/a65/f56d65a6516bceaf4cb8835738734f5d.jpeg\" data-blurred=\"true\"><figcaption></figcaption></figure><p>Вот пример хорошего сайта. Структурно это выглядит так:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/68f/484/1d0/68f4841d0d8673b5b08ab05381c9ff97.png\" width=\"2401\" height=\"1080\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/68f/484/1d0/68f4841d0d8673b5b08ab05381c9ff97.png\"><figcaption></figcaption></figure><p>Следующий шаг — прототипирование, или “черновой вариант” будущего сайта. Этот этап дает детальную картину устройства и функциональности платформы. Если на сайте есть косяки и недоработки, прототипирование это продемонстрирует. </p><p><strong>Как управлять сайтом? Выбираем CMS</strong></p><p>Мы выявили слабости конкурентов, разработали структуру и прототип. Теперь надо приступать к выбору системы управления сайта (CMS — Content Management System). Стоит выбирать по таким параметрам:</p><ol><li><p>Популярность системы. Если вы не самостоятельно создаете сайт, а нанимаете исполнителя, всегда есть риск, что сотрудничество может внезапно прекратиться. Чтобы избежать рисков и неустоек, а также расширить список потенциальных исполнителей, выбирайте распространенную CMS. </p></li><li><p>Способность “потянуть” функционал сайта-прототипа. Если CMS не тянет требования, вам придется заниматься повторным прототипированием. </p></li></ol><p>Для собственных проектов (про которые мы писали <a href=\"https://vc.ru/s/adlook_me/573720-22-itoga-za-2022-y-god\" rel=\"noopener noreferrer nofollow\"><u>здесь</u></a>) adlook использует  WordPress — это удобный и супер-функциональный сервис, у которого в наличие есть редактор Gutenberg и множество бесплатных шаблонов. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e37/bcf/686/e37bcf6861a97667e408fb3a0f875b4a.png\" width=\"1280\" height=\"814\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e37/bcf/686/e37bcf6861a97667e408fb3a0f875b4a.png\"><figcaption></figcaption></figure><p>Не менее популярные CMS — 1С-Битрикс, OpenCart, Laravel.</p><p><strong>SEO-дизайн сайта: что нужно знать?</strong></p><p>Веб-дизайн — один из ключевых параметров оптимизации сайта. Чтобы сайт хорошо ранжировался, нужно разрабатывать дизайн по всем правилам. Вот полезный алгоритм действий от SEO-специалистов: </p><ol><li><p>Анализируем топовые сайты поисковой выдачи, определяем “что можно было бы доработать”.</p></li></ol><p>Давайте возьмем музыкальную тему. Вводим в поисковике запрос MF DOOM”. Первые позиции — Wikipedia, Youtube, стриминговый сервис Яндекс.Музыка. Листаем ниже и находим инфопроект. Он восьмой в выдаче.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/f9c/fef/5ba/f9cfef5baea1a37e0bd1a9b6664c0c2a.jpeg\" width=\"1280\" height=\"605\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f9c/fef/5ba/f9cfef5baea1a37e0bd1a9b6664c0c2a.jpeg\" data-blurred=\"true\"><figcaption></figcaption></figure><p>Здесь прекрасно все: верстка, наличие тегов, структура сайт, возможность послушать исполнителя, текстовый контент, статистика прослушиваний, кнопка call-to-action “Зарегистрироваться на <a href=\"http://LAST.FM\" rel=\"noopener noreferrer nofollow\">LAST.FM</a>”. Кстати, не подвела и мобильная версия сайта.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/e54/3fb/84b/e543fb84b04e83e7d8379d85daf0c894.jpeg\" width=\"630\" height=\"1280\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e54/3fb/84b/e543fb84b04e83e7d8379d85daf0c894.jpeg\" data-blurred=\"true\"><figcaption></figcaption></figure><ol start=\"2\"><li><p>Изучаем свою целевую ЦА. Если вы занимаетесь продвижением инфопроекта музыкальной направленности, целевой аудиторией, вероятнее всего, будут молодежь  (мужчины и женщины от 14 до 35 лет). Им нужен привлекательный вид страниц, минималистичный, с сочными и красивыми картинками. Обязательны ссылки на социальные сети. </p></li></ol><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/d63/10e/567/d6310e567b9503ad992731fe06ac58ff.jpeg\" width=\"1280\" height=\"603\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d63/10e/567/d6310e567b9503ad992731fe06ac58ff.jpeg\" data-blurred=\"true\"><figcaption></figcaption></figure><p>Можно использовать неформальный тон общения, немного провокации и трендов.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/0a6/f8f/b1b/0a6f8fb1ba153e4c0d5315cf7c48d664.jpeg\" width=\"1280\" height=\"609\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/0a6/f8f/b1b/0a6f8fb1ba153e4c0d5315cf7c48d664.jpeg\" data-blurred=\"true\"><figcaption></figcaption></figure><ol start=\"3\"><li><p>Проверяем адаптивность дизайна. Сайт должен полноценно работать как на мобильных устройствах, так и на ноутбуке. </p></li><li><p>Делаем высокую загрузку сайта — не больше двух секунд. . </p></li><li><p>Уделяем внимание поведенческому фактору юзеров. Дизайн не должен увеличить проценты отказов или понижать глубину просмотров. </p></li><li><p>Разрабатываем дизайн с пользой для посетителей. Пользователь не должен долго искать необходимую информацию на платформе или путаться на страницах. Нужна удобная навигация.</p></li></ol><p>Вот пример удачной навигации сайта  <a href=\"https://muzika-i-kultura.ru/\" rel=\"noopener noreferrer nofollow\"><u>https://muzika-i-kultura.ru</u></a>.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/997/a81/69e/997a8169ea784bb4d0a6d7cacfc0472a.jpeg\" width=\"1280\" height=\"603\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/997/a81/69e/997a8169ea784bb4d0a6d7cacfc0472a.jpeg\" data-blurred=\"true\"><figcaption></figcaption></figure><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/f57/04c/426/f5704c426ece60457fd70d1179e78412.jpeg\" width=\"1280\" height=\"613\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f57/04c/426/f5704c426ece60457fd70d1179e78412.jpeg\" data-blurred=\"true\"><figcaption></figcaption></figure><p><strong>Базовые принципы SEO-оптимизации</strong></p><p>Вот мы и подобрались к самому сложному, но интересному. Здесь будет много непонятных букв и цифр. Мы все объясним. </p><p>В идеале, базовая SEO-оптимизация делается один раз. Это фундамент, на котором строится дальнейшая стратегия SEO-продвижения. Для максимального эффекта от базового СЕО необходима 100% индексация поисковыми роботами.</p><p>SEO-база состоит из:</p><ol><li><p>Метатегов. Они же HTML-теги. Их предназначение — предоставление структурированной информации о странице веб-сайта. Метатеги — помощники поисковых роботов, которые дают им возможность распознать тематику страницы и ее содержимое. HTML-теги должны быть понятными для поисковика — это повышает сайт в выдаче по ключевому запросу. </p></li><li><p>Понятного человеческого  URL. ЧПУ расшифровывается как человекопонятный URL. Под ним подразумевается URL-путь, который состоит из понятных слов. Он должен отражать структуру файлов сайта. Вместо  /c65/4/97/ должно быть /korol-anglijskogo-repa-mf-doom/.</p></li></ol><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/556/42c/0e3/55642c0e352a9360c94491596c50bd5d.png\" width=\"1280\" height=\"767\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/556/42c/0e3/55642c0e352a9360c94491596c50bd5d.png\"><figcaption></figcaption></figure><p>Нужно позаботиться о правильных адресах на начальных стадиях разработки сайта. Параметр важен для продвижения, потому что поисковики ищут пользовательские запросы по адресам страниц. </p><ol start=\"3\"><li><p>Навигационной цепочки. Они же хлебные крошки. Представляют собой цепочку из ссылок, по которой пользователи могут перемещаться по сайту — от главной страницы до определенной рубрики. Цепочки навигации — один из способов связывания страниц сайта между собой с помощью гиперссылок. Наглядно о “хлебных крошках”:</p></li></ol><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b24/b26/bf7/b24b26bf7022b77699576eca33959412.png\" width=\"1600\" height=\"62\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b24/b26/bf7/b24b26bf7022b77699576eca33959412.png\"><figcaption></figcaption></figure><ol start=\"4\"><li><p>Карты сайта. Это своеобразное “содержание”, представляющее собой список страниц площадки для поисковых систем. Являются элементом навигации. </p></li></ol><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/456/cb9/b40/456cb9b409a442a29f5f1e680ae6d1e8.png\" width=\"1280\" height=\"553\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/456/cb9/b40/456cb9b409a442a29f5f1e680ae6d1e8.png\"><figcaption></figcaption></figure><ol start=\"5\"><li><p>Robots.txt — стандарты для поисковых роботов из разряда: “Здесь можно смотреть, а тут нельзя”. Можно ограничить доступ к контенту на http-сервере, если добавить текстовый файл robots.txt.</p></li><li><p>Ошибок 404. Такие ошибки являются кодом ответа сервера. Они появляются, когда браузер не смог обнаружить на серверах указанный URL. То есть, вы зашли на сайт, но страница была удалена. Либо у вас к ней по каким-то причинам нет доступа.</p></li><li><p>Удаления дублей. Страницы-дубли — это страницы, которые имеют разный адрес, но контент на них либо полностью, либо наполовину совпадает.  Дубли страниц мешают сайту полноценно индексироваться в поисковой системе. </p></li></ol><p><strong>Как проверить SEO-эффективность сайта?</strong></p><p>После создания сайта с качественным контентом, проверки и настройки базового SEO, выполняется следующий шаг. Владельцам сайтов важно понимать, насколько хорошо работает площадка. Проверить можно несколькими способами. </p><ol><li><p><strong>Анализ по ключевым словам</strong></p></li></ol><p>Контроль позиций сайта в ТОПе по статистике ключевых слов — не гарантия точности. Особенно в связи тенденцией персонализации поиска, из-за которой стало сложнее отследить результаты. <br>Тем не менее, по ключевым словам можно определить, какую конкретно позицию по основным запросам занимает сайт. Высокая позиция является хорошим показателем видимости веб-ресурса в органическом поиске. </p><p>Давайте посмотрим на примере сайта <a href=\"https://muzika-i-kultura.ru/\" rel=\"noopener noreferrer nofollow\"><u>https://muzika-i-kultura.ru/</u></a>. Основные ключи: </p><figure class=\"\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/086/81b/9a0/08681b9a0e319026634a84107098f3c0.jpeg\" width=\"285\" height=\"140\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/086/81b/9a0/08681b9a0e319026634a84107098f3c0.jpeg\" data-blurred=\"true\"><figcaption></figcaption></figure><p>Далее заходим в поисковик Яндекса и набираем ключевые слова:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/d1a/22d/e32/d1a22de3248be14d7cd7ed99b0370255.jpeg\" width=\"935\" height=\"68\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d1a/22d/e32/d1a22de3248be14d7cd7ed99b0370255.jpeg\" data-blurred=\"true\"><figcaption></figcaption></figure><p>Смотрим позицию в поисковике.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/475/033/a9f/475033a9f40b92d75ed7adb6a58bfbc2.jpeg\" width=\"1280\" height=\"856\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/475/033/a9f/475033a9f40b92d75ed7adb6a58bfbc2.jpeg\" data-blurred=\"true\"><figcaption></figcaption></figure><p>Также вы можете проверить релевантность запросов на сервисе WordStat. Сервис предназначен для оценки пользовательского интереса к конкретным тематикам и для подбора ключевых слов рекламодателями Яндекс.Директа. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/4fb/c20/4fa/4fbc204faf85602d33848328c77a8613.jpeg\" width=\"1280\" height=\"784\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/4fb/c20/4fa/4fbc204faf85602d33848328c77a8613.jpeg\" data-blurred=\"true\"><figcaption></figcaption></figure><p>Выше был описан ручной проверки позиций веб-сайта. Мы вводили ключевое слово в поисковую строку и искали ссылку на сайт. </p><p>Ручной ввод и серчинг по поисковику — не самый быстрый способ проверки.  Для ускорения процесса можно воспользоваться бесплатными (и платными)  инструментами  анализа позиций сайта. Например, Parsesite, Яндекс.Вебмастер, Google Search Console и прочие.</p><ol start=\"2\"><li><p><strong>Проверка органического трафика</strong></p></li></ol><p>Органический трафик — это индикатор качества вашей SEO-работы. При анализе органического трафика сайта вы можете определить фактическое количество посетителей, которые приходят на ваш сайт. Проанализировать это можно с помощью сервисов аналитики. Чаще всего они бесплатны и эффективны. Мы используем Яндекс.Метрику. Такая статистика и отчеты дадут понимания, как именно настроена SEO-оптимизация и откуда поступает трафик на вашу площадку. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/ce8/8a7/cc3/ce88a7cc32143dc3081cd765dc622130.jpeg\" width=\"1203\" height=\"1280\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ce8/8a7/cc3/ce88a7cc32143dc3081cd765dc622130.jpeg\" data-blurred=\"true\"><figcaption></figcaption></figure><ol start=\"3\"><li><p><strong>Количество лидов и продаж с органического трафика</strong></p></li></ol><p>Появление лидов, продаж и профита — это результат работы поисковой оптимизации. Чтобы оценить эффективность сайта, задаем себе прямой вопрос: “Как SEO помогает мне увеличить прибыль?”. </p><p>Установка цели и отслеживание электронной торговли с помощью Яндекс.Метрики — самый простой и работающий метод. Можно использовать эти инструменты для анализа органики по целевой странице. Показатель конверсии — это процент пользователей, которые посетили веб-ресурс и совершили активное действие за конкретный период. Благодаря Яндекс Метрики и Google Analytics вы сможете посмотреть, какие юзеры, переходящие из органического трафика, совершают конверсию, а какие приходят на сайт из-за контекстной рекламы. </p><p><strong>Вопрос на миллион. Зачем же нужна SEO-оптимизация? </strong></p><p>Все критерии, тонкости, сложные аббревиатуры… Они необходимы, чтобы ваш сайт был в ТОПе поисковой выдачи. Чем больше юзеров перешло на ваш сайт, тем выше вероятность, что на вашем сайте произойдет активное действие — покупка товаров или услуг.  Давайте проведем логическую цепочку. Нет SEO — нет хорошей поисковой выдачи. Нет поисковой выдачи — нет пользователей. Нет пользователей — нет монетизации. Нет монетизации — нет денег. Все просто! </p><p>Знаете еще способы seo-оптимизировать сайты? Пишите в комментарии, делитесь своим мнением, задавайте вопросы — мы на них с удовольствием ответим. </p><p>Это был adlook. До связи :)</p><p></p>', 3, '2023-06-12 22:01:47', 494238, 100, '/ru/articles/714848/', 'Всем привет, это ADlook! Сегодня статья из разряда \"ну, это база\". Поговорим о моделях монетизации и разберёмся, с какой лучше работать в разных случаях: если нужно сэкономить на конверсиях, повысить узнаваемость бренда, увеличить охват и многое другое. Подготовили шпаргалки с формулами и наглядные примеры, которые будут особенно полезны тем, кто только начинает погружаться в мир digital-маркетинга. Начинаем.'),
(200, 'Такие разные модели монетизации сайта: CPM, CPA, CPC, CPI. Какая выгоднее?', '<p>Всем привет, это ADlook! Сегодня статья из разряда \"ну, это база\". Поговорим о моделях монетизации и разберёмся, с какой лучше работать в разных случаях: если нужно сэкономить на конверсиях, повысить узнаваемость бренда, увеличить охват и многое другое. Подготовили шпаргалки с формулами и наглядные примеры, которые будут особенно полезны тем, кто только начинает погружаться в мир digital-маркетинга. Начинаем.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/052/442/230/0524422307f43d62e67d78ea96117d7b.jpg\" width=\"1600\" height=\"482\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/052/442/230/0524422307f43d62e67d78ea96117d7b.jpg\" data-blurred=\"true\"><figcaption></figcaption></figure><h3>Модель CPM</h3><p>Cost per Mille – это модель, привязанная к стоимости тысячи показов. Она работает в случае с площадками для размещения рекламы и не только. Часто ее предпочитают арбитражники. Минус – сложность прогнозирования: трудно предсказать, сколько показов окупится. Недостаток субъективен, потому что все зависит от ниши. CPM – выбор опытных маркетологов: модель рискованная.</p><p>Мы занимаемся монетизацией по данной модели. Почему? Расскажем чуть позже.</p><p>CPM = Cost per Mile = цена тысячи показов</p><p>Формула расчета: общий расход / количество показов x 1000</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/afa/395/1a0/afa3951a0d83d799482b9022f4087cd3.jpeg\" width=\"1600\" height=\"720\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/afa/395/1a0/afa3951a0d83d799482b9022f4087cd3.jpeg\" data-blurred=\"true\"><figcaption></figcaption></figure><p>Модель востребована при:</p><ul><li><p>настройке контекстной рекламы;</p></li><li><p>запуске кампаний в социальных сетях;</p></li><li><p>размещении медийной рекламы на тематических площадках.</p></li></ul><p>Пример: интернет-магазин женского белья размещает на каком-либо ресурсе баннер с рекламой нового комплекта. Владелец просит 15 тысяч рублей в неделю, обещает 30 тысяч просмотров. CPM = 15 000 / 30 000 x 1000. Калькулятор говорит, что получится 500.</p><p>Подробно разбираем модель <a href=\"https://vc.ru/marketing/482571-klik-s-pervogo-vzglyada\" rel=\"noopener noreferrer nofollow\">тут</a>.</p><h3>Модель CPA</h3><p>Cost per Acquisition – модель, предполагающая выплату вознаграждения партнеру после совершения пользователем целевого действия. Это, например, регистрация на сервисе или просмотр видеоролика. Прибыльный вариант, но есть минус – высокая стоимость действия (вплоть до 10 долларов и больше). Новичкам модель не подойдет: нужен анализ, важно понимать суть маркетинга.</p><p>CPA = Cost per Acquisition = цена привлечения</p><p>Формула расчета: стоимость размещения / количество целевых действий</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/296/c9c/ae9/296c9cae916d12bab51fae37f003ca17.jpeg\" width=\"1600\" height=\"720\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/296/c9c/ae9/296c9cae916d12bab51fae37f003ca17.jpeg\" data-blurred=\"true\"><figcaption></figcaption></figure><p>Модель востребована среди оптимизаторов со стажем, знающих как минимум основы альтернативных вариантов. Просто взять и перейти к CPA – значит с вероятностью в 90% «слить» бюджет.</p><p>Пример: агентство продвижения просит 50 тысяч на рекламу. Целевое действие – регистрация на сайте. Результат – прирост числа пользователей на 5 тысяч человек. Тогда CPA = 50 000 / 5000. Получаем 10. Рублей, спичек или наклеек – не имеет значения. Именно во столько обошелся продвигаемому сайту 1 новый пользователь, прошедший регистрацию.</p><h3>Модель CPC</h3><p>Cost per Click – модель, привязанная к стоимости клика. Распространенный вариант, востребованный среди арбитражников и создателей сайтов. Каждый клик приводит к получению владельцем рекламной площадки вознаграждения. «Яндекс» предлагает минимальную среднюю цену данного действия, которая составляет 0,9 рублей (лето 2022 года).</p><p>CPC = Cost per Click = цена клика</p><p>Формула расчета: стоимость кампании / клики</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/6d8/1b0/da2/6d81b0da2ef1beca20477e7ed8280cfa.jpeg\" width=\"1600\" height=\"720\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/6d8/1b0/da2/6d81b0da2ef1beca20477e7ed8280cfa.jpeg\" data-blurred=\"true\"><figcaption></figcaption></figure><p>Веб-мастеры, владельцы рекламных площадок часто предпочитают CPC остальным вариантам. Объясняется это возможностью управлять результатами каждой конкретной кампании через повышение ставки. Функция предусмотрена «Яндексом» и другими площадками.</p><p>Пример: бюджет кампании – 7 тысяч. По баннеру кликнули 700 человек. CPC = 7000 / 700. Вроде бы 10. Да, точно. Это стоимость клика.</p><h3>Модель CPI</h3><p>Cost per Installation – модель, связанная со стоимостью установки. Подойдет компаниям, выпускающим приложения. Без факта скачивания и запуска установки владелец рекламной площадки не получит деньги. При определенных требованиях можно и вовсе задать правило типа «хотя бы 1 факт использования».</p><p>CPI = Cost per Installation = стоимость установки.</p><p>Формула: стоимость кампании / количество скачавших и установивших приложение людей (если правило «установка» исключается, оплата вознаграждения владельцу рекламной площадки не поступает)</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/bda/da7/39e/bdada739e0325b6b99a33261bdc48972.jpeg\" width=\"1600\" height=\"720\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/bda/da7/39e/bdada739e0325b6b99a33261bdc48972.jpeg\" data-blurred=\"true\"><figcaption></figcaption></figure><p>Модель подойдет для новичков и профессионалов. Плюс – высокая окупаемость инвестиций. Однако гарантии, что пользователь продолжит пользоваться приложением и не удалит его, нет. Если вам ее дают, не верьте.</p><p>Пример: хотим рекламу мобильного агрегатора кафе и ресторанов, оказывающих услуги по доставке еды. Готовы платить 50 тысяч. Пусть приложение скачали и установили 2500 человек. Тогда CPI = 50 000 / 2500 = 20. Столько стоит одна установка.</p><h3>Кому и когда, что и почему: оптимальная модель для монетизации сайта</h3><p>Советуем сначала определиться с бюджетом, нишей, временем, отведенным на запуск кампании.</p><p>CPM подойдет:</p><ul><li><p>при необходимости максимально повысить охват, сделать продвигаемый предмет (объект) узнаваемым;</p></li><li><p>если есть объявление с высоким CTR (показатель кликабельности).</p></li></ul><p>Мы используем CPM, потому что осознаем роль узнаваемости и понимаем значимость охвата. Без них товар или услуга – просто что-то неизвестное. Еще CPM – это выгода для паблишера: просмотры набрать проще, чем добиться кликабельности баннера, например.</p><p>CPA нужна:</p><ul><li><p>при продажах;</p></li><li><p>когда есть статистика по конверсиям и можно заранее узнать ценность одной.</p></li></ul><p>Модель CPC хороша:</p><ul><li><p>когда нет статистики по конверсиям – при запуске рекламы нового продукта или незнакомой пользователям услуги;</p></li><li><p>если нужно добиться определенного количества переходов;</p></li><li><p>в случае, когда кликабельность потенциально или фактически минимальна.</p></li></ul><p>CPI подходит:</p><ul><li><p>при знании цены установки, если она приемлема;</p></li><li><p>если нужно сэкономить на конверсиях.</p></li></ul><p>Выбор за вами. О нашем опыте мы уже рассказали. Для монетизации сайтов рекомендуем CPM.</p><h3>Заключение</h3><p>Представленные в публикации модели подходят для решения разных задач. Выбирать нужно с учетом бюджета, ниши и собственных знаний. Вы можете оставить комментарий и поделиться собственным мнением о моделях монетизации, а также опытом. Вероятно, мы прислушаемся. И поделимся своим.</p><p>Всего за 4 года мы выплатили владельцам сайтов больше 260 миллионов рублей. Креативы нашей платформы просмотрели миллионы пользователей. Как? Свои корпоративные секреты мы раскрываем в этом блоге и на <a href=\"https://www.youtube.com/channel/UClr-VQ087RdWkC-qP2WjMzQ/about\" rel=\"noopener noreferrer nofollow\">YouTube-канале</a>. Подписывайтесь и погружайтесь в мир programmatic-рекламы с нами. До связи! :)</p>', 3, '2023-06-12 22:01:48', 187337, 100, '/ru/articles/713496/', 'Эффективное управление техническим долгом как никогда актуально в текущей ситуации импортозамещения и перехода многих компаний на собственные решения. Монетизация техдолга и его последствий — ключ к тому, чтобы сделать его осязаемым и понятным не только для IT специалистов, но и для владельцев продуктов и руководства компании.Предлагаемый подход поможет компаниям оцифровать техдолг, понять уровень риска, приемлемый для компании, и выделить соответствующий бюджет на закрытие техдолга, что приведет к повышению устойчивости архитектуры и бизнес-процессов по отношению к внутренним и внешним факторам.'),
(201, 'Сколько стоит техдолг?', '<p>В последнее время в сообществах архитекторов и разработчиков часто фигурирует тема технического долга. Техдолг – неотъемлемая часть продуктовой разработки. Ведь для быстрого получения бизнес-результатов, тестирования продуктовых гипотез или закрытия каких-то срочных бизнес-проблем командам часто приходится реализовывать нецелевые MVP решения или откладывать на потом автоматизацию тестирования. Здравый смысл, а кому-то и жизненный опыт финансового долга подсказывают, что лучше не влезать в долги, а если взял, то их своевременно возвращать. Но так ли это в случае с техдолгом?</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/03e/216/707/03e21670702b7688e8547cc49d9ab35f.jpg\" width=\"624\" height=\"199\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/03e/216/707/03e21670702b7688e8547cc49d9ab35f.jpg\" data-blurred=\"true\"><figcaption></figcaption></figure><p>В своей практике я встречаюсь с противоречивым отношением к техническому долгу в компаниях. </p><p>С одной стороны, владельцы продуктов понимают, что техдолгом необходимо управлять, что его прирост негативно сказывается на развитии компании, начиная от усложнения разработки (технические ограничения на доработку решений, увеличение time-to-market) до серьезных финансовых и репутационных рисков падения систем и поддерживаемых ими бизнес-процессов. </p><p>С другой стороны, они не готовы выделять реальные ресурсы команды, отдавая приоритет разработке продуктовых фич. Если в вашей команде нет практики заведения техдолга, если процесс работы с техдолгом непрозрачный и зависит от переговорной силы команды, то дайте почитать эту статью вашему продакту.  </p><h2>Как подружить техдолг и продуктовый подход?</h2><p>Сегодня многие компании активно переходят на продуктовую разработку. Основная причина этого – продуктовый подход базируется на реализации того, что нужно клиенту, что даст наибольшую окупаемость инвестиций. Когда мы говорим о техническом долге, то чаще всего апеллируем к качеству решений, их надежности, современным технологиям и подходам к разработке. Это вступает в противоречие с продуктовым подходом, для которого работа с техдолгом означает сокращение бюджета на новые фичи и, соответственно, ожидаемой выручки. </p><p>Самым эффективным вариантом устранения противоречия между задачами развития продукта и обеспечения высокого качества технологического решения я считаю переход к оценке в одних и тех же единицах и сквозную приоритезацию продуктовых фич и техдолга. Для этого я применяю денежную модель сравнения затрат и выгод от реализации любой задачи.</p><h2>Техдолг на чаше весов</h2><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/2a6/3a1/bf8/2a63a1bf8bf1fa05365a29438c0a5f12.jpg\" width=\"780\" height=\"394\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/2a6/3a1/bf8/2a63a1bf8bf1fa05365a29438c0a5f12.jpg\" data-blurred=\"true\"><figcaption></figcaption></figure><p>Затратная часть работы с техдолгом очевидна – это время, которое команда потратит на исследование проблемы, поиск решения и его реализацию. Самая сложная задача – монетизировать выгоды от закрытия техдолга. </p><p>Накопление технического долга увеличивает сложность системы и порождает две критичные проблемы: падение стабильности систем и рост time-to-market. Выгода от решения техдолга – предотвращенные финансовые потери от этих проблем.</p><h4>Как монетизировать риск нестабильности системы?</h4><p>Пререквизитом качественной оценки влияния техдолга на надежность компании является понимание критичных для компании бизнес-процессов, генерирующих денежный поток, и их стоимости. Неработоспособность системы, реализующей какой-либо из шагов критичного бизнес-процесса, приводит к потерянной выручке или понесенным издержкам. Стоимость техдолга в этом случае привязана к реальным финансовым показателям компании и юридическим обязательствам. </p><h4>Сколько стоит непродуктивный час команды?</h4><p>Используя продуктовый подход, компании стремятся повысить скорость выпуска изменений на продуктивную среду за счет короткого релизного цикла и постепенных итераций по обратной связи от пользователей. Скорость команды очень важна, сколько задач команда в среднем берет в спринт, сколько времени занимает путь задачи от заведения до деплоя – все это отслеживается по отчетам в Jira. </p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/1b0/161/226/1b01612268bf204a8e308bd094b3351e.png\" width=\"494\" height=\"249\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/1b0/161/226/1b01612268bf204a8e308bd094b3351e.png\"><figcaption></figcaption></figure><p>Наличие техдолга, как наличие аварии на дороге, заставляет команду стоять в пробке с какими-то продуктовыми фичами или тратить лишнее время на объезд техдолга. В обоих случаях производительность команды снижается. Оценка техдолга, который влияет на скорость разработки, определяется стоимостью времени, которое команда тратит непродуктивно из-за наличия техдолга или из-за отсутствия каких-то инструментов и практик, например, автотестирования.</p><h2>Фокус на регулярной работе с техдолгом</h2><p>Формирование единого понимания между командой и владельцем продукта, что есть техдолг, почему он может иметь такой же приоритет как и продуктовые фичи – половина успеха. Важную роль в превращении работы с техдолгом в практику управления им занимает формирование единого понимания, что это не одноразовая акция (завел-закрыл-молодец), а регулярный процесс, который необходимо встроить в ежедневные активности команды. </p><p>Команда и владелец продукта должны не только оценивать задачи техдолга и продуктовые фичи в одних и тех же единицах, но и работать с задачами техдолга аналогично продуктовым: заводить их в единый бэклог команды сразу после выявления на любом из этапов продуктовой разработки (анализ, проектирование, разработка, QA, поддержка), оценивать трудозатраты на грумминге бэклога и брать в спринт для реализации в соответствии с приоритетом задачи. </p><h2>Заведение техдолга для его «выплаты» </h2><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/be5/db6/527/be5db6527ac44a6c23ed0a66f863a13a.png\" width=\"335\" height=\"408\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/be5/db6/527/be5db6527ac44a6c23ed0a66f863a13a.png\"><figcaption></figcaption></figure><p>Чаще всего достаточно перехода на денежную оценку техдолга для того, чтобы владелец продукта смог самостоятельно выстроить в бэклоге продуктовой команды сквозные приоритеты между задачами техдолга и продуктовыми фичами. В этом случае проблема «фаворитизма» в отношении продуктовых задач уходит сама собой. РО просто берет в спринт задачи с наиболее высоким приоритетом в бэклоге, не выделяя, что какие-то из них являются техдолгом. </p><p>Если на первом этапе РО сложно принять полное «равноправие» продуктовых задач и техдолга, то можно в рамках команды принять решение о выделении фиксированного процента времени в спринт на его закрытие. Однако такой подход полезен как «учебный» этап для выработки полезной привычки закрытия техдолга, его использование на постоянной основе может привести к тому, что команда будет тратить время спринта на неприоритетные задачи техдолга, только чтобы заполнить фиксированный процент. </p><h2>А если в команде не заложен бюджет на техдолг?</h2><p>Большим препятствие для выстраивания работы с техдолгом может стать жесткая привязка на уровне компании бюджета команды к разработке заявленных продуктовых фич. В этом случае у владельца продукта связаны руки: он может изредка пытаться выделять время команды на закрытие наиболее критичных задач техдолга, но не более того, эффективное управление со сквозными приоритетами выстроить будет невозможно. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/1ff/203/717/1ff203717ff2d7f16b4ba677efd3b42c.jpg\" width=\"1025\" height=\"577\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/1ff/203/717/1ff203717ff2d7f16b4ba677efd3b42c.jpg\" data-blurred=\"true\"><figcaption></figcaption></figure><p>Для владельца продукта важно донести до руководителей компании факт наличия техдолга в продукте и закладывать в трудозатраты на регулярную работу с ним при формировании бюджета. </p><p>Добиться получения бюджета можно только прозрачностью техдолга: понятная денежная оценка риска или упущенной выгоды, сопоставимая с ожидаемой выручкой продуктовых фич, регулярное подсвечивание динамики стоимости техдолга и тех рисков, которые принимает на себя компания. </p><h2>Рецепт успеха</h2><p>Подводя итоги, успех выстраивания процесса работы с техдолгом в продуктовой команде зависит от трех составляющих: </p><ul><li><p>прозрачность техдолга на уровне компании и включение владельцем продукта трудозатрат на закрытие техдолга в бюджет команды,</p></li><li><p>оценка техдолга и продуктовых задач в одних и тех же единицах - деньгах,</p></li><li><p>регулярное заведение и закрытие техдолга в соответствии со сквозными приоритетами. </p></li></ul><p></p>', 2, '2023-06-12 22:01:49', 959878, 100, '/ru/companies/axenix/articles/699780/', '* Компания Meta Platforms Inc., владеющая социальными сетями Facebook, признана экстремистской организацией, ее деятельность на территории России запрещена.В данном посте я представлю перевод главы одной статьи случайно попавшейся мне на глаза. Статья называется \"The Political Economy of Privacy on Facebook\" (Политическая экономия конфиденциальности на Facebook), автор Christian Fuchs (Кристиан Фукс, Швеция) опубликовал её ещё в 2012 году, однако, мне показалось, что её содержание достаточно актуально и интересно продвинутым пользователям Сети. В статье автор даёт определение понятию конфиденциальность (privacy) в общем случае, а также применяет его на примере функционирования Facebook. Я бы хотел остановиться на одной из глав, одноимённой с названием данного поста — The Political Economy of Facebook (Политическая экономия Facebook). Автор, используя термины политической экономии и теории Маркса, описывает отношения между пользователями, сотрудниками и бенефициарами компании Facebook. Несмотря на то, что автор повествует о модели конкретной компании, я считаю, что она может быть применима ко многим современным социальным сетям и онлайн платформам, созданных по типу Web 2.0, где пользователи генерируют контент.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(202, 'Политическая экономия Facebook*', '<p><em>* Компания Meta Platforms Inc., владеющая социальной сетью Facebook, признана экстремистской организацией, ее деятельность на территории России запрещена, она также входит</em> <em>в перечень террористов и экстремистов. </em></p><h2>Предисловие</h2><p>В данном посте я представлю перевод главы одной статьи случайно попавшейся мне на глаза. Статья называется \"<a href=\"https://www.dhi.ac.uk/san/waysofbeing/data/citizenship-robson-fuchs-2012.pdf\" rel=\"noopener noreferrer nofollow\">The Political Economy of Privacy on Facebook</a>\" (Политическая экономия конфиденциальности на Facebook), автор Christian Fuchs (Кристиан Фукс, Швеция) опубликовал её ещё в 2012 году, однако, мне показалось, что её содержание достаточно актуально и интересно продвинутым пользователям Сети. В статье автор даёт определение понятию конфиденциальность (privacy) в общем случае, а также применяет его на примере функционирования Facebook. Я бы хотел остановиться на одной из глав, одноимённой с названием данного поста — The Political Economy of Facebook (Политическая экономия Facebook). Автор, используя термины политической экономии и теории Маркса, описывает отношения между пользователями, сотрудниками и бенефициарами компании Facebook. <em>Несмотря на то, что автор повествует о модели конкретной компании, я считаю, что она может быть применима ко многим современным социальным сетям и онлайн платформам, созданных по типу Web 2.0, где пользователи генерируют контент.</em></p><p>В тексте статьи я иногда использую термины \"Веб\" и \"Интернет\" имея ввиду одно и то же — Web. Дело в том, что в русском языке слово \"Интернет\" зачастую используется для обозначения Всемирной паутины (Веба), хотя по сути имеет другой смысл, поэтому я решил не заморачиваться и использовать оба термина, как равнозначные.</p><p>Понимаю, что статья может вызвать огромный диспут, однако, всё же <em>попрошу людей выразить своё мнение по прочтении в комментариях с согласием, несогласием или уточнениями</em>. В тексте перевода я опущу ссылки на литературу в целях экономии времени и места, желающие ознакомиться с ними могут посмотреть <a href=\"https://www.dhi.ac.uk/san/waysofbeing/data/citizenship-robson-fuchs-2012.pdf\" rel=\"noopener noreferrer nofollow\">оригинал</a>. Также, я выделяю <em>курсивом</em> некоторые особо важные, на мой взгляд, фрагменты текста. Итак, начнём.</p><h2>Политическая экономия Facebook</h2><p>Элвин Тоффлер (1980) ввел понятие \"просьюмер\" (англ. prosumer) в начале 1980-х годов. Оно означает <em>\"прогрессирующее размывание границы, отделяющей производителя от потребителя\"</em>. Тоффлер описывает эпоху просьюмерства (англ. prosumption) как приход новой экономической и политической демократии, самоопределяющегося труда, автономии труда, местного производства и автономного самовоспроизводства. Но он упускает из виду, что <em>просьюмерство используется для передачи работы на аутсорсинг пользователям и потребителям, которые работают без оплаты</em>. В этой модели корпорации снижают свои инвестиционные затраты и стоимость труда, сокращают рабочие места и эксплуатируют потребителей, которые работают бесплатно. <em>Неоплаченный труд производит прибавочную стоимость, которая присваивается и превращается в корпоративную прибыль</em>. Несмотря на оптимизм Тоффлера, его понятие \"просьюмера\" описывает важные изменения в структурах и практиках медиа, которые, следовательно, могут быть изучены через критические исследования.</p><p>Все чаще пользователи Facebook утверждают, что компания эксплуатирует их, получая прибыль с помощью их данных. Понятие эксплуатации часто не объясняется и не разъясняется в таком контексте. Маркс (1867) дал лучшее и наиболее важное объяснение эксплуатации в капитализме. Чтобы понять как работает эксплуатация на примере Facebook и избежать простых моральных призывов с помощью аналитически обоснованной критики, необходимо вникнуть в некоторые детали Марксистской политической экономии.</p><p>На рисунке 1 показан процесс накопления капитала в Facebook. <em>Facebook инвестирует деньги (М) для покупки капитала</em>: технологий (сервера, компьютеры, организационная инфраструктура и т.д.) и рабочей силы (оплачиваемых сотрудников Facebook). Это расходы на постоянный (c) и переменный капитал (v<sub>1</sub>). Результатом производственного процесса P<sub>1</sub> является не товар, который непосредственно продается, а скорее услуги социальной сети (платформа Facebook), которые предоставляются её пользователям бесплатно. <em>Сотрудники Facebook, создающие онлайн платформу к которой имеют доступ пользователи Facebook, производят часть прибавочной стоимости</em>. Пользователи Facebook используют платформу для создания контента, загружая собственные данные. Постоянный и переменный капитал, инвестированный Facebook (c, v<sub>1</sub>) и воплощённый в их онлайн платформе, является предпосылкой для деятельности пользователей в производственном процессе P<sub>2</sub>. Результаты P<sub>2 </sub>включают данные, созданные пользователями, персональные данные и данные о транзакциях, касающиеся поведения пользователей при просмотре сайтов и общении в Facebook. <em>Пользователи вкладывают определенные трудозатраты v<sub>2</sub> в такой процесс генерации контента (P<sub>2</sub>)</em>. <em>Facebook продает данные пользователей рекламным клиентам по цене, превышающей вложенный постоянный и переменный капитал. Прибавочная стоимость, содержащаяся в этом товаре частично создается пользователями, частично </em>—<em> сотрудниками Facebook. Разница заключается в том, что труд пользователей неоплачен, и поэтому доля эксплуатации их труда стремится к бесконечности.</em> </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/0b1/7ad/f2e/0b17adf2e8f71a53b240a82078117dc4.jpg\" alt=\"Накопление капитала в Facebook (переведённое изображение)\" title=\"Накопление капитала в Facebook (переведённое изображение)\" width=\"799\" height=\"516\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/0b1/7ad/f2e/0b17adf2e8f71a53b240a82078117dc4.jpg\" data-blurred=\"true\"><figcaption>Накопление капитала в Facebook (переведённое изображение)</figcaption></figure><p>Как только товар произведённый интернет-пользователем (просьюмером), содержащий пользовательский контент, данные о транзакциях и право доступа к виртуальному рекламному пространству и времени, продается рекламным клиентам, он превращается в денежный капитал, а прибавочная стоимость реализуется в деньги. По Марксу (1867), <em>норма прибыли — это отношение прибыли (прибавочной стоимости) к инвестиционным затратам</em>:</p><img class=\"formula\" source=\"p = \\frac{s}{c + v} = \\frac{прибавочная\\;стоимость}{постоянный\\;капитал + переменный\\;капитал}\" alt=\"p = \\frac{s}{c + v} = \\frac{прибавочная\\;стоимость}{постоянный\\;капитал + переменный\\;капитал}\" src=\"https://habrastorage.org/getpro/habr/upload_files/d4d/24b/fa7/d4d24bfa75b5e567173e8c7094fee73c.svg\" width=\"434\" height=\"48\"><p>Если интернет-пользователи становятся производительными просьюмерами в рамках Web 2.0, то <em>с точки зрения Марксистской классовой теории это означает, что они становятся производительными рабочими, которых эксплуатирует капитал</em>, поскольку, по Марксу, производительный труд создает прибавочную стоимость. Таким образом, в случае с Facebook, <em>эксплуатация и получение прибавочной стоимости осуществляется не только за счёт тех, кто нанят для разработки программ, обновления и обслуживания программного и аппаратного обеспечения, маркетинговой деятельности и так далее, но и за счёт пользователей-просьюмеров, которые участвуют в производстве пользовательского контента</em>. Современные медиакорпорации не платят (или почти не платят) пользователям за производство контента. Широко применяемая стратегия накопления заключается <em>в предоставлении пользователям свободного доступа к сервисам и платформам, дабы дать им возможность производить контент, тем самым накапливая массу просьюмеров, которые и продаются как товар сторонним рекламодателям</em>. Никакой продукт не продается пользователям-просьюмерам; <em>пользователи сами продаются корпорациями как товар рекламодателям</em>. Чем больше заявленных пользователей у социальной платформы, тем выше расценки на рекламу внутри неё. Время производительного труда, эксплуатируемое капиталом, включает в себя, с одной стороны, время труда оплачиваемых работников, и, с другой стороны, все время, проведенное пользователями в Интернете. <em>Современные медиакорпорации платят зарплату за первый тип информационного труда, но не за второй</em>. Т.е. не существует ни переменных, ни постоянных инвестиционных затрат для этой статьи расходов. Таким образом, формулу для нормы прибыли необходимо преобразовать следующим образом для данной стратегии накопления:</p><img class=\"formula\" source=\"p = \\frac{s}{(c + v_1 + v_2)}\" alt=\"p = \\frac{s}{(c + v_1 + v_2)}\" src=\"https://habrastorage.org/getpro/habr/upload_files/b46/306/205/b46306205734dc7590830ef4ebcc5ba4.svg\" width=\"153\" height=\"45\"><p>Где <em>s</em> — прибавочная стоимость; <em>с</em> — постоянный капитал; v<sub>1 </sub>— заработная плата, выплачиваемая постоянным работникам; v<sub>2 </sub>— заработная плата, выплачиваемая пользователям.</p><p>Обычно, v<sub>2 </sub> стремится к 0 и заменяется v<sub>1</sub>. <em>Если бы время, проведённое в Интернете, пользователями занимающимися производством контента оплачивалось, то переменные затраты социальной платформы возросли бы, а прибыль уменьшилась</em>. Это показывает то, что активность просьюмеров в капиталистическом обществе может быть интерпретирована как передача производительного труда пользователям, которые работают бесплатно и помогают максимизировать уровень эксплуатации (e = s/v, отношение прибавочной стоимости к переменному капиталу) увеличивая капитал медиакорпораций. Эта ситуация проявляет бесконечную эксплуатацию пользователей. <em>Капиталистическое просьюмерство </em>—<em> это крайняя форма эксплуатации, при которой просьюмеры (пользователи) работают совершенно бесплатно</em>.</p><p><em>Что же означает факт того, что пользователи-просьюмеры Facebook работают бесплатно и подвергаются эксплуатации?</em> Адам — тринадцатилетний школьник и активный пользователь Facebook. У него две тысячи друзей в Facebook друзей, пишет по пятьдесят сообщений на стене в день, общается с не менее чем сорока своими близкими знакомыми и коллегами через Facebook в день, обновляет свой статус не менее десяти раз в день, и загружает аннотированные видео и фотографии с выходных, на которых он часто запечатлен со своей девушкой на природе. Однако есть одна вещь, которая его озадачивает. Реклама, показываемая в правой части его профиля, часто связана с тем, что он делал в прошлые выходные или что он намерен сделать в следующие. Адам задается вопросом, как это происходит, и чувствует беспокойство от того, что его личные данные, очевидно, служат непрозрачным экономическим целям, и он не может контролировать то, какие персональные данные и поведение пользователя хранятся, оцениваются или продаются. Ответ на дилемму Адама заключается в том, что Facebook тщательно следит за всеми его контактами, общением и другими данными, продавая эту информацию компаниям, которые затем отправляют ему таргетированную рекламу. Таким образом, <em>Facebook получает прибыль и не может существовать без неоплачиваемого труда, который выполняют Адам и миллионы его коллег-\"работников\" Facebook</em>. Адам — прототип ребёнка-работника Facebook.</p><p>Даллас Смайт (1981/2006) предполагает, что в случае с рекламной моделью СМИ <em>аудитория продается рекламодателям как товар</em>: \"<em>Поскольку влияние аудитории производится, продается, покупается и потребляется, она имеет цену и является товаром...Аудитория предоставляет своё неоплаченное рабочее время, взамен получая программный материал и прямую рекламу</em>\" (Смайт 1981/2006, 233, 238; см. также Смайт 1977).</p><p>Гипотеза Смайта о товарности аудитории вызвала продолжительные дебаты (см, например, Мёрдок 1978; Смайт 1978; Ливант 1979; Джхалли и Ливант 1986; Джхалли 1987; Михан 1993; Болин 2005, 2009; Хэрн 2010; Манцеролле 2010; Хесмондхаль 2010; Ли 2011), включая критику Джхалли и Ливанта (1986) о том, что товаром является время просмотра, а не аудитория. Оба подхода Джхалли/Ливанта (Андриевич 2002) и подход Смайта (Фукс 2009a, 2010a, 2010a, 2011) остаются важными и сегодня. Подход Смайта (Fuchs 2009a, 2010a, 2010c, 2011b) остается важным для обсуждения коммодификации (процесс превращения в товар) в интернете, поскольку данная работа сохраняет фокус на коммодификации и эксплуатации.</p><p>С ростом пользовательского контента, платформ социальных сетей с открытым доступом, и других платформ, основанных на рекламе, Интернет приближается к телевидению или радио по своей стратегии накопления. <em>Пользователи, которые загружают фотографии и изображения, пишут сообщения и комментарии на стене, отправляют почту своим контактам, набирают друзей или просматривают другие профили на Facebook представляют собой аудиторию как товар, которая продается рекламодателям</em>. Разница между аудиторией как товаром для традиционных СМИ и для Интернета заключается в том, что в последнем случае пользователи также являются производителями контента, которые участвуют в постоянной творческой деятельности, коммуникации, создании сообществ и производстве контента. В случае с Facebook, аудитория как товар — это сообщество интернет-просьюмеров.</p><p>Наблюдение за пользователями Facebook осуществляется через операторов корпоративных веб-платформ и сторонних рекламных клиентов, которые постоянно отслеживают и записывают личные данные и онлайн-активность. <em>Процесс наблюдения Facebook создает подробные профили пользователей, чтобы рекламные клиенты знали и могли ориентироваться на личные интересы и поведение пользователей в Интернете</em>. Facebook продает своих просьюмеров как товар рекламным клиентам; их обменная стоимость основана на постоянно производимых потребительских ценностях, то есть персональных данных и данных о взаимодействиях.</p><p>Просьюмеры Facebook являются объектами двойными коммодификации. Во-первых, они коммодифицируются операторами корпоративных платформ, которые продают их рекламодателям — это приводит, во-вторых, к более интенсивной демонстрации и движению товарного оборота. Пользователи постоянно подвергаются товарной пропаганде, представленной в рекламе, пока они находятся в сети. Большая часть времени в Интернете — это рекламное время.</p><p><em>Трудовая сторона стратегии накопления капитала социальных сетей </em>—<em> это цифровой \"плейбор\"</em>. Кюклич (2005) впервые ввел термин плейбор (англ. play + labour), такие конференции, как \"Digital Labour: Workers, Authors, Citizens\" (Университет Западного Онтарио, 2009) и \"The Internet as Playground and Factory\" (Новая школа 2009) способствовали развитию дискурса о цифровом плейборе. Эксплуатация цифрового плейбора основана на размывании различий между рабочим и игровым временем. В Фордистском способе капиталистического производства рабочее время было временем боли, репрессий и избыточного подавления человеческого стремления к удовольствию, в то время как время досуга характеризуется \"временем Эроса\" (Маркузе 1955). <em>В современном капитализме игра и труд, Эрос и Танатос, принцип удовольствия и стремление к смерти, частично сходятся в том, что от работников одновременно ожидается получение удовольствия в рабочее время, а время досуга, в свою очередь, становится производительным и похожим на работу.</em> Досуг и рабочее время пересекаются, этот факт во все времена человеческого существования эксплуатировался ради накопления капитала. Эксплуатация труда в Facebook является одним из выражений вышеуказанных изменений в капиталистическом производстве и соответствующей трансформации структуры накопителей капитала.</p><p>Арендт (1958) и Хабермас (1989) подчеркивают, что капитализм традиционно основывался на разделении частной и общественной сферы. Facebook — это типичное проявление той стадии капитализма, на которой отношения общественного и частного, а также труда и досуга разрушаются и на которой капитал эксплуатирует это разрушение. <em>\"Различие между частной и общественной сферами ... равносильно различию между тем, что следует показывать, и тем, что не следует скрывать\"</em> (Арендт 1958, 72). Корпорация Facebook собирает все персональные данные и поведение пользователей и продает и то, и другое, скрывая эти процессы от пользователей. Таким образом, <em>основной формой конфиденциальности в Facebook является непрозрачность использования капиталом личных данных пользователей на основе их частного присвоения</em>. Пользовательский аспект конфиденциальности в Facebook заключается в том, что контент генерируется отдельными индивидами. Когда контент загружается в Facebook или другие социальные медиа, его части (в зависимости от настроек конфиденциальности, выбранных пользователями) становятся доступными для многих людей, придавая контенту более публичный характер. Публичная доступность данных может иметь как преимущества (новые социальные связи, дружеские отношения, поддержание контакта с друзьями, семьей и родственниками на расстоянии и т.д.), так и недостатки (связанная с работой дискриминация, преследование и т.д.) для пользователей (Фукс 2009b, 2010b, 2010d).</p><p>В Facebook частно-общественные отношения имеют еще одно измерение. Персональные пользовательские данные и индивидуальное поведение пользователей становятся товаром. Оба типа данных продаются рекламным компаниям для таргетирования пользователей и, таким образом, получения большего дохода для Facebook. <em>Facebook продает персональные данные, которые используются в целях публичной коммуникации для накопления капитала, находящегося в частной собственности</em>. Пользователи исключены из права собственности на полученный денежный капитал, т.е. они эксплуатируются Facebook и им не платят за создание прибавочной стоимости (Фукс 2010a). Facebook — это огромная машина для рекламы, накопления капитала и эксплуатации пользователей. Слежка за данными — это средство для достижения экономических целей Facebook. Facebook постоянно следит за пользователями в экономических целях, это означает, что конфиденциальность им не гарантирована. Поскольку пользователям неизвестно, какая именно информация и данные вносит вклад в таргетированную рекламу, они не могут контролировать использование своих данных или защитить себя от их коммодификации.</p><p>Использование таргетированной рекламы и слежки юридически описано политикой конфиденциальности Facebook (Политика конфиденциальности Facebook, версия от 22 декабря, 2010 года, доступ 29 мая 2011 года). Политика конфиденциальности является типичным проявлением саморегулируемого режима, в котором предприятия определяют свои собственные процессы обработки персональных данных пользователей. В целом, американские законы о защите данных распространяются на правительственные банки данных, оставляя коммерческое наблюдение нетронутым, чтобы чтобы максимизировать его прибыльность (Эсс 2009, 56; Лион 1994, 15; Рул 2007, 97; Зуреик 2010, 351). Условия использования Facebook и его политика конфиденциальности характерны для этой формы саморегулирования. Когда регулирование конфиденциальности носит добровольный характер, число организаций, защищающих конфиденциальность потребителей, как правило, очень невелико (Беннетт and Рааб 2006, 171).</p><h2>Послесловие</h2><p>Поскольку данная статья была опубликована около 10 лет назад, некоторые вещи, всё же, поменялись. Например, в 2018 году начал своё действие небезызвестный <a href=\"https://en.wikipedia.org/wiki/General_Data_Protection_Regulation\" rel=\"noopener noreferrer nofollow\">GDPR</a> (Общий регламент защиты персональных данных), который регулирует защиту персональных данных (в т.ч. технических данных — cookie), собираемых на сайтах. Аналогом GDPR в США является <a href=\"https://en.wikipedia.org/wiki/California_Consumer_Privacy_Act\" rel=\"noopener noreferrer nofollow\">CCPA</a> — California Consumer Privacy Act. В России действует <a href=\"http://www.consultant.ru/document/cons_doc_LAW_61801/\" rel=\"noopener noreferrer nofollow\">№152-ФЗ «О персональных данных»</a> за соблюдением которого следит Роскомнадзор. Суть этих регуляторных документов заключается в том, чтобы пользователь знал, какие персональные данные собираются, где и кому они продаются, иметь право запретить продавать эти данные, а так же посылать запрос на предоставление собираемых данных и их удалении с платформы. Всё это выглядит, конечно, более обнадёживающе, но, <em>фактически, парадигма эксплуатирования пользователей не изменена</em>. Несмотря на то, что теперь веб-платформы более явно дают своим пользователям знать о том, какие манипуляции производятся с их данными, суть процесса от этого не меняется. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/28c/be4/68e/28cbe468ec6cbe3df65808f4516022ef.jpeg\" alt=\"Источник https://www.analyticssteps.com/blogs/road-web-30-concept-and-benefits\" title=\"Источник https://www.analyticssteps.com/blogs/road-web-30-concept-and-benefits\" width=\"750\" height=\"822\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/28c/be4/68e/28cbe468ec6cbe3df65808f4516022ef.jpeg\" data-blurred=\"true\"><figcaption>Источник https://www.analyticssteps.com/blogs/road-web-30-concept-and-benefits</figcaption></figure><p><em>Одним из решений сложившейся ситуации может стать переход от Web 2.0, где контент генерируется пользователями на огромных веб платформах, к Web 3.0 (не путать с </em><a href=\"https://en.wikipedia.org/wiki/Web3\" rel=\"noopener noreferrer nofollow\"><em>Web 3</em></a><em>, там основной упор идёт на крипто/блокчейн технологии), где пользователи сами распоряжаются своими данными и в любой момент могут отозвать право на их использование (</em><a href=\"https://en.wikipedia.org/wiki/Solid_(web_decentralization_project)\" rel=\"noopener noreferrer nofollow\"><em>Solid</em></a><em>), а взаимодействие в вебе приобретает характер P2P, в отличие от Web 2.0, где пользователи коммуницируют через посредника (такого как Facebook),</em> однако, об этом поговорим в следующих статьях.</p><p></p>', 2, '2023-06-12 22:01:50', 227331, 100, '/ru/articles/691538/', 'Когда вы выбираете ASR, важно определиться не только с вендором, но и с моделью закупки. Конечно, если вы банк, облачная система вам не подойдет по умолчанию. Но для всех остальных кейсов мы попробуем сделать расчет и определить, при каком объеме трафика будет выгоднее уже не платить за облако, а поставить решение в контур. '),
(203, 'Считаем, где дешевле распознавание речи — в облаке или на своем сервере', '<p>Когда вы выбираете ASR, важно определиться не только с вендором, но и с моделью закупки. Конечно, если вы банк, облачная система вам не подойдет по умолчанию. Но для всех остальных кейсов мы попробуем сделать расчет и определить, при каком объеме трафика будет выгоднее уже не платить за облако, а поставить решение в контур. </p><p> <strong>Посмотрим, сколько стоит распознавание в облаке у разных вендоров.</strong></p><p>· <strong>Яндекс</strong> – 0,64 руб./минута.</p><p>· <strong>Тинькофф</strong> – от 0,18 руб./минута (оффлайн обработка файла) до 0,72 руб./минута  (онлайн обработка потока)</p><p>· <strong>Amvera</strong> – 2500 руб. в месяц за поток (запуск облачной версии по указанному тарифу намечен на ноябрь 2022 г.). При полной загрузке стоимость минуты будет 0,05 руб. С учетом резервирования и пиковой нагрузки, скорее всего, стоимость будет в 2 раза выше - 0,1 руб./минута </p><p>· <strong>ЦРТ</strong> – 0,6 руб./минута</p><p>При поминутной тарификации вендоры имеют неприятную привычку «округлять» длительность в свою сторону. Однако это сильно влияет на стоимость только на коротких записях. Например, когда команды по 3 секунды округляются до 15 секунд.</p><p>Теперь возьмем стоимость on-premise решений. В открытом доступе таких данных нет, и, как правило, стоимость формируется индивидуально. Согласно нашим опросам, решение на 20 потоков (а меньше почти никто не лицензирует) стоит от 600 т.р. до 4 млн. руб. в год (в зависимости от вендора). Стоимость распознавания без ограничения по времени стоит от 1.2-1.5 млн.руб. до бесконечности. </p><p>1 поток в год позволяет распознать от 1 до 2 миллиона минут (в зависимости от используемого процессора). Это достаточно много. Но на практике 1 поток никто из поставщиков решений лицензировать не будет. Как  правило, лицензируемый минимум - это 10-20 потоков и выше, в зависимости от вендора. Таким образом, on-premise позволит вам распознавать не менее 10-20 млн. минут в год при условии, что вы будете оптимально использовать вычислительную мощность.</p><p> Таким образом, в пересчете на год, минимальная стоимость для 10 потоков составит около 300 т.р.. Дополнительно потребуется приобрести серверные мощности. Стоимость аренды недорогого сервера на 10-20 потоков составит еще около 120 т.р. в год (стоимость проверена на собственном опыте). Таким образом, стоимость владения on-premise решения начинается от 420 т.р. в год.</p><p><strong>Сколько можно распознать на эти деньги в облаке?</strong></p><p><strong>Яндекс</strong> – 656 250 минут.</p><p><strong>ЦРТ</strong> – 700 000 минут.</p><p><strong>Тинькофф</strong> (для оффлайн распознавания) – 2,33 млн. минут.</p><p><strong>Amvera</strong> – от 4.2 до 8.4 млн. минут (зависит от того, как эффективно грузить потоки).</p><p>Как и следовало ожидать, в облаке на те же деньги вы сможете распознать гораздо меньше минут, чем в контуре. </p><p>Разумеется, разные решения дают разное качество распознавания и присутствуют иные факторы принятия решения. Но расчет помогает понять ценовые границы. </p><p> <strong>Вывод</strong></p><p>Если у вас меньше 656 250 минут в год, облако будет дешевле в любом случае. Если больше 4.2 миллиона минут – облако будет дороже, чем решение в контуре (on-premise). В промежутке между этими цифрами облако может быть как дешевле, так и дороже, в зависимости от используемого ASR решения.</p><p><strong>Бонус для дочитавших:</strong> телеграм бот <a href=\"https://t.me/AmVeraSpeechBot\"><strong><u>@AmVeraSpeechBot</u></strong></a>. В боте вы можете проверить качество работы нашего решения по распознаванию речи (<a href=\"https://amvera.ru/speech?utm_source=habr&amp;utm_medium=article&amp;utm_campaign=gde_deshevle_raspozn\"><u>Amvera Speech</u></a>). Просто отправьте в бот короткую аудиодорожку или голосовое сообщение – и получите текстовую расшифровку. Ботом можно пользоваться бесплатно и безлимитно для распознавания голосовых сообщений.</p><p></p>', 2, '2023-06-12 22:01:50', 475460, 103, '/ru/companies/amvera/articles/693546/', 'Использовать модель с одним или двумя токенами — один из самых частых вопросов, которые мне задают команды, разрабатывающие экономику своей криптоигры.До недавнего времени моим ответом по умолчанию всегда было использование двух токенов, но теперь я переосмыслил этот совет. Я думаю, что вы можете убедительно обосновать любой выбор, и я попытаюсь объяснить некоторые из этих нюансов здесь. Также может быть способ получить лучшее из обеих моделей, к чему я прихожу в конце.Эта статья в первую очередь будет посвящена играм, хотя вы можете применить аналогичные мысли и к другим криптопроектам. Игры — это хорошая песочница, в которой можно испытать это, поскольку они позволяют использовать гораздо больше токенов, чем другие проекты.В любом случае, давайте погрузимся.'),
(204, 'Модели токеномик с одним или двумя токенами в криптоиграх', '<blockquote><p><em>Это перевод </em><a href=\"https://crypto.nateliason.com/p/one-vs-two-tokens?utm_source=%2Finbox&amp;utm_medium=reader2&amp;s=r\" rel=\"noopener noreferrer nofollow\"><em><u>оригинальной статьи</u></em></a><em> написанной Nat Eliason — криптописателем, который занимается преподованием DeFi и консультированием игр Web3 в вопросе построения экономики Play&amp;Earn.</em></p><p><em>Перевод предоставил </em><a href=\"https://t.me/+X7nHxkxwMn02ZTJi\" rel=\"noopener noreferrer nofollow\"><em><u>Telegram-канал Cryptex</u></em></a><em>.</em></p></blockquote><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/380/002/ce1/380002ce140fff6c67f876beecbd3d55.png\" width=\"1920\" height=\"930\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/380/002/ce1/380002ce140fff6c67f876beecbd3d55.png\"><figcaption></figcaption></figure><p>Использовать модель с одним или двумя токенами — один из самых частых вопросов, которые мне задают команды, разрабатывающие экономику своей криптоигры.</p><p>До недавнего времени моим ответом по умолчанию всегда было использование двух токенов, но теперь я переосмыслил этот совет. Я думаю, что вы можете убедительно обосновать любой выбор, и я попытаюсь объяснить некоторые из этих нюансов здесь. Также может быть способ получить лучшее из обеих моделей, к чему я прихожу в конце.</p><p>Эта статья в первую очередь будет посвящена играм, хотя вы можете применить аналогичные мысли и к другим криптопроектам. Игры — это хорошая песочница, в которой можно испытать это, поскольку они позволяют использовать гораздо больше токенов, чем другие проекты.</p><p>В любом случае, давайте погрузимся.</p><h2>Для чего нужен токен?</h2><p>Основное использование токена в криптоигре должно заключаться в улучшении экономики игры, что невозможно без токена.</p><p>Токены используются для многих целей, таких как спекуляции, но, как я объяснил в своей статье “<a href=\"https://crypto.nateliason.com/p/fix-crypto-gaming?s=r\" rel=\"noopener noreferrer nofollow\"><u>crypto gaming is broken</u></a>”, эти другие способы использования могут в конечном итоге повредить качеству игры и ее будущему.</p><p>Так как же токен может каким-то образом улучшить игровую экономику? Я считаю, что это в первую очередь происходит за счет замыкания цикла микротранзакций. Вместо улицы с односторонним движением, где игроки совершают микротранзакции, чтобы разблокировать некоторые дополнительные возможности в игре, крипто-токены обеспечивают улицу с двусторонним движением, где игроки также могут извлечь часть ценности своей работы из игры. Они позволяют тем, кто вложил значительное время в игру, обменять это время на капитал, а людям с капиталом они позволяют по-новому обменять часть этого капитала на сэкономленное время.</p><p>Эти транзакции могут принимать две формы:</p><p><strong>Транзакции приложения:</strong> когда игроки платят самой игре за доступ к чему-то вроде боевого пропуска, косметики, ключа для лутбокса или прогресса в игре.</p><p><strong>Одноранговые транзакции: г</strong>де игроки платят друг другу за ресурсы в игре. Это могут быть NFT, валюты или что-то еще.</p><p>Эти транзакции существуют в играх уже давно. Мы все знакомы с внутриигровыми транзакциями и аукционными домами. Одно важное отличие, которое обеспечивает токен, — это возможность создать ликвидный рынок между игрой и «реальными деньгами». Способ для игрока обменять свое золото Runescape на доллары (с парой дополнительных шагов).</p><p>Любые другие полезности, на мой взгляд, второстепенны. Не то, чтобы другие способы применения не существовали, но это всегда должно быть первоначальной ценностью введения токена в игру.</p><p>Так что же это за другие способы использования? Сбор средств это один из них. Спекуляции - другой. Управление также может быть. Вы также можете включить денежные потоки и право собственности, как более серьезную версию спекуляций. Но стоит признать, что токены часто вводятся не для того, чтобы сделать игру лучше, а как спобоб финансировать игру. И тогда вопрос в точ, можно ли это сделать так, чтобы принести пользу игре и сообществу, или это всегда противоречит созданию хорошей игры.</p><p>Поскольку модель с двумя токенами сейчас более распространена, давайте начнем с нее.</p><h2>Модель с двумя токенами</h2><p>Модель с двумя токенами была впервые предложена Axie Infinity с их токеном управления AXS и внутриигровым токеном SLP.</p><p>AXS — это токен с фиксированным предложением, который предназначен для накопления ценности с течением времени, а SLP — это токен с неограниченной эмиссией, который они могут чеканить и сжигать по мере необходимости, чтобы сбалансировать игру.</p><p>В этой модели AXS по сути является ценной бумагой. Это похоже на хранение акций в игре Axie. Команды, конечно, не могут этого сказать, но это то, что они делают. Управление часто является просто способом симулировать полезность, чтобы обойти проблемы безопасности. SLP — это настоящий «игровой» токен, поскольку на нем работает большая часть игровой экономики.</p><h3>Преимущества модели с двумя токенами</h3><p>Что хорошо в этой модели, так это то, что вы можете разделить спекуляции и игровую экономику. Когда вы запускаете что-то в крипте, люди будут спекулировать на этом, пытаясь получить быстрый доход. Наличие одного токена, где люди могут спекулировать, и одного токена, где люди могут играть в игру, позволяет этим двум видам использования разыгрываться отдельно, чтобы всплеск спекуляций не вызывал скачка внутриигровых цен. Вы не хотите, чтобы всплеск спекуляций внезапно поднял цены на все в игре.</p><p>Это также упрощает сбор средств. Инвесторам нужен токен с фиксированным предложением, в который они могут инвестировать, и который со временем будет расти в цене. Внутриигровая валюта с переменным предложением не является отличным инвестиционным активом, поскольку создатели игры могут в любое время регулировать эмиссию, сжигание и полезность токена. И им, возможно, придется попытаться изменить его цену в том или ином направлении, чтобы сбалансировать игру.</p><p>Модель с двумя токенами этого типа также знакома всем. Люди привыкли видеть два токена от Axie и других игр, которые следовали его модели, поэтому они интуитивно «понимают», что есть один токен для спекуляций и один для игры. Это также похоже на то, как мы думаем об обычных деньгах, например, что золото или биткойн — это актив, который вы держите, а доллары — это актив, который вы тратите.</p><h3>Недостатки модели двух токенов</h3><p>В то время как популярность игры растет, а рынок горяч, модель с двумя жетонами выглядит идеально. Один токен остается довольно стабильным, чтобы люди могли играть в игру, а другой неуклонно растет, вызывая у людей эйфорию от спекуляций.</p><p>Но когда музыка останавливается или замедляется, люди начинают задаваться вопросом: в чем смысл этого токена управления? Маловероятно, что люди будут сидеть на игровых жетонах на миллионы долларов только для того, чтобы проголосовать за меры управления. Там должно быть что-то большее.</p><p>Этот вопрос «в чем смысл токена с фиксированным предложением?» является большим недостатком модели двух токенов. Итак, есть несколько способов решения:</p><h3>Для чего нужен токен с фиксированным предложением?</h3><p>Наличие чисто спекулятивного токена с фиксированным предложением (FST) в конечном итоге приводит к вопросу: «эй, почему мы держим это?». Спекуляция не может поддерживать цену вечно, поэтому токен должен иметь какой-то смысл.</p><p>Некоторые команды будут использовать подход добавления денежных потоков, как правило, посредством стейкинга. Это может пойти двумя путями:</p><p><strong>Защита от разбавления:</strong> Вы стейкаете свой токен ради большего количества того же токена. На самом деле это не денежный поток, это просто защита от размывания по мере разблокировки большего количества токенов. Но это все еще выглядит как «халявные деньги», по крайней мере.</p><p><strong>Дивиденды:</strong> стейкеры получают другой токен, представляющий из себя внутриигровой токен для расходов в игре. Однако это сложно правильно сделать, потому что если вы перераспределеяете средства, собранные с помощью внутриигровых транзакций, то получается вместо вывода токенов из оборота, вы добавляете новые. В итоге это превращается в понзиномику. Таким образом, вы действительно хотите перераспределять комиссию только от одноранговых транзакций к одноранговым (транзакции между пользователями).</p><p>Дивиденды от одноранговых транзакций также могут быть весьма значительными. STEPN зарабатывал 2-3 миллиона в день на транзакционных комиссиях большую часть прошлого месяца. В обращении было 600 миллионов токенов GMT, поэтому давайте предположим, что 1/2 из них были бы застейканы, если бы таковой существовал. Если они разделят комиссию за транзакции с держателями GMT 50/50, то ставка составит 1 млн долларов в день на 300 млн GMT или около 0,3 цента за токен в день. Учитывая среднюю цену GMT в 1,50 доллара за последний месяц, это 0,2% в день дивидендов или 73% годовых без эмиссии. Это невероятно! Они этого не сделали, но это показывает, что дивиденды от одноранговых транзакций могут быть значительными.</p><p>Если команда не хочет добавлять денежные потоки или хочет добавить что-то в дополнение к денежным потокам, они добавят внутриигровую полезность для токена фиксированного предложения.</p><p>Это то, что Axie в конечном итоге сделал, введя затраты AXS на разведение. В этом случае FST становится дополнительной внутриигровой валютой, с той разницей, что это фиксированный запас по сравнению с бесконечным запасом другого токена. Разработчики игр могут выбрать, хотят ли они, чтобы эти использованные жетоны были сожжены или возвращены в оборот, и использовать это в качестве дополнительной проверки игровой экономики.</p><p>Однако ютилити для FST становится сложным. Для чего вы используете FST по сравнению с VST (токен переменного предложения)?</p><p>Вы можете провести линию где угодно, но обычно она оказывается несколько произвольной. Есть веские аргументы в пользу использования либо в качестве токена торговой площадки, либо в качестве токена транзакции приложения.</p><p>Я думаю, если команды собираются добавить применение для FST, то это должно оказать некоторое влияние на предложение токена. Смысл добавления полезности состоит в том, чтобы повысить ценность FST, но если она просто используется в качестве валюты, такой как VST, то ее удержание бесполезно. Вы можете просто купить его, когда он вам нужен, и продать его, когда он вам не нужен. Но если FST сгорает, когда он используется, например, для специальных обновлений в игре, то и токен FST также становится все более ценным по мере того, как игра становится все более популярной.</p><p>Однако команды, выбравшие маршрут с двумя токенами, в конечном итоге столкнутся с этой проблемой. Если они не найдут способ повысить ценность или полезность FST, его выбросят, и многие спекулянты перестанут держать их сумки.</p><p>Так что, если они попробуют модель с одним токеном?</p><h2>Модель с одним токеном</h2><p>Использование только одного токена было опробовано гораздо реже. Но он предлагает некоторые перспективы как способ решения проблем модели с двумя токенами.</p><p>Стоит помнить одну вещь: модель с одним токеном не обязательно означает, что в игре есть только одна валюта. В игре может быть много валют, но только одна, которая действует как мост между игрой и криптовалютой.</p><p>Есть несколько способов сделать это.</p><h3>Модель одного токена неограниченной эмиссии VST</h3><p>“Один из вариантов — создать модель с одним токеном только с токеном неограниченного предложения. Я еще не видел хорошего примера этого, но это имеет смысл в качестве токена для игры, пытающейся строго следовать некоторым идеям, которые у меня были в “<a href=\"https://crypto.nateliason.com/p/fix-crypto-gaming?s=r\" rel=\"noopener noreferrer nofollow\"><u>crypto gaming is broken</u></a>”.</p><p>Это приходит к моей мысли в начале этой статьи. Цель криптоактива в игре — предоставить людям возможность обменивать свою внутриигровую работу на внеигровые деньги.</p><p>Если игровая студия хотела сделать это, не заморачиваясь со сложной токеномикой, вот очень простой метод.</p><ol><li><p>Создайте потрясающую игру с помощью внутриигрового рынка (например, Runescape, WoW и т.д.).</p></li><li><p>Создайте мост между основной валютой и блокчейном.</p></li><li><p>Добавьте ликвидность для этой валюты с помощью другого токена (ETH, USDC и т.д.).</p></li></ol><p>Готово. Вы сделали криптоигру. Это обманчиво просто, но во многих случаях это все, что нам нужно. Представьте себе Runescape с высоколиквидным рынком Gold &lt;&gt; USDC. Это было бы очень здорово, правда?</p><p>Вам даже не нужно делать предметы NFT, потому что, будем честными, игровые предметы ничего не стоят без игры. Просто сохраните обычный аукционный дом, где игроки могут обменять все на золото, добавить мост для золота и бум, потрясающая криптоигра.</p><p>Почему мы этого не видели? Ну, потому что делать хорошие игры очень сложно. Есть игры, использующие этот подход, но большинство из них просто еще не вышли. И когда они выйдут, им будет намного сложнее набрать обороты, потому что у них не будет захватывающей понзиномной петли поверх них. И если мы будем честными, эти размножающиеся петли Понци — отличная стратегия выхода на рынок для создания первоначального ажиотажа.</p><p>Другим недостатком этой модели является отсутствие токенов, на которых люди могли бы спекулировать. И, по крайней мере, на данный момент, чтобы преуспеть в крипте, похоже, требуется некоторая возможность для спекуляций. Также трудно привлечь деньги от инвесторов без какого-либо основного актива предложения, который они могли бы удерживать в течение длительного времени с некоторыми надеждами на его стоимость.</p><p>Итак, давайте рассмотрим модель с одним токеном фиксированного предложения.</p><h3>Модель с одним токеном фиксированного предложения FST</h3><p>Могли бы вы создать криптоигру, в которой есть только токен с фиксированным запасом? Это путь, по которому пошли некоторые из старых криптоигровых платформ, таких как Sandbox и Decentraland. И я думаю, что мы можем увидеть, как он снова станет популярным как улучшение модели с двумя токенами.</p><p>Это несколько умозрительно, и я все еще работаю над этим, поэтому, пожалуйста, не просто копируйте и вставляйте это и предполагайте, что это сработает.</p><p>В этой модели у вас есть токен с фиксированным запасом, который служит в качестве инвестиционного актива, а также моста для всех игровых денег.</p><p>Но вам по-прежнему нужна более изменчивая валюта предложения в игре, чтобы вы могли лучше сбалансировать экономику. Так у вас есть еще VST, который просто залочен в игре без бриджа.</p><p>Затем вы создаете внутриигровой DEX между VST и FST, а также среди любых других игровых активов. Это на самом деле гораздо лучшая технология для торговли чем-то вроде дерева за золото, поскольку она создает ликвидный рынок в стиле SushiSwap или Uniswap, позволяющий немедленно торговать чем угодно, не нуждаясь в покупателе на другой стороне.</p><p>Таким образом, игроки могли в любое время обменять золото на FST и выйти из FST. Или они могли бы прибегнуть к FST, чтобы купить золото, дерево и все, что они хотят.</p><p>Поскольку FST имеет фиксированный запас, а все предметы в игре будут инфляционными, покупательная способность FST должна увеличиваться с течением времени, не будучи добывающей. Ранние игроки будут вознаграждены тем, что плоды их труда будут более ценными в терминах FST, но более поздние игроки по-прежнему смогут играть и зарабатывать.</p><p>Затем, отдельно от рынка ресурсов, у вас может быть рынок предметов. Эти предметы могут быть извлечены как NFT или заблокированы в игре. Я не думаю, что это имеет большое значение. Вы можете оценить все на рынке в FST, а затем взять комиссию за транзакцию либо в казну, либо в качестве сжигания. Если вы сожжете его, то со временем создадите некоторую дефляцию, что также поможет повысить ценность FST.</p><p>Другой вариант — установить цену на рынке предметов в таком крупном криптоактиве, как ETH. Огромным преимуществом здесь является то, что комиссия за транзакцию находится в активе, который не привязан к производительности игры. Если вы взимаете комиссию за транзакцию своего собственного токена, вам все равно придется продать этот токен на рынке, чтобы получить доход. Если вы взимаете комиссию за транзакцию в ETH, SOL или USDC, вы сразу же получаете этот доход.</p><p>Это также требует, чтобы игроки подключили к игре другой актив, такой как ETH, SOL или USDC, который будет храниться в казне. Казначейство могло бы получать доход от этих активов, сохраняя их, создавая дополнительный поток дохода для игры.</p><p>Тогда возникает вопрос, как FST извлекает ценность? Здесь вы могли бы повторно ввести модель дивидендов, но где дивиденды выплачиваются активом, используемым на рынке.</p><p>Таким образом, размещая в стейкинге свой FST, я зарабатываю немного ETH или USDC в игре, не беспокоясь о какой-то сложной системе стейкинга в сети. Это было бы очень сильно и круто, и я не видел ни одной попытки реализовать это. Хотя полагаю, что это было бы сложно юридически.</p><p>Тогда вы также можете получить некоторые дивиденды от торговых комиссий по всем другим свапам. Таким образом, блокируя свои токены в игре, вы зарабатываете немного ETH, немного внутриигровых VST и еще немного FST за различные сделки, происходящие в игре. Это сделало бы его феноменальным инвестиционным активом, а также вы будете увеличивать стоимость FST c течением времени, увеличивая его покупательную способоность для инфляционных активов. Если вы добавите к этому несколько дорогостоящих сжиганий, у вас будет чрезвычайно сильный инвестиционный тезис для токена.</p><p>Размышляя над этой моделью, я думаю, что она намного сильнее, чем нынешние популярные модели с двумя токенами. Это добавляет большую гибкость и гарантирует наличие одного основного актива, который приобретает ценность в экосистеме. Модель с одним токеном VST идеальна, если вы просто хотите создать игру с некоторой привязкой к криптовалюте. Но эта модель FST позволяет вам сохранить часть спекулятивной стороны крипты, а также инвестиционную привлекательность с течением времени.</p><p>Это чисто мысленное упражнение, которое определенно нуждается в некоторой доработке. Но я надеюсь, что это будет полезно для любой команды, пытающейся продумать, как структурировать свою токеномику. Я буду продолжать обращаться к этому и расширять его по мере изучения новых игр и работы с большим количеством команд.</p><hr><p>Подписывайтесь на наш <a href=\"https://t.me/+X7nHxkxwMn02ZTJi\" rel=\"noopener noreferrer nofollow\"><strong><u>Telegram-канале</u></strong></a> и присоединяйтесь к обсуждению в <a href=\"https://t.me/cryptex_chat\" rel=\"noopener noreferrer nofollow\"><strong><u>нашем чате</u></strong></a>. Там мы помогаем новичкам, рассказываем про перспективные проекты и ведем блог о инвестициях в криптовалюту.</p><p></p>', 2, '2023-06-12 22:01:51', 123876, 99, '/ru/articles/671566/', 'Деловой мир все больше переходит в «стадию» Digital, но происходит это крайне неравномерно: пока кто-то всё ещё пытается окончательно укротить базовые подходы в  автоматизации и построению «цифровых теней» (грубо – обвешивание датчиками всего, до чего дотянутся руки и бюджет), другие учатся адаптироваться к новой цифровой реальности и начинают штурмовать сущность с названием «цифровые двойники» (грубо – изначальное моделирование объекта «в цифре» и только потом реализация его в нашем аналоговом мире). Здесь я хочу раскрыть два простых, но крайне неочевидных тезиса: почему автоматизация в большинстве случаев не приносит денег,  и почему лишь переосмысление в сторону «цифры» и сбор правильного цифрового портфеля способны поставить бизнес на ноги в кризис.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(205, 'Как [пере]собрать цифровой портфель для выживания бизнеса', '<p>Из года в год деловой мир все больше переходит в «стадию» Digital, но происходит это крайне неравномерно: пока кто-то всё ещё пытается окончательно укротить базовые подходы в  автоматизации и построению «цифровых теней» (грубо – обвешивание датчиками всего, до чего дотянутся руки и бюджет), другие уже учатся адаптироваться к новой цифровой реальности и начинают штурмовать сущность с названием «цифровые двойники» (грубо – изначальное моделирование объекта «в цифре» и только потом реализация его в нашем аналоговом мире). В этой статье я хочу раскрыть два простых, но крайне неочевидных тезиса: почему автоматизация в большинстве случаев не приносит денег,  и почему лишь переосмысление в сторону «цифры» и сбор правильного цифрового портфеля способны поставить бизнес на ноги в эпоху кризиса.</p><h2>«Каноничный» подход к организации работы ИТ или почему автоматизация не приносит денег</h2><p>По большей части работа ИТ-подразделения в компании выстроена по одному сценарию: в определённый момент компания осознает необходимость внедрения информационной системы (далее – ИС) – будь то CRM, ERP, MES и т. д. – для последующего ожидаемо продуктивного управления бизнес-процессами. Для реализации задачи заинтересованным подразделением создается ТЗ, которое затем передается ИТ-специалистам. Они же, зачастую в кооперации с вендором, занимаются подбором решений, закупкой, внедрением и последующей передачей системы в полноценную эксплуатацию внутреннему заказчику, оставляя себе задачи по поддержке ИТ-инфраструктуры. Тогда как поддержка системы, как правило, осуществляется вендором.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/84f/f80/40e/84ff8040e6cc66393c0e6a9c9f79f85f.png\" width=\"2111\" height=\"1187\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/84f/f80/40e/84ff8040e6cc66393c0e6a9c9f79f85f.png\"><figcaption></figcaption></figure><p>При этом важно понимать, что экономический, финансово подкрепленный эффект от внедрения таких ИС описывается – и ожидается – как максимально положительный, достигаемый, однако, через n-ный период времени, и никаким образом не гарантируемый. Такой подход назвать плодотворным затруднительно: в описанных обстоятельствах сложно проследить появление ценности и бизнес-эффекта. <strong>«Мы внедрили систему ERP и в течение следующих трех лет сократим себестоимость нашего производства в 7 раз» – история, которой не суждено сбыться.</strong> </p><p>Более того, ключевой ошибкой внедрения всех описываемых систем является зеркалирование в них реальных процессов, происходящих на условном производстве (той самой «гембе»). Я имею в виду процессы по производству ценности, которые есть в абсолютно любой, даже самой непроизводственной компании. То есть, ключевая ценность продолжает создаваться конкретными людьми на конкретных местах, а новый сложный дорогостоящий инструмент используется как «записная книжка», куда конкретные исполнители заносят какие-то данные о результатах (в «хороших» внедрениях ещё и промежуточных) своей деятельности. В итоге имеем увеличение нагрузки на исполнителя (мало того, что ему надо работать свою работу, так теперь ещё что-то там вносить в новую непонятную систему) без очевидного экономического эффекта и отчёты (генерируемые новой информационный системой), которые отражают не реальное положение дел в компании, а видение этого самого положения дел через призму конкретных исполнителей на местах.</p><p>Но нужно ли уходить от классического «проектного» метода? Заранее отвечу, что нет, но в деталях раскрою этот ответ ниже, после разбора истории с портфелями. </p><h2>Базовая схема цифровизации: «портфельный» подход к организации работы цифровых инструментов или «где деньги, Зин?»</h2><p>В противовес вышеописанному «каноничному» подходу рассмотрим иной – портфельный, ключевое отличие которого в функциональности и проактивности участников и объектов процесса. Здесь ИТ-подразделение получает функциональную задачу по повышению эффективности работы с заранее выбранным производственным инструментом, с понятной экономикой (например, повышение среднего времени работы одного станка на 20 часов в месяц поспособствует увеличению общего объёма выработки на 80%). При этом задача не отдается на так называемый «внутренний аутсорс», но реализуется техническими специалистами совместно с заказчиком: в рамках производства генерируется некоторое количество гипотез о решении, из них выбираются лучшие, под выбранные гипотезы готовятся прототипы, на успешные прототипы – пилоты, а затем по успешным пилотам выпускается полноценный продукт в виде цифрового инструмента.</p><p>Ровно в этот момент, с запуском первого подобного инструмента, в компании появляется полноценный цифровой актив (как нечто, что однозначным образом помогает организации создавать ценность), а <strong>ИТ-подразделение к своей поддерживающей функции добавляет также и функцию зарабатывающую.</strong> Бизнес-эффект решения виден сразу – с самых первых дней его работы, и экономическая составляющая максимально прозрачна: видны как расходы на создание и поддержку инструмента, так и доходы, генерируемые с его помощью. С учётом того, что подобных функциональных задач в организации любых размеров – масса (и чем больших размеров организация, тем больше эта масса), портфель сгенерированных гипотез может быть очень объёмным. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/45b/aee/0c1/45baee0c1eec81b5abd2eacb3a6bb9e1.png\" width=\"2111\" height=\"1187\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/45b/aee/0c1/45baee0c1eec81b5abd2eacb3a6bb9e1.png\"><figcaption></figcaption></figure><p>Почему же именно «портфель», а не просто «список проектов»? Всё просто: этот самый «список проектов» имеет одну крайне важную характеристику, - доход, выраженный в конкретном изменении показателей, отвечающих за операционную прибыль, чего вы никогда ни в одном классическом ИТ-проекте не увидите (у проекта есть некий «результат», который где-то далеко за пределами проекта кто-то как-то должен ещё потрудиться перевести в деньги). </p><p>Дальше – больше. В нашем примере с уменьшением времени простоя производственного оборудования мы пришли к тому, что теперь наша выработка увеличена на 80%. Но теперь у нас встаёт второй вопрос – а как теперь всё это продать? И мы начинаем генерировать новые гипотезы о том, какими инструментами можно дооснастить нашу службу продаж, создавая ещё один цифровой актив, но уже не по переводу сырья в изделие, а по переводу изделия в деньги. </p><p>Так, портфельный подход к организации работы ИТ-подразделения, как и ИТ-специалистов в частности – это и есть та самая рабочая базовая схема цифровизации. А главное, что мы приходим к ответу на вопрос «где деньги»: деньги лежат в реализации цифровых инициатив, нацеленных на решение наших функциональных задач. </p><h2>ИТ-проекты vs Цифровой портфель</h2><p>Итак, <strong>ключевыми параметрами привычного многим компаниям ИТ-проекта</strong> являются: Результат (как правило сам по себе факт внедрения чего-либо), Стоимость, Время на реализацию. <strong>Показателями же Цифрового портфеля становятся:</strong> Цель (дельта целевого стратегического показателя, над которым мы работаем, например «размер активной клиентской базы» или «процент повышения дохода»), Расход на MVP (от англ. Minimal viable product – минимально жизнеспособный продукт), Time to Value (Время до получения MVP), Доход от MVP (в деньгах). </p><p>Учитывая эту разницу, можно переосмыслить существование ИТ-проектов в компании в сосуществовании их с «цифровым портфелем» и сделать следующий вывод: рассматривать ИТ-проекты как инфраструктурные, а портфель цифровых инициатив как экономическое обоснование для запуска инфраструктурного проекта. Как пример: если внедрение IoT на заводе стоит условные 150-200 миллионов рублей, то запускать этот проект можно только в том случае, если сгенерировано цифровых инициатив, утилизирующих IoT инфраструктуру с ожидаемым доходом за три (один, пять, семь, четыре – нужное подчеркнуть) года на сумму не менее, чем 400 миллионов.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/03d/254/0e4/03d2540e4aa64584242a714f7efc8e6d.jpg\" width=\"2110\" height=\"1187\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/03d/254/0e4/03d2540e4aa64584242a714f7efc8e6d.jpg\" data-blurred=\"true\"><figcaption></figcaption></figure><p>Со временем кумулятивный отнесённый доход от подобного рода цифровых инициатив может существенно превысить доход предприятия от основной деятельности, что может подтолкнуть организацию к радикальному пересмотру своей стратегии вплоть до радикального изменения сферы основной деятельности: производить теперь не условные фюрлябди, а выйти на рынок с цифровым продуктом, позволяющим производить эти самые фюрлябди в любой точке мира с максимальной эффективностью, - а это уже плавно переводит нас в финальную часть моего опуса. </p><h2>Как работает цифровая трансформация</h2><p>В большинстве случаев процесс работы ИС в компаниях антропоцентричен. Предприятие располагает:</p><ul><li><p>во-первых, бизнес-процессом, протекающим непосредственно на производстве (например, в финансовом или плановом отделе);</p></li><li><p>во-вторых, живым процессом, по которому работают люди;</p></li><li><p>и, в-третьих, отражением второго в той или иной учетной информационной системе.</p></li></ul><p>Де-факто получается следующее: даже при непредвиденном или нарочитом отключении предприятия от Сети процессы продолжат осуществляться в MS Word/Excel, журналах учета и т. п. Да, это отразится на текущей производительности, но процесс не «встанет» – ведь он изначально реализован в аналоговом мире, однако подобная схема работы далека от продуктивной, и бизнес-процессы, которые могут быть изначально реализованы исключительно в единой, цифровой реальности, раскладываются и пролонгируются на две такие реальности и более.</p><p>Хорошим примером цифровой трансформации при таких условиях работы является полноценное делегирование административных решений (решений в рамках нормированного бизнес-процесса) самой ИС. Рассмотрим на примере CRM системы. </p><p>Система, внедренная на предприятии с большим числом сотрудников, начинает «впитывать» в себя массивы данных – о себестоимости продукции/услуг, заказчиках, сыгранных контрактах, объёмах потенциальных сделок и т.д.. А далее, при наличии дополнительных моделей управления с возможностью учитывать большое количество взаимосвязей с данными в других системах (например, о штатном расписании в ИС HR, о состоянии средств производства в EAM и т.д.), получается следующее: <strong>система сама начинает решать</strong>, кому,  что и когда продавать, анализируя комплексно ситуацию «изнутри» (то есть целиком, с учётом максимально возможного числа входных параметров из совершенно разных плоскостей существования компании; так, как никогда не сможет сделать даже очень хороший сотрудник отдела продаж, имеющий гораздо более «узкий взгляд» на происходящее), тем самым существенно упрощая бизнес-процессы и автоматизируя работу, ставя ее «на конвейер». То есть с продавцов снимается самая сложная нагрузка – право выбора. Но тем сильнее становятся востребованы самые важные для продавцов навыки – навык продаж. И при условии следования указаниям системы в случае наличия аналитических моделей (вот тут появляется место для AI, ML, BigData и ещё миллиарда современных хайповых аббревиатур и понятий – всего того, что по какой-то причине огромное число людей считает цифровой трансформацией) достаточного качества, <strong>конечная экономическая эффективность работы коллектива организации вырастает кратно (а в отдельных случаях – на порядки).</strong></p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/bee/03e/4ff/bee03e4ffc04852efaa54c7ce5da7f58.png\" width=\"2111\" height=\"1187\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/bee/03e/4ff/bee03e4ffc04852efaa54c7ce5da7f58.png\"><figcaption></figcaption></figure><p>А можно теперь посмотреть на CRM с другой стороны – со стороны службы HR. И тогда можно, например, на основании воронки продаж строить воронку найма (это когда рекрутёры обозначают производственным подразделениям кого, когда и в каких количествах им (производственникам) надо будет завести на рабочие места.  </p><p>Правда, чтобы всего этого достичь, нужно будет пройти через мощнейшую «ломку» осознания себя винтиками совершенно новой системы (очень часто тут вместо «системы» употребляют термин «бизнес-модель», но для меня он несколько шире, о чём я, возможно, через некоторое время напишу ещё одну статью) у всех сотрудников организации вплоть до самого высшего менеджмента. Системы, в которой все сотрудники нацелены на снабжение нового «главного информационно-аналитического станка» организации (те самые аналитические модели) максимально качественными данными. Увы и ах, но правило «shit in - shit out» в цифровом мире появилось не просто так и зависимость конечного изделия/результата от сырья на входе у «цифровых станков» гораздо выше, чем у старого доброго <a href=\"https://back-in-ussr.com/2019/02/stanki-iz-sssr-kotorye-rabotayut-i-po-sey-den.html\">1Е61ПМ</a>.</p><p></p>', 1, '2023-06-12 22:01:51', 512546, 104, '/ru/companies/icl_services/articles/667756/', 'Для виртуальных ассистентов Салют можно создавать приложения с красивым интерфейсом и возможностью управлять ими разными способами: голосом, текстовыми сообщениями, касанием, жестами и пультом. Такие приложения называются Canvas App, они доступны пользователям на умных устройствах Sber и в мобильных приложениях Сбербанк Онлайн и Салют. Один из самых простых способов монетизации ваших Canvas App — реклама. Доступны два её вида:Rewarded video — формат видеорекламы, когда пользователь получает награду за просмотр ролика. Наградой может быть внутриигровая валюта, дополнительные жизни, попытки, опыт и другие ресурсы в смартапе (навыке).Fullscreen-баннеры — формат полноэкранной рекламы. Её можно демонстрировать между уровнями, экранами и логическими блоками смартапа. Наша команда подготовила SDK для подключения и управления показом рекламы в ваших навыках. Давайте пройдём все шаги её подключения. '),
(206, 'Как подключить рекламную монетизацию к приложениям для виртуальных ассистентов Салют', '<p>Для виртуальных ассистентов Салют можно создавать приложения с красивым интерфейсом и возможностью управлять ими разными способами: голосом, текстовыми сообщениями, касанием, жестами и пультом. Такие приложения называются Canvas App, они доступны пользователям на умных устройствах Sber и в мобильных приложениях Сбербанк Онлайн и Салют. Один из самых простых способов монетизации ваших Canvas App — реклама. Доступны два её вида:</p><ul><li><p><strong>Rewarded video</strong> — формат видеорекламы, когда пользователь получает награду за просмотр ролика. Наградой может быть внутриигровая валюта, дополнительные жизни, попытки, опыт и другие ресурсы в смартапе (навыке).</p></li><li><p><strong>Fullscreen-баннеры</strong> — формат полноэкранной рекламы. Её можно демонстрировать между уровнями, экранами и логическими блоками смартапа. </p></li></ul><p>Наша команда подготовила <strong>SDK</strong> для подключения и управления показом рекламы в ваших навыках. Давайте пройдём все шаги её подключения. </p><p>Передаю слово моему коллеге, руководителю группы разработки общих компонентов <a href=\"https://habr.com/ru/users/yeti/\">Василию Логиневскому</a>.</p><p>Для начала уточним, что <a href=\"https://developers.sber.ru/portal/virtual-assistants-salute/canvas-app\"><u>Canvas App</u></a> — это веб-приложение, а значит все дальнейшие шаги мы будем делать в качестве веб-разработчика.</p><p>Первым делом нам необходимо подключить наше рекламное <a href=\"https://bit.ly/3La50gz\"><u>Ad SDK</u></a>. Для этого достаточно прописать в HTML-страницу загрузку нашего скрипта:</p><pre><code class=\"xml\">&lt;script src=\"https://cdn-app.sberdevices.ru/shared-static/0.0.0/js/@sberdevices/ad-sdk/ad-sdk.min.js\"&gt;&lt;/script&gt;</code></pre><p>После загрузки в <code>window</code> появится объект <code>SberDevicesAdSDK</code>, и в дальнейшем мы будем работать с его методами.</p><p>Первый метод, который нам понадобится — это метод инициализации рекламного SDK:</p><pre><code class=\"javascript\">window.SberDevicesAdSDK.init({ onError, onSuccess });</code></pre><p>На самом деле, у нас есть не один, а целых три метода инициализации, и дальше мы рассмотрим их различия. Но все наши методы полагаются на работу сценария вашего навыка, поэтому рекламное SDK предполагает, что оно запущено в одном окне с ассистентом.</p><p>Если у вашего Canvas App не было до этого сценария, то он понадобится вам для корректной работы рекламного SDK. Мы реализовали базовый сценарий для быстрого подключения. Чтобы им воспользоваться, пропишите в качестве <a href=\"https://developers.sber.ru/docs/ru/salute/studio/smartapp/main-settings#webhook-%D1%81%D0%BC%D0%B0%D1%80%D1%82%D0%B0%D0%BF%D0%B0\"><u>webhook</u></a> следующий URL: <a href=\"https://smartapp-code.sberdevices.ru/chatadapter/chatapi/webhook/sber_nlp2/akvMhQEy:73931a63e07450a5260600c7f9f6e6d6a992578b\"><u>https://smartapp-code.sberdevices.ru/chatadapter/chatapi/webhook/sber_nlp2/akvMhQEy:73931a63e07450a5260600c7f9f6e6d6a992578b</u></a></p><p>Если вы добавляете рекламу в существующий смартап, то скорее всего вы уже используете<a href=\"https://github.com/sberdevices/assistant-client\"> наш <u>Assistant Client</u></a> для отладки общения со сценарием. Если вы хотите создать навык с нуля, то сначала вам стоит обратиться к нашей документации:<a href=\"https://developers.sber.ru/docs/ru/salute/basics/canvasapp\"> <u>https://developers.sber.ru/docs/ru/salute/basics/canvasapp</u></a></p><p>И подключить Assistant Client:<a href=\"https://github.com/sberdevices/assistant-client#%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D0%B0\"> <u>https://github.com/sberdevices/assistant-client#установка</u></a></p><p>Теперь на клиенте вы можете вызвать один из методов инициализации:</p><pre><code class=\"javascript\">window.SberDevicesAdSDK.init();\nwindow.SberDevicesAdSDK.initDev();\nwindow.SberDevicesAdSDK.initWithAssistant();</code></pre><p>Внутри все эти методы подписываются на события от сценария и ждут конкретной команды от него:</p><pre><code class=\"javascript\">{\n	type: \'smart_app_data\',\n	smart_app_data: {\n		type: \'sub\',\n		payload: {...},\n  }\n}</code></pre><p>Все методы инициализации принимают два параметра: <code>onError</code> и <code>onSuccess</code>:</p><pre><code class=\"javascript\">window.SberDevicesAdSDK.init({\n  onSuccess: () =&gt; { console.log(\'AdSDK inited\'); },\n  onError: () =&gt; { console.error(\'something gone wrong!\'); },\n});</code></pre><p>После получения команды от сценария происходит инициализация. Если всё прошло успешно, вызовется <code>onSuccess</code>, а если произошла ошибка — <code>onError</code> соответственно.</p><p>При этом стоит помнить, что если вы некорректно подключили сценарий, то никакой команды мы не получим, и <code>onError</code> не вызовется. Поэтому для проверки, произошла ли инициализация, мы добавили дополнительный метод:</p><pre><code class=\"javascript\">window.SberDevicesAdSDK.isInited(); // =&gt; true | false</code></pre><h2>Тестовые креативы</h2><p>Уточним важный момент: при разработке и тестировании рекламу стоит запускать с тестовым креативом. Это значит, что мы не будем считать эту рекламу показанной пользователю. Для этого в любой метод инициализации передайте параметр <code>test</code>:</p><pre><code class=\"javascript\">window.SberDevicesAdSDK.init({\n  test: true,\n  onSuccess: () =&gt; { console.log(\'AdSDK inited\'); },\n  onError: () =&gt; { console.error(\'something gone wrong!\'); },\n});</code></pre><h2>Вариации методов инициализации</h2><p>Какой метод инициализации выбрать?</p><p>Если вы никак не взаимодействуете со сценарием и подключили наш готовый webhook, вам подойдут <code>init</code> &amp; <code>initDev</code>.</p><p>Если у вас есть <a href=\"https://developers.sber.ru/docs/ru/salute/app-design-guidelines/ux/canvas/sberbox/userpath\"><u>свой сценарий</u></a>, написанный на любом из наших инструментов — <a href=\"https://developers.sber.ru/portal/products/smartapp-code\"><u>SmartApp Code</u></a>, <a href=\"https://developers.sber.ru/portal/products/salutejs\"><u>Salute JS</u></a>,  <a href=\"https://developers.sber.ru/portal/products/smartapp-framework?attempt=1\"><u>SmartApp Framework</u></a>, — вам подойдёт метод <code>initWithAssistant</code>.</p><h2>init &amp; initDev</h2><p>Метод <code>init</code> предполагает запуск на устройстве, но вы, скорее всего, разрабатываете навык просто в браузере, поэтому для отладки мы предоставляем метод <code>initDev</code>.</p><p>Этот метод предполагает два дополнительных параметра: <code>token</code> и <code>initPhrase</code>.</p><p><code>initPhrase</code> — фраза для запуска вашего смартапа. Она строится следующим образом: “Запусти” + “Активационное имя” (\"Запусти мой апп\"). Например, “Запусти Кубик Рубика”. </p><p><code>token</code> — токен для дебага, получить его можно в SmartApp Studio по <a href=\"https://developers.sber.ru/docs/ru/salute/assistant-client/overview#%D0%B0%D0%B2%D1%82%D0%BE%D1%80%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D1%8F-%D0%B7%D0%B0%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\"><u>инструкции</u></a><u>.</u></p><p>Итого у вас получится примерно вот такой код запуска:</p><pre><code class=\"javascript\">const IS_DEVELOPMENT = process.env.NODE_ENV === \"development\";\nconst DEV_TOKEN = process.env.DEV_TOKEN;\nconst DEV_PHRASE = process.env.DEV_PHRASE;\n\nif (IS_DEVELOPMENT) {\n  window.SberDevicesAdSDK.initDev({ token: DEV_TOKEN, initPhrase: DEV_PHRASE, onSuccess, onError, test: true });\n} else {\n  window.SberDevicesAdSDK.init({ onSuccess, onError });\n}</code></pre><p>Предполагается, что вы пользуетесь одним из современных сборщиков для web-приложений (например, webpack) и можете пробросить необходимые переменные окружения: <code>NODE_ENV</code>, <code>DEV_TOKEN</code> и <code>DEV_PHRASE</code>.</p><p>В итоге методы <code>init</code> и <code>initDev</code> необходимо использовать в связке. Это необходимо, потому что при отладке в браузере Assistant Client подменяет собой транспортный слой ассистента, который всегда есть внутри вашего Canvas App, когда вы запускаете его на устройстве.</p><h2>initWithAssistant()</h2><p>Если у вас написан свой сценарий, то у вас где-то уже есть инстанс <code>assistantClient</code> и вы с ним активно взаимодействуете. В таком случае вы можете инициализировать рекламное SDK следующим образом:</p><pre><code class=\"javascript\">const assistant = initializeAssistant();\n\ninitWithAssistant({\n  assistant,\n  onSuccess,\n  onError,\n});</code></pre><p>При этом наше SDK всё ещё будет ждать команды от сценария с <code>type: \'sub\'</code>, о котором было рассказано выше. Это означает, что вам на сценарии необходимо предоставить такую команду. Давайте рассмотрим, что именно требуется предоставить в качестве payload. На самом деле, ничего слишком сложного, вот код создания такого payload c использованием:<a href=\"https://github.com/sberdevices/salutejs\"> <u>https://github.com/sberdevices/salutejs</u></a><u>.</u> Подробнее почитать про фреймворк Salute JS можно<a href=\"https://habr.com/ru/company/sberdevices/blog/561960/\"><u> здесь</u></a>.</p><pre><code class=\"javascript\">const { payload } = req.request;\n\nconst userData = {\n    projectName: payload.projectName,\n    device: payload.device,\n    app_info: payload.app_info,\n};\n\nres.appendCommand({\n    type: \"sub\",\n    payload: {\n        sub: req.request.uuid.sub,\n        ...userData,\n    },\n});</code></pre><p>Тот же код на SmartApp Code, но посылаем мы сообщение на событие <code>RUN_APP</code>:</p><pre><code>theme: /\n\n    state: RunApp\n        event!: RUN_APP\n        q!: * *start\n        script:\n            var ctx = $jsapi.context();\n            var req = ctx.request.rawRequest;\n            \n            $response.replies = $response.replies || [];\n            \n            $response.replies.push({\n                type: \'raw\',\n                device: {},\n                body: {\n                    items: [{\n                        command: {\n                            type: \'smart_app_data\',\n                            smart_app_data: {\n                                type: \'sub\',\n                                payload: {\n                                    sub: req.uuid.sub,\n                                    projectName: req.payload.projectName,\n                                    device: req.payload.device,\n                                    app_info: req.payload.app_info,\n                                }\n                            }\n                        }\n                    }]\n                }\n            })\n\n    state: noMatch\n        event!: noMatch\n</code></pre><h2>Запуск рекламы</h2><p>После успешной инициализации тем или иным способом мы можем приступить к запуску рекламы.</p><p>Напомним, что в смартапах поддерживается два формата рекламы:</p><ul><li><p><strong>Rewarded video</strong> — пользователь получает награду за просмотр видеоролика. </p></li></ul><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/623d86b55651a61252a0058b\" data-style=\"\" id=\"623d86b55651a61252a0058b\" width=\"\"><ul><li><p><strong>Fullscreen-баннеры</strong> — полноэкранная реклама, демонстрируется между уровнями, экранами и логическими блоками смартапа. </p></li></ul><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/623d8792d5b5af129289c1dd\" data-style=\"\" id=\"623d8792d5b5af129289c1dd\" width=\"\"><p>Для показа видео:</p><pre><code class=\"javascript\">window.SberDevicesAdSDK.runVideoAd({\n    onSuccess: () =&gt; {}, \n    onError: () =&gt; {}, \n});</code></pre><p>Для запуска баннеров:</p><pre><code class=\"javascript\">window.SberDevicesAdSDK.runBanner({\n    onSuccess: () =&gt; {}, \n    onError: () =&gt; {}, \n});</code></pre><p>При этом внутри всё общение с рекламной сетью и работу с интерфейсом рекламного плеера или баннеров мы берём на себя.</p><h2>Рекомендации разработчикам</h2><ul><li><p>Показывайте рекламу не более 5 раз за сессию. (Кстати, рекламный баннер можно запустить не чаще чем раз в две минуты, иначе будет срабатывать <code>onError</code>.)</p></li></ul><ul><li><p>Предусмотрите отсутствие звуков во время проигрывания рекламы.</p></li></ul><ul><li><p>Убедитесь, что реклама не будет проигрываться в неподходящий момент, нарушая сценарий смартапа.</p></li></ul><p>Ещё о подключении рекламной монетизации можно почитать <a href=\"https://developers.sber.ru/docs/ru/smartservices/smartads/advertising\"><u>здесь</u></a>. Если у вас возникнут дополнительные вопросы, вы можете задать их в комментариях к этому посту или написать в Telegram-сообщество разработчиков SmartMarket:<a href=\"https://t.me/smartmarket_community\"> <u>https://t.me/smartmarket_community</u></a><u>.</u></p><p>Это лишь начало большого пути: мы планируем расширять список доступных поверхностей для смартапов с подключенной рекламной монетизацией, применять дополнительные инструменты для промотирования таких приложений, сделать процесс подключения ещё проще. Доход разработчиков навыков с монетизацией будет расти вместе с развитием рекламного инструментария.</p><p>Кстати, до конца апреля 2022 разработчики Canvas App будут получать 100% дохода от рекламной монетизации, без комиссии. </p>', 3, '2023-06-12 22:01:52', 925683, 100, '/ru/companies/sberdevices/articles/658149/', 'Пришло время обновить статью о методике получения абсолютных валютных курсов. Ранее был ряд статей (13.03.2019 — «Абсолютный курс валют: ищем истинную ценность», 03.05.2019 — «Получаем абсолютные курсы из парных кросс-курсов валют») на эту тему. За время существования проекта, а проекту более 6 лет, накопился опыт расчета и применения абсолютных валютных курсов.'),
(207, 'Нет, Open Source не означает «бесплатная поддержка»', '<i>Год назад разработчик опенсорсной программы Raccoon APK Downloader <a href=\"https://raccoon.onyxbits.de/blog/bugreport-free-support/\">заявил</a>, что отныне приём баг-репортов — это часть <a href=\"https://raccoon.onyxbits.de/support/\">платной поддержки</a>. Идея обсуждается <a href=\"https://news.ycombinator.com/item?id=30577666\">до сих пор</a> и вызывает споры по понятным причинам. С одной стороны, это как-то контринтуитивно… С другой стороны, определённая логика тоже есть… В общем, судите сами, вот <a href=\"https://raccoon.onyxbits.de/blog/bugreport-free-support/\">оригинальная заметка</a> Патрика Альбрихта, её <a href=\"https://news.ycombinator.com/item?id=25099862\">бурное обсуждение</a> и <a href=\"https://raccoon.onyxbits.de/blog/reactions-bugreport-free-support/\">пояснение позиции</a> по итогам обсуждения.</i> <br>\r\n<br>\r\nПримерно такие диалоги периодически возникают у меня с пользователями, отвлекая от гораздо более важных вещей:<br>\r\n<br>\r\n<pre>Юзер:	Здравствуйте, хочу зарепортить баг в вашей программе.\nЯ:		Отлично! Для этого откройте тикет, пожалуйста.\nЮзер:	Но тикеты вроде входят в платный пакет?\nЯ:		И?\nЮзер:	Просто хочу сказать, что ваша программа сломана, чтобы вы могли починить её.\nЯ:		Да, с вашей стороны это запрос на поддержку. Пожалуйста, откройте тикет.\nЮзер:	…бл%$#%$...</pre><a name=\"habracut\"></a><br>\r\nПосле этого обычно начинается тирада, что я дерьмовый разработчик, которому наплевать на код (что просто смешно: даже если отбросить профессиональную гордость, у меня есть все стимулы исправлять баги, чтобы мой почтовый ящик не завалили жалобами) и который обдирает своих пользователей…<br>\r\n<br>\r\nВ прошлом бывало, что я уступал и смотрел, что там за баг. Я изучал проблему и почти всегда оказывалось, что ничего не сломано, просто всё работает не так, как ожидалось (чего, собственно, и следует ожидать от любого достаточно сложного программного обеспечения). Пользователь просто не удосужился прочитать документацию и пытался ускользнуть от оплаты лицензии, маскируя запрос на поддержку под сообщение об ошибке. <br>\r\n<br>\r\nПоэтому сейчас моя политика такова: нет заявки на поддержку — нет обслуживания. Любой баг-репорт без оплаты сразу отправляется в корзину, даже без рассмотрения.<br>\r\n<br>\r\n<h1>Почему я такой засранец?</h1><br>\r\nДело вот в чём: я пишу софт, который решает <b>мою проблему</b>. Я позволяю использовать его всем желающим, потому что это не требует от меня никаких затрат (ну, почти никаких, всё-таки приходится платить за хостинг. Кстати, всегда пожалуйста). <br>\r\n<br>\r\nЯ также предоставляю исходники, чтобы вы могли сами всё исправить, если моё решение окажется непригодным. Но если вы приходите с «баг-репортом» без патча (или хотя бы без точного указания на проблему), то вы по сути просите меня <b>изучить вашу проблему</b>. Мне придётся потратить на неё силы и время. Поэтому я и беру оплату: вы просите меня потратить время для вас. Это обычно называется <b>работой</b>. И, как ни удивительно, за работу люди обычно получают деньги.<br>\r\n<br>\r\nНе поймите меня неправильно. Я рад помочь. Оплата поддержки — это причина, по которой в проекте ещё теплится жизнь (я уже упоминал о хостинге?). Но приходить ко мне под ложным предлогом и/или ожидать, что я должен предоставлять бесплатные услуги вдобавок к бесплатному софту, это уже слишком.<br>\r\n<br>\r\nСофт распространяется бесплатно, но не моё время. Если хотите откусить его кусочек, я ожидаю оплату. Точка.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/webt/sb/qg/c5/sbqgc5ptzfr7tidflcgqf7ffw2i.png\" data-src=\"https://habrastorage.org/webt/sb/qg/c5/sbqgc5ptzfr7tidflcgqf7ffw2i.png\"><br>\r\n<br>\r\n<h1>Пояснение позиции</h1><br>\r\nЧто ж, моя маленькая заметка вызвала бурную реакцию.<br>\r\n<br>\r\nБоже, люди просто в ярости из-за того, что я (якобы) отказался принимать их отчёты об ошибках, оформленные вручную, в золотых рамочках, благоухающие розами, без предварительной оплаты. Как я посмел?! Ну вот так…<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w1560/webt/h1/le/dn/h1lednm0vj-uj5wa8rlfioa0alu.png\" align=\"right\" width=\"250\" data-src=\"https://habrastorage.org/webt/h1/le/dn/h1lednm0vj-uj5wa8rlfioa0alu.png\">На самом деле основная мысль — это игнор запросов на бесплатную поддержку. <b>Особенно</b> когда они <u>замаскированы</u> под сообщения об ошибках. Я не удаляю специально баг-репорты из почтового ящика, я просто рискую потерять ценные репорты под кучей мусора.<br>\r\n<br>\r\nНо блин, это же интернет. Здесь тебя быстро заканселят за две секунды, если что. Людям нужно оставить комментарий быстро-быстро, пока тема горячая, у них нет времени (внимательно) прочитать статью (или вообще её прочитать). При этом встречаются реально уморительные мнения!<br>\r\n<br>\r\n<h1>Что писали люди (перефразируя)</h1><br>\r\n<i>Баги должны быть исправлены!</i><br>\r\n<br>\r\nНет, не должны. Вы читали лицензионное соглашение? Поищите раздел «AS IS». Он есть <a href=\"https://opensource.org/licenses\">в каждой лицензии, одобренной OSI</a> (обычно прописными буквами). Это означает, что я не обязан поддерживать программу, и вы не имеете права требовать этого.<br>\r\n<br>\r\nКонечно, есть простой способ возложить на меня такие обязательства (и я даже предлагаю вам этот вариант): перечислить деньги на мой банковский счёт.<br>\r\n<br>\r\n<div style=\"text-align:center;\"><img src=\"https://habrastorage.org/getpro/habr/post_images/635/d49/2dc/635d492dc6dee5176d4a4b89464bbcb8.svg\"><br>\r\n<br>\r\n<i>Баг изначально по вашей вине!</i><br>\r\n<br>\r\nИ что дальше? О, подождите. Это одна из тех теорий заговора, где я намеренно закладываю ошибки в свой код, чтобы заставить вас заплатить за их устранение? Хорошая идея, но…<br>\r\n<br>\r\n<ul>\r\n<li>Такой план не масштабируется. Количество закладок не бесконечно.<br>\r\n</li>\r\n<li>Исправление ошибок — самая трудоёмкая форма поддержки. Такая бизнес-модель окажется убыточной (особенно с учётом времени на разработку хорошего бага, за удаление которого заплатит кто-то <u>один</u>).<br>\r\n</li>\r\n<li>Я предоставил исходный текст, лишив себя рычагов давления.</li>\r\n</ul><br>\r\nВы сами выбрали использовать мой софт. Отказ от ответственности см. в лицензионном соглашении. Я не ставил себя в положение единственного спасителя.<br>\r\n<br>\r\n<div style=\"text-align:center;\"><img src=\"https://habrastorage.org/getpro/habr/post_images/635/d49/2dc/635d492dc6dee5176d4a4b89464bbcb8.svg\"><br>\r\n<br>\r\n<i>Мои баг-репорты — это произведение искусства, ты балбес! Я потратил СВОЁ ВРЕМЯ, чтобы помочь ТЕБЕ улучшить ТВОЮ программу!</i><br>\r\n<br>\r\nТвой баг не беспокоит ни меня, ни моих платных клиентов. Если бы беспокоил, я бы сам его исправил. Отправляя сообщение об ошибке, вы оказываете услугу не мне, а себе и сообществу пользователей. Точно так же, как это сделал я, выложив программу в открытый доступ (хотите вы помогать людям или нет — полностью ваш выбор, я вас об этом не прошу). К вашему баг-репорту прилагается патч? Если да, то проблема решена. Если нет, то я должен над ней поработать. Это заказ на работу, который придётся оплатить.<br>\r\n<br>\r\n<div style=\"text-align:center;\"><img src=\"https://habrastorage.org/getpro/habr/post_images/635/d49/2dc/635d492dc6dee5176d4a4b89464bbcb8.svg\"><br>\r\n<br>\r\n<i>Игнорировать сообщения об ошибках — глупо!</i><br>\r\n<br>\r\nПочему? Если я буду читать такие сообщения, то возникнет соблазн оказать кому-то бесплатную услугу. Это несправедливо по отношению к тем, кто платил за моё время.<br>\r\n<br>\r\n<div style=\"text-align:center;\"><img src=\"https://habrastorage.org/getpro/habr/post_images/635/d49/2dc/635d492dc6dee5176d4a4b89464bbcb8.svg\"><br>\r\n<br>\r\n<i>Но если я заплачу за поддержку, нет гарантии, что баг будет исправлен.</i><br>\r\n<br>\r\nЗато у вас есть гарантия, что я выслушаю и своевременно дам определённый ответ. Этого не получишь в публичном баг-трекере. Понимаете, в чём дело? Ваши ожидания основаны на опыте общения с разработчиками, которым вы ничего не платите и у которых нет стимула вам помогать. Когда я беру ваши деньги, то вы становитесь клиентом.<br>\r\n<br>\r\n<div style=\"text-align:center;\"><img src=\"https://habrastorage.org/getpro/habr/post_images/635/d49/2dc/635d492dc6dee5176d4a4b89464bbcb8.svg\"><br>\r\n<br>\r\n<i>Другие опенсорсные проекты принимают баг-репорты бесплатно.</i><br>\r\n<br>\r\nМне без разницы.<br>\r\n<br>\r\n<ul>\r\n<li>Если какой-то другой разработчик готов бесплатно жертвовать своим временем, это его выбор.<br>\r\n</li>\r\n<li>Если эти проекты критически важны (и иначе финансируются), то разумно открыть форум поддержки.</li>\r\n</ul><br>\r\nНо в целом у меня нет желания прыгать с моста только потому, что так сделал кто-то другой.<br>\r\n<br>\r\n<div style=\"text-align:center;\"><img src=\"https://habrastorage.org/getpro/habr/post_images/635/d49/2dc/635d492dc6dee5176d4a4b89464bbcb8.svg\"><br>\r\n<br>\r\n<i>Вы лицемер! Вы рекламируете свою программу как решение МОЕЙ проблемы.</i><br>\r\n<br>\r\nОбъяснение решаемой проблемы — это часть сделки, по которой вы можете использовать моё решение (кстати, это избавляет вас от необходимости читать код, чтобы понять его смысл. Не благодарите). Вывод, что у нас одинаковая проблема, вы сделали сами. И да, моё программное обеспечение давно выросло за рамки моих собственных потребностей. Но это ещё не причина работать на вас бесплатно.<br>\r\n<br>\r\n<i>Вы можете найти бесплатный хостинг на платформе X</i><br>\r\n<br>\r\nПомните SourceForge? Был такой хороший хостинг для опенсорса. Его продали. Новые владельцы добавили <a href=\"https://en.wikipedia.org/wiki/SourceForge#Controversies\">сомнительные методы монетизации</a>. У разработчиков был выбор: уйти и потерять обратные ссылки или остаться — и запятнать свою репутацию.<br>\r\n<br>\r\nПомните Github? Был такой хороший хостинг для опенсорса. Его продали. Новый владелец — Microsoft! Чемпион по блокировке конкурентов и сомнительным методам монетизации. У разработчиков был выбор: уйти и потерять свои обратные ссылки или остаться — и посмотреть, что придумает Microsoft в ближайшие годы.<br>\r\n<br>\r\nЗнаете Gitlab? Это и сейчас хороший хостинг для опенсорса! Пока его не продадут!<br>\r\n<br>\r\nЗамечаете <a href=\"https://raccoon.onyxbits.de/blog/why-not-use-github/\">некую закономерность</a>?<br>\r\n<br>\r\n<div style=\"text-align:center;\"><img src=\"https://habrastorage.org/getpro/habr/post_images/635/d49/2dc/635d492dc6dee5176d4a4b89464bbcb8.svg\"><br>\r\n<br>\r\n<i>Вы назначили себя единственным адресом поддержки. Хотя бы поднимите форум для сообщества!</i><br>\r\n<br>\r\nУвеличить затраты на инфраструктуру, которая подорвёт мои доходы? Звучит как план. <b>НЕТ!</b> Парень, высунь голову из темноты своих идиллических иллюзий.<br>\r\n<br>\r\nОтсутствие хорошей поддержки — одно из главных критических замечаний <b>против</b> опенсорса. Когда у людей возникает проблема, они хотят с кем-то поговорить и чтобы проблему своевременно решили. Они не хотят регистрироваться на форумах и неделями следить за ответами в надежде, что какой-нибудь член сообщества в конце концов найдёт ответ.<br>\r\n<br>\r\nКогда речь о моей программе, я здесь самый компетентный специалист. Так или иначе, люди будут (пытаться) связаться со мной. Для разработчика это создаёт дилемму:<br>\r\n<br>\r\n<ul>\r\n<li>Смириться с потерей времени на техподдержку.<br>\r\n</li>\r\n<li>Начать принимать оплату и понять, что теперь у вас бизнес с накладными расходами.</li>\r\n</ul><br>\r\nДа, я назначил себя единственным адресом для поддержки. Это единственный логичный выход. Если у меня бизнес, почему я должен убивать его с помощью публичного форума поддержки / баг-трекера? Это просто лишние затраты на инфраструктуру, которая съедает доходы.<br>\r\n<br>\r\n<div style=\"text-align:center;\"><img src=\"https://habrastorage.org/getpro/habr/post_images/635/d49/2dc/635d492dc6dee5176d4a4b89464bbcb8.svg\"><br>\r\n<br>\r\n<i>Бесплатная поддержка поможет проекту расти!</i><br>\r\n<br>\r\nВы математик? Когда-нибудь применяли коэффициент масштабирования к проекту, в котором расходы превышают доходы?<br>\r\n<br>\r\n<div style=\"text-align:center;\"><img src=\"https://habrastorage.org/getpro/habr/post_images/635/d49/2dc/635d492dc6dee5176d4a4b89464bbcb8.svg\"><br>\r\n<br>\r\n<i>Лучше поставьте кнопку для донатов!</i><br>\r\n<br>\r\nОтличная идея! Как часто вы нажимаете такие кнопки?<br>\r\n<br>\r\nЕсли серьёзно, я не благотворительная организация, а только они могут принимать пожертвования. Для остальных это просто неправильно обозначенный, но всё равно налогооблагаемый доход. Как только вы размещаете кнопку «Пожертвование», вы начинаете бизнес, который автоматически создаёт накладные расходы. Целовать ноги щедрому спонсору за пять баксов в год? Увольте.<br>\r\n<br>\r\nЯ не занимаюсь благотворительностью и мне не нужна «поддержка». Я хочу получать деньги за свою работу, как любой нормальный человек. И считаю абсолютно нечестным размещать свою работу под открытой лицензией, а затем тратить нелепое количество времени на сбор милостыни, эксплуатируя чувство вины у своих пользователей.<br>\r\n<br>\r\nЕсли в лицензии сказано, что «программное обеспечение свободно для использования», так оно и есть. Вы получаете именно это. Ничего больше, ничего меньше. Остальное за деньги.<br>\r\n<br>\r\n<hr><br>\r\n<i>В общем, Патрик не отказывается от своей позиции. В принципе, он имеет на это право. Если судить по уровню компетенций, то некоторые мейнтейнеры опенсорса вообще должны зарабатывать как ведущие программисты в FAANG, а по факту выходит иначе.</i>', 1, '2023-06-12 22:01:53', 158946, 77, '/ru/companies/dcmiran/articles/654643/', 'В курсе анализа данных есть методика исследования зависимостей между данными через корреляцию Пирсона. Корреляция тем выше чем ряды данных более связаны между собой. И наоборот. Не плохо было бы применить эту технику к валютам и посмотреть на взаимосвязи между ними. Но, если применять корреляцию к парным курсам, то получим оценку связей только между парными курсами. Зависимостей между отдельными валютами не получится.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(208, 'Абсолютные валютные курсы', '<figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/94b/eed/426/94beed42624912a5a449b3159528db59.png\" width=\"1600\" height=\"480\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/94b/eed/426/94beed42624912a5a449b3159528db59.png\"><figcaption></figcaption></figure><h2>Введение</h2><p>Пришло время обновить статью о методике получения абсолютных валютных курсов. Ранее был ряд статей (13.03.2019 — «<a href=\"https://vc.ru/finance/60630-absolyutnyy-kurs-valyut-ishchem-istinnuyu-cennost\" rel=\"noopener noreferrer nofollow\"><u>Абсолютный курс валют: ищем истинную ценность</u></a>», 03.05.2019 — «<a href=\"https://habr.com/ru/post/450368/\" rel=\"noopener noreferrer nofollow\"><u>Получаем абсолютные курсы из парных кросс-курсов валют</u></a>») на эту тему. За время существования проекта, а проекту более 6 лет, накопился опыт расчета и применения абсолютных валютных курсов.</p><h2>О теории Марковица и валютных портфелях</h2><p><a href=\"https://ru.wikipedia.org/wiki/%D0%9F%D0%BE%D1%80%D1%82%D1%84%D0%B5%D0%BB%D1%8C%D0%BD%D0%B0%D1%8F_%D1%82%D0%B5%D0%BE%D1%80%D0%B8%D1%8F_%D0%9C%D0%B0%D1%80%D0%BA%D0%BE%D0%B2%D0%B8%D1%86%D0%B0\" rel=\"noopener noreferrer nofollow\"><u>Портфельная теория Марковица</u></a> предлагает технологию распределения долей в инвестиционном портфеле. Исходя из средней доходности каждого инструмента в портфеле за некоторый предшествующий интервал времени и вариации доходности за этот же период и распределения долей в портфеле получаем риск и доходность портфеля. Варьируя долями активов в портфеле можно подобрать портфель со сниженным риском и повышенной доходностью. </p><p>Только все эти операции можно производить с инструментами одинаковой размерности. Т.е. они все должны быть приведены к одному знаменателю. </p><p>К сожалению валютные курсы известны только в парном виде как отношение одной валюты к другой. </p><img class=\"formula\" source=\"EURUSD={{EUR} \\over {USD}}\" alt=\"EURUSD={{EUR} \\over {USD}}\" src=\"https://habrastorage.org/getpro/habr/upload_files/33e/42b/25b/33e42b25b9e3ac66ab4065813c91303e.svg\" width=\"164\" height=\"43\"><p>Соответственно для применения теории Марковица к валютному портфелю необходимо все валюты привести к единому основанию (знаменателю).</p><p>Первое решение которое напрашивается само по себе - это выразить все валюты в портфеле через одну какую-либо валюту. Например можно взять доллар или евро. И такие попытки имеют место (см. “<a href=\"https://github.com/yhat/currency-portfolio-optimization/blob/master/Currency%20Portfolio%20Optimization.ipynb\" rel=\"noopener noreferrer nofollow\"><u>Currency Portfolio Optimization Using ScienceOps</u></a>”). </p><p>Но кто сказал об оптимальности выбора в качестве базовой валюты доллара, евро или еще какой-либо?</p><h2>Методика перехода от парных курсов к абсолютным</h2><p>Теперь немного математики. Парный курс есть отношение одной валюты к другой. Если прологарифмировать это выражение, то получится, что между логарифмами парных курсов и абсолютных валютных курсов есть линейная зависимость.</p><img class=\"formula\" source=\"ln(EURUSD)=ln({EURABS \\over USDABS})=ln(EURABS)-ln(USDABS)\" alt=\"ln(EURUSD)=ln({EURABS \\over USDABS})=ln(EURABS)-ln(USDABS)\" src=\"https://habrastorage.org/getpro/habr/upload_files/50a/ef3/063/50aef30639ecf11de533abdd0376fc02.svg\" width=\"554\" height=\"43\"><p>Да здесь мы вводим понятие абсолютного валютного курса. Он появляется при \"расщеплении\" парного валютного курса на две составляющие. </p><p>Раз есть линейная зависимость и есть множество элементов (валют), то можно все это отобразить в матричном виде.</p><img class=\"formula\" source=\"ln(P) = M * ln(A)\" alt=\"ln(P) = M * ln(A)\" src=\"https://habrastorage.org/getpro/habr/upload_files/f28/dba/010/f28dba010a1cb2456bec8d7b108a7478.svg\" width=\"158\" height=\"22\"><p>Здесь <em>P</em> - вектор парных курсов, <em>A</em> - вектор абсолютных валютных курсов, <em>M</em> - это матрица линейного преобразования от логарифмов абсолютных курсов к логарифмам парных курсов.</p><p>Но парные курсы нам известны. Их каждый день банки публикуют. Нам нужны абсолютные. Для начала осуществим обратное линейное преобразование.</p><img class=\"formula\" source=\"ln(A)=inv(M)*ln(P)\" alt=\"ln(A)=inv(M)*ln(P)\" src=\"https://habrastorage.org/getpro/habr/upload_files/0e4/3a3/4da/0e43a34da493623a3262b3997494dc30.svg\" width=\"200\" height=\"22\"><p>Здесь <em>inv()</em> - операция получения обратной матрицы.</p><p>И для получения “чистых” абсолютных валютных курсов пропустим через экспоненту.</p><img class=\"formula\" source=\"A=exp(inv(M)*ln(P))\" alt=\"A=exp(inv(M)*ln(P))\" src=\"https://habrastorage.org/getpro/habr/upload_files/b46/da6/bac/b46da6bac42955faffb8310ead0bd293.svg\" width=\"213\" height=\"22\"><h2>Практическая реализация</h2><p>Теперь посмотрим на практическую сторону вопроса. Для расчета абсолютных курсов необходимо производить операции логарифмирования и взятия экспоненты, что не представляет большой сложности. Кроме того необходимо иметь матрицу прямого линейного преобразования от логарифмов абсолютных курсов к логарифмам парных курсов и обратную к ней. Все расчеты были произведены в <a href=\"https://www.kaggle.com/eavprog/abscur-converter\" rel=\"noopener noreferrer nofollow\"><u>тетрадке на Kaggle</u></a>.</p><p>Матрица прямого линейного преобразования состоит из трёх чисел \"0\", \"-1\" и \"+1\". Вид у нее такой.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e97/83a/407/e9783a4070fefc08ff007064b70f276a.png\" width=\"1063\" height=\"676\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e97/83a/407/e9783a4070fefc08ff007064b70f276a.png\"><figcaption></figcaption></figure><p>По строкам здесь валюты. По столбцам валютные пары. В каждом столбце есть одно положительное значение и одно отрицательное. Остальные значения нули. Положительное значение отвечает за числитель парного курса, отрицательное отвечает за знаменатель. </p><p>В матрице видны длинные положительные горизонтальные полосы. Это доллар, евро и другие популярные валюты. Они чаще других участвуют в валютных парах.</p><p>Теперь необходимо получить обратную матрицу. Естественно получение обратной матрицы не гарантировано. Но есть возможность получать <a href=\"https://ru.wikipedia.org/wiki/%D0%9F%D1%81%D0%B5%D0%B2%D0%B4%D0%BE%D0%BE%D0%B1%D1%80%D0%B0%D1%82%D0%BD%D0%B0%D1%8F_%D0%BC%D0%B0%D1%82%D1%80%D0%B8%D1%86%D0%B0\" rel=\"noopener noreferrer nofollow\"><u>псевдообратную матрицу</u></a>. Именно так и было реализовано в расчете абсолютных валютных курсов. И вид у матрицы такой.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/2c2/674/615/2c26746159ecf5d8e3a2a910caf5ddb2.png\" width=\"721\" height=\"1106\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/2c2/674/615/2c26746159ecf5d8e3a2a910caf5ddb2.png\"><figcaption></figcaption></figure><p>Здесь по строкам расположились парные курсы. В столбцах валюты. Значения в обратной матрице распределились от -1.0 до +0.4. Делать какие-либо выводы по ней сложно. Одно понятно, что произведение двух этих матриц даст в результате наиболее близкую к единичной матрицу. Проверка данного факта произведена в <a href=\"https://www.kaggle.com/eavprog/abscur-converter\" rel=\"noopener noreferrer nofollow\"><u>расчете</u></a>.</p><h2>О применении</h2><p>Теперь о преимуществах которые дает применение абсолютных валютных курсов. </p><p>Первое, что хочется отметить, это понимание причин изменения курса валютной пары. В валютной паре участвуют две валюты. Соответственно изменение курса пары обусловлено изменением абсолютных курсов обеих участвующих валют. Причем курс одной находится в знаменателе, а курс другой в числителе. Выселенные абсолютные курсы позволяют понять какая из валют послужила причиной изменения парного курса и в какой мере.</p><p>Изначально причиной возникновения теории об абсолютных валютных курсах было стремление применить теорию портфельного управления Марковица к чистому валютному портфелю. И это удалось сделать. Для всех валют в портфеле удается вычислить абсолютные валютные курсы. Таким образом все они оказываются приведенными к одному знаменателю. И для них уже можно применять теорию Марковица. О чем имеется <a href=\"https://drive.google.com/open?id=1LEveLpyh-16Ne7Git0rMXcUFxMkIzB0rOafgGBNrq1w\" rel=\"noopener noreferrer nofollow\"><u>соответствующая статья</u></a>.</p><p>Корреляции между отдельными абсолютными валютными курсами позволяют численно оценить величину взаимозависимости. Множество таких корреляций вынесенное на граф позволяет увидеть группировки (кластеры) валют с большой степенью взаимозависимости. В <a href=\"https://habr.com/ru/post/651925/\" rel=\"noopener noreferrer nofollow\"><u>статье о связанности мировой экономики</u></a> дается описание методики исследования на графе корреляционных зависимостей.</p><p>Ввиду того что для валют получены абсолютные валютные курсы они подобны другим финансовым инструментам. У них теперь есть общий знаменатель. И соответственно их можно сравнивать друг с другом. Первое что хочется выделить это доходность. Можно рассматривать как растут и падают абсолютные валютные курсы за некоторый промежуток времени. И соответственно можно сортировать валюты по доходности. Результат такой сортировки разбирается в статье про рейтинги роста и падения.</p><p>Одним из показателей финансового инструмента является <a href=\"https://ru.wikipedia.org/wiki/%D0%92%D0%BE%D0%BB%D0%B0%D1%82%D0%B8%D0%BB%D1%8C%D0%BD%D0%BE%D1%81%D1%82%D1%8C\" rel=\"noopener noreferrer nofollow\"><u>волатильность</u></a>. Она характеризует изменчивость инструмента. Инструменты с высокой волатильностью крайне рискованны и не походят для сохранения капиталов. Хранить капиталы в валюте - не самое лучшее решение. И для оценки стабильности или волатильности валют можно применить оценку их абсолютных курсов. В <a href=\"https://habr.com/ru/post/650681/\" rel=\"noopener noreferrer nofollow\"><u>статье про рейтинги стабильности валют</u></a> рассказывается о методике оценки волатильности и приводятся неожиданные выводы о самых стабильных и самых волатильных мировых валютах.</p><p>Без прогнозирования теория об абсолютных валютных курсах скорее всего была бы не полной. В статье о прогнозе знака для абсолютных курсов разбирается модель машинного обучения для предсказания направления изменения курсов валют. </p><h2>Заключение</h2><p>Подведем итоги. Основная задача теории - приведение к общему знаменателю. И эта задача выполнена. Метод вычисления абсолютных валютных курсов из парных определен. Обозначены несколько применений теории со ссылками на соответствующие статьи.</p><p>Теория еще очень молода. Ей еще только предстоит найти свое применение. В первую очередь вижу такое применение при анализе смешанных портфелей (валюты и акции). Именно этому будут посвящены следующие статьи. </p><p>Настоящая статья станет отправной точкой ко всем остальным. По мере выхода новых работ будет расширяться и эта.</p>', 2, '2023-06-12 22:01:53', 271638, 100, '/ru/articles/652187/', 'Понятие стабильности для валют в основном в экономике характеризуется качественным образом. Да и как говорить о числовой стабильности валюты раз существуют только парные валютные курсы. И если мы попытаемся применить какую либо статистическую функцию к этому парному курсу, то это все равно не даст нам знания о каждой валюте отдельно от другой. В проекте Абсолютный валютный курс предложена методика получения абсолютных курсов для каждой валюты в отношении к абсолютной валюте. Таким образом появляется возможность исследовать отдельные валюты без отношения к другой. Более того это исследование можно проводить в численном виде. В настоящей статье дается числовое определение волатильности для валют.  '),
(209, 'Связанность мировой экономики через абсолютные валютные курсы', '<p>В курсе анализа данных есть методика исследования зависимостей между данными через корреляцию Пирсона. Корреляция тем выше чем ряды данных более связаны между собой. И наоборот. Не плохо было бы применить эту технику к валютам и посмотреть на взаимосвязи между ними. Но, если применять корреляцию к парным курсам, то получим оценку связей только между парными курсами. Зависимостей между отдельными валютами не получится.</p><p>В рамках разработки проекта \"Абсолютный курс\" получена методика вычисления <a href=\"https://habr.com/ru/post/652187/\" rel=\"noopener noreferrer nofollow\"><u>абсолютных валютных курсов</u></a>. Удалось выразить стоимость валют через отношение к абсолютной валюте.</p><p>Раз удалось для каждой валюты получить абсолютный курс, можно посмотреть на зависимости между абсолютными курсами отдельных валют. Таким образом у нас появится информация о связях в мировой экономике через зависимости между валютами разных стран.</p><p>Зависимости в числовых рядах проще всего исследовать при помощи <a href=\"https://ru.wikipedia.org/wiki/%D0%9A%D0%BE%D1%80%D1%80%D0%B5%D0%BB%D1%8F%D1%86%D0%B8%D1%8F\" rel=\"noopener noreferrer nofollow\"><u>корреляции Пирсона</u></a>. Вот и в настоящей работе предлагается поступить так же. Вычислим парные корреляции для всего набора абсолютных валютных курсов. Причем оперировать мы будем не самими абсолютными курсами, а их дневными изменениями. Таким образом будем исследовать связанность по одновременной изменчивости за день.</p><p>Далее результаты вынесем на граф и посмотрим на получившуюся картину.</p><p>Итак методика исследований определена. Остаётся провести эксперимент и получить результаты.</p><p>Все вычисления проводились в <a href=\"https://www.kaggle.com/eavprog/abs-svyas-valut\" rel=\"noopener noreferrer nofollow\"><u>тетрадке на Kaggle</u></a>. После загрузки истории абсолютных курсов были произведены вычисления для разных временных диапазонов (последние 5 лет, 1 год, полгода и квартал).</p><p>В расчете для каждого диапазона производится переход к относительным изменениям, считается матрица парных корреляций, выделяется корреляция по модулю превышающие 0.7 и данные выносятся на граф.</p><p>Теперь посмотрим на результаты. Вот граф зависимостей для последних 5 лет.  </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/374/973/42b/37497342b0d31afe8c66b01e68ea55e7.png\" width=\"953\" height=\"523\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/374/973/42b/37497342b0d31afe8c66b01e68ea55e7.png\"><figcaption></figcaption></figure><p>Валюты разбились на три кластера. Объединения появились вокруг <a href=\"https://ru.wikipedia.org/wiki/%D0%95%D0%B2%D1%80%D0%BE\" rel=\"noopener noreferrer nofollow\"><u>евро</u></a>, <a href=\"https://ru.wikipedia.org/wiki/%D0%98%D0%B5%D0%BD%D0%B0\" rel=\"noopener noreferrer nofollow\"><u>японской йены</u></a> и <a href=\"https://ru.wikipedia.org/wiki/%D0%94%D0%BE%D0%BB%D0%BB%D0%B0%D1%80_%D0%A1%D0%A8%D0%90\" rel=\"noopener noreferrer nofollow\"><u>американского доллара</u></a>.</p><p>В \"европейском\" кластере три валюты. Кроме евро валюта Дании и Румынии. Корреляция во всех случаях положительная.</p><p>В \"японском\" кластере пять валют. Кроме йены валюты Сингапура, Новой Зеландии, Швеции и Швейцарии. Все связи положительные. Оказывается на пятилетнем горизонте валюты двух европейских стран, двух азиатских и одной страны Океании идут в ногу с периодом в один день. </p><p>Третий кластер объединил вокруг доллара валюты Австралии, Кувейта, Саудовской Аравии, Гонконга. Причем между долларом американским и австралийским корреляция равна 1. Это говорит о прямой связи этих двух валют. Все связи положительные. </p><p>Теперь о преимуществах которые получает исследовать применяющий данную методику. </p><p>Методика определяет конкретное число для выражения взаимной зависимости отдельных валют. И число это - корреляция одновременных изменений абсолютных валютных курсов. Одновременность здесь определена с точностью в один день.</p><p>После определения для всех пар валют численного коэффициента взаимозависимости исследователь может вынести все эти связи выше некоторого порога на граф. Граф в свою очередь разбивает множество валют в отдельные кластеры. Такое отображение на графе можно проводить для разных временных интервалов. Выявленные кластеры взаимозависимых валют дают большее понимание о связанности экономик соответствующих стран.</p><p>Корреляции возможны как положительные так и отрицательные. Выявление больших отрицательных корреляций позволит исследователю собирать хороший валютный портфель. В нем волатильность одних будет компенсироваться противоположными колебаниями других.</p><p>В настоящей работе удалось оценить взаимосвязи между отдельными валютами. Получены конкретные численные оценки связей. На их основе исследователям предлагается методика оценки взаимосвязей в мировой экономике на графе корреляций абсолютных валютных курсов. </p><p>И теперь небольшой бонус. Указанная выше тетрадка пересчитывается каждый день. Так что данные в ней постоянно актуальны.</p>', 2, '2023-06-12 22:01:54', 570659, 72, '/ru/articles/651925/', 'В последние полтора года многие компании перевели своих сотрудников на удаленную работу. Часть из них, воспользовавшись возможностью, уехали работать в страны с более приятным климатом / интересной архитектурой. Статья для всех кто прожил или планирует прожить за пределами РФ более 183 дней в течение календарного года.'),
(210, 'Рейтинг стабильности мировых валют на основе их абсолютных курсов', '<p>Понятие стабильности для валют в основном в экономике характеризуется <a href=\"https://biteffect.net/ru/camye-stabilnye-i-nestabilnyj-valjuty-v-mire/\" rel=\"noopener noreferrer nofollow\"><u>качественным образом</u></a>. Да и как говорить о числовой стабильности валюты раз существуют только парные валютные курсы. И если мы попытаемся применить какую либо статистическую функцию к этому парному курсу, то это все равно не даст нам знания о каждой валюте отдельно от другой. В проекте <a href=\"https://habr.com/ru/post/652187/\" rel=\"noopener noreferrer nofollow\"><u>Абсолютный валютный курс</u></a> предложена методика получения абсолютных курсов для каждой валюты в отношении к абсолютной валюте. Таким образом появляется возможность исследовать отдельные валюты без отношения к другой. Более того это исследование можно проводить в численном виде. В настоящей статье дается числовое определение <a href=\"https://ru.wikipedia.org/wiki/%D0%92%D0%BE%D0%BB%D0%B0%D1%82%D0%B8%D0%BB%D1%8C%D0%BD%D0%BE%D1%81%D1%82%D1%8C\" rel=\"noopener noreferrer nofollow\"><u>волатильности </u></a>для валют.</p><p>В качестве меры волатильности выберем стандартное отклонение отнесенное к среднему значению абсолютного валютного курса. Стандартное отклонение будет характеризовать изменчивость (нестабильность) валюты. После отнесения на среднее значение можно будет сравнивать отдельные валюты между собой. Итак для волатильности абсолютного курса валют определим следующую формулу.</p><img class=\"formula\" source=\"S_i={{std(A_i)} \\over {mean(A_i)}}\" alt=\"S_i={{std(A_i)} \\over {mean(A_i)}}\" src=\"https://habrastorage.org/getpro/habr/upload_files/3d0/7e6/75a/3d07e675a3382b7009e6fb7e2248b2f9.svg\" width=\"135\" height=\"50\"><p>Здесь <img class=\"formula inline\" source=\"A_i\" alt=\"A_i\" src=\"https://habrastorage.org/getpro/habr/upload_files/7ac/8ba/c33/7ac8bac33c4d73322f20b6ccf44bb995.svg\"> - ряд истории абсолютного курса для валюты под номером <img class=\"formula inline\" source=\"i\" alt=\"i\" src=\"https://habrastorage.org/getpro/habr/upload_files/88b/e92/771/88be9277138bbedc43c20a9166037835.svg\">, <img class=\"formula inline\" source=\"std()\" alt=\"std()\" src=\"https://habrastorage.org/getpro/habr/upload_files/091/e23/757/091e23757dfde128e1acac558d84480e.svg\">- операция вычисления стандартного отклонения, <img class=\"formula inline\" source=\"mean()\" alt=\"mean()\" src=\"https://habrastorage.org/getpro/habr/upload_files/112/32a/fed/11232afed3418ae191fee0d4d5bb6c69.svg\"> - операция вычисления среднего значения.</p><p>Чем эта мера меньше тем валюта стабильнее. И наоборот. Чем мера больше тем валюта нестабильное.</p><p>Все вычисления проведены в <a href=\"https://www.kaggle.com/eavprog/abs-reit-stab\" rel=\"noopener noreferrer nofollow\"><u>тетрадке на Kaggle</u></a>. Там идёт ежедневный пересчет рейтинга стабильности. Для этого подгружается история абсолютных валютных курсов. Далее происходит расчет меры стабильности для разных временных участков. Расчет выполняется для диапазонов: 5 лет, один год, полгода, квартал и месяц. Валюты сортируются по возрастанию меры волатильности и выводятся на столбчатую диаграмму. Таким образом можно видеть какие валюты стабильнее. </p><p>Кроме того выводятся графики абсолютных курсов трёх самых стабильных и трёх самых волатильных валют. Для сравнения все курсы нормированы по среднему значению.</p><p>В результате проведенных расчетов были выявлены интересные факты. Вот полный рейтинг.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/7aa/2c3/f15/7aa2c3f154290e1c6083ed61108b7110.png\" width=\"885\" height=\"332\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/7aa/2c3/f15/7aa2c3f154290e1c6083ed61108b7110.png\"><figcaption></figcaption></figure><p>Оказывается самой стабильной валютой за последние 5 лет (для расчета на конец января 2022 года) является <a href=\"https://ru.wikipedia.org/wiki/%D0%98%D0%BD%D0%B4%D0%B8%D0%B9%D1%81%D0%BA%D0%B0%D1%8F_%D1%80%D1%83%D0%BF%D0%B8%D1%8F\" rel=\"noopener noreferrer nofollow\"><u>Индийская рупия</u></a>. Стандартное отклонение у нее в районе 2% от среднего. Т.е. средние дневные колебания около 2%.</p><p>Самой волатильной валютой за последние пять лет является <a href=\"https://ru.wikipedia.org/wiki/%D0%90%D1%80%D0%B3%D0%B5%D0%BD%D1%82%D0%B8%D0%BD%D1%81%D0%BA%D0%BE%D0%B5_%D0%BF%D0%B5%D1%81%D0%BE\" rel=\"noopener noreferrer nofollow\"><u>Аргентинское песо</u></a>. Для нее стандартное отклонение находится в районе 60% от среднего. Теперь посмотрим нормированные к среднему графики самых стабильных валют. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b77/f0f/9da/b77f0f9daf88a76ed215836d2a4502fb.png\" width=\"891\" height=\"333\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b77/f0f/9da/b77f0f9daf88a76ed215836d2a4502fb.png\"><figcaption></figcaption></figure><p>Как видно из графика победитель за все пять лет не выходил из диапазона ±6% от среднего. </p><p>Теперь посмотрим на графики самых волатильных валют.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/9a5/504/975/9a5504975b955daa5f2bb01dbd054a69.png\" width=\"891\" height=\"333\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/9a5/504/975/9a5504975b955daa5f2bb01dbd054a69.png\"><figcaption></figcaption></figure><p>Валюта Аргентины испытала почти десятикратное снижение абсолютного курса. Потому и мера волатильности у нее 60%.</p><p>Подведем итоги. Получена методика вычисления стабильности для валют. Методика даёт конкретное численное значение для метрики стабильности. Это позволило отсортировать валюты и указать самые стабильные и самые волатильные. Получен неожиданный результат (касательно самой стабильной мировой валюты за последние 5 лет).</p>', 2, '2023-06-12 22:01:54', 163771, 72, '/ru/articles/650681/', 'Привет, Хабр! Меня зовут Самуэль и я не инженер и не айтишник, а предприниматель. Как предприниматель, любую вещь я рассматриваю через призму того, как ее можно улучшить и построить на этом бизнес. Для меня это хобби, все идеи я записываю в заметки, а некоторые разбираю более детально, например, строя финмодель.Чаще всего идеи возникают, когда я сталкиваюсь с проблемой, которую трудно решить. Задумка, о которой пойдет речь, не исключение — мы с семьей строили собственный дом и на себе испытали трудности индистройки. При этом идею, о которой я расскажу, сможет реализовать разработчик, не разбирающийся в строительстве — специальные знания не потребуются.'),
(211, 'Дайджест научпоп-новостей за неделю, о которых мы ничего не писали', '<h2><a href=\"https://www.sciencealert.com/a-craft-has-flown-close-enough-to-the-sun-to-detect-the-source-of-elusive-solar-winds\" rel=\"nofollow noopener noreferrer\">Космический зонд пролетел достаточно близко к Солнцу, чтобы обнаружить источник неуловимых солнечных ветров</a></h2><br>\r\n<img src=\"https://habrastorage.org/r/w780q1/getpro/habr/post_images/05f/306/937/05f3069371468c275c90f9ded7fd4827.jpg\" data-src=\"https://habrastorage.org/getpro/habr/post_images/05f/306/937/05f3069371468c275c90f9ded7fd4827.jpg\" data-blurred=\"true\"><br>\r\n<i>Корональная дыра в трёх ультрафиолетовых диапазонах волн, полученная обсерваторией солнечной динамики НАСА в 2013 году </i><br>\r\n<br>\r\nИсточник солнечного ветра, дующего вблизи поверхности светила <a href=\"https://www.nature.com/articles/s41586-023-05955-3\" rel=\"nofollow noopener noreferrer\">найден</a> солнечным зондом Parker Solar Probe. В ноябре 2021 года зонд пронёсся на расстоянии около 8,5 миллионов километров от Солнца, что позволило ему определить тонкую структуру солнечного ветра, который выбрасывает тонны заряженных частиц в Солнечную систему через дыру в солнечной короне.<br>\r\n<br>\r\nПо словам группы физиков под руководством Стюарта Бейла из Калифорнийского университета в Беркли и Джеймса Дрейка из Мэрилендского университета в Колледж-Парке, полученные зондом данные дают нам самое близкое представление о том, как создаётся быстрый солнечный ветер.<br>\r\n<a name=\"habracut\"></a><br>\r\n<h2><a href=\"https://phys.org/news/2023-06-elusive-planets-cheops.html\" rel=\"nofollow noopener noreferrer\">Космический телескоп CHEOPS помог найти не замеченные ранее экзопланеты</a></h2><br>\r\n<img src=\"https://habrastorage.org/r/w780q1/getpro/habr/post_images/9f1/175/128/9f1175128082a05df379bce876ef5a1a.jpg\" data-src=\"https://habrastorage.org/getpro/habr/post_images/9f1/175/128/9f1175128082a05df379bce876ef5a1a.jpg\" data-blurred=\"true\"><br>\r\n<br>\r\nС помощью космического телескопа CHEOPS международной команде европейских астрономов удалось достоверно <a href=\"https://dx.doi.org/10.1093/mnras/stad1319\" rel=\"nofollow noopener noreferrer\">подтвердить</a> существование четырёх новых экзопланет. Эти четыре мини-нептуна меньше и холоднее, и их труднее найти, чем так называемые экзопланеты типа «горячий юпитер», которых найдено уже достаточно много. Две из четырёх итоговых статей написаны исследователями из Бернского и Женевского университетов, которые также являются членами Национального центра компетенции в области исследований (NCCR) PlanetS.<br>\r\n<br>\r\nCHEOPS — это совместная миссия Европейского космического агентства и Швейцарии под руководством Бернского университета в сотрудничестве с Женевским университетом. С момента запуска в декабре 2019 года чрезвычайно точные измерения CHEOPS способствовали нескольким ключевым открытиям в области экзопланет.<br>\r\n<br>\r\n<h2><a href=\"https://www.nasa.gov/feature/goddard2023/new-detectors-could-improve-views-of-gamma-ray-events\" rel=\"nofollow noopener noreferrer\">Новые детекторы от НАСА могут улучшить фиксацию гамма-вспышек</a></h2><br>\r\n<img src=\"https://habrastorage.org/r/w780q1/getpro/habr/post_images/10b/c42/7b8/10bc427b8df7506e5ed572786f8a1c4b.jpg\" data-src=\"https://habrastorage.org/getpro/habr/post_images/10b/c42/7b8/10bc427b8df7506e5ed572786f8a1c4b.jpg\" data-blurred=\"true\"><br>\r\n<br>\r\nПри помощи технологии, аналогичной той, что используется в камерах смартфонов, учёные НАСА разрабатывают усовершенствованные датчики, позволяющие выявить больше деталей о вспышках чёрных дыр и взрывающихся звёздах — при этом менее энергоёмкие и более простые в массовом производстве, чем используемые сегодня детекторы.<br>\r\n<br>\r\n«Изучая чёрные дыры, активно разрушающие звезды, или нейтронные звезды, взрывающиеся и создающие действительно высокоэнергетические вспышки света, вы имеете дело с самыми экстремальными событиями во Вселенной», — говорит астрофизик-исследователь д-р Регина Капуто. «Чтобы наблюдать эти события, приходится работать с самой высокоэнергетической формой света: гамма-лучами».<br>\r\n<br>\r\nКапуто руководит разработкой прибора под названием AstroPix в Центре космических полётов НАСА имени Годдарда в Гринбелте, штат Мэриленд. Кремниевые пиксельные датчики в AstroPix — всё ещё в стадии разработки и тестирования — напоминают полупроводниковые датчики, которые позволяют камерам смартфонов быть такими маленькими.<br>\r\n<br>\r\n<h2><a href=\"https://www.atomic-energy.ru/news/2023/06/07/136016\" rel=\"nofollow noopener noreferrer\">Учёные построили трёхмерные кристаллы из «четырёхмерных» молекул гиперкубана</a></h2><br>\r\n<img src=\"https://habrastorage.org/r/w780q1/getpro/habr/post_images/71a/d15/d0e/71ad15d0eb030630e94b0417f597fdd9.jpg\" data-src=\"https://habrastorage.org/getpro/habr/post_images/71a/d15/d0e/71ad15d0eb030630e94b0417f597fdd9.jpg\" data-blurred=\"true\"><br>\r\n<br>\r\nИсследователи Института нанотехнологий в электронике, спинтронике и фотонике (ИНТЭЛ) НИЯУ МИФИ смоделировали и рассчитали свойства трёхмерных кристаллов из «четырёхмерных» молекул гиперкубана. <a href=\"https://doi.org/10.1016/j.mtcomm.2023.106146\" rel=\"nofollow noopener noreferrer\">Результаты работы</a> опубликованы в научном журнале Materials Today Communications.<br>\r\n<br>\r\nКуб – одна из самых простых и «естественных» геометрических фигур. Однако в мире углеводородных молекул, которые принимают самые причудливые формы, куб — экзотика.<br>\r\n<br>\r\nМолекула кубана C8H8, имеющая кубическую форму, была синтезирована в 1964 году путём сложной многоступенчатой реакции. Кубан оказался сверхплотным углеводородом, почти вдвое плотнее бензина. Несмотря на сложность синтеза, это соединение не только продемонстрировало высокую устойчивость, но и стало родоначальником целого семейства производных молекул, которые нашли применения в качестве энергоэффективных топлив и лекарств. В 2022 году 58-летний кубан снова привлёк внимание общественности, появившись на страницах известного научного журнала Science: на его основе был создан «крошечный пожиратель электронов».<br>\r\n<br>\r\n<h2><a href=\"https://www.hpcwire.com/off-the-wire/ionq-demonstrates-world-first-quantum-cognition-models/\" rel=\"nofollow noopener noreferrer\">Компания IonQ продемонстрировала квантовый ИИ</a></h2><br>\r\nКомпания IonQ, работающая в области квантовых вычислений, объявила о результатах своих первых исследований по применению квантовых компьютеров для моделирования человеческого разума. В недавно опубликованной работе описывается первый в мире публично известный метод, в котором основные модели человеческого познания были запущены на квантовом оборудовании, что открывает путь к потенциальной разработке улучшенных моделей принятия решений, имитирующих человеческое мышление.<br>\r\n<br>\r\nПроведённое в сотрудничестве с международной группой квантовых исследователей исследование представляет собой отправную точку для разработки квантовых схем, которые реализуют математические модели познания, кодируя ментальные состояния в регистрах кубитов и когнитивные операции с помощью различных затворов и измерений. С 1960-х годов когнитивные психологи пытались понять взаимосвязь между тем, как задаются вопросы, и тем, как участник ответит на них. Концепция квантовой вероятности эффективно описывает некоторые из этих отношений, однако только недавно квантовая аппаратура достигла того уровня, когда модели квантовой вероятности можно было исследовать и тестировать.<br>\r\n<br>\r\n<h2><a href=\"https://rscf.ru/news/release/stimulyatsiya-mozga-pomozhet-uluchshit-reabilitatsiyu-posle-travm-i-insultov-/\" rel=\"nofollow noopener noreferrer\">Стимуляция мозга поможет улучшить реабилитацию после травм и инсультов</a></h2><br>\r\n<img src=\"https://rscf.ru/upload/iblock/7dc/x42ikqz94ucuq4gjmrbgjimnmnvajrmw.jpg\" data-src=\"https://rscf.ru/upload/iblock/7dc/x42ikqz94ucuq4gjmrbgjimnmnvajrmw.jpg\" data-blurred=\"true\"><br>\r\n<br>\r\nУчёные показали, что магнитная стимуляция дорсолатеральной префронтальной коры — области мозга, ответственной за внимание, рабочую память и планирование — помогает улучшить контроль движений. Выяснили это на 30 здоровых добровольцах. Такой подход может сделать реабилитацию людей с неврологическими заболеваниями более эффективной и помочь спортсменам улучшить результаты. Исследование поддержано грантом Российского научного фонда (РНФ) и опубликовано в журнале Sensors.<br>\r\n<br>\r\nЛюбое движение человека — результат слаженной работы мозга, который сначала строит воображаемую модель движения, затем передаёт сигнал моторным (двигательным) нейронам, а они, в свою очередь, вызывают сокращения мышц. Всё это происходит буквально в один миг, но иногда связь между этапами нарушается в результате повреждения тканей мозга — например, при инсульте или болезни Паркинсона — и возникают двигательные нарушения. Они плохо сказываются на качестве жизни пациента и мешают ему нормально совершать даже бытовые манипуляции.<br>\r\n<br>\r\nУчёные и врачи активно разрабатывают методы лечения и восстановления после таких заболеваний. Многие методы реабилитации построены на том, чтобы для начала натренировать представление движения без его совершения, и, наоборот, совершение движения врачом или экзоскелетом, а затем наладить связь между этими процессами. Для улучшения реабилитации учёные изучают в том числе влияние транскраниальной магнитной стимуляции (ТМС, метод стимуляции нервных клеток головного мозга с помощью магнитного поля) на двигательную активность.', 3, '2023-06-12 22:02:45', 911444, 105, '/ru/articles/741254/', 'Ранее я публиковал в этом блоге пост «Координаты чудес» о достоверно или предположительно известных сверхновых, взрывы которых произошли в историческое время. Два последних таких события, зафиксированных с Земли, относятся к периоду зарождения оптической астрономии: 1572 год (звезда Браге) и 1604 год (звезда Кеплера). 32 года – чрезвычайно краткий интервал для таких событий, и с тех пор ни одного подобного взрыва в нашей Галактике не наблюдалось. Однако в 1987 году, в период зарождения нейтринной астрономии, взрыв сверхновой был зафиксирован в туманности Тарантул в Большом Магеллановом Облаке (одной из двух галактик-спутников Млечного Пути). Событие получило название SN 1987A. Наблюдения проводились в обсерватории Лас-Кампанас в Чили, но незадолго до того, как последствия взрыва стали видны невооружённым глазом (звёздная величина +3), на него среагировали детекторы нейтрино. Поток нейтрино при взрыве сверхновой настолько велик, что явственно фиксировался на Земле, хотя нас от места этого события отделяет 168 000 световых лет. Сверхновая 1987А была тем более необычна, что возникла на месте голубого гиганта, а, согласно современным представлениям, механизм возникновения сверхновой объясним только как завершающая стадия эволюции красного сверхгиганта, и на месте красного сверхгиганта может возникнуть не только сверхновая, но и чёрная дыра.Вернуться к этой теме меня побудила череда пертурбаций, которые в мае-июне 2023 года (на момент написания этой статьи) претерпевает одна из ярчайших звёзд нашей галактики, красный сверхгигант Бетельгейзе. 25 мая статью о текущем состоянии Бетельгейзе публиковал уважаемый @SLY_G. Ниже рассмотрим, каковы могут быть последствия гибели сверхгиганта, чем они интересны для науки и каким образом их пытаются прогнозировать и моделировать.     ');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(212, 'Долгая смерть Бетельгейзе и её научные аспекты', '<p>Ранее я публиковал в этом блоге пост «<a href=\"https://habr.com/ru/articles/656267/\" rel=\"noopener noreferrer nofollow\">Координаты чудес</a>» о достоверно или предположительно известных сверхновых, взрывы которых произошли в историческое время. Два последних таких события, зафиксированных с Земли, относятся к периоду зарождения оптической астрономии: 1572 год (звезда Браге) и 1604 год (звезда Кеплера). 32 года — чрезвычайно краткий интервал для таких событий, и с тех пор ни одного подобного взрыва в нашей Галактике не наблюдалось. Однако в 1987 году, в период зарождения нейтринной астрономии, взрыв сверхновой был зафиксирован в туманности Тарантул в Большом Магеллановом Облаке (одной из <a href=\"https://habr.com/ru/articles/736500/\" rel=\"noopener noreferrer nofollow\">двух галактик-спутников</a> Млечного Пути). Событие получило название SN 1987A. Наблюдения проводились в обсерватории Лас-Кампанас в Чили, но незадолго до того, как последствия взрыва стали видны невооружённым глазом (звёздная величина +3), на него среагировали детекторы нейтрино. Поток нейтрино при взрыве сверхновой настолько велик, что явственно фиксировался на Земле, хотя нас от места этого события отделяет 168 000 световых лет. </p><p>Сверхновая 1987А была тем более необычна, что возникла на месте голубого гиганта, а, согласно современным представлениям, механизм возникновения сверхновой объясним только как завершающая стадия эволюции красного сверхгиганта, и на месте красного сверхгиганта может возникнуть не только сверхновая, но и чёрная дыра.</p><p>Вернуться к этой теме меня побудила череда пертурбаций, которые в мае-июне 2023 года (на момент написания этой статьи) претерпевает одна из ярчайших звёзд нашей галактики, красный сверхгигант Бетельгейзе. 25 мая <a href=\"https://habr.com/ru/news/737416/\" rel=\"noopener noreferrer nofollow\">статью</a> о текущем состоянии Бетельгейзе публиковал уважаемый <a class=\"mention\" href=\"/users/sly_g\">@SLY_G</a>. Ниже рассмотрим, каковы могут быть последствия гибели сверхгиганта, чем они интересны для науки и каким образом их пытаются прогнозировать и моделировать.     </p><p>Как правило, Бетельгейзе замыкает десятку ярчайших звёзд ночного неба (его ставят на 9 или 10 место).</p><div><div class=\"table\"><table><tbody><tr><td><p align=\"left\">Место</p></td><td><p align=\"left\">Звезда</p></td><td><p align=\"left\">Звёздная величина</p></td><td><p align=\"left\">Расстояние от Земли</p></td></tr><tr><td><p align=\"left\">1</p></td><td><p align=\"left\">Сириус</p></td><td><p align=\"left\">-1,47</p></td><td><p align=\"left\">8,6 световых лет</p></td></tr><tr><td><p align=\"left\">2</p></td><td><p align=\"left\">Канопус</p></td><td><p align=\"left\">-0,72</p></td><td><p align=\"left\">310 световых лет</p></td></tr><tr><td><p align=\"left\">3</p></td><td><p align=\"left\">Альфа Центавра</p></td><td><p align=\"left\">-0,27</p></td><td><p align=\"left\">4,4 световых года</p></td></tr><tr><td><p align=\"left\">4</p></td><td><p align=\"left\">Арктур</p></td><td><p align=\"left\">-0,04</p></td><td><p align=\"left\">37 световых лет</p></td></tr><tr><td><p align=\"left\">5</p></td><td><p align=\"left\">Вега</p></td><td><p align=\"left\">+0,03</p></td><td><p align=\"left\">25 световых лет</p></td></tr><tr><td><p align=\"left\">6</p></td><td><p align=\"left\">Капелла</p></td><td><p align=\"left\">+0,08</p></td><td><p align=\"left\">42 световых года</p></td></tr><tr><td><p align=\"left\">7</p></td><td><p align=\"left\">Ригель</p></td><td><p align=\"left\">+0,12</p></td><td><p align=\"left\">860 световых лет</p></td></tr><tr><td><p align=\"left\">8</p></td><td><p align=\"left\">Процион</p></td><td><p align=\"left\">+0,38</p></td><td><p align=\"left\">11 световых лет</p></td></tr><tr><td><p align=\"left\">9</p></td><td><p align=\"left\">Архенар</p></td><td><p align=\"left\">+0,46</p></td><td><p align=\"left\">140 световых лет</p></td></tr><tr><td><p align=\"left\">10</p></td><td><p align=\"left\">Бетельгейзе</p></td><td><p align=\"left\">+0,50</p></td><td><p align=\"left\">640 световых лет</p></td></tr></tbody></table><p>А вот как выглядят 25 самых ярких звёзд в телескоп:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/0d6/c1c/481/0d6c1c4811735fdfbd66df1f0de66d7f.png\" width=\"642\" height=\"663\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/0d6/c1c/481/0d6c1c4811735fdfbd66df1f0de66d7f.png\"></figure><p>Яркость Бетельгейзе существенно упала в октябре 2019 года и восстановилась к апрелю 2020 года. В декабре 2019 звезда потеряла до трети своей видимой яркости и выпала даже из топ-20. Первая гипотеза заключалась в том, что между нами и красным гигантом могло пройти постепенно рассеявшееся облако межзвёздного газа. Анализу причин такого потемнения было посвящено целое <a href=\"https://phys.org/news/2021-06-mystery-betelgeuse-dip-brightness.html\" rel=\"noopener noreferrer nofollow\">исследование</a>, проведённое специалистами Парижской обсерватории и Лёвенского Католического Университета в Бельгии, завершённое в 2021 году. Мигель Монтагре из Парижской обсерватории обратил внимание, что мы впервые можем наблюдать изменение яркости звезды практически в режиме реального времени.</p><p>В работе, <a href=\"https://sci-hub.ru/10.1038/s41586-021-03546-8\" rel=\"noopener noreferrer nofollow\">опубликованной</a> в журнале Nature, группа пришла к выводу, что звезда визуально потускнела, так как некоторое время была окутана газопылевой вуалью, образовавшейся из отделившихся от Бетельгейзе внешних слоёв. Такая вуаль, в свою очередь, образовалась из-за некоторого остывания поверхности Бетельгейзе.</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/664/3c2/8eb/6643c28ebcb681d7db2997d432d4eea4.png\" width=\"389\" height=\"393\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/664/3c2/8eb/6643c28ebcb681d7db2997d432d4eea4.png\"></figure><p>Поверхность Бетельгейзе бурлит, так как в верхних слоях звезды постоянно образуются, всплывают и лопаются огромные газовые пузыри. Команда заключила, что непосредственно перед Великим Потускнением звезда извергла такой пузырь, в результате чего участок поверхности немного остыл, и часть звёздного вещества перешла в твёрдое состояние (пыль). Именно так и образуется звёздная пыль, затем идущая на формирование протопланетных дисков.</p><p>Итак, Бетельгейзе — <a href=\"https://www.nkj.ru/archive/articles/5308/\" rel=\"noopener noreferrer nofollow\">переменная звезда</a>. Переменными называются звёзды, яркость которых циклически колеблется. Достоверно известно около 150 000 переменных звёзд и ещё тысячи «кандидатов». Строго говоря, Солнце — тоже слегка переменная звезда, поскольку яркость Солнца меняется в ходе 11-летних <a href=\"https://habr.com/ru/articles/415843/\" rel=\"noopener noreferrer nofollow\">циклов Чижевского</a>. Все переменные звёзды бывают истинно переменными («intrinsic», в русской терминологии — физические), у которых переменность обусловлена внутренними причинами, а также «затменно-двойными» — такие звёзды только кажутся переменными с Земли. Физические переменные звёзды, в свою очередь, подразделяются на несколько категорий:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/1e7/b6a/3f0/1e7b6a3f0f29e452cdf994f7290f538f.png\" width=\"759\" height=\"346\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/1e7/b6a/3f0/1e7b6a3f0f29e452cdf994f7290f538f.png\"></figure><p>Бетельгейзе относится именно к пульсирующим переменным звёздам; его внешние слои сжимаются и расширяются с определённой периодичностью. Естественно, при расширении звезды увеличивается поверхность, излучающая свет, поэтому и оптическая яркость звезды возрастает.  </p><p>У Бетельгейзе такой цикл расширения и сжатия составляет около 425 дней. Возможно, мы наблюдаем очередной такой цикл. На более длительных временных отрезках потускнение Бетельгейзе может объясняться возникновением пятен, таких же, как и на Солнце, но гораздо более обширных. Такой цикл Бетельгейзе, аналогичный солнечным циклам Чижевского, может продолжаться около 6 лет. Возможно, сейчас мы наблюдаем наложение максимумов двух этих циклов (425 дней и 6 лет). </p><h3>Невероятность взрыва </h3><p>Таким образом, при всей предрасположенности Бетельгейзе к превращению в сверхновую, крайне маловероятно, что он взорвётся в течение текущего века. Исходя из яркости, цвета, размера и примерного возраста Бетельгейзе можно предположить, что по астрономическим меркам в Бетельгейзе совсем недавно начался тот этап термоядерного синтеза, при котором гелий превращается в углерод. Далее углерод должен преобразоваться в кислород, кислород в кремний и кремний в железо. Только на железе этот процесс прекращается, и умирающая звезда в зависимости от массы превращается в сверхновую или в чёрную дыру. По <a href=\"https://www.scientificamerican.com/article/betelgueses-brightening-raises-hopes-for-a-supernova-spectacle/\" rel=\"noopener noreferrer nofollow\">мнению</a> Джареда Голдберга, астрофизика из института Флэтайрон в Нью-Йорке, Бетельгейзе может просуществовать в таком переменном состоянии ещё от 10 000 до 100 000 лет.</p><p>В 2022 году группа Ральфа Нойхойзера из Универстета Фридриха Шиллера в Йене провела историческое <a href=\"https://watermark.silverchair.com/stac1969.pdf?token=AQECAHi208BE49Ooan9kkhW_Ercy7Dm3ZL_9Cf3qfKAc485ysgAAAscwggLDBgkqhkiG9w0BBwagggK0MIICsAIBADCCAqkGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQM8NXYZ4NK6JB7iRWjAgEQgIICemlH30yJ5c3x7uLKjvLmyntGtCRhQ-d0YBLUyIJcpq11cRWe6oVxq5_wQQQVwhXrR10hcKXN9s7Cut3laQtxVIqheO2Iivrb8JtYehR25N21GKIcmRc5UK7T-Cbgu6dD8MT0j5dOwJxcP_CBcLQ-IEhKRDU4jVxUIDJXW6-wGKVd9es78vFvquPts9ujgd1uDr_QGWM07o6iAfJPSsKOrYXRbcsGygDpl8S3oH3gGuZVYLkT2F_djhCh1nQP6bPCV_7Gfj6tkQGkyCuO1bCJmz_xg4JCuRlOZM2lEULwWwK66_dXcg3Z7zglzNhhNXw3mmgEey-Br3hN0nG4Sb-B2QlSw8wFtgu_KqHkm3qixh5tZu8-jdii0i0trYsiOIQhvXzUP2l6VFcxNIUgh5_kQoRZ0vzWMmsS5Vz95AFSeyb9ZPHR2Lxg1Ap6Olc9xIXsM3YRDib_6albN0YtlEQJEtx-13zJCQndqL8cYbvMX77-xSA6jnr0EoDRXN0ayMD41n8zY_drkUk4rInt2IwSLSKQSxv259W3AhSbVs1Hks8hQ3eJFhuOA--LHiDAYGVm5TA_LBHy4i9NzbXJDUazjddJutDMBUZHO9m_oXdILZ6ANNMO01cKP4pqSUXlcHAA9UOYXpUCPPIiZbhBDv3RpY34eMIKgnpp4VvOBci4rpSdrpyXOUchd3aatHEsWmt3nlju2FIViONS9MDZ5uOBnOo_xp2VD5WiCsKDrzH0YaOuBCVfeRj90oSzXhFNs0NvUBmt_8lkVJhW3FLwDgIIIHVntxR74wj5IwuX-KyV-ZLPW9RX42c_T1KOEf6PF9lwzbkOzQdvnLjjnaI\" rel=\"noopener noreferrer nofollow\">исследование</a>, согласно которому ещё около 2000 лет назад Бетельгейзе не был красным гигантом, а относился к оранжевым или жёлтым звёздам. Так, около 100 года до н.э. китайский придворный астроном Сыма Цянь писал о цветах звёзд: «белый как Сириус, красный как Антарес, жёлтый как Бетельгейзе, синий как <a href=\"https://ru.wikipedia.org/wiki/%D0%91%D0%B5%D0%BB%D0%BB%D0%B0%D1%82%D1%80%D0%B8%D0%BA%D1%81\" rel=\"noopener noreferrer nofollow\">Беллатрикс</a>». Независимо от Цяня, римский астроном Гай Юлий Гигин, умерший в 17 году н.э, указывал, что Бетельгейзе имеет такой же цвет, как и жёлто-оранжевый Сатурн. Другие античные авторы, в частности, Птолемей (100 – 170) указывают, что Бетельгейзе не относится к числу красных звёзд, таких, как Альдебаран и Антарес. В свою очередь, Тихо Браге, работавший в конце XVI века, указывал, что Бетельгейзе даже более красный, чем Антарес. <a href=\"https://s16.stc.yc.kpcdn.net/share/i/4/1351378/wr-750.webp\" rel=\"noopener noreferrer nofollow\">Вот</a> как выглядят Бетельгейзе и Антарес сегодня.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/89d/2b2/177/89d2b2177c2ed48ca4c729ac23e7ce84.png\" width=\"592\" height=\"280\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/89d/2b2/177/89d2b2177c2ed48ca4c729ac23e7ce84.png\"></figure><p>Тем не менее, когда ситуация подойдёт к взрыву, мы её ни с чем не спутаем. Первым предвестником скорого взрыва будет мощный поток нейтрино (см. раздел 2.2 и далее <a href=\"https://arxiv.org/pdf/2006.02519.pdf\" rel=\"noopener noreferrer nofollow\">здесь</a>). После того, как в результате термоядерных реакций значительная часть гелия превратится в неон, события станут развиваться лавинообразно.  </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/86e/e0c/3ac/86ee0c3acf48e3f1fbcc0a0638c3e8a0.png\" width=\"1024\" height=\"1024\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/86e/e0c/3ac/86ee0c3acf48e3f1fbcc0a0638c3e8a0.png\"></figure><p>Неон начинает гореть, когда температура в ядре достигает ∼ 1,4×10<sup>9</sup> K. Неон-20 частично начинает разлагаться на кислород-16 и гелий-4, а частично в процессе захвата альфа-частиц (ядер гелия) превращается в магний-24 и кремний-28. Горение неонового ядра в звезде на 15 солнечных масс (15 M⊙) длится около года. В результате образуется кислородно-кремниевое ядро. </p><p>Когда температура в центре звезды достигает 1,6 × 10<sup>9</sup> K, начинает схлопываться и гореть кислородно-кремниевое ядро. На это уходит от 9 до 14 месяцев. В результате промежуточных реакций формируется сера, и кремниево-серное ядро схлопывается на протяжении около двух месяцев. На данном этапе начинает формироваться последнее, железное ядро. Температура в ядре к этому моменту достигает ∼ 3×10<sup>9</sup> K, а кремний преобразуется в железо примерно за 4-5 дней или немного дольше, учитывая, что запасы кремния немного пополняются за счёт последних остатков кислорода. Железное ядро состоит из железа, кобальта и никеля, и на данном этапе термоядерные реакции прекращаются. Формирование железного ядра — эндотермическая реакция. Звезда в течение нескольких часов или суток тускнеет, после чего происходит взрыв.  </p><h3>Судьба Бетельгейзе</h3><p>Непосредственно перед гибелью Бетельгейзе все эти события на протяжении 1,5-2 лет будут хорошо просматриваться с Земли. Особенно характерно будет выглядеть «неоновый» этап. Невооружённым глазом он будет просматриваться как мерцание, а в телескоп будет выглядеть как фейерверк. Остаток сверхновой вспыхнет не менее чем вполовину ярче полной Луны (или даже сравнится по яркости с Луной). Он будет выглядеть как ярчайшая звезда, визуально более крупная, чем Венера. Она будет хорошо видна днём, а ночью будет отбрасывать хорошо заметные тени.</p><p>Взрыв сверхновой должен сопровождаться всплеском жёсткого космического излучения, и при подобном событии в относительной близости от Земли последствия могли бы быть катастрофическими, вплоть до массового вымирания. В 2020 году в университете Урбана-Шампейн, штат Иллинойс, под руководством Брайана Филдса вышло <a href=\"https://news.illinois.edu/view/6367/750171228#image-2\" rel=\"noopener noreferrer nofollow\">исследование</a>, позволяющее предположить, что именно взрыв сверхновой мог спровоцировать массовое вымирание на рубеже каменноугольного и девонского периода 360 миллионов лет назад. По расчетам Филдса, сверхновая могла взорваться на расстоянии около <a href=\"https://sci-hub.ru/10.1073/pnas.2013774117\" rel=\"noopener noreferrer nofollow\">20 парсек</a> (65,2 световых лет) от Земли. В результате жёсткое ультрафиолетовое и рентгеновское излучение поливало нашу планету на протяжении более 100 000 лет. Был значительно повреждён озоновый слой, обновился запас радиоактивных изотопов самария-146 (период полураспада 68 ± 7 миллионов лет) и плутония-244 (период полураспада 81 миллион лет). Тем не менее, к полному исчезновению жизни это не привело, и, по оценке Филдса, «убийственная дистанция» при взрыве сверхновой составляет около 25 световых лет. Поэтому взрыв Бетельгейзе нам ничем не угрожает и представляет строго научный интерес. Но ответа на вопрос, когда он может произойти, у нас по-прежнему нет. В самом «пессимистичном» (для звезды) варианте она вошла во второй этап с вышеприведённого рисунка: сейчас состоит преимущественно из гелия и активно варит из него углерод. </p><p>Мигель Монтагре из Парижской обсерватории, о котором я упоминал выше, считает, что проследить вероятную судьбу Бетельгейзе удобно, наблюдая другой хорошо известный красный гигант — <a href=\"https://www.space.com/rare-hypergiant-star-death\" rel=\"noopener noreferrer nofollow\">VY Большого Пса</a>, расположенный в 3 900 световых годах от Земли. Эта звезда стабильно тускнеет на протяжении последних 100 лет и, вероятно, находится гораздо ближе к гибели, чем Бетельгейзе. В конце XIX века она ещё была видна невооружённым глазом, а сегодня окутана плотными облаками остывающего вещества, которые просматриваются только в телескоп, причём, в инфракрасном спектре. По-видимому, VY Большого Пса потеряла уже более 60% своего вещества, а у Бетельгейзе пока сохраняется не менее 95% звёздного вещества. Монтагре полагает, что майское повышение яркости Бетельгейзе временное, и уже летом гигант вернётся к своей обычной звёздной величине. Если же к сентябрю этого не произойдёт, либо звезда станет ещё ярче, то к ней придётся присмотреться внимательнее, так как такое развитие событий можно будет считать неординарным.  </p><h3>Коллаборация DUNE </h3><p>Как я уже упоминал над катом, одной из самых высокотехнологичных научных областей, которые помогут предвосхитить взрыв сверхновой, является нейтринная астрономия. Напомню, что гравитационные волны в 2015 году удалось открыть <a href=\"https://habr.com/ru/articles/426785/\" rel=\"noopener noreferrer nofollow\">именно благодаря детектору LIGO</a>, исходно предназначавшемуся именно для поиска звёздных нейтрино. Аналогичная коллаборация под названием DUNE (<a href=\"https://lbnf-dune.fnal.gov/\" rel=\"noopener noreferrer nofollow\">Deep Underground Neutrino Experiment</a>) должна быть запущена в эксплуатацию в конце 2020-х, совместно разрабатывается знаменитым <a href=\"https://ru.wikipedia.org/wiki/%D0%A4%D0%B5%D1%80%D0%BC%D0%B8%D0%BB%D0%B0%D0%B1\" rel=\"noopener noreferrer nofollow\">Фермилабом</a> и Чикагским университетом. Сам детектор DUNE располагается в подземном исследовательском комплексе Сэнфорд в штате Южная Дакота и представляет собой резервуар с жидким аргоном, оборудованный нейтринными детекторами. Пока он в тестовом режиме обнаруживает нейтрино, специально направляемые в него из Фермилаба.  </p><p>Когда работа над DUNE будет завершена, детектор войдёт в систему <a href=\"https://www.symmetrymagazine.org/article/march-2014/start-spreading-the-snews\" rel=\"noopener noreferrer nofollow\">раннего оповещения о сверхновых</a> (SNEWS). Это глобальная сеть нейтринных детекторов, которая, теоретически, должна зафиксировать зарождение сверхновой в любой точке Млечного Пути. Учитывая, что нейтрино, в отличие от света, (почти) не взаимодействуют с материей и не рассеиваются, предполагается, что они могут достичь детекторов на несколько часов раньше, чем мы увидим вспышку (даже в телескопы). Пока SNEWS ещё ни разу не сработала. Сегодня известны сотни остатков сверхновых, многие из которых представляют собой туманности (такова, в частности, <a href=\"https://earthsky.org/clusters-nebulae-galaxies/crab-nebula-was-an-exploding-star/\" rel=\"noopener noreferrer nofollow\">Крабовидная туманность</a>), но все эти взрывы произошли в далёком прошлом. Даже в 1987 году, на момент взрыва в Магеллановом Облаке, система SNEWS ещё не функционировала. Тем не менее, поток нейтрино от сверхновой «ни с чем не перепутаешь», а его резкое прекращение послужит сигналом, что звезда оказалась слишком массивной и, не успев взорваться, превратилась в чёрную дыру. Таких событий в истории астрономии пока не наблюдалось. </p><h2>Сверхновая в лаборатории</h2><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/12f/658/427/12f6584275b4e016949ef06a29759990.jpg\" width=\"1440\" height=\"720\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/12f/658/427/12f6584275b4e016949ef06a29759990.jpg\" data-blurred=\"true\"></figure><p>Вероятно, именно так выглядела Крабовидная туманность сразу после взрыва, наблюдавшегося на Земле как сверхновая 1054 года. Поскольку эта туманность давно привлекает внимание астрономов (вошла ещё в <a href=\"https://ru.wikipedia.org/wiki/%D0%9A%D0%B0%D1%82%D0%B0%D0%BB%D0%BE%D0%B3_%D0%9C%D0%B5%D1%81%D1%81%D1%8C%D0%B5\" rel=\"noopener noreferrer nofollow\">каталог Мессье</a>, составленный в 1774 году французским астрономом Шарлем Мессье), а спектральный анализ позволяет уверенно судить о её составе, в заключение этой статьи я расскажу ещё об одном амбициозном проекте, реализуемом с 2020 года до наших дней в Технологическом институте штата Джорджия. Группа исследователей под руководством Бена Муски (Ben Musci) попыталась <a href=\"https://sci-hub.ru/10.3847/1538-4357/ab8f8f\" rel=\"noopener noreferrer nofollow\">сымитировать взрыв сверхновой в лаборатории</a>.</p><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/64871852ae851501c52a9ae3\" data-style=\"\" id=\"64871852ae851501c52a9ae3\" width=\"\"><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/f9e/33a/de3/f9e33ade366be459429cb7a91a9092d1.jpg\" width=\"720\" height=\"960\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f9e/33a/de3/f9e33ade366be459429cb7a91a9092d1.jpg\" data-blurred=\"true\"></figure><p>«Это машина высотой шесть футов, похожая на большой ломтик пиццы», — описывает её Бен Муски. В неё подаётся энергия направленного взрыва, а ударная волна проходит через два слоя газа, порождая в них мощные турбулентные завихрения, отдалённо похожие на те, что возникают во внешних газовых оболочках звезды при взрыве сверхновой. Вихри подсвечиваются лазером, и весь процесс (в сантиметровом масштабе) отснимается на камеру. Далее нужна чистая математика, чтобы экстраполировать происходящие в камере процессы на звёздные масштабы. </p><p>Участвующий в проекте инженер Девеш Ранжан отмечает, что у команды ушло два года, чтобы исключить из модели артефакты, не имеющие отношения к физике звёзд, например, вторичные ударные волны, отражающиеся от стенок камеры. Также требовалось довести до реалистичных значений температуру, радиационный фон и гравитацию. Кроме того, взрыв сверхновой должен быть близок по форме к идеальной сфере, чего в лаборатории также можно достичь лишь с серьёзными приближениями. Однако сами вихри и паттерны их распространения в газовой среде при реальном взрыве сверхновой эволюционируют и выравниваются в течение от недель до сотен лет, а в эксперименте Муски на это уходили секунды или минуты. Расслоение образующихся при этом газов и перепады их концентрации, в конечном итоге могут пролить свет на образование планетных систем и <a href=\"https://habr.com/ru/articles/738072/\" rel=\"noopener noreferrer nofollow\">звёздных яслей</a>.</p><p>Таким образом, мы готовы к вспышке сверхновой несравнимо полнее, чем Кеплер, учившийся у Браге и, в сущности, родившийся в нужном месте в нужное время. Не исключено, что Бетельгейзе доживёт и переживёт тот момент, когда наша цивилизация сама окажется в состоянии зажечь первую миниатюрную сверхновую, и кончина Бетельгейзе (в ожидании которой зарождается и развивается целая научная область) будет представлять преимущественно эстетический интерес.</p>', 2, '2023-06-12 22:02:46', 984698, 106, '/ru/articles/741252/', 'Наверное сложно поверить, что такой косный электротехнический компонент как фоторезистор может в какой-то мере заменить дорогущий цифровой санкционный навигационный приемник. Но это в самом деле так.Если взять микроконтроллер, к ADC пину подключить фоторезистор, целый день непрерывно записывать на SD карту показания солнечной освещенности с вкраплениями временных отметок из часов реального времени RTC, то спустя 24 часа можно оценить широту (длительность светового дня) и долготу (фаза светового дня).Попробуем понять, работает ли эта идея.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(213, 'Фоторезистор = навигатор', '<figure class=\"full-width \"><img src=\"https://habrastorage.org/getpro/habr/upload_files/ddf/637/efe/ddf637efef63747136e888247355ef80.JPG\" width=\"1321\" height=\"884\"></figure><p>Наверное сложно поверить, что этот косный электротехнический компонент как <strong>фоторезистор</strong> может в какой-то мере заменить дорогущие цифровые санкционные навигационные приемники. Но это в самом деле так.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b4e/77b/1a1/b4e77b1a18b0b01a1b21a08ff38414bf.png\" width=\"916\" height=\"553\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b4e/77b/1a1/b4e77b1a18b0b01a1b21a08ff38414bf.png\"></figure><p>Нам очень повезло, что планета Земля вращается под углом к плоскости орбиты. Это приводит не только к смене времен года, но и также к тому, что на каждой широте длительность светового дня различная.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/883/ca8/c06/883ca8c063f34adba22e46169c4508ba.png\" width=\"1141\" height=\"735\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/883/ca8/c06/883ca8c063f34adba22e46169c4508ba.png\"></figure><p>Таким образом фазы солнечного освещения естественным образом кодируют положения наблюдателя на земной сфере. Например, за северным полярным кругом (на широтах выше 66.5 градусов) световой день это полгода как и световая ночь.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/getpro/habr/upload_files/26e/51f/171/26e51f171d0bdedea5173e7c5d0bece7.JPG\" width=\"1036\" height=\"504\"></figure><p>В количественных величинах на 10 июня это такие продолжительности светового дня для разных широт </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/bbe/eb4/ffd/bbeeb4ffdad49489bf9c738364e7292a.png\" alt=\"продолжительность светового дня для разных широт\" title=\"продолжительность светового дня для разных широт\" width=\"767\" height=\"974\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/bbe/eb4/ffd/bbeeb4ffdad49489bf9c738364e7292a.png\"><div><figcaption>продолжительность светового дня для разных широт</figcaption></figure><p> Также нам очень повезло, что в нашей солнечной системе существует всего одно Солнце, а не два, три или четыре. В связи с этим световые лучи падают на Землю <strong>параллельно</strong>, что существенно упрощает вычисления. Это первая хорошая новость.</p><p>Причем на самой Земле человечеству до сих пор так и не удалось создать источников света, которые светят однородно широко и параллельно.</p><p>Учитывая эти обстоятельства можно назначить Солнцу настоящую работу, чтобы оно не просто так впустую светило каждый день, a еще и делало что-то по-настоящему полезное для общества. </p><p>Итак план таков. Если взять микроконтроллер, к ADC пину микроконтроллера подключить через делитель напряжения фоторезистор (или датчик света по I2C), потом целый день непрерывно записывать на SD карту показания солнечной освещенности вкупе с временными отметками из часов реального времени RTC, то спустя 24 часа можно оценить или даже вычислить широту (длительность светового дня) и долготу (фаза светового дня). То есть можно вычислить свои географические координаты! </p><p>Надо лишь накропать вот такой остроумный гаджет</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b99/d40/146/b99d40146637f4eb9a20ae0255121cfd.png\" alt=\"Блок-схема солнечного навигатора\" title=\"Блок-схема солнечного навигатора\" width=\"793\" height=\"386\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b99/d40/146/b99d40146637f4eb9a20ae0255121cfd.png\"><div><figcaption>Блок-схема солнечного навигатора</figcaption></figure><p>Вот, например, такой график запишет устройство за день работы. Строго говоря, этого должно быть достаточно для определения своего местонахождения.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/6c0/c7d/7b5/6c0c7d7b5f6e796434c3dc94716c3ffd.png\" alt=\"этой инфы должно быть достаточно чтобы однозначно сказать где записан лог\" title=\"этой инфы должно быть достаточно чтобы однозначно сказать где записан лог\" width=\"1002\" height=\"587\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/6c0/c7d/7b5/6c0c7d7b5f6e796434c3dc94716c3ffd.png\"><div><figcaption>этой инфы должно быть достаточно чтобы однозначно сказать где записан лог</figcaption></figure><p>Таким образом устройство-логер превратиться в <strong>навигационный</strong> <strong>приемник</strong>, который раз в 24 часа выдает навигационную координату! </p><p>Тут прежде чем двигаться дальше надо договориться о некоторой терминологии.</p><h3>Терминология</h3><p><strong>Склонение Солнца</strong>-Угол между земной осью и отрезком, соединяющий Землю и Солнце. Зависит только от времени-даты. Меняется с периодом в год. Допустимые значения от -23,5....23,5 градусов</p><p><strong>Местное солнечное время</strong>-время, определяемое в месте нахождения наблюдателя видимым положением Солнца на небесной сфере (например, истинный полдень в некоторой точке Земли наступает в момент верхней кульминации Солнца);</p><h3>Теория</h3><h4>Как вычислить долготу? </h4><p>Надо найти момент времени максимальной освещенности. Однако это не всегда удобно из-за облаков. Можно вычислить время восхода и время заката. Из времени заката вычесть время восхода, поделить на 2 и прибавить это число к времени восхода. Так мы получим время полудня для данной долготы. Если время полудня совпало с 12:00 на UTC+0 то это значит, что мы на нулевом меридиане. За 1 час Солнце в кульминации заметает 15 градусов долготы на глобусе. </p><p>С долготой всё просто: даешь время кульминации Солна, получаешь долготу.</p><h4>Как вычислить широту?</h4><p>Тут поинтереснее. Надо вспомнить школьную тригонометрию.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/4f2/7a4/1ee/4f27a41eeda62cd892f73407076f64b9.png\" alt=\"иллюстрация к выводу формулы вычисления длительности светового дня\" title=\"иллюстрация к выводу формулы вычисления длительности светового дня\" width=\"621\" height=\"534\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/4f2/7a4/1ee/4f27a41eeda62cd892f73407076f64b9.png\"><div><figcaption>иллюстрация к выводу формулы вычисления длительности светового дня</figcaption></figure><p>Существует формула которая вычисляет продолжительность светового дня по широте и солнечному склонению.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e26/e6f/3d5/e26e6f3d5e1264d9fdfd2360f020daa2.png\" width=\"1537\" height=\"370\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e26/e6f/3d5/e26e6f3d5e1264d9fdfd2360f020daa2.png\"></figure><p>вывод этой формулы можно посмотреть тут <a href=\"https://pandia.ru/text/77/376/23564.php\" rel=\"noopener noreferrer nofollow\">https://pandia.ru/text/77/376/23564.php</a><br>Получается, даешь широту, солнечное склонение, получаешь продолжительность светового дня. </p><p>Заметьте, высота установки датчика ни в коей мере не влияет на результат вычисления продолжительности светового дня. Это вторая хорошая новость!</p><h4>Как вычислить солнечное склонение?</h4><p>Солнечное склонение меняется с периодом в один год от 23,45 градусов (22 июня )до -23,45 градусов (22 декабря). </p><figure class=\"\"><img src=\"https://habrastorage.org/getpro/habr/upload_files/99f/3cb/46f/99f3cb46fcb21aafb89a08617fec043e.gif\" width=\"502\" height=\"302\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/99f/3cb/46f/99f3cb46fcb21aafb89a08617fec043e.gif\"></figure><p>Солнечное склонение это просто гладкая непрерывная периодическая функция от даты из календаря.</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/724/afa/e5c/724afae5c80e07e88568979222bd2d38.png\" alt=\"склонение Солнца\" title=\"склонение Солнца\" width=\"215\" height=\"57\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/724/afa/e5c/724afae5c80e07e88568979222bd2d38.png\"><div><figcaption>склонение Солнца</figcaption></figure><p>где n – порядковый номер дня в году, начиная от 1-го января</p><h3>Практическая часть</h3><h4>Детали реализации солнечного навигатораЯ решил собрать свой солнечный навигатор из того, что было на балконе.</h4><div><div class=\"table\"><table><tbody><tr><td data-colwidth=\"66\" width=\"66\"><p align=\"left\"><strong>№</strong></p></td><td data-colwidth=\"468\" width=\"468\"><p align=\"left\"><strong>Компонент</strong></p></td></tr><tr><td data-colwidth=\"66\" width=\"66\"><p align=\"left\">1</p></td><td data-colwidth=\"468\" width=\"468\"><p align=\"left\">отладочная плата NUCLEO-F401RE с микроконтроллером <strong>STM32F401RE</strong> на борту</p></td></tr><tr><td data-colwidth=\"66\" width=\"66\"><p align=\"left\">2</p></td><td data-colwidth=\"468\" width=\"468\"><p align=\"left\">модуль I2C часов реального времени <strong>DS3231 </strong></p></td></tr><tr><td data-colwidth=\"66\" width=\"66\"><p align=\"left\">3</p></td><td data-colwidth=\"468\" width=\"468\"><p align=\"left\">карта памяти SD micro 128MByte c SPI интерфейсом</p></td></tr><tr><td data-colwidth=\"66\" width=\"66\"><p align=\"left\">4</p></td><td data-colwidth=\"468\" width=\"468\"><p align=\"left\">какой-то <strong>Фоторезистор</strong> 125kOm (свет)   2MOm(тьма)</p></td></tr><tr><td data-colwidth=\"66\" width=\"66\"><p align=\"left\">5</p></td><td data-colwidth=\"468\" width=\"468\"><p align=\"left\">3х пиновые Wago зажимы</p></td></tr><tr><td data-colwidth=\"66\" width=\"66\"><p align=\"left\">6</p></td><td data-colwidth=\"468\" width=\"468\"><p align=\"left\">кабель USB A-USB(mini) для подключения к PC или  PowerBank</p></td></tr><tr><td data-colwidth=\"66\" width=\"66\"><p align=\"left\">7</p></td><td data-colwidth=\"468\" width=\"468\"><p align=\"left\">PowerBank</p></td></tr><tr><td data-colwidth=\"66\" width=\"66\"><p align=\"left\">8</p></td><td data-colwidth=\"468\" width=\"468\"><p align=\"left\">перемычки вилка-гнездо</p></td></tr><tr><td data-colwidth=\"66\" width=\"66\"><p align=\"left\">9</p></td><td data-colwidth=\"468\" width=\"468\"><p align=\"left\">Оргстекло 3мм в качестве основы прототипа</p></td></tr><tr><td data-colwidth=\"66\" width=\"66\"><p align=\"left\">10</p></td><td data-colwidth=\"468\" width=\"468\"><p align=\"left\">Пластиковые стойки с болтами и гайками</p></td></tr><tr><td data-colwidth=\"66\" width=\"66\"><p align=\"left\">11</p></td><td data-colwidth=\"468\" width=\"468\"><p align=\"left\">модуль I2C датчика освещения на основе ASIC <strong>BH1750</strong></p></td></tr><tr><td data-colwidth=\"66\" width=\"66\"><p align=\"left\">12</p></td><td data-colwidth=\"468\" width=\"468\"><p align=\"left\">двусторонний скотч</p></td></tr></tbody></table><p> Нашел отладочную плату, фоторезистор, модуль с часами реального времени и собрал прототип. Даже паять ничего не пришлось, только на 100W(ном) лазерном резаке основание пришлось вырезать из оргстекла, чтобы закрепить отладочные платы. Внешний вид прототипа такой </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/08e/e97/c46/08ee97c46df3ecb2dd90a827618a9c85.jpg\" alt=\"внешний вид прототипа\" title=\"внешний вид прототипа\" width=\"1280\" height=\"960\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/08e/e97/c46/08ee97c46df3ecb2dd90a827618a9c85.jpg\" data-blurred=\"true\"><div><figcaption>внешний вид прототипа</figcaption></figure><p>У попавшегося фоторезистора во время восхода проводимость равна <strong>1.474320....1.503056</strong> MSimens. Время восхода для своего региона я взял с астрономических сайтов. Откалибровав получил такие значения водораздела. </p><div><div class=\"table\"><table><tbody><tr><td data-colwidth=\"246\" width=\"246\"><p align=\"center\"><strong>Восход</strong></p></td><td data-colwidth=\"245\" width=\"245\"><p align=\"center\"><strong>Закат</strong></p></td></tr><tr><td data-colwidth=\"246\" width=\"246\"><p align=\"center\">1.462417, 04:02:27 24/5/2023</p></td><td data-colwidth=\"245\" width=\"245\"><p align=\"center\">1.604962, 20:50:15 24/5/2023</p></td></tr><tr><td data-colwidth=\"246\" width=\"246\"><p align=\"center\">1.460938, 04:02:47 24/5/2023</p></td><td data-colwidth=\"245\" width=\"245\"><p align=\"center\">1.596703, 20:50:35 24/5/2023</p></td></tr><tr><td data-colwidth=\"246\" width=\"246\"><p align=\"center\"><strong>1.474320, 04:03:07 24/5/2023</strong></p></td><td data-colwidth=\"245\" width=\"245\"><p align=\"center\"> <strong>1.588496, 20:51:15 24/5/2023</strong></p></td></tr><tr><td data-colwidth=\"246\" width=\"246\"><p align=\"center\"><strong>1.495430, 04:03:27 24/5/2023 </strong></p></td><td data-colwidth=\"245\" width=\"245\"><p align=\"center\"><strong>1.573853, 20:51:35 24/5/2023 </strong></p></td></tr><tr><td data-colwidth=\"246\" width=\"246\"><p align=\"center\"><strong>1.503056, 04:03:47 24/5/2023</strong></p></td><td data-colwidth=\"245\" width=\"245\"><p align=\"center\"><strong>1.567398, 20:51:55 24/5/2023</strong></p></td></tr><tr><td data-colwidth=\"246\" width=\"246\"><p align=\"center\">1.532468, 04:04:07 24/5/2023</p></td><td data-colwidth=\"245\" width=\"245\"><p align=\"center\">1.554585, 20:52:15 24/5/2023</p></td></tr></tbody></table><p>продолжительность светового дня получилась 20:51:55 - 04:03:07=16:48:48. Калькулятор времени тут <a href=\"https://allcalc.ru/node/2277\" rel=\"noopener noreferrer nofollow\">https://allcalc.ru/node/2277</a>. По формуле такая продолжительность светового дня соответствует широте 56.5 градусов северной широты.  Признаться это больше чем на самом деле. Видимо тот сайт указывал время восхода/заката учитывая рефракцию атмосферы, а формула которую я применяю рефракцию не учитывает.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/0a8/068/a1f/0a8068a1feebf14151db006d2c4e909d.png\" alt=\"Проводимость (в МегаСименсах) фоторезистора от времени\" title=\"Проводимость (в МегаСименсах) фоторезистора от времени\" width=\"2423\" height=\"1027\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/0a8/068/a1f/0a8068a1feebf14151db006d2c4e909d.png\"><div><figcaption>Проводимость (в МегаСименсах) фоторезистора от времени</figcaption></figure><p>Точное время для инициализации часов можно взять отсюда <a href=\"https://timeskaner.ru/utc.html\" rel=\"noopener noreferrer nofollow\">https://timeskaner.ru/utc.html</a>. Лучше сразу прописывать в устройство время по Гринвичу UTC+0, прямо как в GNSS приемниках.</p><p>При подключении по SPI SD карта почему-то распознается только, когда Allocation Unit size настроен на <strong>2048</strong> байт. Данные на SD карту лучше писать в формате электронных таблиц в <strong>*.csv</strong> файл. Тогда их можно будет сразу импортировать и просматривать прямо в <a href=\"https://docs.google.com/spreadsheets\" rel=\"noopener noreferrer nofollow\">docs.google.com/spreadsheets</a>. </p><p>Навигационное устройство можно сделать сверхлегким и сверх минималистичным. По сути надо только микроконтроллер, RTC, Light Sensor и опционально Flash-память.</p><h3>Достоинства навигации по фазам солнечного освещения</h3><ol><li><p>это дешево. Всего три компонента: фоторезистор, часы реального времени, SD-карточка, микроконтроллер.</p></li><li><p>простота реализации оборудования.</p></li><li><p>малые габариты оборудования</p></li><li><p>малая масса оборудования</p></li><li><p>радио электронная борьба для GNSS не работают в этом случае. Никто не может выключить Солнце.</p></li><li><p>можно уточнять координату каждый день.</p></li></ol><h3>Недостатки навигации по фото-резистору</h3><ol><li><p>устройство надо калибровать. Надо указать явно какое сопротивление фоторезистора соответствует рассвету и закату.</p></li><li><p>Долго выдает навигационное решение. Долго ждать одного измерения 24 часа. Это подойдет в основном для стационарных предметов на открытом воздухе, метеостанции, контейнеры, вагоны.</p></li><li><p>устройство желательно должно быть неподвижным целый день.</p></li><li><p>Низкая точность. +/- 220 км. Особенно по широте большая ошибка 80-120 км. Зависит от погоды.</p></li></ol><h3>Неприятности навигации по фазам освещения </h3><p>1--Сопротивление фоторезистора зависит не только от освещенности, но и ещё от температуры. Утром фоторезистор холодный, вечером - теплый. Поэтому и значения при той же освещенности разные. Вечером у фоторезистора при той же, что и утром освещенности сопротивление больше. Нужен не просто фоторезистор, а полноценный прецизионный датчик освещенности с термо компенсацией, например BH1750.  Вот на этом графике показано сравнение фоторезистора и ASIC датчика освещения BH1750. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/bea/b5a/f78/beab5af7822c77478e42a4e253bd0b00.png\" width=\"1123\" height=\"732\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/bea/b5a/f78/beab5af7822c77478e42a4e253bd0b00.png\"></figure><p>заметьте что проводимость фоторезистора пропорциональна логарифму от освещения, а не просто от освещения.</p><p>2--В пасмурные дни (типа 2 июня 2023) продолжительность светового дня вычисляется меньше чем есть на самом деле.</p><h3>Возможные приложения навигации по фазам освещения:</h3><ol><li><p>Навигация по фоторезистору может быть полезна для вспомогательного отслеживания перемещения крупногабаритных товаров, которые в основном подолгу хранятся на открытом воздухе, таких как контейнеры, вагоны, корабли. </p></li><li><p>Также каждая метеостанция может вычислять свои координаты по датчику освещения. В условиях отключения GPS навигация по освещению окажется одним из решений. </p></li><li><p>Способ навигации по фазам солнца поможет примерно ориентироваться для марсоходов и луноходов.</p></li><li><p>Так как оборудование минимально (всего три компонента), то можно отслеживать перемещение диких животных (птиц). </p></li><li><p>Как по мне, самое адекватное применение этой темы это встроить фоторезистор в наручные часы и часы сами, лежа на подоконнике определят свой часовой пояс и переключатся на местное время. </p></li><li><p>Можно встроить датчик освещения в портативные радиостанции для передачи примерного местонахождения в транкинговой сети. </p></li></ol><h3>Шоурум графиков фаз освещения</h3><p>Был очень яркий день. Облаков не было. Там не менее появились 2 непонятных проседания. Вероятно это Солнце зашло за многоэтажки.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f08/20e/6ca/f0820e6cacdfaae22ac43ab6cdb25aeb.png\" alt=\"29 мая 2023\" title=\"29 мая 2023\" width=\"1095\" height=\"371\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f08/20e/6ca/f0820e6cacdfaae22ac43ab6cdb25aeb.png\"><div><figcaption>29 мая 2023</figcaption></figure><p>Тут видно, что нагревание фоторезистора влияет на его сопротивление</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/57c/5a3/9ed/57c5a39eda6176e85202abb693cace4d.png\" alt=\"30 мая 2023\" title=\"30 мая 2023\" width=\"2353\" height=\"774\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/57c/5a3/9ed/57c5a39eda6176e85202abb693cace4d.png\"><div><figcaption>30 мая 2023</figcaption></figure><p>Продолжительность дня: 17h 09m, Восход 00:52, кульминация 09:27, закат 18:02, 01/6/2023 максимальная освещенность 08:55:16</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/857/d27/772/857d27772f5826b50fdb3a10fcc10855.png\" alt=\"1 июня 2023\" title=\"1 июня 2023\" width=\"1047\" height=\"371\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/857/d27/772/857d27772f5826b50fdb3a10fcc10855.png\"><div><figcaption>1 июня 2023</figcaption></figure><p>а это пасмурный день с грозой и молниями 2 июня 2023</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/669/16a/9ca/66916a9ca9a3dacce255e18199e2e66d.png\" alt=\"2 июня 2023\" title=\"2 июня 2023\" width=\"1209\" height=\"371\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/669/16a/9ca/66916a9ca9a3dacce255e18199e2e66d.png\"><div><figcaption>2 июня 2023</figcaption></figure><h3>Что с точностью измерения координат?</h3><p>Мой прототип такого навигатора, установленный на балконе, показывает ошибку по широте 80км и ошибку по долготе 58,2 км...120км. Причем долгота определяется на порядок точнее чем широта. Но тут надо сразу отметить, что я пока еще ничего не начинал делать для увеличения точности. Пополнять лог результатов буду в этом реестре<br><br><a href=\"https://docs.google.com/spreadsheets/d/1q1Q4BvpVELhuVvXNgQFRqmsdtKTIxMgbEzHBmkHPNc0/edit#gid=0\" rel=\"noopener noreferrer nofollow\">https://docs.google.com/spreadsheets/d/1q1Q4BvpVELhuVvXNgQFRqmsdtKTIxMgbEzHBmkHPNc0/edit#gid=0</a></p><h3>Как можно попробовать увеличить точность?</h3><ol><li><p>Использовать более точные формулы вычисления солнечного склонения, учитывать прецессию Земли. </p></li><li><p>Использовать несколько датчиков освещения для исключения бликов.</p></li><li><p>Использовать более точные часы. Например атомные часы.</p></li><li><p>автоматически определять направление тени от вертикального стержня и таким образом точнее определить долготу.</p></li><li><p>Установить солнечный навигатор выше. На крышу здания. Так как в формуле высота не фигурирует, зато график освещения будет более гладким, как следствие эксперимент чистым. </p></li><li><p>найти или вывести формулы продолжительности светового дня, для конкретной широты которые учитывают рефракцию атмосферы.</p></li></ol><h3>Выводы</h3><p>Навигация по фазам освещения это вполне доступный вариант оценочной навигации. Первая точность -/+ регион. Можно по крайней мере автоматически определить свой часовой пояс.</p><p>Также появляются очень подозрительные всплески и проседания освещения во время дня. Может это связано с бликами от окон многоэтажек.  Наверное лучше считывать данные освещения сразу с двух датчиков освещения. </p><p>При этом фоторезистор это очень плохой вариант для датчика освещения так как показания фоторезистора еще зависят и от температуры.</p><p>На точность вычисления широты сильно влияет точность измерения продолжительности светового дня.</p><p>Надо калибровать датчик освещения. Надо понимать какое показание светимости соответствует водоразделу ночь/день и день/ночь</p><p>Тема навигации по датчику освещения также может быть вариантом, например, для школьных кружков робототехники в качестве реальной учебной задачки. Всё оборудование доступно и дешево. При этом разработка такого прибора затрагивает много аспектов программирования: тестирование кода, делитель напряжения, триггер Шмитта, файловая система (например FatFs), шина I2C, часы реального времени, немного реальной тригонометрии, часовая арифметика, ряды Фурье, сбор логов, метрология, анализ больших данных, красивые графики и даже астрономия! </p><p>При этом написанные и протестированные программные компоненты (SD/FatFs/TrigSchmitt/BSP/RTC) можно потом пере использовать в других проектах просто переписав конфиг.<br><br>Это не просто датчик света. Это разговор с самой природой.<br><br>В общем эта тема позволила мне стать немножко более просвещённым.</p><p><strong>Ссылки<br></strong><a href=\"https://timewek.ru/citysun.php\" rel=\"noopener noreferrer nofollow\">https://timewek.ru/citysun.php</a></p><p><a href=\"https://math.d3.ru/formula-dnia-i-nochi-2079568/?sorting=rating\" rel=\"noopener noreferrer nofollow\">https://math.d3.ru/formula-dnia-i-nochi-2079568/?sorting=rating</a><br><a href=\"https://ru.wikipedia.org/wiki/%D0%94%D0%BE%D0%BB%D0%B3%D0%BE%D1%82%D0%B0_%D0%B4%D0%BD%D1%8F\" rel=\"noopener noreferrer nofollow\">https://ru.wikipedia.org/wiki/Долгота_дня</a></p><p><a href=\"https://www.hmn.ru/index.php?index=41&amp;value=1\" rel=\"noopener noreferrer nofollow\">https://www.hmn.ru/index.php?index=41&amp;value=1</a><br><a href=\"https://pandia.ru/text/77/376/23564.php\" rel=\"noopener noreferrer nofollow\">https://pandia.ru/text/77/376/23564.php</a><br><a href=\"https://www.youtube.com/watch?v=ZPUYBsI7Pp0\" rel=\"noopener noreferrer nofollow\">https://www.youtube.com/watch?v=ZPUYBsI7Pp0</a></p><p><a href=\"https://xn--h1aebia8a.xn--p1ai/%D0%B2%D0%BE%D1%81%D1%85%D0%BE%D0%B4-%D0%B7%D0%B0%D1%85%D0%BE%D0%B4-%D1%81%D0%BE%D0%BB%D0%BD%D1%86%D0%B0\" rel=\"noopener noreferrer nofollow\">https://лунник.рф/восход-заход-солнца</a><br><a href=\"https://www.hmn.ru/index.php?index=41&amp;value=1\" rel=\"noopener noreferrer nofollow\">https://www.hmn.ru/index.php?index=41&amp;value=1</a><br><a href=\"https://poznayka.org/s78818t1.html\" rel=\"noopener noreferrer nofollow\">https://poznayka.org/s78818t1.html</a></p><p><strong>Словарь</strong></p><div><div class=\"table\"><table><tbody><tr><td data-colwidth=\"125\" width=\"125\"><p align=\"left\"><strong>Акроним</strong></p></td><td><p align=\"left\"><strong>Расшифровка</strong></p></td></tr><tr><td data-colwidth=\"125\" width=\"125\"><p align=\"left\">csv</p></td><td><p align=\"left\">Comma-Separated Values</p></td></tr><tr><td data-colwidth=\"125\" width=\"125\"><p align=\"left\">RTC</p></td><td><p align=\"left\">Real Time Clock</p></td></tr><tr><td data-colwidth=\"125\" width=\"125\"><p align=\"left\">GPS </p></td><td><p align=\"left\">Global Positioning System</p></td></tr><tr><td data-colwidth=\"125\" width=\"125\"><p align=\"left\">UTC</p></td><td><p align=\"left\">Coordinated Universal Time</p></td></tr><tr><td data-colwidth=\"125\" width=\"125\"><p align=\"left\">GNSS</p></td><td><p align=\"left\">Global Navigation Satellite System</p></td></tr><tr><td data-colwidth=\"125\" width=\"125\"><p align=\"left\">ADC</p></td><td><p align=\"left\">analog-to-digital converter</p></td></tr><tr><td data-colwidth=\"125\" width=\"125\"><p align=\"left\">SD</p></td><td><p align=\"left\">Secure Digital</p></td></tr><tr><td data-colwidth=\"125\" width=\"125\"><p align=\"left\">I2C</p></td><td><p align=\"left\">Inter-Integrated Circuit</p></td></tr><tr><td data-colwidth=\"125\" width=\"125\"><p align=\"left\">FAT</p></td><td><p align=\"left\">File Allocation Table</p></td></tr><tr><td data-colwidth=\"125\" width=\"125\"><p align=\"left\">FS</p></td><td><p align=\"left\">File system</p></td></tr></tbody></table><p></p>', 1, '2023-06-12 22:02:47', 585399, 107, '/ru/articles/687640/', 'Луна — первый астрономический объект, с которым встречаются люди. Если, конечно, не считать Землю и Солнце. Когда начинающий любитель астрономии получает в руки телескоп или бинокль, то сразу начинает искать Луну.Взгляд на спутник Земли всегда впечатляет публику. Огромная и рельефная, с множеством кратеров и горных цепей — она выглядит совсем не похожей на то желтоватое пятно, которое мы привыкли видеть невооружённым глазом.Рельеф Луны в первое время нравится всякому, кто наблюдает за ней, ведь на протяжении месяца по её поверхности медленно ползёт земная тень. На линии терминатора, находящейся между светлой и затемнённой стороной, контрастируют мелкие детали рельефа.Тем не менее рано или поздно астроном-любитель захочет большего. Этим большим становятся газовые гиганты: Юпитер с барашками облаков, кольца Сатурна, далёкий и блеклый Уран, красноватый диск Марса или венерианский серп. Все это заставляет позабыть о Луне.Дальше любители прокачивают навыки ориентации по звёздному небу или покупают монтировку с системой автонаведения. '),
(214, 'Как выглядит край Вселенной?', '<a href=\"https://habr.com/ru/company/ruvds/blog/740806/\"><div style=\"text-align:center;\"><img src=\"https://habrastorage.org/r/w1560/webt/je/nd/l-/jendl-e37ldzlzopkn5vwzrzfgc.png\" data-src=\"https://habrastorage.org/webt/je/nd/l-/jendl-e37ldzlzopkn5vwzrzfgc.png\"></a><br>\r\nНесмотря на всё, что мы узнали о нашей Вселенной, многие экзистенциальные вопросы до сих пор остаются без ответа. Мы не знаем, конечна или бесконечна наша Вселенная; мы знаем только, что её физический размер должен быть больше той части, которую мы можем наблюдать. Мы не знаем, охватывает ли наша Вселенная всё существующее, или это лишь одна из многих Вселенных, составляющих мультивселенную. И мы остаёмся в неведении относительно того, что произошло на самых ранних стадиях всего: в первую крошечную долю секунды горячего Большого взрыва, поскольку у нас нет доказательств, необходимых для надёжных и подтверждённых выводов.<br>\r\n<br>\r\nНо в одном мы уверены точно: у Вселенной есть край. Только не в пространстве, а во времени. Поскольку горячий Большой взрыв произошёл в известное, конечное время в прошлом — 13,8 миллиарда лет назад, с неопределённостью менее 1% — существует «край» того, как далеко мы можем видеть. Даже при скорости света, предельной космической скорости, существует фундаментальный предел того, как далеко назад мы можем заглянуть. Чем дальше мы смотрим, тем дальше назад во времени мы заглядываем. И вот что мы видим, приближаясь к краю Вселенной.<br>\r\n<a name=\"habracut\"></a><br>\r\nСегодня мы видим Вселенную в том виде, в котором она существует спустя 13,8 миллиарда лет после горячего Большого взрыва. Большинство галактик, которые мы видим, сгруппированы в галактические группы (например, Местная группа) и плотные скопления (например, скопление Девы), разделённые огромными областями преимущественно пустого пространства, известными как войды. Галактики внутри этих групп бывают как спиральными, так и эллиптическими; типичная галактика, подобная Млечному Пути, образует в среднем около 1 новой звезды, подобной Солнцу, в год.<br>\r\n<br>\r\nКроме того, обычная материя во Вселенной состоит в основном из водорода и гелия, но около 1-2% этой материи состоят из более тяжёлых элементов таблицы Менделеева, что позволяет Вселенной формировать каменистые планеты, такие как Земля, и сложную, даже органическую, химию. Хотя в галактиках существует большое разнообразие — некоторые из них активно формируют звёзды, в некоторых есть активные чёрные дыры, некоторые не образовывали новых звёзд в течение миллиардов лет и т.д. — галактики, которые мы видим, в среднем большие, эволюционировавшие и сгруппировавшиеся вместе.<br>\r\n<br>\r\nНо по мере того, как мы заглядываем всё дальше и дальше, мы начинаем видеть, как Вселенная развивалась, чтобы стать такой. По мере удаления от нас мы обнаруживаем, что Вселенная немного менее комковатая и немного более однородная, особенно на больших масштабах. Мы видим, что у галактик меньше масса и степень развития; среди них больше спиральных и меньше эллиптических. В среднем в них больше голубых звёзд, а скорость звездообразования в прошлом была выше. Между галактиками в среднем меньше пространства, но общая масса групп и скоплений в более ранние времена была меньше.<br>\r\n<br>\r\n<a href=\"https://habrastorage.org/webt/2t/ei/zz/2teizzeyupjjmqywlpbsn-ec8ya.jpeg\"><img src=\"https://habrastorage.org/r/w780q1/webt/2t/ei/zz/2teizzeyupjjmqywlpbsn-ec8ya.jpeg\" data-src=\"https://habrastorage.org/webt/2t/ei/zz/2teizzeyupjjmqywlpbsn-ec8ya.jpeg\" data-blurred=\"true\"></a><br>\r\n<br>\r\nЭта вертикально ориентированная логарифмическая карта Вселенной охватывает почти 20 порядков величины, перенося нас с планеты Земля на край видимой Вселенной. Каждая большая отметка на масштабной линейке справа соответствует увеличению масштаба расстояния в 10 раз.<br>\r\n<br>\r\nЭто рисует картину Вселенной, в которой современные галактики появились из более мелких галактик с меньшей массой, неторопливо сливающихся вместе и превращающихся в современные гиганты, которые мы видим вокруг себя. В более ранние времена Вселенная состояла из галактик, которые были:<br>\r\n<br>\r\n<ul>\r\n<li>физически меньше,</li>\r\n<li>меньшей массы,</li>\r\n<li>ближе друг к другу,</li>\r\n<li>больше по количеству,</li>\r\n<li>более голубые по цвету,</li>\r\n<li>богаче газом,</li>\r\n<li>с более высокими темпами звездообразования,</li>\r\n<li>и с меньшим содержанием более тяжёлых элементов...</li>\r\n</ul><br>\r\n… по сравнению с современными галактиками.<br>\r\n<br>\r\nНо по мере того, как мы удаляемся всё дальше и дальше — во всё более ранние времена — эта постепенно меняющаяся картина начинает резко трансформироваться. Когда мы оглядываемся назад на расстояние, которое в настоящее время составляет 19 миллиардов световых лет, что соответствует времени, когда после горячего Большого взрыва прошло всего ~3 миллиарда лет, мы видим, что звездообразование во Вселенной достигает своего максимума: это примерно в 20-30 раз больше, чем скорость образования новых звёзд сегодня. В это время активна огромная доля сверхмассивных чёрных дыр, испускающих огромное количество частиц и излучения из-за поглощения окружающей материи.<br>\r\n<br>\r\nВ течение последних ~11 миллиардов лет или около того эволюция Вселенной замедляется. Конечно, гравитация продолжает переделывать структуры, но тёмная энергия начинает работать против неё, став доминирующей в расширении Вселенной более 6 миллиардов лет назад. Новые звёзды продолжают формироваться, но пик звездообразования остался в далёком прошлом. Сверхмассивные чёрные дыры продолжают расти, но ярче всего они светили раньше (за счёт разгона аккреционной материи), и сегодня большая их часть более тусклая и менее активная, чем на ранних стадиях.<br>\r\n<br>\r\nПо мере удаления на все большие расстояния, ближе к «краю», определённому началом горячего Большого взрыва, мы начинаем видеть ещё более значительные изменения. Когда мы оглядываемся назад на расстояние 19 миллиардов световых лет, это соответствует времени, когда возраст Вселенной составлял всего 3 миллиарда лет, звездообразование было на пике, и Вселенная, возможно, содержала 0,3-0,5% тяжёлых элементов.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/fq/ww/z9/fqwwz9i1cksslcig85wm22z_kw0.jpeg\" data-src=\"https://habrastorage.org/webt/fq/ww/z9/fqwwz9i1cksslcig85wm22z_kw0.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\nЭволюция крупномасштабной структуры во Вселенной, от раннего однородного состояния до кластерной Вселенной, которую мы знаем сегодня. Обратите внимание, что во всех случаях мелкомасштабная структура возникает раньше, чем структура на более крупных масштабах, и что даже области самой низкой плотности всё ещё содержат ненулевое количество материи.<br>\r\n<br>\r\nНо когда мы приближаемся к 27 миллиардам световых лет по расстоянию, возраст Вселенной составляет всего 1 миллиард лет. Звездообразование шло гораздо медленнее, новые звёзды формировались раза в четыре медленнее, чем на пике развития Вселенной. Доля обычной материи, состоящей из тяжёлых элементов, стремительно падает: до 0,1% в возрасте 1 миллиарда лет и всего до 0,01% в возрасте около 500 миллионов лет. Скалистые планеты в этих ранних условиях, скорее всего, не могли появиться.<br>\r\n<br>\r\nНе только реликтовое излучение было значительно горячее — в инфракрасном, а не микроволновом диапазоне волн — но и каждая галактика во Вселенной должна была быть молодой и полной молодых звёзд; эллиптических галактик на таком раннем этапе, скорее всего, не существовало.<br>\r\n<br>\r\nТакие дальние расстояния уже находятся на пределе возможностей наших современных приборов, но телескопы, такие как Кек, Спитцер и Хаббл, начали доставлять нас туда, начиная с 1990-х годов. Как только мы возвращаемся в прошлое на расстояние примерно 29 миллиардов световых лет или дальше — что соответствует временам, когда возраст Вселенной составлял 700-800 миллионов лет — мы начинаем сталкиваться с первым «краем» Вселенной: краем прозрачности.<br>\r\n<br>\r\nСегодня мы считаем само собой разумеющимся, что космическое пространство прозрачно для видимого света, но это верно только потому, что оно не заполнено блокирующим свет материалом, таким как пыль или нейтральный газ. Но в ранние времена, до образования достаточного количества звёзд, Вселенная была полна нейтрального газа, который не был полностью ионизирован ультрафиолетовым излучением звёзд. В результате большая часть света, который мы видим, заслоняется этими нейтральными атомами, и только после образования достаточного количества звёзд Вселенная становится полностью реионизованной.<br>\r\n<br>\r\nОтчасти именно поэтому инфракрасные телескопы, такие как новейший флагман НАСА JWST, так важны для изучения ранней Вселенной: существует «граница», за которой мы не можем видеть на привычных нам длинах волн.<br>\r\n<br>\r\nНа расстоянии 31 миллиарда световых лет, что соответствует времени всего 550 миллионов лет после Большого взрыва, мы достигаем края того, что мы называем реионизацией: когда большая часть Вселенной становится в основном прозрачной для оптического света. Реионизация — процесс постепенный и происходил неравномерно; во многом она похожа на неровную, пористую стену. В некоторых местах реионизация происходила раньше, именно так Хаббл обнаружил <a href=\"https://ru.wikipedia.org/wiki/GN-z11\">самую удалённую галактику</a> (на расстоянии 32 миллиардов световых лет, всего через 407 миллионов лет после Большого взрыва), но другие регионы останутся заполненными частично нейтральным газом, пока не пройдёт почти миллиард лет.<br>\r\n<br>\r\nТеперь JWST пошёл ещё дальше, показав нам галактики уже через 330 миллионов лет после Большого взрыва, где они всё ещё выглядят большими, развитыми и не совсем «девственными» с точки зрения элементов, которые в них присутствуют. Должно быть, звёзды и галактики всё ещё существуют за пределами даже того, что JWST показал нам до сих пор.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/co/pw/23/copw23z-bufi2us9jzagkbqzvje.jpeg\" data-src=\"https://habrastorage.org/webt/co/pw/23/copw23z-bufi2us9jzagkbqzvje.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\nГалактики, сравнимые с современным Млечным Путём, часто встречаются на протяжении всей истории космоса. Более молодые галактики в массе своей меньше, голубее, хаотичнее, богаче газом и имеют более низкую плотность тяжёлых элементов, чем их современные аналоги, а темпы звездообразования меняются с течением времени.<br>\r\n <br>\r\nОднако за границами возможностей наших современных телескопов мы всё ещё можем засечь косвенные признаки формирования звёзд: через излучение света самими атомами водорода, которое случается только при формировании звёзд — когда происходит ионизация, а затем свободные электроны рекомбинируются с ионизированными ядрами, излучая в результате свет.<br>\r\n<br>\r\nВозвращаясь ещё дальше назад, мы вполне ожидаем найти там дополнительные «края» Вселенной, представляющие интерес. На расстоянии 44 миллиардов световых лет излучение от Большого взрыва было настолько горячим, что стало видимым: если бы тогда существовал человеческий глаз, он смог бы увидеть, как это излучение начинает светиться красным цветом, подобно раскалённой поверхности. Это соответствует времени всего лишь 3 миллиона лет после Большого взрыва.<br>\r\n<br>\r\nЕсли мы вернёмся на расстояние 45,4 миллиарда световых лет, то окажемся во времени, когда после Большого взрыва прошло всего 380 000 лет. В этот момент становится слишком жарко для стабильного существования даже нейтральных атомов. Именно отсюда берёт начало оставшееся после Большого взрыва свечение – реликтовое излучение. Если вы когда-либо видели знаменитую фотографию горячих (красных) и холодных (синих) пятен со спутника «Планк» (см. ниже), то это именно то место, откуда берёт своё начало это излучение.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/d3/yl/o5/d3ylo52n0h9v8v0uce4junhthmi.jpeg\" data-src=\"https://habrastorage.org/webt/d3/yl/o5/d3ylo52n0h9v8v0uce4junhthmi.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\nА до этого, на расстоянии 46 миллиардов световых лет, мы подходим к самым ранним стадиям: ультраэнергетическому состоянию горячего Большого взрыва, где были созданы первые атомные ядра, протоны и нейтроны, и даже первые стабильные формы материи. На этих стадиях всё представляет собой «первобытный космический суп», где каждая существующая частица и античастица могли быть созданы только из чистой энергии.<br>\r\n<br>\r\nОднако то, что находится за границей этого высокоэнергетического «супа», остаётся загадкой. У нас нет прямых свидетельств того, что происходило на этих ранних стадиях, хотя многие предсказания теории космической инфляции получили косвенное подтверждение. Край Вселенной, каким он представляется нам, уникален для нашей перспективы; мы можем видеть на 13,8 миллиарда лет назад во всех направлениях, и эта картинка зависит от пространственно-временного положения наблюдателя, который смотрит на неё.<br>\r\n<br>\r\nУ Вселенной много краёв: край прозрачности, край звёзд и галактик, край нейтральных атомов и край нашего космического горизонта от самого Большого взрыва. Мы можем заглянуть так далеко, как только позволяют наши телескопы, но всегда будет существовать фундаментальный предел. Даже если само пространство бесконечно, количество времени, прошедшее с момента горячего Большого взрыва, не бесконечно. Сколько бы мы ни старались, всегда будет существовать «край», за который мы никогда не сможем заглянуть.<br>\r\n<br>\r\n<a href=\"http://ruvds.com/ru-rub?utm_source=habr&amp;utm_medium=article&amp;utm_campaign=ru_vds&amp;utm_content=kak_vyglyadit_kraj_vselennoj\"><img src=\"https://habrastorage.org/r/w780q1/webt/hc/88/sb/hc88sbzi7apcmcvqt2icby4azas.jpeg\" data-src=\"https://habrastorage.org/webt/hc/88/sb/hc88sbzi7apcmcvqt2icby4azas.jpeg\" data-blurred=\"true\"></a>', 3, '2023-06-12 22:02:47', 864613, 106, '/ru/companies/ruvds/articles/740806/', 'Уверен, что большинство тех, кто читает и пишет на хабре, постоянно чему-нибудь да обучаются. Современный мир таков, что знания, особенно в областях, где развитие идёт с большой скоростью, если не устаревают окончательно, то становятся менее актуальными. И сразу появляются новые знания, который также нужно освоить. Впрочем, это же интересно!Но есть один нюанс - чтобы усваивать новые знания и навыки, одного желания часто мало, нужны ещё основы, базовые знания, которые были получены в школе, вузе, самостоятельно, но желательно, чтобы они складывались в систему. Собственно, поэтому образование в тех же вузах часто и называют системным. Да, оно не всегда таким бывает, но всё-таки бывает.К чему длительное вступление? Сейчас поясню.  ');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(215, 'Создание элементов в лаборатории помогло лучше разобраться в природе нейтронных звёзд', '<div class=\"oembed\"><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/648248440e9e1c486a5e2277\" data-style=\"\" id=\"648248440e9e1c486a5e2277\" width=\"\"><br>\r\nПод руководством астрофизика-ядерщика Келли Чипс из Окриджской национальной лаборатории Министерства энергетики учёные, работающие в лаборатории, создали характерную ядерную реакцию, которая происходит на поверхности нейтронной звезды, поглощающей массу звезды-компаньона. Их достижение улучшает понимание звёздных процессов, порождающих различные ядерные изотопы.<br>\r\n<br>\r\n«Нейтронные звезды очень интересны с точки зрения как ядерной физики, так и астрофизики, — сказала Чипс, возглавлявший исследование, которое было <a href=\"https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.130.212701\" rel=\"nofollow noopener noreferrer\">опубликовано</a> в журнале Physical Review Letters. «Более глубокое понимание их динамики может помочь раскрыть космические рецепты элементов во всем — от людей до планет».<br>\r\n<a name=\"habracut\"></a><br>\r\n<img src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/1ed/d9b/49c/1edd9b49c5ecaaac5b56da45c12996a7.png\" data-src=\"https://habrastorage.org/getpro/habr/post_images/1ed/d9b/49c/1edd9b49c5ecaaac5b56da45c12996a7.png\"><br>\r\n<i>Ведущий учёный JENSA Келли Чипс из ORNL использует детекторы высокого разрешения для спектроскопии лёгких элементов, вылетающих из мишени во время ядерных реакций</i><br>\r\n <br>\r\nЧипс возглавляет группу «Реактивные эксперименты по ядерной структуре и астрофизике» [<a href=\"https://gcc02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fjensa.ornl.gov%2F&amp;data=05%7C01%7Cwilliamsjl2%40ornl.gov%7Ce47000aa29934b0e2a7a08db4bcfd1bd%7Cdb3dbd434c4b45449f8a0553f9f5f25e%7C1%7C0%7C638187128232226735%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4\" rel=\"nofollow noopener noreferrer\">Jet Experiments in Nuclear Structure and Astrophysics</a>], или JENSA, в которой работают сотрудники из девяти институтов в трёх странах. Команда использует уникальную газоструйную мишень, для которой используется струя гелия самой высокой плотности в мире среди экспериментов на ускорителях. Таким образом можно изучать ядерные реакции, физика которых одинакова как на Земле, так и в космосе.<br>\r\n<br>\r\nВ процессе нуклеосинтеза создаются новые атомные ядра. Один элемент может превратиться в другой, когда ядра захватывают протоны или нейтроны, обмениваются ими или отбрасывают.<br>\r\n<br>\r\nНейтронная звезда обладает огромным гравитационным притяжением, и может захватывать водород и гелий с соседней звезды. Эти вещества накапливаются на поверхности нейтронной звезды, пока не воспламенятся в череде взрывов, в результате которых образуются новые химические элементы.<br>\r\n<br>\r\nМногие ядерные реакции, приводящие в действие эти взрывы, остаются неизученными. Теперь в лаборатории Мичиганского государственного университета сотрудники JENSA провели одну из таких ядерных реакций. Она накладывает прямые ограничения на теоретическую модель, обычно используемую для предсказания образования элементов, и улучшает понимание звёздной динамики, в результате которой образуются изотопы.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/getpro/habr/post_images/4d3/596/c57/4d3596c576236f2da8b7b45fe3df8ba2.jpg\" data-src=\"https://habrastorage.org/getpro/habr/post_images/4d3/596/c57/4d3596c576236f2da8b7b45fe3df8ba2.jpg\" data-blurred=\"true\"><br>\r\n<i>Исследователи ORNL Майкл Смит, Стивен Пейн и Келли Чипс используют JENSA, уникальную газоструйную систему, для лабораторных исследований ядерных реакций, которые также происходят в бинарных системах с нейтронными звёздами.</i><br>\r\n<br>\r\nСистема JENSA, построенная в ORNL, а теперь находящаяся на установке для пучков редких изотопов, которой управляет Мичиганский университет, обеспечивает <a href=\"https://www.ornl.gov/news/stellar-idea\" rel=\"nofollow noopener noreferrer\">мишень из лёгкого газа</a> — плотного, чистого и локализованного в пределах пары миллиметров. JENSA также станет основной мишенью для сепаратора реакций захвата [Separator for Capture Reactions], или SECAR, детекторной системы на FRIB, которая позволит специалистам по экспериментальной ядерной астрофизике непосредственно измерять реакции, приводящие к взрыву звёзд. Соавтор Майкл Смит из ORNL и Чипс — члены проектной группы SECAR.<br>\r\n<br>\r\nВ ходе текущего эксперимента учёные поразили мишень из альфа-частиц (ядер гелия-4) пучком аргона-34. (Число у изотопа указывает на общее количество протонов и нейтронов в ядре). В результате этого синтеза образовались ядра кальция-38, которые имеют 20 протонов и 18 нейтронов. Поскольку эти ядра были возбуждены, они выбросили протоны и в итоге превратились в ядра калия-37.<br>\r\n<br>\r\nДетекторы заряженных частиц высокого разрешения, окружающие газовую струю, точно измерили энергию и углы разлёта продуктов протонной реакции. В измерениях использовались детекторы и электроника, разработанные в ORNL под руководством физика-ядерщика Стивена Пейна. Учитывая сохранение энергии и импульса, физики провели обратный расчёт, чтобы выяснить динамику реакции.<br>\r\n<br>\r\n«Мы не только знаем, сколько реакций произошло, но и знаем удельную энергию, с которой в конечном итоге образовалось ядро калия-37, а это один из компонентов, предсказанных теоретической моделью», — сказал Чипс.<br>\r\n<br>\r\nЛабораторный эксперимент улучшает понимание ядерных реакций, происходящих при падении материала на поверхность нейтронных звёзд определённого типа. Такие звезды рождаются, когда у массивной звезды заканчивается топливо и она коллапсирует в сферу диаметром всего в несколько километров. Затем гравитация прижимает фундаментальные частицы так близко друг к другу, как они только могут, создавая самую плотную материю, которую мы можем непосредственно наблюдать. Одна чайная ложка нейтронной звезды весит столько же, сколько обычная гора. Нейтронные звезды обычно быстро вращаются, и служат самыми сильными магнитами во Вселенной. У них твёрдая корка, окружающая жидкие ядра, содержащие материал в форме спагетти, из-за чего их прозвали «ядерной пастой».<br>\r\n<br>\r\n«Поскольку нейтронные звезды такие странные, они представляют собой полезные естественные лаборатории для проверки того, как нейтронная материя ведёт себя в экстремальных условиях», — сказал Чипс.<br>\r\n<br>\r\nДля достижения такого понимания требуется командная работа. Астрономы наблюдают за звездой и собирают данные. Теоретики пытаются понять физику внутри звезды. Физики-ядерщики измеряют ядерные реакции в лаборатории и проверяют их на соответствие моделям и симуляциям. Этот анализ позволяет уменьшить большие погрешности, возникающие из-за недостатка экспериментальных данных. «Когда вы собираете все эти вещи вместе, вы реально начинаете понимать, что происходит», — сказал Чипс.<br>\r\n<br>\r\n«Поскольку нейтронная звезда сверхплотная, её огромная гравитация может перетянуть водород и гелий со звезды-компаньона. Когда этот материал падает на поверхность, плотность и температура становятся настолько высокими, что может произойти термоядерный взрыв, который способен распространиться по всей поверхности», — сказал Чипс. Термоядерный взрыв превращает ядра в более тяжёлые элементы. «Цепочка реакций может привести к образованию десятков элементов».<br>\r\n<br>\r\nПоверхностные взрывы не уничтожают нейтронную звезду, которая возвращается к тому, что делала раньше: питается от своего спутника и порождает новые взрывы. Повторные взрывы втягивают в себя материал коры, создавая причудливый состав, в котором тяжёлые элементы, образовавшиеся во время предыдущих взрывов, реагируют с лёгкими водородом и гелием.<br>\r\n<br>\r\nТеоретические модели предсказывают, какие элементы образуются таким образом. Учёные обычно анализируют реакцию, которую измерила команда JENSA, с помощью статистической теоретической модели, «формализма Хаузера-Фешбаха», который предполагает, что в реакции может участвовать континуум возбуждённых энергетических уровней ядра. В других моделях вместо этого предполагается, что в реакции участвует только один энергетический уровень.<br>\r\n<br>\r\n«Мы ищем момент перехода от достоверной к недостоверной статистической модели, — сказала Чипс. — Мы хотим понять, где происходит этот переход. Поскольку модель Хаузера-Фешбаха – это статистический формализм, то есть она опирается на наличие большого числа энергетических уровней, так, что эффекты на каждом отдельном уровне усредняются — мы ищем, где это предположение начинает разрушаться. Ожидается, что у таких ядер, как магний-22 и аргон-34 будет недостаточно уровней, чтобы этот подход к усреднению был верен. Мы хотели это проверить».<br>\r\n<br>\r\nОстаётся вопрос о том, действительна ли статистическая модель для подобных реакций, происходящих в звёздах, а не в земных лабораториях. «Наш результат показал, что статистическая модель действительна для этой конкретной реакции, и это устраняет огромную неопределённость в нашем понимании нейтронных звёзд, — сказала Чипс. — Это означает, что теперь мы лучше понимаем, как протекают эти ядерные реакции».<br>\r\n<br>\r\nДалее исследователи попытаются улучшить статистическую модель путём дальнейшего испытания её пределов. В одной из прошлых работ исследовалось ядро магния атомной массы 22, и оказалось, что предсказания модели отличаются от реальности почти в 10 раз. Нынешняя работа, проведённая под руководством ORNL, исследующая ядра с атомной массой на 12 единиц выше этой, показала, что модель правильно предсказывает скорость реакции.<br>\r\n<br>\r\n«Где-то между [атомными] массами 20 и 30 происходит переход от достоверной к недостоверной статистической модели, — сказала Чипс. — Следующим шагом будет поиск реакций в середине этого диапазона, чтобы увидеть, где происходит этот переход». Чипс и её коллеги из JENSA приступили к этой работе.', 3, '2023-06-12 22:02:48', 209609, 106, '/ru/articles/740798/', 'Гипотеза панспермии (хаотичное распространение жизни во Вселенной в результате переноса биомолекул с одной планеты на другую) была впервые сформулирована в 1865 году немецким учёным Германом Рихтером, но отношение к ней до сих пор немного снисходительное. Действительно, Рихтер бездоказательно (чисто логически) расширил таким образом теорию эволюции Чарльза Дарвина, которой весьма интересовался. Может показаться, что гипотеза панспермии — это уход от ответа, переносящий происхождение жизни «куда-то ещё». Тем не менее, поиски обоснования панспермии позволили убедиться, что органика (вплоть до аминокислот) во Вселенной достаточно распространена. Особый интерес в качестве межзвёздных резерватов органики представляют экзотические кометы, а также теплые протопланетные облака, именуемые «звёздными яслями». '),
(216, 'Простые средства наблюдения за небесными телами', '<a href=\"https://habr.com/ru/companies/ruvds/articles/739738/\"><div style=\"text-align:center;\"><img src=\"https://habrastorage.org/r/w780q1/webt/dp/c8/-t/dpc8-tnilztiqpr3x7nfbyoulya.jpeg\" data-src=\"https://habrastorage.org/webt/dp/c8/-t/dpc8-tnilztiqpr3x7nfbyoulya.jpeg\" data-blurred=\"true\"></a><i><font color=\"#999999\">Картинка: Мосфильм, х/ф «Карнавальная ночь»</font></i><br>\r\n<br>\r\nПогружённые в свои будничные проблемы мы редко смотрим вверх, однако есть целый круг увлечённых людей, которые существенную часть своего времени живут со взором, обращённым к небу и именно от них мы получаем интересные наблюдения о новых небесных телах, явлениях и просто красивые фотографии, которые дают нам понимание того, насколько Земля мала и насколько «велика вокруг бездна»…<br>\r\n<br>\r\n<a name=\"habracut\"></a><blockquote>Небольшой спойлер от автора: дальше последует некоторый результат моих исследований этой темы. Суждения в тексте ниже могут быть где-то верны, где-то ошибочны, а где-то недостаточно подробны. В любом случае, надеюсь, что будет интересно!</blockquote><br>\r\nНаблюдения за небесными телами невооружённым взглядом, наталкиваются на ограничения человеческого зрения, не позволяющие ему осуществлять полноценное познание далёких, малых и тусклых объектов, ввиду их дальнего расположения относительно Земли.<br>\r\n<br>\r\nИ тут на помощь человеку приходят различные средства для наблюдения, которые благодаря содержанию в своём составе сложных оптических компонентов, сложили вокруг себя ореол достаточно дорогих устройств, доступных только ограниченному кругу людей. Но так ли всё плохо? Попробуем разобраться…<br>\r\n<br>\r\n<h2><font color=\"#3AC1EF\">▍ Телескоп</font></h2><br>\r\nКогда речь заходит о наблюдениях за далёкими космическими объектами, то в первую очередь вспоминается такое устройство, как телескоп, который в самом простом своём варианте может выглядеть как труба круглого сечения, где на одном конце трубы расположен так называемый объектив, который представляет собой одну линзу или систему линз, назначение которой(ых) заключается в сборе максимально большого количества света от удалённых объектов.<br>\r\n<br>\r\nНа другом конце трубы находится окуляр, имеющий своей целью сконцентрировать собранный объективом свет, чтобы создать хорошо различимое человеческим глазом изображение наблюдаемых объектов.<br>\r\n<br>\r\nГоворят даже что во сколько раз больше размер объектива площади зрачка, во столько же раз больше он соберёт света.<br>\r\n<br>\r\nПри сборке самодельного телескопа следует озаботиться тем, чтобы объектив был хорошего качества, без царапин, правильной геометрии, желательно круглый.<br>\r\n<br>\r\nКроме того, нужно учитывать, что, так как и объектив и окуляр представляют собой единую оптическую систему, то они должны как располагаться на определённом расстоянии, так и быть, хорошо взаимно отцентрованы. Воображаемая прямая линия, которая проходит через центры объектива и окуляра — называется оптической осью.<br>\r\n<br>\r\nГоворя о типах оптических телескопов — их можно подразделить на две большие группы, одна из которых называется рефракторами, так как у них изображение объекта создаётся с помощью преломление лучей в линзах; в то время как вторая группа называется рефлекторами, так как они создают изображение объекта с помощью отражения лучей от вогнутого зеркала.<br>\r\n<br>\r\nТелескопы такого второго типа является достаточно сложными в изготовлении для самодельщиков, так как для получения чёткого изображения требуется зеркало хорошей геометрии и полировки.<br>\r\n<br>\r\nИ поэтому далее мы поговорим о компонентах самодельного телескопа-рефрактора.<br>\r\n<br>\r\n<h2><font color=\"#3AC1EF\">▍ Объектив</font></h2><br>\r\nВ качестве объектива можно использовать либо двояковыпуклую, либо вогнуто-выпуклую линзу. Можно отметить, что в хороших телескопах, в качестве объектива используется не одна линза, а целая система линз (это позволяет устранить недостатки простого типа объективов).<br>\r\n<br>\r\nКстати говоря, объектив именно потому и называется так, потому что является средством наблюдения за объектом, а, соответственно, окуляр, — окуляром, так как он обращён в сторону глаза наблюдателя.<br>\r\n<br>\r\nДля простоты и наглядности, будем считать, что объектив, направленный в сторону звезды, собирает от неё свет, в виде лучей, идущих параллельно, которые проходя сквозь него и преломляясь, собираются в единую точку на некотором расстоянии, которую принято называть фокусом объектива, в то время как расстояние от этой точки до самого объектива называется фокусным расстоянием:<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/i8/5w/ha/i85whasrzhzugq2c50fvcbt15ow.jpeg\" data-src=\"https://habrastorage.org/webt/i8/5w/ha/i85whasrzhzugq2c50fvcbt15ow.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\nОднако, это чисто умозрительная конструкция, так как качество схождения лучей в единую точку зависит от качеств самого объектива (которые, естественно, не являются абсолютными), поэтому в реальности лучи не сойдутся идеально, что создаст некоторую степень размытости изображения объекта.<br>\r\n<br>\r\nВ целом же, причинами возникновения такого размытого изображения можно считать:<br>\r\n<br>\r\n<ul>\r\n<li>лучи, проходящие через центральные области объектива — создадут изображение, которое будет более далеко расположено от поверхности объектива, в то время как лучи, проходящие по периметру, находящееся более близко к нему. Такой тип искажения называется сферической аберрацией.</li>\r\n<li>так как белый свет представляет собой смесь разных длин волн видимого спектра, то он может быть разложен на эти цветные компоненты, что обычно наблюдается при использовании призм, а так как любая линза представляет собой, по сути, как бы объединение множества призм, то белый свет, проходя сквозь неё, подвергается некоторому разложению на компоненты. Причём, чем ближе спектральный компонент расположен к фиолетовой части спектра, тем он преломляется сильнее, в то время как если ближе к красной части спектра, — то меньше. Практическим следствием этого является то, что фиолетовая часть спектра будет образовывать фокус ближе к объективу, в то время как красный свет спектра будет образовывать фокус дальше от объектива, таким образом, на выходе мы получим изображение, в той или иной степени имеющее радужные оттенки и подобное явление носит название хроматической аберрации.</li>\r\n</ul><br>\r\nПоэтому не стоит удивляться при появлении подобных искажений во время постройки самодельного простого телескопа.<br>\r\n<br>\r\nВ старой литературе, в качестве подобной линзы для объектива рекомендуется использовать обычные выпуклые очковые линзы, преимущественно круглые (диаметром 4-5 см). Там же преимущественно предлагается использовать линзы с оптической силой в одну диоптрию, что, другими словами, означает, что фокусное расстояние этой линзы составляет 1 метр.<br>\r\n<br>\r\nВ качестве вынужденной альтернативы можно использовать линзы в 0,5 — 2 диоптрии (от этого будет меняться только длина телескопа, так как фокусное расстояние составит 0,5 — 2м).<br>\r\n<br>\r\nПри этом не рекомендуется брать линзу, с фокусным расстоянием более 2м, так как телескоп получится очень длинным и с ним будет сложно работать, а также менее 0,5м, как он будет давать слишком малое увеличение.<br>\r\n<br>\r\nЕсли у вас уже имеется какая-либо иная линза, необходимо будет выяснить её фокусное расстояние, что можно легко сделать, если в солнечный день попытаться сфокусировать изображение солнца на какой-либо поверхности, чтобы изображение солнца было максимально чётким и контрастным — при этом расстояние до этой поверхности и будет являться фокусным расстоянием. То же самое можно проделать и с использованием любого источника света, например, настольной лампы.<br>\r\n<br>\r\n<h2><font color=\"#3AC1EF\">▍ Окуляр</font></h2><br>\r\nКак мы уже говорили выше, телескоп представляет собой оптическую систему как минимум из двух компонентов: объектива и окуляра:<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/9c/ok/nt/9cokntx9ffx13nezcwsjakv-vik.jpeg\" data-src=\"https://habrastorage.org/webt/9c/ok/nt/9cokntx9ffx13nezcwsjakv-vik.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\nОкуляры принято делить по их силе, то есть по тому, насколько они могут увеличивать. При этом следует учитывать, что окуляры, дающие большое увеличение (в сотни раз), возможно применять только с большими качественными объективами, так как если объектив маленький и не может собрать достаточно много света, то, если попытаться разглядывать получаемое с его помощью изображение в сильный окуляр, естественно, что наблюдаемое изображение будет весьма плохого качества.<br>\r\n<br>\r\nНужно изначально смириться с тем, что самодельный телескоп будет обладать довольно посредственным качеством, поэтому не следует пытаться получаемое с помощью его объектива изображение — существенно увеличивать, применяя сильный окуляр. Поэтому можно просто-напросто, взять небольшую лупу, наподобие тех, которые используют часовые мастера, одевая их на один глаз во время работы.<br>\r\n<br>\r\nВ принципе, можно использовать подходящие линзы, с фокусным расстоянием, находящимся в пределах от 2 до 5 см. При этом линзы с фокусным расстоянием менее 2 см не рекомендуется использовать, так как они будут давать слишком большое увеличение, в противовес этому, линзы с фокусным расстоянием более 5 см также не рекомендуется использовать, так как они будут давать слишком малое увеличение.<br>\r\n<br>\r\nВ целом, увеличение всей системы состоящей из объектива и окуляра можно узнать, если разделить фокусное расстояние объектива, на фокусное расстояние окуляра. Например, если фокусное расстояние окуляра составляет 100 см, а окуляра 2 см, то можно сказать, что на этой системе можно получить увеличение в 50 раз (100:2). Кстати говоря, вся описываемая ниже информация (для удобства) дана для случая, когда мы строим телескоп с объективом в одну диоптрию (т.е. его фокусное расстояние равно 1 метру).<br>\r\n<br>\r\n<h2><font color=\"#3AC1EF\">▍ Труба и крепёж в ней</font></h2><br>\r\nСамый простой способ изготовления трубы телескопа представляет собой её склеивание из листов бумаги. Единственный момент, который здесь нужно учесть, что листы бумаги должны быть достаточно большими, чтобы не пришлось сделать сборные трубки, соединённые муфтами. Кроме того, рекомендуется для внутренних частей телескопа использовать глянцевую бумагу, а внешние части трубок покрывать лаком или краской для долговечности (но это классический вариант изготовления из бумаги, в наше же время, возможно, имеет смысл посмотреть в сторону разнообразных пластиковых труб, имеющихся в изобилии в любом хозяйственном магазине. Только, наверное, возникнет проблема в таком случае с соосностью объектива и окуляра, так как трубы никто не проектировал для использования в качестве телескопов и придётся как-то решать эту проблему).<br>\r\n<br>\r\nСамодельный телескоп по большому счёту представляет собой, в классическом варианте, внешнюю трубку, в которой укреплён тем или иным способом объектив, и внутреннюю небольшую трубочку, в которой укреплён окуляр и которая может перемещаться относительно внешней трубки, находясь внутри неё.<br>\r\n<br>\r\nПри этом рекомендуется изготовление начинать с создания именно окулярной трубки, которая должны иметь длину порядка 50 см (здесь и далее, как было уже сказано выше, подразумевается создание телескопа, с объективом в одну диоптрию; в вашем случае, размеры могут быть иными).<br>\r\n<br>\r\nВ классическом варианте, при создании трубки окуляра, на деревянную круглую палку, диаметром чуть больше, чем окуляр, наматывается проклеиваемая бумага, слой за слоем (а в случае, если у нас в качестве окуляра служит простая линза, а не окуляр, наподобие лупы, как у часовщиков – палка должна быть на пару миллиметров меньше линзы). При этом самый внутренний её слой, обращённый в сторону деревянной палки, зачерняется. Обычно раньше до этого использовали смесь сажи, спирта и небольшого количества лака, который может быть разведён в спирте. В наше же время имеет смысл упростить этот процесс, например, просто наглухо запечатав чёрной краской на принтере эти листы:<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/o9/ux/ro/o9uxroqsgssxuncjayq6qepocrs.jpeg\" data-src=\"https://habrastorage.org/webt/o9/ux/ro/o9uxroqsgssxuncjayq6qepocrs.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\nПри наматывании слоёв бумаги следует иметь в виду, что конечный диаметр, получившейся в итоге окулярной трубки, должен быть примерно на пару миллиметров меньше, чем диаметр линзы объектива.<br>\r\n<br>\r\nПосле высыхания клея окулярной трубки, прямо на неё, начинают накручивать новые слои бумаги, для создания уже трубки объектива.<br>\r\n<br>\r\nПри этом точно так же, как и с окулярной трубкой, первый слой бумаги, обращённый в сторону окулярной трубки, должен быть зачернён.<br>\r\n<br>\r\nДлина получившийся в итоге трубки объектива должна быть порядка 70 см, а её внешний диаметр должен полностью соответствовать диаметру линзы объектива.<br>\r\n<br>\r\nОбе трубки должны ходить относительно друг друга достаточно плотно, не шататься одна в другой. Если получилось не так, то следует намотать некоторое количество листов бумаги с клеем, на окулярную трубку, чтобы добиться требуемой плотности хождения.<br>\r\n<br>\r\nПосле того как обе трубки изготовлены, можно приступить и к крепежу объектива.<br>\r\n<br>\r\nВкратце — суть крепления объектива заключается в изготовлении ещё одной короткой(6 см) трубки, такой же по внутреннему и внешнему диаметру, как и трубка объектива (изготавливается точно так же, с помощью наматывания на окулярную трубку), а также чуть более длинной трубки, длиной порядка 15 см, которая изготавливается намоткой на трубку объектива.<br>\r\n<br>\r\nПосле чего, внутрь этой более широкой трубки, которая служит муфтой — вкладывается объектив, после чего сверху он прижимается коротким куском трубки, который вставляется уже в эту муфту. Причём эта последняя трубка, которой мы прижали объектив, — должна быть также изнутри зачернена.<br>\r\n<br>\r\nПосле чего нам остаётся только вставить окуляр, в окулярную трубку (если мы используем окуляр, наподобие тех, которые применяют часовые мастера), либо, предварительно учтя это на этапе изготовления окулярной трубки (чтобы её внешний диаметр соответствовал диаметру окулярной линзы, если мы используем линзу, и чтобы она не проваливалась в трубку), применить также систему из прижимной трубочки и муфты:<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/df/nq/mp/dfnqmpxdtahxlsnqrmon3bs2tvo.jpeg\" data-src=\"https://habrastorage.org/webt/df/nq/mp/dfnqmpxdtahxlsnqrmon3bs2tvo.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\nНа этом наш телескоп готов, и мы можем его применять!<br>\r\n<br>\r\nТак как телескоп невозможно вручную удерживать абсолютно неподвижно, чтобы не было тряски, необходимо его закрепить на какой-либо неподвижной стационарной основе, например, на штативе.<br>\r\n<br>\r\nВ ночное время, когда нет солнца, плавно вдвигая/выдвигая окулярную трубку — следует добиться чёткого изображения наблюдаемых объектов. Кстати сказать, нельзя смотреть на солнце и прочие яркие объекты, в подобный телескоп, так это плачевно закончится для зрения.<br>\r\n<br>\r\nПосле настройки и появления изображений звёзд, они будут выглядеть как небольшие точки, не имеющие какого-либо значительного диаметра, это нормально и связано с тем, что находятся они весьма далеко от нас. Положительным моментом является то, что даже в такой телескоп можно будет увидеть многие звёзды, которые не видны невооружённым глазом. Объекты в таком телескопе будут перевёрнуты кверху ногами, однако, в случае наблюдения небесных тел, это не является проблемой.<br>\r\n<br>\r\nСмотреть в телескоп следует одним глазом, прикрыв другой.<br>\r\n<br>\r\n<h2><font color=\"#3AC1EF\">▍ Гелиоскоп</font></h2><br>\r\nНо что делать, если хочется наблюдать за более яркими объектами, например, за солнцем?<br>\r\nВ этом случае потребуется изготовить совершенно другой прибор, который называется гелиоскопом. Вкратце устройство гелиоскопа показано на рисунках ниже (кликабельны):<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/uf/7m/db/uf7mdb9_p7i5j7bllgek-vgtvxc.jpeg\" data-src=\"https://habrastorage.org/webt/uf/7m/db/uf7mdb9_p7i5j7bllgek-vgtvxc.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/wn/xr/bi/wnxrbivjyor683dlej4w1f3pv-w.jpeg\" data-src=\"https://habrastorage.org/webt/wn/xr/bi/wnxrbivjyor683dlej4w1f3pv-w.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\nПринцип его действия основан на том, что в нём происходит значительное ослабление лучей солнца, чтобы получить приемлемую для наблюдения яркость.<br>\r\n<br>\r\nКак можно видеть по картинке выше, гелиоскоп состоит, по сути, из трёх компонентов: уже знакомой нам линзы для очков (силой в одну диоптрию), которая в этом случае служит не для собирания лучей, а для отражения их, — своей вогнутой поверхностью. Лучи солнца, попадая на поверхность вогнутой линзы, проходят сквозь неё, при этом обратно отражается только небольшая их часть. Отражённые лучи попадают на небольшую стеклянную пластинку, закреплённую в оптической оси гелиоскопа, имеющую диаметр в 17 мм и закреплённую под углом в 45° к падающим лучам, находящуюся в фокусе линзы объектива.<br>\r\n<br>\r\nПри этом нужно учесть такой интересный момент, что и стеклянная пластинка и линза объектива отражают не только своей первой плоскостью, но и второй плоскостью, что в случае линзы приводит к появлению второго изображения (при отражении от задней части линзы), находящегося гораздо ближе к линзе. Это изображение нам никак не мешает (в случае линзы) и мы можем это игнорировать. В случае же отражающий стеклянной пластинки, чтобы убрать отражение от второй её стороны, следует наждачной бумагой или иным другим способом заматировать вторую сторону стеклянной пластинки, противоположной стороне, на которую падают лучи от объектива.<br>\r\n<br>\r\nЛучи, отражённые от стеклянной пластинки — собираются окуляром. Несмотря на значительное ослабление, смотреть в окуляр всё равно опасно, поэтому используют дополнительные ухищрения для снижения яркости: одевают на вход в трубу, откуда в неё попадают лучи солнца — затемнённое стекло. Кроме того, используют так называемый гелиостат, который представляет собой также стеклянную пластинку, прозрачную с одной стороны и заматированную с обратной, которая крепится под углом к входной части гелиоскопа, таким образом, чтобы вход его смотрел прямо на пластинку.<br>\r\n<br>\r\nВ конечном счёте, получается, что ослабление силы лучей солнца происходит, как минимум — трёхкратно:<br>\r\n<br>\r\n<ul>\r\n<li>на пластинке гелиостата;</li>\r\n<li>на линзе объектива; </li>\r\n<li>на стеклянной пластинке внутри гелиоскопа.</li>\r\n</ul><br>\r\nКроме того, как было уже сказано, может использоваться дополнительная затемнённая пластинка на входе в гелиоскоп. Также следует упомянуть, что все части трубок, обращённые внутрь — должны быть зачернены.<br>\r\n<br>\r\nПодытоживая, можно сказать, что наблюдение за небесными объектами является весьма увлекательным занятием, к тому же может стать источником открытий, и кто знает, может быть, и в вашу честь назовут что-нибудь? ;-)<br>\r\n<br>\r\nВ статье мы умышленно прошли мимо более сложных в постройке телескопов-рефлекторов, однако, при желании, вы можете ознакомиться с одним из интересных пособий по постройке подобного типа телескопов, где изложена методика построения: Крэйг Д., Барри Р. – «Телескоп Добсонианец».<br>\r\n<br>\r\n<a href=\"http://ruvds.com/ru-rub?utm_source=habr&amp;utm_medium=article&amp;utm_campaign=DAN_SEA&amp;utm_content=prostye_sredstva_nablyudeniya_za_nebesnymi_telami\"><img src=\"https://habrastorage.org/r/w780q1/webt/hc/88/sb/hc88sbzi7apcmcvqt2icby4azas.jpeg\" data-src=\"https://habrastorage.org/webt/hc/88/sb/hc88sbzi7apcmcvqt2icby4azas.jpeg\" data-blurred=\"true\"></a>', 1, '2023-06-12 22:02:48', 568475, 108, '/ru/companies/ruvds/articles/739738/', 'У археологов, палеоантропологов, палеонтологов и других специалистов, работа которых связана с изучением истории происхождения жизни на Земле, предков человека и нашей собственной цивилизации, есть множество вспомогательных инструментов. Но что делать астрономам, которые изучают историю происхождения самой Вселенной? Объекты, которые они исследуют, чаще всего нельзя потрогать, рассмотреть с разных сторон или хотя бы прибыть на место обнаружения для дальнейшего изучения.В этом случае задействуются «инструменты», предоставленные самой Вселенной, включая свет и гравитационные волны. Именно с их помощью удалось восстановить историю «жизни» двух слившихся нейтронных звёзд, обнаруженных астрофизиками в 2017 году в далёкой-далёкой галактике NGC 4993. Подробности — под катом.'),
(217, 'Как выглядит Млечный Путь?', '<img src=\"https://habrastorage.org/r/w780q1/getpro/habr/post_images/4e9/f09/5cb/4e9f095cbab7d1f6c12d663ef95f13be.jpg\" alt=\"image\" data-src=\"https://habrastorage.org/getpro/habr/post_images/4e9/f09/5cb/4e9f095cbab7d1f6c12d663ef95f13be.jpg\" data-blurred=\"true\"><br>\r\n<br>\r\nНачиная с 1610 года, когда знаменитый эрудит эпохи Возрождения Галилео Галилей стал наблюдать за ночным небом с помощью телескопа собственного изготовления, астрономы постепенно поняли, что наша Солнечная система является частью огромного скопления звёзд, известного сегодня как галактика Млечный Путь. К 20 веку у астрономов уже появилось неплохое представление о её размерах и структуре. Выяснилось, что Галактика состоит из центральной выпуклости — <a href=\"https://ru.wikipedia.org/wiki/%D0%91%D0%B0%D0%BB%D0%B4%D0%B6\" rel=\"nofollow noopener noreferrer\">балджа</a>, окружённой вытянутым диском со спиральными рукавами. Но несмотря на всё, что мы уже узнали, описание истинной морфологии Млечного Пути остаётся сложной задачей для астрономов.<br>\r\n<br>\r\nПоскольку мы, наблюдатели, находимся внутри диска Млечного Пути, мы не можем видеть через его центр и посмотреть, что находится с другой стороны. Однако, используя различные методы, астрономы всё ближе подходят к воссозданию вида галактики «с высоты птичьего полёта». Например, группа исследователей из Китайской академии наук (CAS) впервые использовала точное расположение очень молодых объектов в нашей галактике для определения морфологии Млечного Пути. Они увидели множество рукавов — два симметричных рукава во внутренней области и множество рукавов неправильной формы во внешней области.<br>\r\n<a name=\"habracut\"></a><br>\r\nГруппу возглавлял Сюй Е, радиоастроном из обсерватории Пурпурной горы в Нанкине и Школы астрономии и космических наук (SASS) при Университете науки и техники Китая (UCAS). К нему присоединились несколько астрономов и астрофизиков из обсерватории Пурпурной горы, SASS/UCAS и Национальной астрономической обсерватории Китая в Пекине. Статья с описанием их результатов под названием «<a href=\"https://iopscience.iop.org/article/10.3847/1538-4357/acc45c\" rel=\"nofollow noopener noreferrer\">Как выглядит Млечный Путь?</a>» недавно появилась в журнале The Astrophysical Journal.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/getpro/habr/post_images/abc/f43/97c/abcf4397c43d3a88e3db01b77276d2c0.jpg\" data-src=\"https://habrastorage.org/getpro/habr/post_images/abc/f43/97c/abcf4397c43d3a88e3db01b77276d2c0.jpg\" data-blurred=\"true\"><br>\r\n<i>Вид на Млечный Путь (глазами художника). Отмечено расположение Солнца и звездообразующей области (мазерный источник G007.47+00.05) на противоположной стороне в спиральном рукаве Скутум – Центавр </i><br>\r\n<br>\r\nНашими знаниями о структуре Млечного Пути мы во многом обязаны новаторской работе <a href=\"https://ru.wikipedia.org/wiki/%D0%9C%D0%BE%D1%80%D0%B3%D0%B0%D0%BD,_%D0%A3%D0%B8%D0%BB%D1%8C%D1%8F%D0%BC_%D0%A3%D0%B8%D0%BB%D1%81%D0%BE%D0%BD\" rel=\"nofollow noopener noreferrer\">Уильяма У. Моргана</a>, который сыграл важную роль в классификации звёзд и галактик. В 1950-х годах он и его коллеги использовали спектроскопические измерения параллакса звёзд большой массы для составления карты Млечного Пути и обнаружили три коротких сегмента спирального рукава. Вскоре после этого на основе расстояний до облаков нейтрального водорода, полученных кинематическими методами, была составлена карта крупномасштабной структуры, которая показала, что эти спиральные рукава простираются почти по всему галактическому диску.<br>\r\n<br>\r\nОднако было обнаружено, что расстояния до облаков нейтрального водорода измерены с большими погрешностями из-за их особых некруговых движений, что сделало результаты этих ранних исследований ненадёжными. Фотометрические методы гораздо более точны, чем кинематические. Однако их можно использовать только для определения объектов на расстояниях до 2 килопарсек (~6500 световых лет) – или примерно 6,5% диаметра Млечного Пути. По этой причине кинематические методы по-прежнему широко используются для изучения всего Млечного Пути. Это привело к созданию современных карт, включающих четыре основных рукава: рукава Стрельца, Ориона, Персея и Лебедя (по порядку от ближайшего до наиболее удалённого от галактического центра).<br>\r\n<br>\r\nНесмотря на усовершенствование кинематических и оптических методов, определение структуры Млечного Пути остаётся серьёзной проблемой для астрономов. В связи с этим продолжаются споры по таким основным вопросам, как количество рукавов, существование некоторых спиральных рукавов и общий размер Млечного Пути (оценки имеют погрешность в 3 590 световых лет). Как сказал Йе, лучший способ разрешить эти дебаты — использовать молодые звезды в качестве «спиральных маркёров», что позволит получить точные данные по расстояниям:<br>\r\n<br>\r\n«Прямое картирование спиральной структуры Млечного Пути оказалось непростым делом. Помогают прослеживать спиральные рукава галактик регионы звездообразования и молодые звезды. Зная расстояния до областей звездообразования или молодых звёзд, можно определить их местоположение в трёх измерениях и построить плоскостной вид — вид сверху диска Млечного Пути. Астрономы могут понять Млечный Путь, только если узнают расстояния до молодых объектов, поэтому методы измерения расстояний очень важны».<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/getpro/habr/post_images/8fb/9c7/dff/8fb9c7dfff54a78834e44efabbca842d.jpg\" data-src=\"https://habrastorage.org/getpro/habr/post_images/8fb/9c7/dff/8fb9c7dfff54a78834e44efabbca842d.jpg\" data-blurred=\"true\"><br>\r\n<i>Инфракрасное изображение Мессье 81, полученное космическим телескопом Спитцер</i><br>\r\n<br>\r\nУ галактик, похожих на Млечный Путь, спиральные рукава состоят из двух основных компонентов: спирального узора, получающегося из более старого звёздного населения, и областей разреженного или уплотнённого межзвёздного газа и молодых объектов. К ним относятся области звездообразования высокой массы, массивные O-B звезды, области межзвёздного водородного газа, молодые открытые скопления и другие. С начала века астрономы добились значительного прогресса в измерении структуры Млечного Пути с помощью молодых объектов.<br>\r\n<br>\r\nВо многом это связано с появлением интерферометрии с очень длинной базовой линией, которая позволила точно измерить расстояние до звездообразующих регионов по всей Галактике с помощью тригонометрического параллакса. Обсерватория Gaia ЕКА также предоставила точные данные о правильном движении и расстоянии многих молодых звёзд, что помогло астрономам определить спиральную структуру галактики в окрестностях Солнечной системы. Сочетание более точных измерений расстояния и скорости привело Ю и его коллег к некоторым интересным выводам. Как пояснил он:<br>\r\n<br>\r\n«Традиционно можно построить простую модель скорости вращения звёзд и звездообразующего газа как функцию расстояния от центра Млечного Пути. Затем, измерив компонент скорости вращения звезды или газа в пределах прямой видимости, можно определить расстояние до неё, сопоставив результаты наблюдений с предсказаниями модели (то есть кинематическое расстояние).<br>\r\n<br>\r\nИспользуя точные данные о местоположении очень молодых объектов, предоставленные проектами BeSSeL и VERA (VLBI) и спутником Gaia компании ESO, мы впервые обнаружили, что у нашей Галактики многорукавная морфология, состоящая из двухрукавной симметрии во внутренних частях и распространяющаяся на внешние области, где есть несколько длинных и нерегулярных рукавов».<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/getpro/habr/post_images/d23/252/69d/d2325269d863791f4ea4481392a74b48.jpg\" data-src=\"https://habrastorage.org/getpro/habr/post_images/d23/252/69d/d2325269d863791f4ea4481392a74b48.jpg\" data-blurred=\"true\"><br>\r\n<i>На этом снимке, сделанном космическим телескопом Хаббл, изображена <a href=\"https://ru.wikipedia.org/wiki/%D0%A4%D0%BB%D0%BE%D0%BA%D0%BA%D1%83%D0%BB%D0%B5%D0%BD%D1%82%D0%BD%D0%B0%D1%8F_%D1%81%D0%BF%D0%B8%D1%80%D0%B0%D0%BB%D1%8C%D0%BD%D0%B0%D1%8F_%D0%B3%D0%B0%D0%BB%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B0\" rel=\"nofollow noopener noreferrer\">флоккулентная спиральная галактика</a> NGC 4237.</i><br>\r\n<br>\r\nСогласно результатам, полученным командой, структура Млечного Пути состоит из рукавов Персея и Нормы во внутренней области и рукавов Центавра, Стрельца, Карины, Внешнего и Местного рукавов во внешней области. Эти выводы подтверждаются наблюдениями за внешними спиральными галактиками, которые по своей морфологии делятся на три различные категории. К ним относятся <a href=\"https://ru.wikipedia.org/wiki/%D0%A1%D0%BF%D0%B8%D1%80%D0%B0%D0%BB%D1%8C%D0%BD%D0%B0%D1%8F_%D0%B3%D0%B0%D0%BB%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B0_%D1%81_%D1%83%D0%BF%D0%BE%D1%80%D1%8F%D0%B4%D0%BE%D1%87%D0%B5%D0%BD%D0%BD%D0%BE%D0%B9_%D1%81%D1%82%D1%80%D1%83%D0%BA%D1%82%D1%83%D1%80%D0%BE%D0%B9\" rel=\"nofollow noopener noreferrer\">галактики с упорядоченной структурой</a>, многорукавные и флоккулентные галактики — они различаются по выраженности структуры их спиральных рукавов.<br>\r\n<br>\r\nВ то время как у упорядоченных галактик, таких как M81 (см. выше), есть чётко выраженные спиральные рукава, многорукавные флоккулентные галактики, такие как NGC 4237 (см. выше), более пёстрые, а спиральные рукава у них прерывистые, что придаёт им более «пушистый» [flock] вид. Кроме того, почти не нашлось галактик, у которых наблюдались бы четыре спиральных рукава, простирающихся от центров к их внешним областям. Как резюмировал Ю:<br>\r\n<br>\r\n«В нашей работе, основывающейся на высокоточных данных о различных молодых объектах, мы обнаружили, что Млечный Путь — многорукавная галактика. В этом заключается ключевое отличие нашей карты от существующих карт, что даёт возможную альтернативу для будущих исследований структуры Галактики. Кроме того, у 83% многорукавных внешних галактик есть два чётко выраженных внутренних рукава. Поэтому в данном случае морфология нашей Галактики схожа с морфологией большинства многорукавных галактик во Вселенной. Короче говоря, наши результаты указывают на то, что спиральная структура Млечного Пути может быть не столь уникальной, как считалось ранее».<br>\r\n<br>\r\nУ этих выводов могут оказаться серьёзные последствия для нашего понимания Млечного Пути. Приятно также осознавать, что с точки зрения морфологии наша галактика не флуктуация, а пример статистически значимого астрономического объекта.', 3, '2023-06-12 22:02:49', 192532, 106, '/ru/articles/739926/', 'Астрономы объединили снимки космических телескопов «Джеймс Уэбб», «Чандра» (рентгеновский спектр), «Хаббл» (видимый спектр), «Спитцер» (ИК-спектр) и наземного телескопа New Technology Telescope (NWT, видимый спектр) для получения составных изображений двух галактик, туманности и скопления. Полученные данные отобразили в видимых человеческому глазу цветах, получив в итоге новый взгляд на уже известные космические объекты.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(218, 'Дайджест научпоп-новостей за неделю, о которых мы ничего не писали', '<h2><a href=\"https://www.sciencealert.com/a-craft-has-flown-close-enough-to-the-sun-to-detect-the-source-of-elusive-solar-winds\" rel=\"nofollow noopener noreferrer\">Космический зонд пролетел достаточно близко к Солнцу, чтобы обнаружить источник неуловимых солнечных ветров</a></h2><br>\r\n<img src=\"https://habrastorage.org/r/w780q1/getpro/habr/post_images/05f/306/937/05f3069371468c275c90f9ded7fd4827.jpg\" data-src=\"https://habrastorage.org/getpro/habr/post_images/05f/306/937/05f3069371468c275c90f9ded7fd4827.jpg\" data-blurred=\"true\"><br>\r\n<i>Корональная дыра в трёх ультрафиолетовых диапазонах волн, полученная обсерваторией солнечной динамики НАСА в 2013 году </i><br>\r\n<br>\r\nИсточник солнечного ветра, дующего вблизи поверхности светила <a href=\"https://www.nature.com/articles/s41586-023-05955-3\" rel=\"nofollow noopener noreferrer\">найден</a> солнечным зондом Parker Solar Probe. В ноябре 2021 года зонд пронёсся на расстоянии около 8,5 миллионов километров от Солнца, что позволило ему определить тонкую структуру солнечного ветра, который выбрасывает тонны заряженных частиц в Солнечную систему через дыру в солнечной короне.<br>\r\n<br>\r\nПо словам группы физиков под руководством Стюарта Бейла из Калифорнийского университета в Беркли и Джеймса Дрейка из Мэрилендского университета в Колледж-Парке, полученные зондом данные дают нам самое близкое представление о том, как создаётся быстрый солнечный ветер.<br>\r\n<a name=\"habracut\"></a><br>\r\n<h2><a href=\"https://phys.org/news/2023-06-elusive-planets-cheops.html\" rel=\"nofollow noopener noreferrer\">Космический телескоп CHEOPS помог найти не замеченные ранее экзопланеты</a></h2><br>\r\n<img src=\"https://habrastorage.org/r/w780q1/getpro/habr/post_images/9f1/175/128/9f1175128082a05df379bce876ef5a1a.jpg\" data-src=\"https://habrastorage.org/getpro/habr/post_images/9f1/175/128/9f1175128082a05df379bce876ef5a1a.jpg\" data-blurred=\"true\"><br>\r\n<br>\r\nС помощью космического телескопа CHEOPS международной команде европейских астрономов удалось достоверно <a href=\"https://dx.doi.org/10.1093/mnras/stad1319\" rel=\"nofollow noopener noreferrer\">подтвердить</a> существование четырёх новых экзопланет. Эти четыре мини-нептуна меньше и холоднее, и их труднее найти, чем так называемые экзопланеты типа «горячий юпитер», которых найдено уже достаточно много. Две из четырёх итоговых статей написаны исследователями из Бернского и Женевского университетов, которые также являются членами Национального центра компетенции в области исследований (NCCR) PlanetS.<br>\r\n<br>\r\nCHEOPS — это совместная миссия Европейского космического агентства и Швейцарии под руководством Бернского университета в сотрудничестве с Женевским университетом. С момента запуска в декабре 2019 года чрезвычайно точные измерения CHEOPS способствовали нескольким ключевым открытиям в области экзопланет.<br>\r\n<br>\r\n<h2><a href=\"https://www.nasa.gov/feature/goddard2023/new-detectors-could-improve-views-of-gamma-ray-events\" rel=\"nofollow noopener noreferrer\">Новые детекторы от НАСА могут улучшить фиксацию гамма-вспышек</a></h2><br>\r\n<img src=\"https://habrastorage.org/r/w780q1/getpro/habr/post_images/10b/c42/7b8/10bc427b8df7506e5ed572786f8a1c4b.jpg\" data-src=\"https://habrastorage.org/getpro/habr/post_images/10b/c42/7b8/10bc427b8df7506e5ed572786f8a1c4b.jpg\" data-blurred=\"true\"><br>\r\n<br>\r\nПри помощи технологии, аналогичной той, что используется в камерах смартфонов, учёные НАСА разрабатывают усовершенствованные датчики, позволяющие выявить больше деталей о вспышках чёрных дыр и взрывающихся звёздах — при этом менее энергоёмкие и более простые в массовом производстве, чем используемые сегодня детекторы.<br>\r\n<br>\r\n«Изучая чёрные дыры, активно разрушающие звезды, или нейтронные звезды, взрывающиеся и создающие действительно высокоэнергетические вспышки света, вы имеете дело с самыми экстремальными событиями во Вселенной», — говорит астрофизик-исследователь д-р Регина Капуто. «Чтобы наблюдать эти события, приходится работать с самой высокоэнергетической формой света: гамма-лучами».<br>\r\n<br>\r\nКапуто руководит разработкой прибора под названием AstroPix в Центре космических полётов НАСА имени Годдарда в Гринбелте, штат Мэриленд. Кремниевые пиксельные датчики в AstroPix — всё ещё в стадии разработки и тестирования — напоминают полупроводниковые датчики, которые позволяют камерам смартфонов быть такими маленькими.<br>\r\n<br>\r\n<h2><a href=\"https://www.atomic-energy.ru/news/2023/06/07/136016\" rel=\"nofollow noopener noreferrer\">Учёные построили трёхмерные кристаллы из «четырёхмерных» молекул гиперкубана</a></h2><br>\r\n<img src=\"https://habrastorage.org/r/w780q1/getpro/habr/post_images/71a/d15/d0e/71ad15d0eb030630e94b0417f597fdd9.jpg\" data-src=\"https://habrastorage.org/getpro/habr/post_images/71a/d15/d0e/71ad15d0eb030630e94b0417f597fdd9.jpg\" data-blurred=\"true\"><br>\r\n<br>\r\nИсследователи Института нанотехнологий в электронике, спинтронике и фотонике (ИНТЭЛ) НИЯУ МИФИ смоделировали и рассчитали свойства трёхмерных кристаллов из «четырёхмерных» молекул гиперкубана. <a href=\"https://doi.org/10.1016/j.mtcomm.2023.106146\" rel=\"nofollow noopener noreferrer\">Результаты работы</a> опубликованы в научном журнале Materials Today Communications.<br>\r\n<br>\r\nКуб – одна из самых простых и «естественных» геометрических фигур. Однако в мире углеводородных молекул, которые принимают самые причудливые формы, куб — экзотика.<br>\r\n<br>\r\nМолекула кубана C8H8, имеющая кубическую форму, была синтезирована в 1964 году путём сложной многоступенчатой реакции. Кубан оказался сверхплотным углеводородом, почти вдвое плотнее бензина. Несмотря на сложность синтеза, это соединение не только продемонстрировало высокую устойчивость, но и стало родоначальником целого семейства производных молекул, которые нашли применения в качестве энергоэффективных топлив и лекарств. В 2022 году 58-летний кубан снова привлёк внимание общественности, появившись на страницах известного научного журнала Science: на его основе был создан «крошечный пожиратель электронов».<br>\r\n<br>\r\n<h2><a href=\"https://www.hpcwire.com/off-the-wire/ionq-demonstrates-world-first-quantum-cognition-models/\" rel=\"nofollow noopener noreferrer\">Компания IonQ продемонстрировала квантовый ИИ</a></h2><br>\r\nКомпания IonQ, работающая в области квантовых вычислений, объявила о результатах своих первых исследований по применению квантовых компьютеров для моделирования человеческого разума. В недавно опубликованной работе описывается первый в мире публично известный метод, в котором основные модели человеческого познания были запущены на квантовом оборудовании, что открывает путь к потенциальной разработке улучшенных моделей принятия решений, имитирующих человеческое мышление.<br>\r\n<br>\r\nПроведённое в сотрудничестве с международной группой квантовых исследователей исследование представляет собой отправную точку для разработки квантовых схем, которые реализуют математические модели познания, кодируя ментальные состояния в регистрах кубитов и когнитивные операции с помощью различных затворов и измерений. С 1960-х годов когнитивные психологи пытались понять взаимосвязь между тем, как задаются вопросы, и тем, как участник ответит на них. Концепция квантовой вероятности эффективно описывает некоторые из этих отношений, однако только недавно квантовая аппаратура достигла того уровня, когда модели квантовой вероятности можно было исследовать и тестировать.<br>\r\n<br>\r\n<h2><a href=\"https://rscf.ru/news/release/stimulyatsiya-mozga-pomozhet-uluchshit-reabilitatsiyu-posle-travm-i-insultov-/\" rel=\"nofollow noopener noreferrer\">Стимуляция мозга поможет улучшить реабилитацию после травм и инсультов</a></h2><br>\r\n<img src=\"https://rscf.ru/upload/iblock/7dc/x42ikqz94ucuq4gjmrbgjimnmnvajrmw.jpg\" data-src=\"https://rscf.ru/upload/iblock/7dc/x42ikqz94ucuq4gjmrbgjimnmnvajrmw.jpg\" data-blurred=\"true\"><br>\r\n<br>\r\nУчёные показали, что магнитная стимуляция дорсолатеральной префронтальной коры — области мозга, ответственной за внимание, рабочую память и планирование — помогает улучшить контроль движений. Выяснили это на 30 здоровых добровольцах. Такой подход может сделать реабилитацию людей с неврологическими заболеваниями более эффективной и помочь спортсменам улучшить результаты. Исследование поддержано грантом Российского научного фонда (РНФ) и опубликовано в журнале Sensors.<br>\r\n<br>\r\nЛюбое движение человека — результат слаженной работы мозга, который сначала строит воображаемую модель движения, затем передаёт сигнал моторным (двигательным) нейронам, а они, в свою очередь, вызывают сокращения мышц. Всё это происходит буквально в один миг, но иногда связь между этапами нарушается в результате повреждения тканей мозга — например, при инсульте или болезни Паркинсона — и возникают двигательные нарушения. Они плохо сказываются на качестве жизни пациента и мешают ему нормально совершать даже бытовые манипуляции.<br>\r\n<br>\r\nУчёные и врачи активно разрабатывают методы лечения и восстановления после таких заболеваний. Многие методы реабилитации построены на том, чтобы для начала натренировать представление движения без его совершения, и, наоборот, совершение движения врачом или экзоскелетом, а затем наладить связь между этими процессами. Для улучшения реабилитации учёные изучают в том числе влияние транскраниальной магнитной стимуляции (ТМС, метод стимуляции нервных клеток головного мозга с помощью магнитного поля) на двигательную активность.', 1, '2023-06-12 22:03:35', 133330, 105, '/ru/articles/741254/', 'Каждый второй, читающий этот пост пережил выгорание (Burnout), а 75% выгоревших теряют место работы. Будучи дизайн-менеджером 18+ лет, я убедился, что основные причины выгорания часто связаны не только с работой, и стресс может накапливаться по иным причинам. Эта статья о том, какие ещё причины есть, и что с ними делать.В вопросах физиологии мне помогала разбираться специалист международной ассоциации спортивных наук и Gray Institute Полина Рязанова. Я благодарен ей за поддержку и знания в этой области.'),
(219, 'Как ещё бороться с выгоранием', '<p>Каждый второй, читающий этот пост пережил выгорание (Burnout), а 75% выгоревших теряют место работы. Как дизайн-менеджер со стажем 18+ лет, я убедился, что основные причины выгорания часто связаны не только с работой, и стресс может накапливаться по иным причинам. Эта статья о том, какие ещё причины есть, и что с ними делать.</p><p>В вопросах физиологии мне помогала разбираться специалист международной ассоциации спортивных наук и Gray Institute Полина Рязанова. Я благодарен ей за поддержку и знания в этой области.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/d92/de4/c5c/d92de4c5c16a3218614c106b8edc142b.png\" alt=\"Untitled\" title=\"Stutz: Directed by Jonah Hill. With Jonah Hill, Phil Stutz\" width=\"1422\" height=\"750\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d92/de4/c5c/d92de4c5c16a3218614c106b8edc142b.png\"><div><figcaption><em>Stutz</em>: Directed by Jonah Hill. With Jonah Hill, Phil <em>Stutz</em></figcaption></figure><p>На Netflix есть классная документалка «Stutz» о Филе Штутсе, психотерапевте актера Джоны Хилла. Фил и Джона просто и весело рассказывают о ментальном здоровье и инструментах для борьбы с трудностями. Там есть про структуру работы с депрессией и это очень похоже на то, что рекомендуют от выгорания.</p><p>Депрессия и выгорание — не одно и то же, однако инструменты схожие.</p><h4>Структура работы с ментальным здоровьем</h4><ol><li><p>Базовый уровень — отношение со своим физическим телом</p></li><li><p>Средний уровень — отношения с другими людьми</p></li><li><p>Высший уровень — отношения с собой</p></li></ol><blockquote><p>Phil Stutz (про отношение со своим телом): Все, что нужно — заставить тело функционировать лучше, и это работает.</p></blockquote><blockquote><p>Jonah Hill: Какой процент на этом уровне позволяет почувствовать себя лучше?</p></blockquote><blockquote><p>Phil Stutz: Ну, на самом деле, наверное 85%</p></blockquote><blockquote><p>Jonah Hill: С ума сойти! В детстве: упражнения и диета подавались так, будто что-то не так с моей внешностью. Но мне ни разу не предложили упражнения или диету для психического здоровья. Хотелось бы, чтобы людям объяснили это по-другому.</p></blockquote><p>Итак, пробую объяснить.</p><h4>Еще раз, что такое выгорание</h4><p>Выгорание – это <s>когда ты ложишься на пол в прихожей, приходя с работы домой</s> результат продолжительного высокого уровня стресса.</p><h4>Как понять, что ты выгораешь</h4><ol><li><p>Физические симптомы: хроническая усталость, проблемы со сном, головные боли, проблемы с ЖКТ, изменения аппетита, иммунная система может ослабнуть, это приводит к частым простудным заболеваниям.</p></li><li><p>Эмоциональное истощение: безысходность, апатия, раздражительность и потеря интереса к ранее приятным вещам.</p></li><li><p>Снижение продуктивности: чувство бесполезности и неспособности справиться с повседневными задачами, трудности с концентрацией, памятью и принятием решений.</p></li><li><p>Отчуждение от работы или окружающих: ощущение изоляции и неспособности установить связь с другими людьми.</p></li><li><p>Изменения отношения к работе: цинизм, чувство безнадежности и негатив. Ранее важные ценности и цели могут потерять свое значение.</p></li></ol><h4>Основные рекомендации по борьбе с выгоранием</h4><ol><li><p>Питание</p></li><li><p>Физическая активность</p></li><li><p>Сон</p></li><li><p>Медитация и дыхательные упражнения</p></li><li><p>Общение и достижения</p></li></ol><h4>Питание</h4><p>85% физического состояния зависит от питания. Здесь важно определить свои потребности в энергии и питательных веществах и точно закрывать их, в общем и целом все. Да, и ещё еда должна быть вкусной, это важно.</p><p>Профит: потенциально +10-20 лет жизни высокого уровня качества (<a href=\"https://thl.fi/documents/189940/1496849/north_karelia_project.pdf\" rel=\"noopener noreferrer nofollow\">ссылка на исследование</a>).</p><p>Косты: не все будут считать вас настоящим рок-н-рольщиком, с этим можно жить.</p><h4>Потребности организма</h4><p>Потребность организма в энергии (те самые калории) — это индивидуальное значение, чем точнее он определен, тем проще его контролировать. Энергия нужна чтобы думать и двигаться, профицит энергии приводит к избыткам запасов — ожирению. Ожирение мощно влияет на «нормальность» функционирования организма. Дефицит энергии приводит к неосознанному сокращению физической и умственной активности.</p><p>Потребности организма в питательных веществах — это то, сколько в граммах нужно белков, жиров, углеводов, витаминов и минералов для того, чтобы ткани восстанавливались и организм не разрушался. Значения норм определяются индивидуально.</p><p>Некоторые питательные вещества несут в себе энергию, некоторые нет, но в итоге количество энергии не должно превышать общую потребность организма в энергии.</p><p>Лучший способ закрывать полученные потребности — иметь все питательные вещества в еде в нужном количестве. Закрывать потребности БАДами довольно рисковано, особенно из-за опасности профицитов синтетических витаминов и минералов. Профициты синтетикой очень опасны, профициты натуральными питательными веществами практически невозможны.</p><p>И да. Еда должна быть вкусной, не просто вкусной, а восхитительной, до стона, до слез счастья, до полного удовлетворения.</p><p>Получается довольно интересная задача: определить набор параметров и максимально точно предоставить их в виде меню, в соответствии с индивидуальными вкусовыми предпочтениями и возможными ограничениями.</p><p>Кажется, что такая задача уже решена, но нет. Мы говорим об уровне точности, стремящимся к 100%. Во всех известных решения потребности определяются с точностью +-20-30%, и закрываются с точностью +- 20-30%, в итоге получается драматически высокая вероятность ошибки. Такие ошибки не выдерживает нервная система, а мозг переполняется тревожными сигналами.</p><blockquote><p>Все зло от недостатка знаний (Дэвид Дойч «Начало бесконечности. Объяснения, которые меняют мир»)</p></blockquote><h4>Совершенный алгоритм</h4><p>В итоге вам понадобиться совершенный алгоритм. Он должен перебирать 5 млн вариантов сочетаний продуктов, а потребности определять функциями. Смотреть на влияние определенного продукта на уровень сахара в крови и предотвращать диабеты. Учитывать праздники, дни рождения и отпуски, не предлагать в рабочий день на обед рыбу. Приоритизировать продукты по цене. Подбирать минимально-необходимую физическую активность и учитывать ее в общей энергии.</p><p>Один из важнейших эффектов при нормализации питания — тревоги становится меньше, принимаются более качественные решения. Помните исследование про судей в Израиле, которые после обеда выносили менее суровые приговоры? Это просто кортизол ушел.</p><p><strong>Итого про питание: важно точно определить потребности организма и максимально точно их закрывать, параметры потребностей индивидуальны, плохо посчитанные программы опасны, БАДы не спасают.</strong></p><p>Поддержка систем в рабочем состоянии зависит не только от питания, для некоторых процессов нужна физическая активность.</p><h4>Физическая активность</h4><p>Без достаточной физической активности тело страдает, а ткани разрушаются. Физическая нагрузка — обязательное условие для нашего организма, речь не идет о развитии суперспособностей.</p><blockquote><p>Больше — не значит лучше. Меньше тоже плохо.</p></blockquote><p>Основные метрики это тип нагрузки и ее уровень.</p><p>Типы нагрузок: кардио и силовая. Кардио (танцы, бокс, бег, велосипед, капоэйра, etc.) — насыщает кровь кислородом, укрепляет сердечную мышцу. Раз в неделю может быть очень даже полезно, но этот вид нагрузки можно включать только после выполнении обязательной программы, и тут важно не перегрузить себя. Избыток кардио при низком белке в рационе разрушает мышцы, а они нужны для нормального функционирования тела.</p><p>Обязательная программа — это силовая нагрузка. Это все что нужно в большинстве случаев. Не путать с бодибилдингом и пауэрлифтингом, это другое. Самое важное здесь определить переносимый уровень стресса и следовать ему.</p><p>Упражнения не помогут вам похудеть, не помогут с кубиками пресса, и скорее всего не помогут с «бицухой» или «орешком», это контринтуитивно, но это важно принять. Эффективность большинства стандартных подходов не превышает погрешность.</p><p>Силовые упражнения помогут вам не терять мышцы, то немногое что есть сейчас, уходит само без нагрузки и восстановить мышечную ткань будет очень сложно. Упражнения помогут держать в порядке суставы, без нагрузки они не питаются. Упражнения помогут развить мышцы, без которых невозможна правильная походка, бег и стояние, это вызывает повышенную загрузку других мышц, те спазмируются и все начинает болеть — спина, шея, колени.</p><p><strong>Итого про физическую активность: кардио — фан, силовые нагрузки не сделают тебя качком, но поддержат мышцы и суставы в хорошем рабочем состоянии. А еще дофамина от силовых в десятки раз больше, чем от пирожных.</strong></p><p>Каждый из последующих пунктов достоин отдельной статьи, здесь описываю кратко.</p><h4>Сон. Недостаток сна может усугубить выгорание</h4><p>Для меня важнее всего оказалось вставать и ложиться в одно и тоже время всегда, даже в выходные, ну и время засыпания и пробуждения — всегда одно, иначе вечный джетлаг. Блэкаут шторы и свежий воздух тоже творят чудеса. Прочие инструменты и практики оказались менее эффективными, но это все индивидуально, надо пробовать.</p><h4>Медитация и дыхательные упражнения. Снижают уровень стресса</h4><p>Медитация просто необходима как минимум для того, чтобы вовремя заметить, что уровень стресса высокий, так как в первую очередь медитация учит замечать. Не религия, не эзотерика, просто тренировка раз в день на 15 минут.</p><blockquote><p>«Дыхательные упражнения творят чудеса» — Людвиг Быстроновский.</p></blockquote><h4>Общение. Общайтесь чаще и шире</h4><p>Без общения мы моделируем социальные связи в отрыве от реальности, коммуникация может стать сложной и даже токсичной, в конечном итоге люди перестают понимать друг друга.</p><p>Нам необходимо общаться не только для обмена информацией, но и для самовыражения и поддержки.</p><blockquote><p>Лично мне очень важно общение с людьми из иных <s>реальностей</s> предметных областей, эпох, культур, это почти всегда интересно. 75-летний тренер по боксу, который тренировал Валуева, за пару тренировок может рассказать историй на хорошую книгу.</p></blockquote><p>Если как в примере комбинировать инструменты, например физическую активность и расширение <s>сознания</s> кругозора, можно сэкономить много времени.</p><h4>Достижения. Не забывайте о своих достижениях</h4><p>Нам всем важно признание того, что мы делаем, если этого нет, мы чувствуем бесполезность и фрустрируем. И костылим рационализации.</p><p>Как дизайн-менеджер я стараюсь хвалить коллег как можно чаще — мозг будет тянуться в сторону развития того, за что тебя похвалили.</p><p>Крайне полезно значимую часть своего времени тратить на портфолио или CV — это помогает осознать что ты уже сделал много всего классного, ну или пора что-то менять в жизни.</p><h4>И финальное</h4><p>Как видно, многие пункты пересекаются и взаимосвязаны, важно начать с чего-то, это даст энергии на следующие действия и так далее. По опыту могу сказать — если план достаточно точный и учитывает все детали, это выглядит как несколько минорных фиксов, которые можно и в пятницу вечером релизить.</p><p>Проблемы неизбежны! Проблемы можно решить! (Дэвид Дойч «Начало бесконечности. Объяснения, которые меняют мир»).</p><p></p>', 2, '2023-06-12 22:03:35', 983326, 96, '/ru/articles/741220/', 'Часто можно услышать утверждение: «у человека нет никаких выдающихся физических качеств, он не самый быстрый, не самый сильный, не самый высокий, но стал доминирующим видом благодаря развитому мозгу». Так ли это? Похоже, что да! Именно способность мозга обучаться, накапливать опыт и затем его передавать сделала нас теми, кто мы есть сегодня. Но был ли мозг тем самым game changer, который помог нам занять свою экологическую нишу, выжить и развиться до такой степени? Антропологи Dennis Bramble и Daniel Lieberman сделали занятный материал, в котором предлагают взглянуть на наши способности и эволюционную доминацию с другой стороны. Давай ознакомимся с их трудом, чтобы понять, что они имеют ввиду.'),
(220, 'Почему человек стал человеком? Из-за мозга или ягодичной мышцы?', '<p>Часто можно услышать утверждение: «у человека нет никаких выдающихся физических качеств, он не самый быстрый, не самый сильный, не самый высокий, но стал доминирующим видом благодаря развитому мозгу». Так ли это? Похоже, что да! Именно способность мозга обучаться, накапливать опыт и затем его передавать сделала нас теми, кто мы есть сегодня. Но был ли мозг тем самым game changer, который помог нам занять свою экологическую нишу, выжить и развиться до такой степени? Антропологи Dennis Bramble и Daniel Lieberman сделали занятный материал, в котором предлагают взглянуть на наши способности и эволюционную доминацию с другой стороны. <a href=\"https://www.nature.com/articles/nature03052\" rel=\"noopener noreferrer nofollow\">Давай ознакомимся с их трудом, чтобы понять, что они имеют ввиду.</a></p><h3>Встали на ноги, чтобы ходить или бегать?</h3><p><em>«Хотя прямохождение включает в себя и бег, и ходьбу, принято считать, что бег не сыграл большой роли в эволюции человека, потому что люди, как и обезьяны, являются плохими спринтерами по сравнению с большинством четвероногих».</em></p><p>Ученых сподвигло то, что биомеханика бега человека так хорошо изучена и при этом так мало исследований на тему того, был ли это основной способ передвижения у предков. А изучать тут есть что.</p><p><em>\"Этот недостаток внимания во многом объясняется тем, что люди являются посредственными бегунами в нескольких отношениях.\"</em></p><p>Даже элитные спринтеры сравнительно медлительны. Максимальную скорость, которую они могут развивать всего 10,2 м/с и поддерживать ее менее 15 секунд. <em>(Прим. максимальная скорость, которую удалось развить человеку, была 12,2 м/с и этот рекорд принадлежит Усейн Болту.)</em></p><p>А вот быстрые четвероногие, такие как лошади, борзые и антилопы, могут поддерживать максимальную скорость галопа 15-20 м/с в течение нескольких минут и преодолевать несколько километров за это время.</p><p>Более того, бег обходится людям дороже, чем большинству млекопитающих, требуя примерно в два раза больше метаболической энергии на пройденное расстояние, чем для млекопитающего с поправкой массу тела.</p><p>Наконец, люди менее маневренны и лишены многих структурных бонусов, характерных для большинства четвероногих, таких как удлиненные ступни и короткие голени.</p><p><strong>Однако, хотя люди сравнительно плохие спринтеры, они занимаются еще одним видом бега — бегом на выносливость, определяемый как пробег многих километров в течение длительных периодов времени с использованием аэробного метаболизма.</strong>\"</p><h3>Кто быстрее: лошадь или человек?</h3><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e3f/9d9/fbd/e3f9d9fbd2a66ca48521da648de95680.png\" width=\"700\" height=\"521\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e3f/9d9/fbd/e3f9d9fbd2a66ca48521da648de95680.png\"></figure><p>Ходьба достаточно затратный ресурс. Но как только мы с ходьбы 1-1,3 м/с переходим на легкий бег 2-2,5 м/с, все резко меняется. При беге энергии тратится столько же, как при ходьбе, но преодолевается вдвое большее расстояние за меньшее время.</p><p>Все благодаря комплексу сухожилий и других пружинящих механик. Например, когда мы идем, то ставим вперед практически прямую ногу, которая поглощает в себя всю созданную энергию предыдущим толчком ноги. Перекатывание с пятки на носок затрачивает большой энергетический ресурс, вовлекая в работу икроножные мышцы. Неудачное расположение центра массы ровно посреди туловища. Все это заставляет тратить много энергии. Ходьба больше похожа на маятник, а ноги сопротивляются раскачивающемуся туда-сюда туловищу.</p><p>Во время бега тело работает иначе благодаря эластичным способностям сухожилий и более удачному положению ног и корпуса. Сухожилия выталкивают ногу вперед, почти не тратя энергию икроножных мышц на сокращение. Удар приходится на согнутую ногу, что дополнительно задействует коленные связки и сухожилия, что опять снижает нагрузку на мышцы и задействует пружинистые возможности связок. А корпус наклонен слегка вперед, что упрощает его разгон и поддержание скорости. Раскачивание во время бега значительно ниже, чем при ходьбе.</p><p>Все это позволяет не только преодолевать большие расстояния, но и двигаться с приличной скоростью. Скорость бега на выносливость у человека приблизительно равна галопу больших (и маленьких) четвероногих.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/d09/a4d/37e/d09a4d37e068e728a7f599e445efa282.png\" width=\"700\" height=\"610\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d09/a4d/37e/d09a4d37e068e728a7f599e445efa282.png\"></figure><p>В Уэльсе с 1980 года ежегодно проходит <a href=\"https://upload.wikimedia.org/wikipedia/commons/0/03/Manvhorse06.jpg\" rel=\"noopener noreferrer nofollow\">Марафон человека и лошади</a>. Там люди соревнуются против наездников на лошадях на дистанции 35 км. Чаще побеждают лошади, но было два года (2004 и 2007), когда человек победил. А в 2007 году человек даже дал фору самой быстрой лошади в целых 11 минут.</p><p>Но это прохладный тенистый Уэльс, в котором лошадь не так быстро нагревается. Становление нашей цивилизации происходило в жаркой саване, где у нас было еще одно преимущество.</p><h3>Терморегуляция.</h3><p>Во время бега производился очень много тепла из-за чего тело нагревается, нарушая внутренний гомеостаз. И в том, как мы умеем остужать тело, нам тоже нет равных.</p><p>Система потоотделения есть у большинства животных. Но у нас нет волосяного покрова, что делает потоотделение более эффективным.</p><p>Узкое и вытянутое тело тоже является положительным признаком для быстрого остужения. У нас отличное устройство кровеносной и артериальной системы особенно в голове, которая очень эффективно отводит тепло не допуская нагревание мозга. Сонная артерия достаточно близка к поверхности кожи и может успевать остужать кровь, прежде чем доставить ее в мозг.</p><p>Еще одной особенностью людей является склонность<br>дышать ртом (но не задыхаться) во время напряженной деятельности.</p><p>Носовое дыхание, типичное для обезьян, оказывает слишком сильное сопротивление воздуху. Ноздри недостаточно широки, чтобы выдерживать высокие требования к вентиляции при интенсивной деятельности. Дыхание ртом обеспечивает более высокую скорость воздушного потока при меньшем сопротивлении и мышечных усилиях. А еще является более эффективным средством разгрузки избыточного тепла во время выдоха.</p><p><strong>Все вышеперечисленные особенности делают нас монстрами выносливости, недоступной никаким другим млекопитающим особям.</strong></p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/bea/808/430/bea80843077bf33032ea2cbc1a75a467.png\" width=\"514\" height=\"398\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/bea/808/430/bea80843077bf33032ea2cbc1a75a467.png\"></figure><p>Я веду Телеграм канал<a href=\"https://t.me/+T0hc2pMg01diZmU6\" rel=\"noopener noreferrer nofollow\"> Терентьев Фитнес</a><a href=\"https://t.me/+uT66VZXForg4N2Ri\" rel=\"noopener noreferrer nofollow\"> </a>про тренировки, питание, спортивный лайфстайл. Даю полезные рекомендации для тренирующихся, делюсь опытом подопечных. Подписывайся! Буду рад тебя видеть.Загон животных — до сих пор один из актуальных способов охоты у современных племен охотников и собирателей. Группа охотников выбирает жертву, пугают ее. Та в свою очередь на больших мощностях под палящим солнцем убегает. По следам ее отслеживают и снова пугают. И так до тех пор, пока косуля не останется без сил, чтобы спокойно убить ее с ближнего расстояния.</p><p>Ученые строят предположение, что в отличии от тигров, волков, гиен, люди питались более свежими особями, выигрывав еще и в этом. Остальные, выдав спринт, максимум на что могли рассчитывать — это старая больная и хромая косуля. А если ничего не ловили, голодали следующую неделю, восстанавливая силы. Т.е. хищная охота больше похожа на лотерею, а выносливость похожа на расчет.</p><h3>Итог.</h3><p>Это крупицы из тех фактов, которые нам предоставили ученые. Они разбирали так же устройство ягодичной мышцы, отмечали ее развитость и эффективность именно при беге в отличии от ходьбы, где она практически не участвует. Развитость ягодичной значительно отличает нас от обезьян, которые тоже умеют достаточно быстро бегать, но не долго, в т.ч. из-за маленькой не развитой ягодичной.</p><p>Так же они сравнивали различные остатки костей, которые удалось найти. Сравнивали предполагаемые периоды жизни и развитость костей, их отличия от обезьян, первых людей и нас.</p><p>И подводя итог, вполне вероятно, что комплекс выносливости, терморегуляции и бег являлись нашей экологической нишей до того, как начал активно развиваться мозг. Помогали выживать, добывать пропитание и преодолевать большие расстояния в поиске лучших мест для жизни. Возможно, бег и дал мозгу толчок для роста.</p><p>Когда тебе станет трудно, помни, что ты чертова машина выносливости!</p><blockquote><p>Я веду Телеграм канал<a href=\"https://t.me/+T0hc2pMg01diZmU6\" rel=\"noopener noreferrer nofollow\"> Терентьев Фитнес</a><a href=\"https://t.me/+uT66VZXForg4N2Ri\" rel=\"noopener noreferrer nofollow\"> </a>про тренировки, питание, спортивный лайфстайл. Даю полезные рекомендации для тренирующихся, делюсь опытом подопечных. Подписывайся! Буду рад тебя видеть.</p></blockquote><p></p>', 3, '2023-06-12 22:03:36', 141433, 109, '/ru/articles/741072/', 'Стресс аналитика особенный — у него запах страха не справиться, сроков, хаоса и структуры, достаточности и избыточности информации, фрустрации и критического мышления. Но долго сидеть в этом облаке запахов не стоит — иногда нужно проветриваться.Поговорим как рассеять облако страхов и расслабить клапана, чтобы фляга не засвистела.'),
(221, 'К кому приходит удача и как можно на нее влиять?', '<p>Обычно удача воспринимается как случайность или незаслуженный успех. Выдающиеся результаты похудения и тем более выдающихся результатов в тренажерном зале часто объясняются удачей. Повезло с генетикой, с работой, с поддерживающим/ой супругом/ой. Нам так проще принимать неравенство.<br>А что если хоть частично удача лежит в зоне нашей ответственности?</p><h3>Не случайность, а правильный настрой</h3><p>Например в одном <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC9734849/#CR15\" rel=\"noopener noreferrer nofollow\">исследовании</a>, изучавшем результаты регбистов, то, что болельщики и СМИ называли «удачей», по сути оказывалось просто бОльшим количеством ударов в створ ворот той командой, которую якобы постигла удача. С удачей сталкивается тот, кто предпринимает большее количество попыток.</p><p>Вот еще несколько примеров.</p><p>Гольфисты, которым давали играть «счастливым мячом», оказывались значительно результативнее тех, кому давали «обычный мяч как у всех». А испытуемым, которым разрешили взять из дома свой талисман на удачу, решали анаграммы лучше и усерднее тех, кто остался без талисмана. (<a href=\"https://journals.sagepub.com/doi/abs/10.1177/0956797610372631\" rel=\"noopener noreferrer nofollow\">1</a>)</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/2ec/631/1ef/2ec6311efa8925658eb0afb91ee9f12f.png\" width=\"700\" height=\"555\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/2ec/631/1ef/2ec6311efa8925658eb0afb91ee9f12f.png\"></figure><p>Складывается впечатление, что на удачу можно влиять без возможности ее контролировать.</p><p>Как-то я писал публикацию про самоконтроль. <a href=\"https://t.me/novyfitness/1258\" rel=\"noopener noreferrer nofollow\">Вывод одного из них</a> заключался в том, что люди, верившие в несгибаемость своей воли несгибаемую волю и демонстрировали. С удачей было замечено что-то похожее.</p><p>Во время <a href=\"http://richardwiseman.com/resources/The_Luck_Factor.pdf\" rel=\"noopener noreferrer nofollow\">одного уличного эксперимента</a>, те, кто считал себя удачливым, чаще находили фразу «если ты заметил эту строчку, скажи исследователю об этом и получи $250» в предложенной исследователями газете.</p><p>Получается, что удача — это не просто стечение обстоятельств. Ее приход обеспечивает наша психология. Настрой отчасти определяет, разглядим мы удачу и воспользуемся ей или нет. Удача приходит к тем, кто считает себя достойным для ее прихода и создает для нее возможности.</p><p>Если мы перенесем это все на фитнес и ЗОЖ и посмотрим на наши предыдущие попытки влиться в тему, к которым многие относятся болезненно. Ведь неудача — это поражение и кажется, что оно делает нас хуже. Но важно понять то, что предыдущие попытки, пускай и неудачные, имеют статистическую значимость и, если бы можно составить математическое уравнение нашей трансформации, они бы имели знак плюс, а не минус. Величина эффекта у них пока что невелика, но эффект есть и таким образом мы повышаем свои шансы на успех.</p><h3>Психология влияет и на успех следующей попытки</h3><p>Если что-то не получилось один раз, вероятность того, что получится в следующий раз, снижается.</p><p><a href=\"https://www.sciencedirect.com/science/article/pii/S0010027714000031/\" rel=\"noopener noreferrer nofollow\">Это заметили</a> в исследовании, когда у игроков в крэпс и рулетку (результат которых во многом определяет случайность) после двух побед подряд вероятность следующего выигрыша равнялась 57%.</p><p>У игроков, которые сделали две неудачные ставки подряд, вероятность победы в следующей ставке была 40%. Почему так, если статистически вероятность у всех 50/50?</p><p>Оказалось, что те, кто обуздал удачу, ожидают, что если удалось выиграть два раза подряд, то следующий кон они с большей вероятностью проиграют, поэтому действуют более рассудительно, делая менее рисковые ставки. «Ведь не может постоянно везти!»</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e3c/43c/0bf/e3c43c0bf996f88c19be597e95ee8ec9.png\" width=\"700\" height=\"700\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e3c/43c/0bf/e3c43c0bf996f88c19be597e95ee8ec9.png\"></figure><p>Те, кто ошибся, думает что в следующий раз точно повезет, «Ведь не может постоянно не везти!», что приводит к желанию отыграться, тогда размер ставок, а вместе с тем риски, растут. Ничего не напоминает?</p><p>Люди, которые не смогли похудеть, в следующий раз предпримут боле радикальные меры, сделав диету строже. Те, кто не накачался, в следующий раз купят абонемент сразу на год, а не на месяц, чтобы «стимулировать» свои занятия без возможности отвертеться. Будут тренироваться, не давая себе спуску, чтобы не расслабиться. Ставки растут, а значит вероятность победы снижается.</p><p>Риски снижают устойчивость и комфорт, а они служат фундаментом изменений и поддержания этих изменений на длительном отрезке времени.</p><p>Пока жив страх не справится с тем, что уже единожды не получалось, мы всегда будем иметь более низкие шансы на успех.</p><p>Positive thinking показал свою несостоятельность и даже вред, предлагая отрыв от реальности и необоснованную веру в будущее.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/1c3/36e/821/1c336e8214729addd2b44714e24154d1.png\" width=\"570\" height=\"765\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/1c3/36e/821/1c336e8214729addd2b44714e24154d1.png\"></figure><p>Однако, вера в удачу, на мой взгляд, к этому не относится. Никто не говорит, что «однозначно получится». Это умение принимать успех и неудачи в равной степени, делать взвешенные решения с попыткой вырастить вероятность успеха до 57%, а неудачи снизить до 40%.</p><p>Удача хочет, чтобы в нее верили и постоянно проверяли, давая ей шанс проявиться.</p><blockquote><p>Я веду Телеграм канал<a href=\"https://t.me/+T0hc2pMg01diZmU6\" rel=\"noopener noreferrer nofollow\"> Терентьев Фитнес</a><a href=\"https://t.me/+uT66VZXForg4N2Ri\" rel=\"noopener noreferrer nofollow\"> </a>про тренировки, питание, спортивный лайфстайл. Даю полезные рекомендации для тренирующихся, делюсь опытом подопечных. Подписывайся! Буду рад тебя видеть.</p></blockquote><p></p>', 3, '2023-06-12 22:03:37', 260596, 110, '/ru/articles/740918/', 'Привет, хабр! Я заранее прошу прощения насчет того, что этот пост не совсем соотвествует тематике хабра, однако сохранение зрения и здоровья глаз - важный параметр для айтишников, при и без того высокой нагрузке на глаза.Я пишу этот пост потому, что больше 10 лет назад я написал на хабре статью \"Очень быстрый и эффективный способ расслабления глаз\" - с тех самых пор и по сей день я продолжаю использовать эту методику, и по-прежнему считаю ее эффективной. Итак, суть ситуации, которая сподвигла создать этот пост: у меня по-прежнему хорошее зрение, правый глаз видит на 100%, однако левый глаз за последние 3 года стал видеть немного хуже. У моей жены тоже всю жизнь было идеальное зрение, но в последние 3 года оно стало падать на правом глазу. И я и она - правши. Но что совпадает - так это то, что я сплю в основном на левом боку, а жена на правом.Это наблюдение натолкнуло на мысль, что сон на боку (точнее подушка, которая слегка давит на глаз) негативно влияет на зрение. Давление подушки незначительное, но неравномерное и довольно продолжительное. Отсюда родилось предположение, что это давление вызывает астигматизм.Этот пост создавался ради опроса, чтобы обнаружить корреляцию (или ее отсутствие) между сном на боку и зрением. Если она есть - классно что мы с вами ее обнаружим. Если ее нет - извиняюсь, что потратил ваше время'),
(222, 'А что если сон на боку портит зрение?', '<p>Привет, Хабр! Я заранее прошу прощения насчет того, что этот пост не совсем соответствует тематике Хабра, однако сохранение зрения и здоровья глаз - важный параметр для айтишников, при и без того высокой нагрузке на глаза.</p><p><em>Я пишу этот пост потому, что больше 10 лет назад я написал на Хабре статью \"</em><a href=\"https://habr.com/ru/articles/142096/\" rel=\"noopener noreferrer nofollow\"><em>Очень быстрый и эффективный способ расслабления глаз</em></a><em>\" - с тех самых пор и по сей день я продолжаю использовать эту методику, по-прежнему считаю ее эффективной и до сих пор экспериментирую с разными методиками.</em></p><p>Итак, суть ситуации, которая сподвигла создать этот пост: у меня по-прежнему хорошее зрение, правый глаз видит на 100%, однако левый глаз за последние 3 года стал видеть немного хуже. У моей жены тоже всю жизнь было идеальное зрение, но в последние 3 года оно стало падать на правом глазу. И я и она - правши. Но что совпадает - так это то, что я сплю в основном на левом боку, а жена на правом.</p><p>Это наблюдение натолкнуло на мысль, что сон на боку (точнее подушка, которая слегка давит на глаз) негативно влияет на зрение. Давление подушки незначительное, но неравномерное и довольно продолжительное. Отсюда родилось предположение, что это давление вызывает <a href=\"https://ru.wikipedia.org/wiki/%D0%90%D1%81%D1%82%D0%B8%D0%B3%D0%BC%D0%B0%D1%82%D0%B8%D0%B7%D0%BC_(%D0%BC%D0%B5%D0%B4%D0%B8%D1%86%D0%B8%D0%BD%D0%B0)\" rel=\"noopener noreferrer nofollow\">астигматизм</a>.</p><p>Этот пост создавался ради опроса, чтобы обнаружить корреляцию (или ее отсутствие) между сном на боку и зрением. Если она есть - классно что мы с вами ее обнаружим. Если ее нет - извиняюсь, что потратил ваше время</p><p></p>', 2, '2023-06-12 22:03:37', 764961, 110, '/ru/articles/740804/', 'Вы обращали внимание на волатильность сексуального компонента в отношениях? От «высшего проявления любви» через «перевод отношений в горизонтальную плоскость» и «супружеского долга» до «изнасилования в браке» путь может быть очень коротким с минимальными стоянками на каждом из этапов. И если об этом задумываться, то хочется понять, каким же образом происходит смена остановок, что допустимо, а что нет, с точки зрения здоровых отношений и заботы о партнере. Сразу скажу, что здесь не пойдет речь о сексуальных практиках, в которые партнеры вступают по предварительному обоюдному согласию. Мы сосредоточимся на формате сексуальных отношений и некоторых правилах, которые помогут расставить точки над i.Во время написания статьи, я подумал, что, в отличие от большинства предыдущих статей, не буду приводить определение термина, о котором пойдет речь, ибо «и так же всё понятно». Но погрузившись в тему, решил, что следует это сделать, чтобы сложилось более полное понимание феномена. Скажу честно, что до создания статьи, я рассматривал термины «секс» и «половой акт» как синонимы, отличающиеся больше стилистической окраской. Поэтому, более корректно будет использовать термин «сексуальное поведение», на которое я и буду ссылаться в рамках статьи. Отсюда и далее, стоит воспринимать слово «секс» именно в таком значении:');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(223, 'Карательная стоматология или «Нижегородская резня»', '<img src=\"https://habrastorage.org/r/w780q1/webt/iv/xl/-w/ivxl-wet18nqssrbaffxrwd1-im.jpeg\" alt=\"image\" data-src=\"https://habrastorage.org/webt/iv/xl/-w/ivxl-wet18nqssrbaffxrwd1-im.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\nЯ заранее прошу убрать от экранов слишком уж впечатлительных граждан, беременных животных, неуравновешенных детей, моралистов и фанатов врачебной этики. <a name=\"habracut\"></a><br>\r\n<br>\r\nЗдравствуйте, уважаемые друзья!<br>\r\n<br>\r\nНачну с того, что в сегодняшней статье будет присутствовать завуалированная ненормативная лексика чуть в большем объеме, чем это обычно бывает. Почему? Потому что эта статья спонтанна и не запланирована. Всему виной недоумение, что такое вообще бывает. <b>Поэтому, если вы считаете, что врачи не такие же люди, как и вы, и не ругаются матом, а от слова «**й» вы падаете в обморок, – советую воздержаться от прочтения этой статьи.</b><br>\r\n<br>\r\nЯ уже не раз говорил о том, что крайне сложно найти адекватную стоматологическую клинику, не говоря уже о докторе, который “знает и могёт”. Сегодняшняя статья посвящена очередному случаю непрофессионализма, с которым мне пришлось столкнуться. Вы скажете, – а как же врачебная этика? Да ну её нахрен, когда дело касается здоровья пациента. Выражение «не можешь – не берись» очень четко подходит к медицине. Как-никак доктора имеют дело со здоровьем и жизнью людей.<br>\r\n<br>\r\nДалее будет случай, который основан на рассказе пациента, – Константина. Конечно, с моими ремарками.<br>\r\n<br>\r\nИтак, около недели тому назад сижу на работе, беды не чую. Ассистент готовит кабинет к приёму очередного пациента. На почту приходит сообщение от некоего Константина, который с двух попыток в разных нижегородских клиниках не смог избавиться от вот такого зуба мудрости.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/q5/xc/yv/q5xcyv9slgs8gybypaitd0g3kvi.jpeg\" alt=\"image\" data-src=\"https://habrastorage.org/webt/q5/xc/yv/q5xcyv9slgs8gybypaitd0g3kvi.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\nГоризонтальный – зуб мудрости, черная полоска под ним – нижнечелюстной нерв.<br>\r\n<br>\r\nКазалось бы, – что должно пойти не так при удалении стандартной восьмерки? Если время этого самого удаления занимает 20, а в худшем случае 30 минут. А вот что.<br>\r\n<br>\r\n<b>Настало время офигительных историй.</b><br>\r\n<br>\r\n<b>11 мая</b> сего года Константин обратился в частную клинику в Нижнем Новгороде дабы полечить поверхностный кариес. Увидев, что в клинике есть хирургические услуги, он поинтересовался у молодой “врачихи” 27 лет отроду о том, можно ли заодно удалить его единственный зуб мудрости. Она сказала, что это займет много времени (около полутора часов), но вай, как говорится, и нот? Типа, 10 тыщ – и я вся твоя.<br>\r\n<br>\r\nВрачиха, стоимость и продолжительность Константина устроили. Если с ценником я еще соглашусь, то полтора часа – это лютый перебор. Что можно делать с зубом полтора часа? – подумал я. Снимать тик-токи?<br>\r\n<br>\r\nЧто ж. Она начала. Через три часа… ТРИ, КАРЛ! Анестезия начала проседать. Ничего удивительного. Константин почувствовал боль, «врачиха» повела его на рентгеновский снимок.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/gd/my/pp/gdmyppcxgr0jr7zwtkv72t1g5hs.jpeg\" alt=\"image\" data-src=\"https://habrastorage.org/webt/gd/my/pp/gdmyppcxgr0jr7zwtkv72t1g5hs.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\nОн спросил, – «много ли перепилили»? Ответом было, – нуу… процентов 5 от зуба. За три-то часа. В этом месте Константин прихренел. Он надеялся, что за три часа процесс уж точно должен был быть закончен. Но, получив еще дозу наркоза (мы, конечно, говорим про местную анестезию), они пошли пилить дальше.<br>\r\n<br>\r\nПосле того, как с начала удаления прошло уже 5 (!) часов… врач сказала, – «бор не достает до зуба, да и отек у тебя уже образовывается. Поехали-ка мы лучше в <a href=\"https://habr.com/ru/articles/458218/\">ЧЛХ (челюстно–лицевую хирургию)</a>, там врач сразу тебе все удалит и отпустит домой». Звучит обнадеживающе. Стоит отдать должное девушке-доктору, что она не выперла Константина из клиники, а все-таки довезла его до более компетентного, как тогда казалось, места. Приехали в больницу. Спустя 2 часа (странно, что не больше) Константина госпитализировали. Но вот незадача, – врача уже нет, рабочий, мать его, день закончился. Пришлось остаться ночевать. Все же знают, какой кайф ночевать в региональной больнице? Вот и Константину это «понравилось». Его можно понять, ведь никто не хочет испытать на себе все радости храпящих и пукающих соседей, уколов в сраку и внутрибольничной инфекции в качестве бонуса. На следующий день пришла врач пенсионного возраста и сказала, что нет никакого смысла что-то делать, так как за ночь успел развиться большой отек. Полежи-ка, милок, неделю, вот начнет открываться рот, тогда и посмотрим. Зашибись, неправда ли?<br>\r\n<br>\r\nПришел, б***ь, зуб удалить.<br>\r\n<br>\r\nСложный.<br>\r\n<br>\r\nЗа полтора часа.<br>\r\n<br>\r\nЗа 10 тыщ.<br>\r\n<br>\r\nНа 17-е число, аккурат в день рождения Константина, была назначена повторная операция.<br>\r\n<br>\r\nГотовы? Сейчас Косте будут дарить подарки.<br>\r\n<br>\r\n<b>17 мая 2023</b> года Константина кладут на стол, обезболивают и зачем-то завязывают глаза. <s>Потом достают самый мощный страпон</s>. Начинают пилить зуб машинкой. Засунув элеватор в рот, доктор сказала, – «сейчас хрустнет!», но почему-то не хрустело. Это наверно первый случай за 47 лет жизни Константина, когда он безумно хотел, чтобы в его голове уже что-то наконец хрустнуло. Вдруг он почувствовал резкую боль, пошла кровь. <s>ФЛЮГЕНГЕХАЙМЕН! Пытался крикнуть Константин с полным ртом крови.</s><br>\r\n<br>\r\nНачались тампоны, тампоны, тампоны. Увезли в палату, поставили капельницу. «Похоже, засандалила она в нерв», предположил Константин. С учетом того, что после этой «операции» чувство онемения в области губы и подбородка с левой стороны до сих пор не прошло – Костя не ошибся. Назначили повторную операцию под общим наркозом, которую несколько раз переносили. Константина это изрядно подзае***о и 19 мая он решил покинуть обитель Авиценны.<br>\r\n<br>\r\nВнимание! Выписка из стационара:<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/ak/b7/u8/akb7u8d73suydsafbweblqe-lh0.jpeg\" alt=\"image\" data-src=\"https://habrastorage.org/webt/ak/b7/u8/akb7u8d73suydsafbweblqe-lh0.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\nОказывается, кровотечение началось из-за того, что у Константина вдруг резко подскочило давление. Ну-ну.<br>\r\n<br>\r\nНесколько дней он не находил себе места и думал, что же делать дальше.<br>\r\n<br>\r\n<b>30 мая</b>, очарованный рекомендациями и отзывами, он записался на консультацию к чуть ли не «самому лучшему хирургу-стоматологу и, по совместительству, челюстно-лицевому хирургу Нижнего Новгорода». В такую же не менее “элитарную”, если не самую лучшую клинику. Если верить аббревиатуре «VIP» в названии.<br>\r\n<br>\r\n«Оказалось он с моей этой бабкой (имеет ввиду доктора из ЧЛХ) в одной больнице раньше работал» – рассказывает Константин. «Сказал, что зуб очень сложный и лежит на нерве, нерв на сосуде»…<br>\r\n<br>\r\nИгла в яйце, яйцо в утке, утка в зайце, палец в жопе. И, внимание, апогей! «Возможно надо будет вырывать седьмой зуб», – сказал местный умелец и велел идти снова к бабке в ЧЛХ на поклон. Что, б***ь? Удалять седьмой зуб, чтобы удалить восьмой? Вы там совсем уже все ёкнулись в край? Это как ампутировать руку, потому что не получается снять куртку. За эту чудесную консультацию товарищ не забыл взять с Константина тыщу рублей, хоть и йодоформная турунда, которую он уложил в лунку, была лучше больничной.<br>\r\n<br>\r\nНикакого желания ехать к «бабке» не было, а уж если «нижегородский гуру» сказал, что сложно, куда ж еще идти? Константин взялся гуглить, вселенная подкинула ему мои статьи, после чего, как ни странно, он решил связаться уже со мной. Я сказал, что нужна повторная компьютерная томография, и пора готовиться к путешествию в Москву. На следующий день мне пришло письмо:<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/3s/k4/gl/3sk4gljqkacbrbfow3vkpasepxs.jpeg\" alt=\"image\" data-src=\"https://habrastorage.org/webt/3s/k4/gl/3sk4gljqkacbrbfow3vkpasepxs.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\nОткрываю я снимок и вижу, что действительно так и было:<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/nj/sj/bh/njsjbhpl_er7jubejcrhpsv7sos.jpeg\" alt=\"image\" data-src=\"https://habrastorage.org/webt/nj/sj/bh/njsjbhpl_er7jubejcrhpsv7sos.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\nЧерная полоска, уходящая в правый нижний угол картинки, отмеченная кружком, и есть то место, где был перебит нерв.<br>\r\n<br>\r\nЯ сказал Константину, что никаких проблем удалении не вижу, тем более все осложнения, которые могли быть, он уже хапнул.<br>\r\n<br>\r\nКонстантин пунктуально прибыл в намеченный день и час. <b>3 июня 2023</b>. Осмотрев полость рта и «заколдованное» место, в частности, я предложил начать. Константин согласился, хоть и немного волновался. Но это и немудрено после всего того, что он прошёл.<br>\r\n<br>\r\nКонечно, меня посещали мысли, что же там такого, что первый раз почти 6 часов пытались удалить зуб, а во второй вообще фиганули нерв. Сделал анестезию, разрез, и удалил зуб за 4 минуты.<br>\r\n<br>\r\nБ***ь.<br>\r\n<br>\r\n4 минуты!<br>\r\n<br>\r\nМожет хотя бы 40? Нет, 4!<br>\r\n<br>\r\nЧто там искали? Закладку? Что столько пилили? Почему не смогли?<br>\r\n<br>\r\nУточняю: 3 минуты ждали, пока подействует анестезия, 4 минуты удаляли зуб, 5 минут накладывали швы, 3 минуты я катал Константина в кресле вверх и вниз. Всё. Меньше 15 минут ушло на удаление остатков зуба мудрости. На целый ушло бы не больше 25.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/3n/8f/ka/3n8fkawwsslqkhmpano8h75ykro.jpeg\" alt=\"image\" data-src=\"https://habrastorage.org/webt/3n/8f/ka/3n8fkawwsslqkhmpano8h75ykro.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\nБелые точки – это остатки йода от йодоформной турунды, которую уложили в больнице (если вы читали выписку). Он рентгеноконтрастен.<br>\r\n<br>\r\nОпешивший Константин меня приобнял, мы оба поох(*)али и посмеялись, а я решил написать эту статью.<br>\r\n<br>\r\nХороших вам врачей, друзья.<br>\r\n<br>\r\nСпасибо за внимание!<br>\r\n<br>\r\nВсегда ваш, Андрей Дашков.<br>\r\n<br>\r\n<b>Что еще почитать?</b><br>\r\n<br>\r\n<b>Про имплантацию зубов и костные пластики:</b><br>\r\n<br>\r\n<ul>\r\n<li><a href=\"https://habr.com/ru/post/459140/\">Установка имплантата: как это делается?</a></li>\r\n<li><a href=\"https://habr.com/ru/post/517572/\">Синус-лифтинг: как это делается?</a></li>\r\n<li><a href=\"https://habr.com/ru/post/521710/\">Расщепление в стоматологии: как это делается?</a></li>\r\n<li><a href=\"https://habr.com/ru/post/527550/\">Пересадка костного блока: как это делается?</a></li>\r\n<li><a href=\"https://habr.com/ru/post/455852/\">Синус-лифтинг и одномоментная имплантация</a></li>\r\n<li><a href=\"https://habr.com/ru/post/459956/\">Имплантация при полном отсутствии зубов, как следствие несвоевременного обращения к стоматологу</a></li>\r\n<li><a href=\"https://habr.com/ru/post/508928/\">Тотальное протезирование на имплантатах</a></li>\r\n<li><a href=\"https://habr.com/ru/post/569088/\">Одномоментная имплантация и немедленная нагрузка</a></li>\r\n</ul><br>\r\n<b>Про зубы мудрости и их удаление:</b><br>\r\n<br>\r\n<ul>\r\n<li><a href=\"https://habr.com/ru/post/455286/\">Зубы мудрости: удалить нельзя оставить</a></li>\r\n<li><a href=\"https://habr.com/ru/post/457336/\">Последствия несвоевременного удаления зубов мудрости. Часть I </a></li>\r\n<li><a href=\"https://habr.com/ru/post/563626/\">Последствия несвоевременного удаления зубов мудрости. Часть II</a></li>\r\n<li><a href=\"https://habr.com/ru/post/455499/\">Удаление зубов мудрости. Как это делается?</a></li>\r\n<li><a href=\"https://habr.com/ru/post/458218/\">ЧЛХ или не ЧЛХ? Вот в чем вопрос…</a></li>\r\n<li><a href=\"https://habr.com/ru/articles/727068/\">Челюстно-лицевая хирургия или нет? Вот в чем вопрос… Часть II</a></li>\r\n<li><a href=\"https://habr.com/ru/post/549560/\">Онемение после удаления зуба мудрости</a></li>\r\n<li><a href=\"https://habr.com/ru/post/670788/\">Зубы мудрости: «Выше только...»</a></li>\r\n<li><a href=\"https://habr.com/ru/post/456402/\">Зубы мудрости: Тянем-потянем!</a></li>\r\n</ul><br>\r\n<b>Про профессиональную гигиену полости рта:</b><br>\r\n<br>\r\n<ul>\r\n<li><a href=\"https://habr.com/ru/post/510398/\">Профессиональная гигиена полости рта. Часть I. Введение</a></li>\r\n<li><a href=\"https://habr.com/ru/post/512080/\">Профессиональная гигиена полости рта. Часть II. Как это делается?</a><br>\r\n </li>\r\n</ul><br>\r\n<b>И, конечно:</b><br>\r\n<br>\r\n<ul>\r\n<li><a href=\"https://habr.com/ru/post/557842/\">Удаление кисты малой слюнной железы. Как это делается?</a></li>\r\n<li><a href=\"https://habr.com/ru/articles/697420/\">Комплексный подход в стоматологии</a></li>\r\n<li><a href=\"https://habr.com/ru/post/600103/\">Дистализация зубов</a></li>\r\n<li><a href=\"https://habr.com/ru/post/576374/\">Сверхкомплектные зубы</a></li>\r\n<li><a href=\"https://habr.com/ru/post/538762/\">Удаление зуба, «недорого»… последствия</a></li>\r\n<li><a href=\"https://habr.com/ru/post/589611/\">Удаление зуба: как это делается?</a></li>\r\n<li><a href=\"https://habr.com/ru/post/505258/\">Стоматология: ожидание и реальность</a></li>\r\n<li><a href=\"https://habr.com/ru/post/489456/\">Рекомендации после приёма хирурга-стоматолога</a></li>\r\n<li><a href=\"https://habr.com/ru/post/479898/\">Голая правда</a> (статья о формировании стоимости лечения в стоматологической клинике)</li>\r\n</ul>', 1, '2023-06-12 22:03:38', 862802, 109, '/ru/articles/740604/', 'Как узнать, каким будет ваше будущее? Посмотреть на настоящее. Какими делами заполнен ваш день? Если вы хотите больше зарабатывать, но ничего для этого не делаете, то откуда взяться деньгам? Если хотите свободно говорить на английском, но не учите его, как это случится? Но проблема в том, что новые дела сложно ввести в привычный распорядок и превратить в привычки. Вот 8 способов, которые помогают мне это делать.  '),
(224, 'Постельный норматив: какой секс можно считать психологически безопасным?', '<figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b82/a42/fea/b82a42feaac38342942185ca3a22d6ab.png\" alt=\"Неплохая иллюстрация последствий\" title=\"Неплохая иллюстрация последствий\" width=\"1280\" height=\"720\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b82/a42/fea/b82a42feaac38342942185ca3a22d6ab.png\"><div><figcaption>Неплохая иллюстрация последствий</figcaption></figure><p>Вы обращали внимание на волатильность сексуального компонента в отношениях? От «высшего проявления любви» через «перевод отношений в горизонтальную плоскость» и «супружеского долга» до «изнасилования в браке» путь может быть очень коротким с минимальными стоянками на каждом из этапов. </p><p>И если об этом задумываться, то хочется понять, каким же образом происходит смена остановок, что допустимо, а что нет, с точки зрения здоровых отношений и заботы о партнере. Сразу скажу, что здесь не пойдет речь о сексуальных практиках, в которые партнеры вступают по предварительному обоюдному согласию. Мы сосредоточимся на формате сексуальных отношений и некоторых правилах, которые помогут расставить точки над i.</p><p><strong><em>Дисклеймер:</em></strong><em> В силу подхода к работе так сложилось, что обычно я консультирую людей интеллектуального труда. В последний год это преимущественно управленцы и сотрудники IT‑сферы. Это люди, которые всю жизнь решали любые проблемы «через голову». Такой подход неизбежно накладывает отпечаток на личность и внепрофессиональную жизнь. Минимизацией негативных последствий таких особенностей я занимаюсь. И в рамках статей на данном ресурсе стараюсь обобщить профессиональный опыт и дать полезную информацию.</em></p><p>Во время написания статьи, я подумал, что, в отличие от большинства предыдущих статей, не буду приводить определение термина, о котором пойдет речь, ибо «и так же всё понятно». Но погрузившись в тему, решил, что следует это сделать, чтобы сложилось более полное понимание феномена. Скажу честно, что до создания статьи, я рассматривал термины «секс» и «половой акт» как синонимы, отличающиеся больше стилистической окраской. Поэтому, более корректно будет использовать термин «сексуальное поведение», на которое я и буду ссылаться в рамках статьи. Отсюда и далее, стоит воспринимать слово «секс» именно в таком значении:</p><blockquote><p><strong>Сексуа́льное</strong> или <strong>полово́е поведе́ние челове́ка</strong> — совокупность психических реакций, установок и поступков, связанных с проявлением и удовлетворением полового влечения человека. <br>Сексуальное поведение является одной из форм взаимодействия индивидов и представляет собой практическую реализацию сексуальности человека, являясь одним из вариантов социального поведения. <br>Хотя сексуальное поведение человека тесно связано с репродуктивной функцией, однако оно, в отличие от полового поведения животных, определяется социальным развитием конкретной личности. Поэтому сексуальное поведение человека относительно автономно от его репродуктивной функции.</p></blockquote><p>И в нём для нашего понимания важны следующие пункты:</p><ul><li><p>совокупность психических реакций, установок и поступков, связанных с проявлением и удовлетворением полового влечения. То есть, мы понимаем, что само влечение существует не просто так, оно проявляется через определенные поступки, действия и установки. Влечение выступает мотивом, а форма его реализации может быть различной.</p></li><li><p>Сексуальное поведение является одной из форм взаимодействия индивидов. Ключевым словом является «взаимодействие», следовательно, мы не будем рассматривать в рамках данной статьи изолированное проявление и удовлетворение влечения человеком.</p></li><li><p>Сексуальное поведение человека относительно автономно от его репродуктивной функции. И это значит, что влечение и стремление завести потомство – разные мотивы. И не стоит сводить секс к заведению потомства.</p></li></ul><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/490/d04/ea7/490d04ea70b647f3c335d4081fe1e6b8.png\" alt=\"Если ставить прямо тематические картинки, то сайт нужно переименовать в pornhabr\" title=\"Если ставить прямо тематические картинки, то сайт нужно переименовать в pornhabr\" width=\"1600\" height=\"900\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/490/d04/ea7/490d04ea70b647f3c335d4081fe1e6b8.png\"><div><figcaption>Если ставить прямо тематические картинки, то сайт нужно переименовать в pornhabr</figcaption></figure><p>Теперь, когда мы понимаем, что секс – это не просто 3-13 минут (именно столько длится, по мнению большинства исследователей, нормальный и «оптимальный» половой акт), а еще дни, месяцы и годы вокруг него. И вот про этот период мы, преимущественно, будем говорить. И самое важное, с чего следует начать, это вопрос – а каким критериям должно соответствовать сексуальное поведение, чтобы оно считалось адекватным, здоровым и безопасным? Сексологи выделяют четыре базовых критерия:</p><ol><li><p><strong>Безопасность</strong> - это значит, что нас волнует жизнь и здоровье партнёра, его психологическое и физическое состояние. Значит, что мы не используем его сугубо для удовлетворения своих нужд;</p></li><li><p><strong>Добровольность</strong> - отсутствие принуждения к сексу. Как принуждения прямого (физического), так и шантажа любого рода, угроз, обмана, манипуляции, давления, использования алкоголя или наркотических средств с целью переломить волю партнера или снизить его возможности к сопротивлению. <strong>Важный момент!</strong> Сам по себе половой акт под влиянием алкоголя или наркотических средств не является чем-то плохим или неадекватным. Но важно отдавать себе отчет, что именно сексуальное поведение может стать неадекватным у одного или обоих партнеров, что снизит качество отношений, качество полового акта и создаст как психологические, так и юридические риски;</p></li><li><p><strong>Осознанность</strong> - ваш партнёр в курсе, чем вы будете заниматься, что это такое и для чего нужно. Здесь подразумевается, что с партнером, не имеющим представления о сексе, нельзя им заниматься. То есть, именно этот критерий и отсекает такие варианты парафилии (нарушение влечения) как зоофилия и педофилия. Также этот пункт является логичным следствием алкогольного или наркотического опьянения из прошлого блока, уточняя, что если партнер находится в бессознательном состоянии или не может отдавать себе отчета о происходящем, то секс может неожиданно легко превратиться в изнасилование, которое чревато не только психологическими, но и юридическими последствиями;</p></li><li><p><strong>Стремление к получению удовольствия</strong> - единственный адекватный мотив для секса. Не самоутверждение, не получение материальных или иных благ, не попытка привязать партнёра к себе через секс. Только получение удовольствия.</p></li></ol><p>Обращу внимание, что здесь не идёт речи про количество партнеров, их половой и гендерный состав, варианты сексуальных практик, использование тех или иных игрушек и приспособлений.</p><ul><li><p><em>Вы можете заниматься сексом в гордом одиночестве, а можете с группой людей - это нормально.</em></p></li><li><p><em>Вы можете заниматься сексом с партнером того же пола - это </em><strong><em>КоАП РФ Статья 6.21</em></strong></p></li><li><p><em>Вы можете использовать всё, что нравится вам и партнёру - это нормально.</em></p></li></ul><p>Говоря иначе, это четыре базовых критерия, которые позволяют провести четкую границу между здоровым и нездоровым проявлением сексуального поведения. И в дальнейшем я буду на них ссылаться. И чтобы понимание было полноценным, нам требуется познакомиться с еще одним понятием – <strong>активным согласием</strong>. И тут будет любопытно взглянуть эволюцию этой идеи.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/edd/97f/b1d/edd97fb1d3b6bfaf5f77feeba312f724.png\" alt=\"Не самая редкая ситуация, правда?\" title=\"Не самая редкая ситуация, правда?\" width=\"1280\" height=\"853\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/edd/97f/b1d/edd97fb1d3b6bfaf5f77feeba312f724.png\"><div><figcaption>Не самая редкая ситуация, правда?</figcaption></figure><p>Первый этап, через который прошла «культура согласия» выражался во фразе <em>«Нет – значит нет»</em>. То есть, упор делался на по умолчанию подразумеваемое согласие, которое может быть отозвано словом «нет». Сопоставляя его с описанными выше пунктами, мы понимаем, что такая концепция может вступать в конфликт с критериями «добровольности» и «осознанности», так как, например, один из партнеров в стабильной паре может банально «перепить» и не смочь отказаться от полового акта. А второй партнер, руководствуясь «подразумеваемым согласием» может совершить, фактически, изнасилование.</p><p>Далее идея перешла в свою вторую фазу, которая отражается во фразе <em>«Да – значит да»</em>. То есть, отвергается концепция подразумеваемого согласия и заменяется идеей подразумеваемого несогласия. И в этом случае, требуется получить четкое и однозначное согласие партнера на половой акт. На сегодняшний день, именно этот формат считается адекватным.</p><p>И вот тут следует прояснить еще один момент, который мог скрыться между строк. Согласие – это не единожды сказанное «да». Согласие – это состояние добровольной готовности. Согласие, как и готовность, могут исчезнуть в любой момент, даже во время непосредственно полового акта. И как только это согласие отозвано, заканчивается секс и начинается изнасилование. </p><p>Давайте кратко разберем пункты, которые могут быть восприняты как нарушение базовых критериев:</p><p><strong>Нарушение критерия безопасности</strong></p><ul><li><p>Игнорирование физического состояния партнера до и во время близости (например, головной боли или неприятных ощущений)</p></li><li><p>Высмеивание или критика сексуальных желаний или предпочтений партнера</p></li><li><p>Деструктивная критика партнера, его внешности или физиологических особенностей</p></li><li><p>Отказ от использования контрацепции, если партнер на этом настаивает</p></li></ul><p><strong>Нарушение критерия добровольности</strong></p><ul><li><p>Принуждение к половому акту</p></li><li><p>Принуждение к определенным практикам во время полового акта</p></li><li><p>Ограничение свободы партнера, если это не является заранее согласованной сексуальной практикой</p></li></ul><p><strong>Нарушение критерия осознанности</strong></p><ul><li><p>Склонение к половому акту партнера, находящего в состоянии алкогольного или наркотического опьянения</p></li><li><p>Склонение к непривычному или новому формату полового акта партера, находящегося в состоянии алкогольного или наркотического опьянения</p></li><li><p>Введение партнера в заблуждение, предлагая ему тот или иной формат/практику сексуальных отношений</p></li></ul><p><strong>Нарушение критерия удовольствия</strong></p><ul><li><p>Игнорирование удовольствия партнера в процессе полового акта</p></li><li><p>Игнорирование важности удовлетворения (оргазма) партнера</p></li><li><p>Игнорирование пожеланий и предпочтений партнера</p></li></ul><p>На этом моменте, мы приблизительно определились с тем, что считать согласием на половой акт. Но как и было сказано выше – сексуальное поведение не ограничивается половым актом, а включает в себя целый ряд социальных взаимодействий. И вот о них пойдет сейчас речь. И тут нам понадобится еще один интересный термин – монополия на сексуальные отношения.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/cf4/824/a87/cf4824a874a1e1d202861879bb4e04a6.png\" alt=\"Тот момент, когда для искал для иллюстрации уголь, а нашел золото\" title=\"Тот момент, когда для искал для иллюстрации уголь, а нашел золото\" width=\"650\" height=\"650\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/cf4/824/a87/cf4824a874a1e1d202861879bb4e04a6.png\"><div><figcaption>Тот момент, когда для искал для иллюстрации уголь, а нашел золото</figcaption></figure><blockquote><p><strong>Монополия на сексуальные отношения</strong> – договоренность партнеров об определенных формах сексуального поведения, которое может проявляться по отношению к другим людям без последующих санкций. </p></blockquote><p>Говоря иначе, «легализация» форм подобного поведения. Говоря еще проще – что считается изменой.</p><p>И здесь опять стоит напомнить, что под «сексом» мы понимаем не только половой акт или иные формы непосредственно сексуальной активности, а также социальное взаимодействие людей, которое затрагивает эту тему. И самое частое нарушение этой (пусть и не озвученной) монополии – обсуждение сексуальных тем с другими людьми и обсуждение вашей с партнером сексуальной жизни с другими.</p><p>Несомненно, секс, как одна из табуированных в обществе тем, вызывает интерес. И практически каждый человек общается на эту тему со своими знакомыми. В ход идет всё: от личных впечатлений и ощущений до описания «Тактико-Технических Характеристик» формы и размеров первичных половых признаков и описания особенностей процесса. И зачастую, если «обсуждаемый» об этом узнает, то ему будет некомфортно, потому что см п. 1 – безопасность. Сохранность тайн, личного пространства и интимных предпочтений вполне может быть важным и чувствительным для партнера моментом. </p><p>И не зря критерий безопасности стоит на первом месте. Именно этот критерий, который включает в себя физическую, психологическую, информационную, репродуктивную и иные виды безопасности, создает путь к доверию и, следовательно, возможности проявлению своих желаний, стремлений и интересов, которые могут выходить за границы социально-одобряемых пределов, но при этом быть желанными для конкретных людей. </p><p>А закончить мне бы хотелось картинкой со звуком:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/4fc/c80/73d/4fcc8073dd8eed559787b708f9ab87b8.png\" alt=\"Каким бы ни был секс, главное, чтобы он был...\" title=\"Каким бы ни был секс, главное, чтобы он был...\" width=\"1380\" height=\"774\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/4fc/c80/73d/4fcc8073dd8eed559787b708f9ab87b8.png\"><div><figcaption>Каким бы ни был секс, главное, чтобы он был...</figcaption></figure><p>С уважением<br>Сергей Максимов.<br>Психолог.</p><p><strong><em>P. S. Если вдруг интересны другие статьи по психологии, они есть в моем ТГ‑канале. Только статьи, без мемов и спама. </em></strong><a href=\"https://t.me/maximov_psy\" rel=\"noopener noreferrer nofollow\"><u>https://t.me/maximov_psy</u></a></p><p></p>', 3, '2023-06-12 22:03:38', 426988, 109, '/ru/articles/739770/', 'Как и обещали, публикуем вторую часть инструкции нашего коллеги, Игоря Иванова, по выращиванию гигантских арбузов в условиях средней полосы. В этой части переходим к практике — прививаем арбуз, высаживаем в открытый грунт и собираем урожай.Осторожно, много фото!'),
(225, 'Как узнать, какое будущее вас ждет?', '<p>Посмотреть на свое настоящее. Какими делами заполнен ваш день? Если вы хотите больше зарабатывать, но ничего для этого не делаете, то откуда взяться деньгам? Если хотите свободно говорить на английском, но не учите его, как это случится? Но проблема в том, что новые дела сложно ввести в привычный распорядок и превратить в привычки. Вот 8 способов, которые помогают мне это делать.  </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/ec6/ce7/705/ec6ce7705d68e5b19e37439fc9a8b622.jpg\" alt=\"Я посмотрел 14000605 вариантов будущего и ни в одном из них заклинание «С понедельника начну» не сработало  \" title=\"Я посмотрел 14000605 вариантов будущего и ни в одном из них заклинание «С понедельника начну» не сработало  \" width=\"1000\" height=\"545\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ec6/ce7/705/ec6ce7705d68e5b19e37439fc9a8b622.jpg\" data-blurred=\"true\"><div><figcaption>Я посмотрел 14000605 вариантов будущего и ни в одном из них заклинание «С понедельника начну» не сработало  </figcaption></figure><h3>Почему сложно внедрять привычки?</h3><p>Почему я делаю такой упор на привычках? Потому что привычки определяют судьбу. Есть привычка пить — станешь алкоголиком. Есть привычка зарабатывать — станешь миллионером. Как говорится: «Посеешь привычку, пожнешь характер. Посеешь характер — пожнешь судьбу». Но мало кому удается легко обзаводиться полезными привычками.</p><p>Как обычно мы пытаемся внедрять новые привычки? Нам приходит в голову идея, что надо похудеть, освоить новую профессию, открыть бизнес или выучить английский, и вот, заряженные предвкушением результата, мы начинаем действовать.</p><p>Воодушевление помогает сделать первые шаги, а дальше мы сталкиваемся с первыми трудностями, и все становится не так радужно. Кто-то бросает уже на этом этапе, кто-то продолжает идти на силе воле: «Я решил, значит, сделаю». Однако, сила воли истощается, и в итоге сдаются почти все.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/da4/995/11d/da499511de1fa96cd71c605ed1c80fea.jpg\" alt=\"3 простых шага от восторга до фиаско  \" title=\"3 простых шага от восторга до фиаско  \" width=\"1000\" height=\"314\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/da4/995/11d/da499511de1fa96cd71c605ed1c80fea.jpg\" data-blurred=\"true\"><div><figcaption>3 простых шага от восторга до фиаско  </figcaption></figure><p>Но не все. Возникает вопрос, как превратить припадки активности в продуктивную и регулярную деятельность? Как из воодушевления создать устойчивую привычку? Построить «гардеробную».</p><h3>Строим «гардеробную»</h3><p>Когда-то давно у меня было маркетинговое агентство и одним из первых клиентов был дизайнер интерьеров. Мы пили чай, говорили о том о сем, и он сказал:</p><p>— Знаешь, во многих семьях есть такая проблема. Муж приходит с работы, бросает носки в гостинной, жена его пилит годами, но ничего не меняется. Знаешь, как выглядит дизайнерское решение этой проблемы?</p><p>— Как? — я был заинтригован.</p><p>— Я предлагаю своим клиентам построить гардеробную. Теперь муж заходит домой, присаживается на диванчик в гардеробной, разувается, снимает носки и бросает их в корзину с грязным бельем, которая стоит тут же. Он не понесет их в гостинную, поскольку ему придется потратить больше сил.</p><p>Так вот для привычек тоже очень полезно построить своеобразную «гардеробную», которая поможет сэкономить усилия на внедрении привычки.</p><h3>А смысл?</h3><p>Первое, без чего внедрение новой привычки обречено на провал — это отсутствие смысла. Если я не понимаю, зачем мне тратить силы на преодоление трудностей, то, естественно, я саботирую начинание.</p><p>Например, когда я затеял четвертый по счету бизнес, у меня была очень понятная мотивация. Мне было чуть меньше 40 лет. Предыдущий бизнес приносил небольшую стабильную прибыль, но я не мог сделать так, чтобы он приносил больше. В результате для меня стало крайне важно разобраться, что надо делать, чтобы бизнес рос. Иначе меня ждали бы очень скверные перспективы и нищенская старость.</p><p>Проверить, обладает ли привычка, которую вы хотите внедрить, для вас смыслом просто. Если встает выбор позаниматься новым делом или посмотреть сериал (или что вы любите делать), и вы регулярно выбираете сериал, то нет, не обладает. Надо либо искать новый смысл, либо смириться с тем, что новая привычка не приживется.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/991/a7a/350/991a7a350352d1bc731787ae2cfa74a1.jpg\" width=\"1000\" height=\"565\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/991/a7a/350/991a7a350352d1bc731787ae2cfa74a1.jpg\" data-blurred=\"true\"></figure><h3>Освобождаем место</h3><p>Может казаться, что у нас много свободного времени, но это не так. Каждая минута нашей жизни чем-то занята. Любые дела — полежать на диване, посмотреть сериал, поиграть в игры удовлетворяют какую-то нашу потребность. Когда мы пытаемся запихнуть на их место новую привычку, то сначала все идет хорошо, но потом организм очухивается и говорит: «Так, стопэ. У меня тут потребности раньше удовлетворялись, а теперь нет. Вертай все назад».</p><p>Именно поэтому важно подумать, какие дела мы перестанем делать, когда начнем делать новые.</p><p>Лайфхак, который я использую, заменять новыми привычками дела, которые меня бесят или вызывают тоску. Например, вместо того, чтобы убираться— нанять клининг, а самому написать новую статью. Или делегировать часть рутинных процессов в бизнесе, а за это время разобраться как работает новый рекламный канал. Заменяя скучные дела интересными, я существенно увеличиваю шансы, что они закрепятся в моем расписании.</p><h3>Понемногу</h3><p>Этот пункт я использую, только если новая привычка вызывает сопротивление. Скажем, надо найти блогеров для рекламы, а мне не хочется. Тогда я начну с простого — выделю на эту задачу 20 минут в день. Когда немного освоюсь — 30 минут, затем 40. Это поможет привыкнуть к новой задаче и разобраться в ней.</p><p>Этот трюк, кстати, отлично помогает, если ваше ключевое опасение, что у вас нет времени на новую привычку. Найти 20 минут в день вполне реально, а затем это время можно постепенно расширить и довести, скажем, до часа.</p><h3>Привычка к привычке</h3><p>Еще один способ, который я практиковал, но так и не понял, насколько он хорошо работает сам по себе — это цеплять привычку к привычке.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/ec9/424/b03/ec9424b038e8a2be63873f7121937f72.jpg\" alt=\"И привычка будет следовать за привычкой  \" title=\"И привычка будет следовать за привычкой  \" width=\"1000\" height=\"416\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ec9/424/b03/ec9424b038e8a2be63873f7121937f72.jpg\" data-blurred=\"true\"><div><figcaption>И привычка будет следовать за привычкой  </figcaption></figure><p>Скажем, у вас выработана четкая последовательность действий. Вы завтракаете, чистите зубы, просматриваете рабочую почту, а с понедельника решаете писать посты в блог. Так вот если встроить написание постов сразу после разгребания почты, то должно получится проще. У меня это всегда работало в комплексе с другими способами, эффективно ли это само по себе — не знаю.</p><h3>Упростить начало</h3><p>А вот этот трюк совершенно точно облегчил мне несколько начинаний. Бывают дела, которые сложно начать. Скажем, нужно идти в спортзал, но если сумка одеждой не собрана, то возникает дополнительное препятствие, которое может загубить все дело.</p><p>У меня таким препятствием оказалась необходимость придумывать темы для статей и постов. Не раз было так, что я садился писать, а мыслей в голове не было. В результате я тратил много времени, прежде чем нащупать то, о чем интересно рассказать в моменте.</p><p>Решил я эту задачу просто. Разбил ее на два этапа:</p><ol><li><p>придумываю тему;</p></li><li><p>пишу пост (статью).</p></li></ol><p>Темы я придумываю в свободное время, пока гуляю по берегу моря, и просто записываю голосовушки. В результате на это не приходится специально тратить время, а из множества готовых тем всегда найдется та, про которую хочется сейчас рассказать (эта статья не исключение).</p><h3>Напомнить</h3><p>Очевидный способ, но его важно упомянуть. Если я не запишу, что мне надо сделать дело, то шансы, что я его не сделаю, вырастают кратно. Кто-то любит вести списки в Notion и прочих digital-планировщиках, а мне нравится старая добрая бумага, поскольку я обожаю вычеркивать дела, которые сделал.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/d6d/bf3/05b/d6dbf305bf7bbd0aac6351ac90562406.jpg\" width=\"1000\" height=\"656\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d6d/bf3/05b/d6dbf305bf7bbd0aac6351ac90562406.jpg\" data-blurred=\"true\"></figure><h3>Кнут</h3><p>Мы любим воображать, что устроены сложно, но в каком-то смысле мы устроены просто. Например, все наши укоренившиеся привычки укоренились только потому, что мы получаем вознаграждение, пока им следуем, и дискомфорт, когда от них отказываемся.</p><p>Например, после того, как почистим зубы, мы испытываем приятное чувство свежести во рту, а если этого не сделаем, то будем время от времени с неудовольствием трогать зубы языком и ощущать на них лишний «налет» или кусочки пищи.</p><p>Но это когда привычка укоренилась. А вот когда она только формируется, систему из кнута и пряника можно создавать искусственно.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/244/ad9/a7a/244ad9a7a9c129283baf10d1c98a9d9a.jpg\" alt=\"Важно найти правильный кнут  \" title=\"Важно найти правильный кнут  \" width=\"1000\" height=\"480\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/244/ad9/a7a/244ad9a7a9c129283baf10d1c98a9d9a.jpg\" data-blurred=\"true\"><div><figcaption>Важно найти правильный кнут  </figcaption></figure><p>Например, я 10 лет хотел, но не мог написать художественный роман. А потом попросил свою знакомую об услуге. Мы договорились, что раз в 2 дня я должен отправлять ей новую страницу романа. Она могла ее не читать, но должна была напоминать мне, что я не сдержал слово. Благодаря этому приему я написал черновую редакцию, а позже <a href=\"https://www.litres.ru/book/maksim-shishov-10377017/literaturnyy-roman-21993626/\" rel=\"noopener noreferrer nofollow\">закончил роман</a>. Трюк с кнутом сработал.</p><p>Вы можете подобрать персональный кнут для себя — это может быть публичное обещание, пари, денежный штраф, лишение себя десерта (самый жестокий способ), словом, что-то, что не даст вам слиться, когда будет трудно.</p><h3>Пряник</h3><p>Но с одним кнутом дело идет грустно. Нужен еще и пряник.</p><p>Люди не достигают многих целей ровно по той причине, что не видят положительной мотивации их достигать. Очень показательный пример здесь с попыткой заработать больше денег. Почти все хотят зарабатывать больше. И многие пытаются. И, допустим, вам это удалось, и ваш доход вырос вдвое.</p><p>Если вы взрослый человек, обремененный детьми и ипотекой, то, вероятно, ваш дополнительный доход тут же разлетится на то, чтобы быстрее погасить ипотеку, сделать ремонт или зубы, купить детям игрушки (образование, компьютер). В результате ваша эмоциональная часть почувствует себя обокраденной: «Я старалась, ишачила, зарабатывала, а куда все делось? Досрочное погашение ипотеки и ремонт как-то не возбуждают. Где радость-то от дополнительных денег? Ради чего все это было?»</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/467/e36/11d/467e3611d83cbf948fd0e4b36bd00e7f.jpg\" width=\"1000\" height=\"692\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/467/e36/11d/467e3611d83cbf948fd0e4b36bd00e7f.jpg\" data-blurred=\"true\"></figure><p>В результате со стороны эмоциональной части начинается саботаж, и вот ваш доход скатывается на прежний уровень, поскольку нет смысла впахивать и не радовать себя (по мнению, эмоциональной части, рациональная часть с ней не согласится).</p><p>Поэтому так важно вознаграждать себя не только за результаты, но и за усилия в нужном направлении. Написал пост? Молодец, возьми на полке пирожок. Пробежал 5 километров? Умница, посмотри сериал. Если же речь идет о заработке дополнительных денег, то очень важно часть их потратить на какие-то новые радости будь то поход в кафе, покупка нового айфона или бугатти (у каждого свое представление о дополнительных деньгах).</p><p>А какие способы помогают вам не бросать новые начинания? Поделитесь, пожалуйста, в комментариях. Ну и если статья показалась интересной, <a href=\"https://t.me/voprk\" rel=\"noopener noreferrer nofollow\">подписывайтесь на мой телеграм-канал</a>, где пишу про разные ментальные ловушки и лайфхаки, которые помогают с ними справиться.</p>', 1, '2023-06-12 22:03:39', 213762, 82, '/ru/articles/739702/', 'Судя по предыдущей части, оказание первой помощи оказалась трепетной темой. Поэтому я решилась написать вторую часть, посвященную практике. Можете сохранить эту статью себе в заметки, в экстренной ситуации может вам пригодится. Хорошо бы, чтобы не пригодилось, но если что — держите.Итак, необходимо придерживаться четырёх шагов при оказании первой помощи.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(226, 'Как айтишник гигантские арбузы в средней полосе выращивал. Часть 2', '<p>Как и обещали, публикуем вторую часть инструкции нашего коллеги, Игоря Иванова, по выращиванию гигантских арбузов в условиях средней полосы. В этой части переходим к практике - прививаем арбуз, высаживаем в открытый грунт и собираем урожай.</p><p>Осторожно, много фото!</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/ec9/3ae/3af/ec93ae3afecd43efb8f98da311a3a76e.png\" width=\"1600\" height=\"900\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ec9/3ae/3af/ec93ae3afecd43efb8f98da311a3a76e.png\"></figure><blockquote><p>Ссылка на <a href=\"https://habr.com/ru/companies/maxilect/articles/737838/\">первую часть</a> (кто не читал) </p></blockquote><h3>Инструменты для прививки</h3><p>Первое что нам потребуется - это острый и удобный инструмент. Последние 2-3 года я использую дешевые скальпели со сменными лезвиями с Алиэкспресс, также вполне сгодятся лезвия для строительных резаков в виде трапеции:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b54/166/753/b54166753bea182755c6b8b720d9b068.png\" width=\"1390\" height=\"629\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b54/166/753/b54166753bea182755c6b8b720d9b068.png\"></figure><p>Еще нам потребуются клипсы для прививки, которые можно заменить стрейч‑пленкой или фум‑лентой. Последний вариант я крайне не рекомендую. Во время тотального локдауна я не смог выехать в город за клипсами и использовал два вида фум‑ленты, которые были под рукой на даче. В итоге один из них оказался с мерзкой пропиткой, которая благополучно убила место прививки, т. е. арбузы вместе с подвоем. И стрейч‑пленка, и фум‑лента обладают малой растяжимостью и использовать надо очень кратковременно, т.к. стволы растений постоянно утолщаются по мере роста и место прививки начинает пережиматься.</p><p>Вот два самых популярных вида клипс для прививок с Алиэкспресс:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/252/747/2f5/2527472f5f1bf26c49e9303330944173.png\" width=\"1299\" height=\"799\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/252/747/2f5/2527472f5f1bf26c49e9303330944173.png\"></figure><p>Первые — жесткие пластиковые, бывают с разной формой полости внутри клипс (круглые, овальные). Их минусы — существенный вес, который в некоторых случаях может потребовать поддержки, а также довольно жесткая пружина, которая ограничивает рост ствола растения. Некоторые бахчеводы использую только их, попробуйте, возможно они окажутся удобнее и для вас.</p><p>Второй вариант, который я использую, — мягкие клипсы из силиконоподобного пластика. Обладают малым весом, сделаны из очень мягкого пластика и не препятствуют росту ствола. Сила прижима регулируется (но только однократно) пережиманием пружинки клипсы плоскогубцами. Удалять такие клипсы можно при высадке в грунт, т.к. они практически не мешают растению развиваться.</p><h3>Методы прививки и что делать с арбузами после нее</h3><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/db5/999/86f/db599986fae628936010dff5b3879907.png\" width=\"748\" height=\"1009\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/db5/999/86f/db599986fae628936010dff5b3879907.png\"></figure><p>Для иллюстрации способов прививки арбузов воспользуемся картинками из <a href=\"https://www.syngenta.ru/crops/crops-vegetables/20230410-watermelon-grafting-technology\"><u>статьи</u></a> компании Syngenta с небольшими корректировками алгоритма.</p><p><strong>Первый способ</strong>, который использую я. По мнению большинства бахчеводов он является самым беспроблемным, но наиболее трудозатратным (в момент прививки, но не после нее):</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/346/e1b/914/346e1b914ce3c801034448ba6e0db78f.png\" width=\"1100\" height=\"411\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/346/e1b/914/346e1b914ce3c801034448ba6e0db78f.png\"></figure><p>Называется он «Сближение» или просто «прививка язычком». Выполняется следующим образом:</p><ol><li><p>Извлекаем арбуз и подвой из земли, стараясь при этом максимально очистить корни от земли, т.к. ее вес может порвать надрезанный ствол. </p></li><li><p>На подвое и арбузе зачищаем под углом 90 градусов ствол в месте будущей прививки (таким образом удаляется внешний покров со ствола — это увеличивает площадь контакта и улучшает дальнейшее сращивание). </p></li><li><p>На подвое делаем надрез длиной 5–10мм под углом вниз к корням, на арбузе делаем аналогичный надрез по направлению вверх к семядольным листьям. </p></li><li><p>Совмещаем подвой и арбуз, закрепляем место прививки клипсой или лентой. У подвоя удаляем все настоящие листья или их зачатки, сажаем получившегося монстрика в индивидуальную тару (место прививки должно быть на пару сантиметров выше земли). </p></li><li><p>Убираем на сутки в тень. После этого можно перемещать рассаду на солнечный подоконник или стеллажи с искусственной подсветкой. </p></li><li><p>Через 3 дня после прививки аккуратно пережимаем стебель арбуза пинцетом, чтобы стимулировать арбуз к переходу на питание от корней подвоя.</p></li><li><p>Еще через 3–4 дня перерезаем стебель арбуза.</p></li><li><p>Высаживаем в грунт. Все это время следим за появлением настоящих листьев у подвоя и удаляем их. Через некоторое время он смирится с «нахлебником» на своем стволе и перестанет пытаться отрастить собственные, а еще чуть позже сами отомрут и его семядольные листья.</p></li></ol><p>Все последующие методы подразумевают удаление корня у арбуза в момент прививки и требуют обязательного контроля влажности с периодическими проветриваниями по часам до завершения срастания арбуза и подвоя. Для этого необходимо либо отдельное помещение с автоматикой, либо подобный мини‑парник:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/241/759/8eb/2417598eb9d8589b87fc2e187821a64f.png\" width=\"580\" height=\"819\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/241/759/8eb/2417598eb9d8589b87fc2e187821a64f.png\"></figure><p>Несомненный плюс всех этих способов — это отсутствие возни с пересадкой. Арбузы можно выращивать кучей в одной емкости, а подвой в индивидуальных емкостях, из которых их потом и высаживают на постоянное место.</p><p><strong>Второй способ</strong> прививки — это так называемая «прививка в укол». В этом случае у подвоя удаляется точка роста, делается прокол на ее месте, арбуз отрезается под углом и вставляется в полученное отверстие:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a46/d36/fb9/a46d36fb975433738e216b9556a85625.png\" width=\"706\" height=\"305\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a46/d36/fb9/a46d36fb975433738e216b9556a85625.png\"></figure><p>Основной минус данного способа — если после прививки выдерживать слишком высокую влажность и пренебрегать проветриванием для стимулирования срастания, арбуз может вырастить новый корень в полости, которая есть в стволе подвоя, и все ваши старания пойдут насмарку. Узнаете вы об этом через пару недель после высадки, когда арбуз продолжит зеленеть, а стебель подвоя усохнет.</p><p><strong>Третий способ</strong> — «сплайс‑трансплантат». Очень похож на предыдущий, но лишен его основного недостатка в виде большой вероятности прорастания корней арбуза сквозь подвой. В этом случае вместе с точкой роста отсекается одна из семядолей подвоя и на ее место закрепляется арбуз:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f50/5ca/8a3/f505ca8a38acd05b3e15a63a4b1ea40d.png\" width=\"705\" height=\"292\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f50/5ca/8a3/f505ca8a38acd05b3e15a63a4b1ea40d.png\"></figure><p><strong>Четвертый способ</strong> по сути является некоторой комбинацией первого и третьего - прививка в боковой разрез:</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/356/ba0/bf1/356ba0bf1d9296dcecd5c0ceac4e24dc.png\" width=\"300\" height=\"301\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/356/ba0/bf1/356ba0bf1d9296dcecd5c0ceac4e24dc.png\"></figure><p>По моему опыту это самый легкий способ в плане скорости сращения (после прививки «язычком»). </p><p>Резюмируя все вышесказанное, я бы рекомендовал для начинающих прививку «язычком». Попробуйте и остальные способы, возможно они вам понравятся больше. Выбрать подходящий способ прививки можно, не дожидаясь нового сезона. Холодными зимними вечерами можно купить семена какого‑нибудь дешевого арбуза (Шуга бейби, Огонек), семена лагенарии или тыквы и прививать, прививать, набивая руку и собирая все шишки. Именно так я сделал в первый год, когда сам впервые узнал о прививке арбузов.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b72/95f/97c/b7295f97cbfae679bed380f40d8637e9.png\" width=\"757\" height=\"1009\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b72/95f/97c/b7295f97cbfae679bed380f40d8637e9.png\"></figure><h3>Освещение и уход</h3><p>Если у вас имеется несколько южных окон или застекленных балконов/лоджий, то рассаду до высадки вполне можно выращивать на них, не заморачиваясь с дополнительным освещением, т.к. к апрелю‑маю продолжительность светового дня и интенсивность света вполне достаточна, чтобы рассада прожила пару недель до высадки. В моем случае такой вариант не подходит, т.к. рассады у меня существенно больше, чем позволяют разместить окна.</p><p>За последние несколько лет по мере изменения цен на светильники в магазинах и на Алиэкспрессе я использовал разные варианты. Первый вариант, который верой и правдой отслужил несколько лет, — металлические стеллажи с наклеенными на них светодиодными лентами. Основные недостатки такого варианта: необходимость где‑то размещать блоки питания лент, потеря около 20% мощности на токоограничивающих резисторах лент и неэффективное размещение — между поддонами и полками для охлаждения лент приходится оставлять расстояние. </p><p>После 3–4 сезонов светимость лент упала и было решено заменить их на матрицы 30 Вт с активным охлаждением в виде старых кулеров от CPU, благо айтишнику они достаются бесплатно со старой техники. Часть матриц покупалась с фито‑спектром (также известны как «ловите наркомана!»), но как показала практика, кроме вырвиглазного света никаких преимуществ они не дают по сравнению с обычными матрицами.</p><p>После переезда в новую квартиру в связи с отсутствием лоджий было решено собрать более эстетичный и легкоразборный вариант, благо сейчас светодиодные светильники стоят небольших денег и в местных магазинах. В качестве основы конструкции был выбран подобный пластиковый быстроразборный стеллаж:<br></p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/967/45d/0cd/96745d0cdc18814444657898cee4f6b2.png\" width=\"1126\" height=\"1600\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/967/45d/0cd/96745d0cdc18814444657898cee4f6b2.png\"></figure><p>К ребрам жесткости каждой из его полок стяжками закреплено по три линейных светильника подходящей длины:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/513/d21/8f5/513d218f52e530b4528bac1711e8f5a8.png\" width=\"1600\" height=\"1199\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/513/d21/8f5/513d218f52e530b4528bac1711e8f5a8.png\"></figure><p>Таймер использую самый дешевый электронный, время работы освещения с 8 до 22 часов.<strong><br></strong></p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/c0f/be0/394/c0fbe0394ab54456a5124a2e18baec6a.png\" width=\"1600\" height=\"1600\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/c0f/be0/394/c0fbe0394ab54456a5124a2e18baec6a.png\"></figure><p>Остальной уход заключается в регулярном поливе и корневой подкормке комплексными удобрениями, если рассада задерживается в квартире больше двух недель из-за неподходящих для высадки погодных условий.</p><h3>Высадка рассады в открытый грунт, полив и агротехника</h3><p>Перед высадкой рассады необходимо подготовить участок земли, где будут выращиваться наши арбузы. </p><p>Сразу отмечу, что тут речь пойдет только о высадке в открытый грунт. Выращивание арбузов в теплице — отдельная наука. Там надо правильно формировать куст, опылять, подвязывать плоды. У меня в этом опыта мало. Я только несколько раз высаживал по паре кустов в теплицу, чтобы получить ранний урожай в июле на день рождения супруги и сына.</p><p>Основное требование к делянке — ширина данного участка минимум 3 метра, т.к. привитые арбузы могут занимать очень существенную площадь и к середине лета она превратится в сплошной зеленый ковер. Землю перекапываем ранней весной, как только она достаточно прогреется и просохнет. При перекопке желательно внести комплексные минеральные удобрения (например, Bona Forte, Fertica), строго соблюдая нормы от производителя, т.к. арбузы, как впрочем и остальные бахчевые, еще те хомяки — все лишнее они тащат в свои закрома. Поэтому лучше немного не доложить удобрений, чем внести больше и потом наслаждаться повышенным уровнем нитратов в урожае. Для фанатов органических удобрений можно внести навоз и золу. Я только хотел бы отметить, что растения не умеют питаться органикой, а используют простые органические соли, которые получаются в результате разложения органических остатков бактериями и грибками. В случае внесения больших объемов навоза вы точно также получите напичканный нитратами плод. Минеральные же удобрения позволяют очень четко контролировать объем привнесенных в почву нитратов.</p><p>Про использование навоза еще один интересный момент — некоторые садоводы выращивают арбузы или тыквы на куче преющего навоза. Это позволяет повысить температуру корневой системы и обеспечивает растения питанием с огромным избытком нитратов, которые успешно накопятся в плодах. Есть такие арбузы или тыквы я бы не рекомендовал.</p><p>Сразу после перекопки накрываем нашу будущую грядку черной агротканью плотностью 60–80 г/м2 для ускорения прогрева почвы. Стандартная ширина агроткани как раз составляет 3.2м, которые подойдут для большинства сортов арбузов. Перед укладкой агроткани желательно сразу разместить на земле пару лент для капельного полива, если вы не планируете бегать с лейкой, а хотите автоматизировать процесс. </p><p>На тему полива можно писать отдельную большую статью, поэтому давайте кратко остановимся на основных моментах.</p><p>Таймеры полива можно условно разделить на два типа: с мембранным или с шаровым клапаном. Первые подходят только для водопровода с высоким давлением. Вторые более дорогие, но и более универсальные — их можно использовать как для систем с подачей воды самотеком, так и для систем с высоким давлением. Таймеры с шаровым клапаном, которые продаются на Алиэкспресс, имеют один конструктивный недостаток, из‑за которого после 1–2 сезонов клапан начинает потихоньку пропускать воду и требуют покупки ремкомплекта для устранения течи. Есть также общий для многих моделей недостаток — провода припаяны к нижней части батарейного отсека. В случае попадания даже небольшого количества влаги внутрь таймера, эти самые провода из‑за электролиза очень быстро подгнивают. </p><p>В прошлом году появились новые модели, в которых этот недостаток должен быть устранен за счет изменения конструкции клапана и батарейного отсека:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/97f/083/cd5/97f083cd56893f7a81aa200e34cfa958.png\" width=\"836\" height=\"797\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/97f/083/cd5/97f083cd56893f7a81aa200e34cfa958.png\"></figure><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f4d/e21/5be/f4de215be8851ddfeaa669b7861ffe74.png\" width=\"509\" height=\"680\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f4d/e21/5be/f4de215be8851ddfeaa669b7861ffe74.png\"></figure><p>Ленты для капельного полива рекомендую выбирать на свой вкус и кошелек. Я использую ленты с встроенными капельницами, а кто‑то предпочитает щелевые ленты. </p><p>Итак, когда мы завершили подготовку участка для посадки арбузов, ждем когда дневная температура поднимется до +18–20 С и можем приступать к посадке. Здесь все просто — вырезаем в агроткани отверстия диаметром сантиметров 15–20 (стараемся не задеть при этом ленты), копаем лунки, высаживаем нашу рассаду и снимаем прививочные клипсы, если вы не сделали этого ранее.</p><p>Далее устанавливаем дуги и накрываем наши арбузы белой агротканью плотностью 60 г/м2 в один или два слоя в зависимости от прогноза погоды, но минимум на неделю. Данное укрытие защитит арбузы не только от перепадов температуры, но и от ветра, который может сломать арбуз в месте прививки, а также от солнца к которому наша рассада еще не привыкла после искусственного освещения. За эту неделю арбузы закрепятся усиками на агроткани и привыкнут к солнечному свету. Убирать агроткань желательно, когда ночные температуры будут выше +12С.</p><p>Вот так выглядит арбуз через 10 дней после посадки и удаления укрывной агроткани (высаживался саженец с 5–6 настоящими листьями):</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/28c/b6e/df3/28cb6edf3bc46b7115144a0c82432774.png\" width=\"1600\" height=\"985\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/28c/b6e/df3/28cb6edf3bc46b7115144a0c82432774.png\"></figure><p>Дальнейший уход заключается в регулярном поливе, укладке/развороте плетей в нужном направлении, чтобы они не заполонили весь участок, а также периодической подкормке нашей плантации. </p><p>С подкормками следует учесть, какой эффект дает каждый элемент из стандартной формулы NPK:</p><ul><li><p>азот (N) стимулирует рост зеленой массы, которая будет работать на рост наших будущих плодов, </p></li><li><p>фосфор (P) стимулирует развитие корневой системы и генеративных органов растения, </p></li><li><p>калий (K) повышает устойчивость растения к заболеваниям, улучшает вкус плодов и увеличивает накопление сахара в плодах. </p></li></ul><p>Если мы хотим получить вкусные и сладкие арбузы, то калий наш лучший друг. Подкормки мы можем вносить как под корень, так и по листу при помощи распылителя. Я использую второй вариант. На мой взгляд, лучшим комплексным удобрением в данном случае является Плантафол/Плантафид (это одно и то же, торговая марка Плантафид используется для маркировки товара, произведенного в России). В сети я встречал информацию, что данные удобрения одобрены для применения в органическом земледелии и содержат минимальное количество нитратов. На начальном этапе развития арбузов я использую NPK 20:20:20. Когда плети достигнут 1.5–2 метра в длину, можно переходить на использование NPK 10:54:10 (розоводы называют этот вариант «взрыв цвета»), чтобы стимулировать цветение. После завязывания плодов переходим к обработке формулой NPK 5:15:45. Более дешевым заменителем на последних двух стадиях обработки может быть монофосфат калия.</p><h3>Собираем урожай</h3><p>Впереди у нас остался самый интересный момент, а именно сбор урожая. Любой начинающий бахчевод сталкивается с вопросом «а когда же они уже созреют?», особенно с учетом того, что последние 2–3 недели арбузы не увеличиваются в размерах. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/d9b/b88/e7d/d9bb88e7d1f2d4a211ae8a631ea6292a.png\" width=\"568\" height=\"1009\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d9b/b88/e7d/d9bb88e7d1f2d4a211ae8a631ea6292a.png\"></figure><p>Арбузы отличаются от той же дыни тем, что дозревать могут только на кусту, после сбора они уже не станут спелее и слаще. Сразу могу сказать, что большинство советов из традиционных летних статей «как определить спелость арбуза?» с новостных сайтов можно пропускать мимо ушей, т.к. написана там откровенная чушь. Например, деление арбузов на «мальчик/девочка», когда все плоды арбуза — это девочки, а мальчики — это мелкие желтые цветы, которые мы на прилавках не видим. Из той же серии определение спелости по сухости хвостика или размеру желтого пятна на арбузе — хвостик засыхает от долгого хранения/транспортировки (арбуз не отсыхает и не отваливается от плети как дыня), а размер желтого пятна зависит только от того как арбуз лежал на земле.</p><p>Вот основные признаки спелости арбуза (часть из них доступна только на бахче):</p><ul><li><p>Большинство арбузов созревает в срок 40–50 дней, считая от завязи размером в пятирублевую монету, — метод так себе при выращивании в открытом грунте, это тепличники могут себе позволить вешать бирки с датой на каждый арбуз.</p></li><li><p>При созревании восковой матовый налет с арбуза практически исчезает и он становится блестящим, цвет полос меняется с бело‑зеленого до желтоватого.</p></li><li><p>Всеми любимый метод «похлопать арбуз». Звук вопреки всем рекомендациям должен быть не звонкий (самые зеленые арбузы звенят очень громко), а гулкий, как если бы вы ударили в колокол и звук несколько раз отразился от его стенок. Словами описать это трудно, понимание правильного звука приходит с опытом.</p></li><li><p>Сдавить арбуз и послушать как он хрустит. Во‑первых, после такой процедуры арбуз уже не будет долго храниться, т.к. будет нарушена его внутренняя структура. Во‑вторых, сорта, которые мы выращиваем для себя, как правило не толстокорые. Если вы сдавите ту же Шампань F1, но в руках у вас окажется две половинки арбуза и не факт что спелого.</p></li><li><p>Сухие «усик и лопаточка» работает в 90 процентах случаев при выращивании в открытом грунте (но очень редко в теплице). Давайте посмотрим на фото кто это такие:</p></li></ul><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/725/02a/75f/72502a75f011ea4273fbadd25ff5a800.png\" width=\"797\" height=\"517\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/725/02a/75f/72502a75f011ea4273fbadd25ff5a800.png\"></figure><p>В том междоузлии, где арбуз крепится к плети, есть основной большой лист, хвостик самого арбуза, а также ус, которым плеть старается закрепиться к окружающим предметам и маленький листик, называемый лопаточкой. При созревании арбуза первой засыхает лопаточка и дальше начинает потихоньку сохнуть усик. Для большинства сортов арбузов справедливо утверждение «когда усик и лопаточка засохли, арбуз можно снимать». </p><p>По своему опыту могу сказать, что первые 2 сезона у вас будет несколько сорванных зеленых арбузов, дальше с опытом их количество будет сведено к нулю. Да и объем урожая со временем научитесь прогнозировать точнее. Этот параметр напрямую зависит от размеров делянки. В первый год я высадил арбузы на грядку размером 3×15 м, собрал около 230 кг арбузов. На второй год решил добавить еще делянку примерно 6×6 м, но не учел, что на второй год прививки получились удачнее, да и в целом агротехнику довел до ума. Собрал в итого 700 с лишним килограмм и не знал потом, куда девать все эти арбузы. Накормил, всю родню, коллег и друзей. К концу сезона я был как дачник с кабачками — все говорили: «хорош, мы уже наелись арбузами до отвала».</p><p>Напоследок хочу пожелать всем отличных урожаев и готов ответить на все возникшие вопросы в комментариях. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/ea9/330/900/ea9330900d6e9e5e00bc0aefc838aae0.png\" width=\"1345\" height=\"1009\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ea9/330/900/ea9330900d6e9e5e00bc0aefc838aae0.png\"></figure><p>Автор: Игорь Иванов, Максилект.</p><p><strong>P.S.</strong> По итогам публикации первой части статьи и полученной обратной связи Игорь согласился рассказать о своем опыте выращивания остальных экзотических для средней полосы растений. Ждите новых статей!</p><p><strong>P.P.S.</strong> Мы публикуем наши статьи на нескольких площадках Рунета. Подписывайтесь на нашу страницу в<a href=\"https://vk.com/maxilect\"> <u>VK</u></a> или на<a href=\"https://t.me/maxilect\"> <u>Telegram-канал</u></a>, чтобы узнавать обо всех публикациях и других новостях компании Maxilect.</p><p></p>', 2, '2023-06-12 22:03:40', 671336, 111, '/ru/companies/maxilect/articles/739244/', 'Полтора года в нашей компании длился эксперимент, в котором участвовали 150 сотрудников. Он показал, что при разнице уровней оклада в 10-14% по сравнению с рынком разумеется не в нашу сторону специалисты от среднего до высокого уровня готовы продолжать работу при условии наличия программы заботы об их здоровье. Иными словами, если вы не можете или не хотите платить своим сотрудникам столько, сколько платит рынок, и это \"нежелание\" не превышает 14%, то вы можете выдавать витамин D, что сокращает выгорание, и как следствие — текучесть кадров.'),
(227, 'Оказание первой помощи. Практическая часть', '<p>Судя по <a href=\"https://habr.com/ru/companies/sportmaster_lab/articles/719944/\"><u>предыдущей части</u></a>, оказание первой помощи оказалась трепетной темой. Поэтому я решилась написать вторую часть, посвященную практике. Можете сохранить эту статью себе в заметки, в экстренной ситуации может вам пригодится. Хорошо бы, чтобы не пригодилось, но если что — держите.</p><p>Итак, необходимо придерживаться четырёх шагов при оказании первой помощи.</p><h3>Шаг первый: осмотреть место происшествия</h3><p>Представьте — вы гуляете с ребенком или просто проходите мимо детской площадки, и на ваших глазах ребенок падает с качелей. На секунду задумайтесь, какая будет ваша <strong>первая </strong>реакция? Скорее всего, вы, не задумываясь, помчите поднимать дитё. В этот момент вы можете сами получить этими же качелями по голове и помощь уже нужна будет вам =) И таких бытовых ситуаций может быть масса, поэтому не пренебрегайте этим простым правилом.</p><p><strong>Очень важно — убедиться, ничего ли не угрожает вашей собственной безопасности.</strong> На то, чтобы осмотреться, у вас уйдет секунд 5–10, собственная безопасность важнее.</p><p>В случае обнаружения опасности необходимо переместить пострадавшего в безопасное для вас обоих место. Например, если на человека упала сосулька с крыши и он отключился, то нужно переместить его подальше от крыши, чтобы соседняя сосулька не прилетела вам.</p><p>В случае, если вашей безопасности ничего не грозит и вы не можете определить нет ли у пострадавшего травм конечностей или позвонка – то старайтесь не перемещать. </p><h3>Шаг второй: осмотр пострадавшего</h3><p>Самые важные состояния, которые нужно проверять — это наличие сознания, наличие дыхания и отсутствие кровотечения. Ниже рассмотрим их подробнее.</p><p>Итак, вы выполнили первый пункт и убедились в своей безопасности, подходите к пострадавшему и в первую очередь определяете, есть ли у человека сознание и дыхание. Сознание можно определить дотронувшись до пострадавшего, можете тихонько потрясти его за плечи, как правило вы сразу сможете увидеть реакцию человека – он может дернуться или начать стонать. Если нет сознания, но есть дыхание, то достаточно человека просто повернуть в устойчивое боковое положение. Неважно, на какой бок укладывать, мы же спим как на правом, так и на левом боку. </p><p>Исключением являются <strong>беременные женщины на поздних сроках</strong>, их важно уложить именно на <strong>левый бок</strong>, так как у них работает по-другому кровообращение и если положить беременную на правый, то может нарушиться кровоснабжение плода.</p><p>Дыхание определяем только ухом, это самый эффективный способ, не стоит тратить время на определение дыхания с помощью каких-то предметов (зеркало, телефон и прочее), так как вам будут мешать внешние условия. Если вы на улице, то ветер, влажность и температура окружающей среды просто не позволят вам достоверно убедиться в наличии дыхания. Чтобы определить дыхание, необходимо положить человека на спину, запрокинуть голову назад, таким образом мы растягиваем корень языка и не дадим ему запасть, тем самым откроем дыхательные пути. Чтобы запрокинуть голову одну руку кладем на лоб, и двумя пальцами другой руки тянем за подбородок вверх. Не переусердствуйте =) </p><p>Прикладываем ухо к носу пострадавшего и считаем до 10, за это время человек в среднем делает 2–3  вдоха-выхода, этого достаточно, чтобы понять, есть ли дыхание, плюс наблюдайте за движением грудной клетки, это тоже послужит вам хорошей подсказкой.</p><p><br>Если дыхания нет — необходимо приступать к сердечно-легочной реанимации (СЛР). Важно запомнить, что дыхание и сердцебиение взаимосвязаны, одно не будет работать без другого! Это я к тому, что не нужно пытаться определить пульс. </p><p>Во время стрессовой ситуации вы сами будете на таком адреналине, что вы пульс сможете найти даже у стула, потому что вы найдете свой собственный пульс. Не тратьте, пожалуйста, на это время, ведь у вас есть приблизительно 5 минут, прежде чем начнет гибнуть мозг от отсутствия поставки кислорода. </p><p><strong>Важный момент при осмотре пострадавшего — проверить наличие кровотечений. </strong>Если человек без сознания и без дыхания, но если есть кровотечение, то это первостепенная угроза жизни, которую необходимо ликвидировать в первую очередь. Так как если вы приступите к СЛР, то через рану вы ускорите процесс потери крови, и человек может погибнуть.</p><h3>Шаг третий: вызов скорой помощи</h3><p>Итак, вы определили текущее состояние пострадавшего, звоните в скорую и ставьте на громкую связь. Можете одновременно осуществлять СЛР и описывать текущую ситуацию по связи. Важно сообщить пол, приблизительный возраст, состояние и адрес. Если не знаете адрес, попросите проходящих сообщить его. На худой конец навигатор, Яндекс Карты и прочее. Когда я последний раз звонила 112, они смогли отследить мои координаты по звонку.  </p><p>Кстати, один момент, если человеку нужна <strong>только</strong> медицинская помощь, то сразу звоните <strong>103</strong>, так как 112 являются неким посредником между вами и спасательными службами. А если, например, произошла авария, то звоните 112, ибо именно они уже вызовут все необходимые службы спасения (МЧС, полиция/ДПС, скорая/реанимация и прочее). </p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/77e/e6d/1bc/77ee6d1bca89b7d3929c0ead39323585.png\" width=\"388\" height=\"320\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/77e/e6d/1bc/77ee6d1bca89b7d3929c0ead39323585.png\"></figure><h3>Шаг четвертый: оказание помощи</h3><p><strong>Остановка кровотечения</strong></p><p>Если вы увидели кровотечение, важно наложить <strong>давящую повязку</strong>. <br>Не используйте жгуты! Во-первых, жгут это ужасно больно, во-вторых, жгутом вы прерываете кровообращение во всей конечности, а не только в ране, этим можно причинить еще больший вред. Жгут нужен в одном случае – при потере конечности, когда действительно необходимо прекратить кровоснабжение.<br><br>Во всех остальных случаях делаем только давящую повязку. Сделать ее можно из подручных средств, из аксессуаров одежды, например. Если большая рана, то, например, свернули тугим рулетиком шапку, наложили поверх раны и шарфом зафиксировали. Не стоит беспокоиться о стерильности, потому что это бессмысленно, стерильная среда может быть только в кабинете хирурга =) <br><br>Даже если у вас с собой «стерильный бинт», то, как только вы его вскрыли — всё, стерильность закончилась. Вы внутрь человека ничего не помещаете, кровь течет наружу, поэтому риск заражения не так велик. Снова же, что важнее — остановить кровь и потом лечить человека, или просто дать человеку погибнуть от потери.</p><p>Если рана совсем небольшая, то можно просто ополоснуть её водой и зажать рукой, кровь свернется и образует корочку, которую все очень любили в детстве сдирать с коленок. Если вдруг в аптечке завалялся хлоргексидин, то можно рану обработать им. <strong>Не используйте перекись водорода! </strong>Она обжигает сосуды!</p><p>Самый тяжелый случай — это кровотечение на шее. Там крупные магистрали, которые снабжают мозг, поэтому кровотечение там как правило очень обильное. В этом случае будьте готовым быть «затычкой» для пострадавшего до прибытия скорой и, скорее всего, даже до прибытия в больницу. Ваша задача будет наложить какой-то валик из одежды/ткани и крепко прижимать одной рукой с этой стороны. Сами понимаете, шарфом тут не зафиксируешь. Если человек в сознании, то он сам может плотно держать валик, но необходимо быть рядом и контролировать его состояние.</p><p><strong>Сердечно-легочная реанимация</strong></p><p>Приступаем в случае отсутствия дыхания и сознания.<br><br>Проводить её следует с помощью защитной маски с обратным клапаном, для того, чтобы избежать заражения от возможной инфекции. Если таковой с собой нет, то можете не вдувать, запаса воздуха в легких хватит приблизительно на 15 минут для того, чтобы мозгу хватало кислорода. </p><p>Если человек был физически здоров до происшествия, то как правило этого времени хватает, чтобы сердце завелось. </p><ol><li><p>если средство защиты оказалось с собой, то регламент выполнения следующий:<br>уложить пострадавшего на твердую поверхность, так как если он будет лежать на чем-то мягком, на диване, например, то вы будете продавливать диван, а не грудную клетку человека.</p></li><li><p>оголить грудную клетку, так вы точно будете видеть место, куда давить, и не нанесете дополнительного урона ребрам, особенно, если пострадавшая — девушка в корсете или бюстгальтере с косточками и прочее.</p></li><li><p></p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/758/8ee/b48/7588eeb484ca289f86b4a247110844f4.png\" width=\"450\" height=\"412\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/758/8ee/b48/7588eeb484ca289f86b4a247110844f4.png\"></figure><ol start=\"4\"><li><p>определяем место надавливания, как на рисунке выше, далее вторую руку кладем сверху первой, не скрещивайте пальцы в замок, вам так будет больно, и надавить качественно не получится</p></li><li><p>делаем 30 надавливаний на грудину на глубину примерно 5–6 см и следом 2 вдувания в рот, не забудьте запрокинуть голову, иначе воздух не попадет в легкие, а попадет в живот, так как дыхательные пути перекроются языком, плюс не забываем закрыть нос.</p></li></ol></li></ol><p>Для ребенка регламент такой же, только надавливания выполняем одной рукой, для младенца — двумя пальцами, и при вдувании воздуха захватываем и рот, и нос, так как части тела совсем крошечные.</p><p>СЛР можете выполнять до приезда скорой помощи, или если вас кто-то может подменить, или пока совсем не закончатся силы. Пока вы делаете СЛР, вы живете за человека, так как поддерживаете жизнь мозга.</p><p>Прекращаете делать СЛР, если заметили движение грудной клетки, лицо человека начало розоветь или он начал двигаться, как правило, это видно сразу, и процесс восстановления человека происходит быстро.</p><h4>Частные случаи</h4><p><strong>Приступ эпилепсии (судороги)</strong></p><ul><li><p>Стараемся защитить пострадавшего от получения травм от окружающих предметов (мебель, ступеньки);</p></li><li><p>Защищайте голову пострадавшего, подложив под нее что-то мягкое;</p></li><li><p><strong>Ничего не засовываем человеку в рот</strong></p></li><li><p>Положите пострадавшего на бок после того, как закончится спазм и человек начнет приходить в себя</p></li></ul><p>Вызов скорой помощи не требуется, если человек пришел в себя в течение 5–10 минут.</p><p><strong>Сердечный приступ</strong></p><ul><li><p>Основным признаком, указывающим на сердечный приступ, является боль в груди. Она может быть давящей, сжимающей, ноющей, возникает тяжесть в груди. Может отдавать в плечо, нижнюю челюсть, руку или шею. При этом боль не колющая. То есть если человек говорит «Ой, что-то кольнуло» — то это не признак приступа.</p></li><li><p>Человеку становится трудно дышать, появляется одышка.</p></li><li><p> Появляется чувство страха и тревоги. </p></li></ul><p><em>Первая помощь: </em>необходимо прекратить любую физическую активность! Помогите человеку принять удобную позу, желательно полусидя, так легче дышать. Расстегните одежду. Если человек принимает лекарства, <strong>выписанные ему врачом</strong>, то помогите ему принять их. Вызывайте скорую помощь. В случае потери сознания и остановке дыхания приступайте к СЛР.</p><p><strong>Инсульт</strong></p><p>Важно пояснить, что инсульт — это нарушение кровоснабжения мозга, как правило, это может быть какая-то закупорка, которая попала в один из сосудов в мозге и, соответственно, в ту часть перестает попадать кровь, так и развивается инсульт. Помочь человеку можно в течение четырех часов с начала развития приступа.</p><p>Признаки инсульта:</p><ul><li><p>пострадавший не может улыбнуться, перекошено лицо</p></li><li><p>не может поднять сразу две руки, если одна не слушается – прямой признак инсульта</p></li><li><p>не может внятно что-то сказать, заплетается язык, не понимает, что происходит вокруг, часто путают это состояние с опьянением, к сожалению.</p></li></ul><p>Если заметили хотя бы один из признаков, то сразу вызывайте скорую.</p><p><em>Первая помощь: </em>уложите пострадавшего на бок парализованной частью вверх, освобождайте рот и нос от слюны и слизи. Приложите что-то холодное на лоб и голову. Следим за состоянием пострадавшего. В случае потери сознания и остановке дыхания, приступайте к СЛР.</p><p><strong>Человек тонет </strong></p><p>Наступило лето, а значит — скоро откроется купальный сезон. К сожалению, каждый год не удается избежать несчастных случаев, так как мало кто знает, как оказать помощь.</p><p>Запомните, в реальной жизни тонущий человек <strong>не кричит! </strong>Основными признаками тонущего является его вертикальное положение в воде, периодическое появление/исчезновение головы, «стеклянные» глаза полные страха. Обязательно смотрите за детьми, они могут утонуть даже там, где по колено, даже если они в нарукавниках или надувном круге! </p><p>Итак, вы заметили утопающего. Необходимо вытащить его из воды на берег, очистить рот и нос от воды, слюны и слизи, уложить на твердую поверхность и приступать к СЛР. Здесь есть нюанс, что так как первостепенной причиной смерти является именно остановка дыхания, то сначала нужно сделать 5 вдуваний, а потом уже как обычно 30 надавливаний на 2 вдоха. Тот же самый нюанс работает, когда человек подавился.</p><p>Не нужно человека трясти, переворачивать вверх ногами, стучать по спине и прочие действия — в легких воды нет! У трахеи есть защитный клапан (я не сильна в анатомии, поэтому не помню как он называется), который закрывается, как только инородное тело пытается попасть в дыхательные пути. </p><p>Поэтому, как только человек пытается вдохнуть под водой, то этот клапан срабатывает и не дает воде попасть в легкие. Поэтому существует выражение «утонуть и в чайной ложке можно», ибо происходит одно и то же — что человек поперхнулся, что пытался вдохнуть в воде.</p><p><strong>Человек подавился</strong></p><p>Это, пожалуй, самая частая бытовая ситуация, которая происходит абсолютно со всеми. И, к сожалению, она несет большую угрозу, так как обычно человек начинает стесняться, куда-то уходить и в итоге это приводит к трагедии. Пожалуйста, не стесняйтесь того, что вы подавились, наоборот — привлеките к себе внимание, попросите жестами помощи! </p><p>Если человек подавился и может кашлять, то ничего не делайте, легкие сделают все сами. Не нужно в этот момент стучать по спине, вы тем самым только протолкнете инородное тело глубже.</p><p>Если человек полностью подавился, то существует два способа человеку помочь.</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/363/82e/dc9/36382edc9e9492d66171e2eb35342802.jpeg\" width=\"270\" height=\"186\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/363/82e/dc9/36382edc9e9492d66171e2eb35342802.jpeg\" data-blurred=\"true\"></figure><p>Позиция первая (слева на картинке): вы обхватываете человека сзади под грудь и наклоняете немного корпус вперед, тем самым вы поддержите человека, чтобы он не упал. И сзади между лопаток наносите 1-2 довольно сильных и резких ударов основанием ладони, инородное тело вылетит как пробка.</p><p><br>Позиция вторая (справа на картинке): обхватываете человека двумя руками сзади. Положение рук определяете следующим образом. Нащупываете пупок и кладете одну руку, сжатую в кулак над пупком, вторую руку кладете сверху и осуществляете движение внутрь и вверх, тем самым вы приведете в движение диафрагму, которая сожмет легкие и создаст внутри давление, с помощью которого и будет вытолкнуто инородное тело.</p><p>С маленькими детьми тактика немного другая.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a27/d43/958/a27d439581304370f7c0dec14281dc28.png\" width=\"750\" height=\"422\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a27/d43/958/a27d439581304370f7c0dec14281dc28.png\"></figure><p>Кладете младенца на руку, оперевшись на бедро, голову обязательно фиксируйте пальцами, чтобы не нанести травм, и второй рукой так же осуществляем удар между лопатками, только силу контролируйте. </p><p>Если этот метод не помогает, то разворачиваете ребенка, как показано справа, так же фиксируете голову ребенка пальцами и осуществляете надавливания только двумя пальцами так же, чуть выше пупка. И поочередно чередуете эти два метода, пока не освободите дыхательные пути, как правило, с первого раза все вылетает.</p><p>Если вы подавились сами, а помочь некому, то найдите какой-то предмет мебели: спинка стула, подлокотник дивана, который будет выступать в роли упора для вас. Далее вам необходимо привести в движение диафрагму. Кладем кулак на опору, и осуществляем надавливающие движения животом на кулак, как если бы это делал другой человек, оказывая вам помощь.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/671/659/5eb/6716595eb3833d0369f2e339303fbcb7.jpeg\" width=\"936\" height=\"468\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/671/659/5eb/6716595eb3833d0369f2e339303fbcb7.jpeg\" data-blurred=\"true\"></figure><p>Если вы <strong>беременны</strong> и подавились, а помочь некому, то способ со стулом вам не подойдет. В таком случае наклонитесь вперед и стучите себя ладонью по грудной клетке, будет такой же эффект, как от постукиваний по спине, инородное тело выскочит.</p><p>На этом у меня все. Надеюсь, было полезно, и пусть вам никогда это не пригодится, но вы будете знать, как действовать! </p><p>Берегите себя, всем бобра))</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/3a2/ff5/fde/3a2ff5fdee2f0d8877f12d613bee54f3.jpeg\" width=\"602\" height=\"602\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/3a2/ff5/fde/3a2ff5fdee2f0d8877f12d613bee54f3.jpeg\" data-blurred=\"true\"></figure><p></p>', 1, '2023-06-12 22:03:40', 882347, 110, '/ru/companies/sportmaster_lab/articles/739214/', 'Сколько стоит человеческая жизнь? Да-да, в рублях.Обычная реакция на такой вопрос, что-то вроде: как ты смеешь говорить о цене человеческой жизни, ведь она бесценна? ');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(228, 'Как сохранить команду разработчиков, если не хочется платить больше?', '<p>Привет, Хабр и <s>Хабаровчане</s> Хабровчане, меня зовут Ибрагим и я руковожу проектом parasafi. Мы доставляем различные товары из Турции и оказываем медицинское сопровождение под ключ в этой же стране. Я хотел бы рассказать вам о нашем эксперименте, который проводился с полного согласия испытуемых и руководства и показал интересные результаты. </p><p>Еще немного необходимой нудятины перед стартом. В тексте будет два личных местоимения: \"я\" и \"мы\". Я намеренно использовал в тексте такой стиль, чтобы разделить зоны ответственности. Всякий раз, когда в тексте встречается \"я\", знайте, что это лишь моя зона ответственности от начала до конца, все действия, расчеты, аналитику и последствия я принимал лично на себя. Когда в тексте встречается \"мы\", это означает, что ответственность и работа ложилась на команду; эта команда могла увеличиваться и уменьшаться, но всегда оставалась командой. К примеру, я один никак не смог бы контролировать произношение матерных слов у одной группы людей, при этом считать время перекура у другой группы людей. Ну, всё, с нудятиной покончили, предлагаю переходить к введению.</p><p>В современном мире информационных технологий, где высокая производительность и интенсивный ритм работы являются неотъемлемой частью ежедневной жизни, забота о здоровье и благополучии сотрудников становится все более важной. Одной из существенных составляющих здоровья, которая привлекает все большее внимание, является витамин D. Этот витамин не только поддерживает здоровье костей и иммунную систему, но также играет важную роль в психическом благополучии.</p><p>В настоящее время все больше исследований указывает на то, что недостаток витамина D может быть связан с увеличенным риском развития депрессии, тревожных расстройств и других психических состояний. Это особенно актуально в контексте  IT-индустрии, где сотрудники сталкиваются с высоким уровнем стресса, интенсивной работой и частыми дедлайнами, поддержание психического  здоровья становится приоритетом. <strong>Выгорание, характеризующееся  эмоциональным и физическим истощением, снижением производительности и ухудшением настроения, становится все более распространенной проблемой среди профессионалов IT.</strong>  </p><blockquote><p>Интересно отметить, что витамин D может играть ключевую роль в предотвращении выгорания и поддержании психического благополучия в IT‑среде.   </p></blockquote><p>Стоп, что? Витамин D от выгорания, а как следствие — от сорванных сроков и текучки кадров? И не надо даже повышать уровень оклада?</p><p>Да, все верно, существует ряд исследований и статистика, которые свидетельствуют о  связи между выгоранием сотрудников, в том числе в IT-индустрии, и текучестью кадров. Вот некоторые исследования, изученные нами:  </p><ol><li><p>Исследование \"The Relationship Between Burnout and Turnover Intention Among IT Professionals\" (2017): Это исследование, опубликованное в журнале \"Computers in Human Behavior\", исследовало связь между выгоранием и увольнениями у профессионалов в области информационных технологий. Результаты показали, что высокий уровень выгорания значительно увеличивает вероятность намерения сменить работу.</p></li><li><p>Исследование \"Job Burnout and Employee Turnover: A Firm-Level Perspective\" (2018): Это исследование, проведенное в рамках Шведского института труда, исследовало влияние выгорания на текучесть кадров на уровне компании. Оно выявило, что высокий уровень выгорания в организации связан с повышенной вероятностью увольнений и текучести кадров.</p></li><li><p>Опрос компаний: Многие IT-компании проводят внутренние опросы или исследования среди своих сотрудников для изучения причин и факторов, влияющих на текучесть кадров. В некоторых исследованиях отмечается, что высокий уровень выгорания является одной из основных причин ухода сотрудников из компании.</p></li><li><p>Статистика текучести кадров: В различных отчетах и исследованиях, проведенных в IT-индустрии, часто отмечается, что компании с высоким уровнем выгорания сотрудников также испытывают проблемы с текучестью кадров. Например, согласно отчету компании LinkedIn \"Global Talent Trends 2020\", 50% респондентов, работающих в области информационных технологий, указали выгорание в качестве одной из основных причин ухода из компании.</p></li></ol><blockquote><p>Наш внутренний эксперимент, длившийся 1,5 года, проводимый на 150 сотрудниках, показал, что при разнице уровней оклада в 10-14% по сравнению с рынком <s>разумеется не в нашу сторону</s> специалисты от среднего до высокого уровня готовы продолжать работу при условии наличия программы заботы об их здоровье. <br><strong>Иными словами, если вы не можете или не хотите платить своим сотрудникам столько, сколько платит рынок, и это \"нежелание\" не превышает 14%, то вы можете выдавать витамин D, что сокращает выгорание, и как следствие —</strong> <strong>текучесть кадров.</strong></p></blockquote><p>Конечно же, несмотря на то, что витамин D имеет важное значение для здоровья и может оказывать положительное влияние на настроение и психическое благополучие, отсутствуют специфические исследования, которые прямо связывают витамин D с предотвращением выгорания сотрудников в IT-индустрии.</p><p>Работодателю необходимо понимать, что выгорание (burnout) является сложным состоянием, которое обычно связано с длительным стрессом, перегрузкой на работе и недостатком психологической поддержки. Хотя витамин D может играть определенную роль в психическом здоровье, предотвращение выгорания требует комплексного подхода, который включает не только физическое здоровье, но и психологическую поддержку, организационные изменения и управление стрессом.</p><blockquote><p>Конечно, данные нашей команды и нашего эксперимента не могут считаться применимыми ко всем ситуациям в мире, но, существуют примеры больших <br>IT-компаний, которые предоставляют своим сотрудникам витамин D в рамках программы заботы о здоровье. <br>И логика проводимых программ в этих компаниях абсолютно одинакова с проводимой логикой эксперимента нашей компании. <br><strong>Вот пример компаний, чьи программы и эксперименты подтолкнули нас к проверке этой интересной гипотезы:</strong></p></blockquote><ol><li><p>Google известен своими многочисленными программами по благополучию сотрудников. Они предоставляют различные бесплатные услуги и льготы, включая фитнес-центры, медицинские услуги и даже бесплатное питание. <strong>В рамках этих программ Google также предоставляет своим сотрудникам витамин D и другие питательные добавки.</strong></p></li><li><p>Microsoft имеет программу \"Employee Assistance Program\" (EAP), которая включает в себя различные инициативы по заботе о здоровье сотрудников. <strong>Витамин D является одним из компонентов этой программы</strong>, помогая сотрудникам поддерживать оптимальный уровень этого витамина.</p></li><li><p>Facebook также предоставляет ряд программ и льгот для своих сотрудников. В рамках программы \"Wellness Program\" (программа благополучия) Facebook <strong>предоставляет витамин D</strong> и другие питательные добавки для поддержания здоровья и производительности своих сотрудников.</p></li></ol><blockquote><p>Как мы проводили эксперимент?</p></blockquote><p><s>Разумеется</s> с согласия работников нашей компании. Мы выделили для себя 4 направления специалистов: </p><ul><li><p>Менеджеры и специалисты поддержки пользователей</p></li><li><p>Непосредственно разработчики</p></li><li><p>Маркетинг-специалисты и SEO-специалисты</p></li><li><p>Дизайнеры и переводчики</p></li></ul><p>Почему мы выделили эти группы и объединили их в пары?<br>Все просто, мы рассматривали и составляли группы по уровню ежедневного стресса, связанного с переработками, ритмом работы и дедлайнами. Если объяснять нашу логику на простом языке, то: <br><strong>наиболее напряженные</strong> - это менеджеры и специалисты поддержки, потому что они вынуждены ежедневно обзванивать, контактировать, слушать и работать с <s>неадекватами </s>сложными людьми в неисчислимых значениях, как следствие, большое психологические напряжение и желание \"уйти подальше от всего этого\". <br>Группа из разработчиков и маркетологов вместе с SEOшниками в нашем понимании находились на среднем уровне стресса. </p><blockquote><p>Конечно, все разработчики так или иначе переживают о дедлайне, особенно о его нарушении, точно так же и маркетологи переживают за \"неверную\" стратегию рекламной компании, а SEOшники переживают о том, что \"робот выдает меньше иксов\", но они могут позволить себе наплевать на это, если не с высокой колокольни, то со средней уж точно. От этого их уровень стресса немного ниже.</p></blockquote><p>Наименее напряженными по нашим представлениям являлись переводчики и дизайнеры. По абсолютно понятным всем причинам отсутствия огромного пласта мгновенной ответственности, отчетности, KPI  и прочих противных параметров. </p><blockquote><p>И что, вот так просто можно срезать зарплату и никто не будет против?</p></blockquote><p>Конечно же нет, дело в том, что у нас, как и у вас, есть понятие \"премии\" вот именно ее мы и варьировали. Логика нашего эксперимента и путь его развития был следующий: </p><ol><li><p>Установить уровень оплаты (с премией) согласно запросам рынка. Тот самый \"запрос\" мы выявляли через всем известный агрегатор поикса работы. Следить за текучкой кадров и проводить опросы для выявления общих настроений сотрудников. </p></li><li><p>Тоже что в п.1, но добавить программу заботы о здоровье и выдавать тот самый витамин D.</p></li><li><p>Оставляем витамин, но делаем уровень премии ниже рынка с шагом -3,5% каждые 3 месяца. Разумеется, следим за текучкой и проводим опросы как и ранее. </p></li><li><p>Устанавливаем уровень оклада выше рынка, но убираем витамины, проводим замеры</p></li></ol><blockquote><p>Как мы оценивали уровень стресса, выгорания, текучести кадров?</p></blockquote><p>У нас был целый ряд факторов, который мы оценивали, но предлагаю сейчас сосредоточиться на тех, что я выделил для себя, на человеческих факторах. Бизнес-аналитику наших манипуляций оставим для отдельной статьи, напишу только то, что она была тоже положительной. <br> <br><strong>Для первой группы</strong> мы измеряли количество успешных сделок и/или решений конфликтов. Кроме того, оценивали общее количество времени на \"перекуры\". <br><strong>Для второй группы</strong> мы оценивали количество \"пушей\" в наш гит, в процессе создания проектов, те же перекуры и (это может показаться смешным, но для этого был нанят человек) количество произносимых за день \"б!%ть\", \"с!\"ка\" и прочих прекрасных слов.<br><strong>Для группы номер три</strong> - это было количество рекламных компаний, запущенных в Я.Директе, а также время их запуска. <br><strong>Для четвертой группы</strong> уровень перевода и качество дизайн-проектов. </p><blockquote><p>Как изменились показатели?</p></blockquote><div><div class=\"table\"><table><tbody><tr><td colspan=\"3\"><p align=\"center\">Группа 1</p></td></tr><tr><td><p align=\"center\">Оклад в % от рынка</p></td><td><p align=\"center\">Успешные сделки</p></td><td><p align=\"center\">Время на перекуры (мин)</p></td></tr><tr><td><p align=\"center\">100%</p></td><td><p align=\"center\">45</p></td><td><p align=\"center\">50</p></td></tr><tr><td><p align=\"center\">-3.5%</p></td><td><p align=\"center\">43</p></td><td><p align=\"center\">52</p></td></tr><tr><td><p align=\"center\">-7%</p></td><td><p align=\"center\">45</p></td><td><p align=\"center\">46</p></td></tr><tr><td><p align=\"center\">-10,5%</p></td><td><p align=\"center\">47</p></td><td><p align=\"center\">43</p></td></tr><tr><td><p align=\"center\">-14%</p></td><td><p align=\"center\">46</p></td><td><p align=\"center\">39</p></td></tr><tr><td><p align=\"center\">115%</p></td><td><p align=\"center\">43</p></td><td><p align=\"center\">47</p></td></tr></tbody></table><div><div class=\"table\"><table><tbody><tr><td colspan=\"3\" data-colwidth=\"0,234,0\" width=\"0\"><p align=\"center\">Группа 2</p></td></tr><tr><td><p align=\"center\">Оклад в % от рынка</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">Пуши </p></td><td><p align=\"center\">\"б!%ть\", \"с!\"ка\" в день</p></td></tr><tr><td><p align=\"center\">100%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">240</p></td><td><p align=\"center\">340</p></td></tr><tr><td><p align=\"center\">-3.5%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">231</p></td><td><p align=\"center\">341</p></td></tr><tr><td><p align=\"center\">-7%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">240</p></td><td><p align=\"center\">304</p></td></tr><tr><td><p align=\"center\">-10,5%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">243</p></td><td><p align=\"center\">293</p></td></tr><tr><td><p align=\"center\">-14%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">250</p></td><td><p align=\"center\">273</p></td></tr><tr><td><p align=\"center\">115%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">240</p></td><td><p align=\"center\">264</p></td></tr></tbody></table><div><div class=\"table\"><table><tbody><tr><td colspan=\"3\" data-colwidth=\"0,234,0\" width=\"0\"><p align=\"center\">Группа 3</p></td></tr><tr><td><p align=\"center\">Оклад в % от рынка</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">Количество РК в директе</p></td><td><p align=\"center\">Среднее время создания</p></td></tr><tr><td><p align=\"center\">100%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">35</p></td><td><p align=\"center\">17:40</p></td></tr><tr><td><p align=\"center\">-3.5%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">32</p></td><td><p align=\"center\">17:43</p></td></tr><tr><td><p align=\"center\">-7%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">29</p></td><td><p align=\"center\">17:25</p></td></tr><tr><td><p align=\"center\">-10,5%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">24</p></td><td><p align=\"center\">17:12</p></td></tr><tr><td><p align=\"center\">-14%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">19</p></td><td><p align=\"center\">16:52</p></td></tr><tr><td><p align=\"center\">115%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">20</p></td><td><p align=\"center\">16:51</p></td></tr></tbody></table><div><div class=\"table\"><table><tbody><tr><td colspan=\"3\" data-colwidth=\"0,234,0\" width=\"0\"><p align=\"center\">Группа 4</p></td></tr><tr><td><p align=\"center\">Оклад в % от рынка</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">Количество ошибок в переводе</p></td><td><p align=\"center\">Среднее число \"переделок\" в дизайн проекте</p></td></tr><tr><td><p align=\"center\">100%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">14</p></td><td><p align=\"center\">65</p></td></tr><tr><td><p align=\"center\">-3.5%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">13</p></td><td><p align=\"center\">63</p></td></tr><tr><td><p align=\"center\">-7%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">9</p></td><td><p align=\"center\">54</p></td></tr><tr><td><p align=\"center\">-10,5%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">7</p></td><td><p align=\"center\">47</p></td></tr><tr><td><p align=\"center\">-14%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">8</p></td><td><p align=\"center\">47</p></td></tr><tr><td><p align=\"center\">115%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">7</p></td><td><p align=\"center\">40</p></td></tr></tbody></table><blockquote><p>Интерпретация результатов и подведение итогов</p></blockquote><p>Итого, что мы получили? <br><strong>Для группы №1</strong> мы получили снижение времени перекуров на 11 минут в пике своих значений. При этом количество успешных сделок не изменилось. Что это означает?<br>По нашему мнению, эти данные свидетельствовали о снижении уровня стресса, так как людям требуется тратить меньше времени на то, чтобы \"прийти в себя\" после очередного сложного клиента. При этом, можем заметить, что при уровне оклада выше рынка время на перекуры выросло, но как же так? Люди начали больше стрессовать? Как оказалось, все куда проще, просто за перекуром они начали обсуждать отпуска и покупки.<br><br><strong>Для группы №2 и группы №3</strong> мы видим явную положительную динамику по снижению уровня стресса. Если количество рекламных компаний и пушей выросло не сильно, хотя и выросло, то вот количество матерных слов и среднее время запуска рекламной компании снизились в явном выражении. Почему мы считаем это хорошим фактором? Все просто, маркетолог запускает рекламную компанию в течение рабочего дня, без переработок, его маркетинговый мозг сконцентрирован на работе, он успевает больше, а количество переходов по рекламной компании тоже увеличилось. То же самое можно резюмировать и для наших прогеров, они начали меньше ругаться, да, пушей стало не сильно больше, но их настроение явно стало лучше, работа стала продуктивнее и они стали выходить на работу без опозданий, а некоторые даже начали перерабатывать со словами \"это же интересно\" или \"щаща я доделаю и пойду\". <br><br><strong>Группу 4</strong> мы тоже оцениваем положительно, ее проще всего описать на переводчиках, как вы можете видеть, количество ошибок в их переводах снизилось. Это могут быть механические описки или реальные орфографические ошибки, связанные с большим количеством переводимых символов за короткий срок времени. Но как бы то ни было, ошибок стало меньше, и это хорошо для нас.</p><blockquote><p>Для всех четырех групп вы можете видеть в динамике, что при повышении оклада выше рынка, но отсутствии витаминов, результат схож с вариантов присутствия витаминов, но пониженном окладе.</p></blockquote><p>Хочется еще раз <u>подчеркнуть</u>, что выгорание несомненно является серьезной проблемой, с которой сталкиваются многие сотрудники в IT-индустрии и других сферах деятельности. Исследования показывают, что высокий уровень выгорания может приводить к снижению работоспособности, психическим расстройствам и повышенной текучести кадров.</p><p>Однако, мы можем принять меры для предотвращения выгорания и поддержания здоровья наших сотрудников. Витамин D, как показано исследованиями, играет важную роль в поддержании психического благополучия. </p><blockquote><p>Забота о здоровье команды - это инвестиция, которая может принести эффективность работы команды и компании в целом, а также, <strong>надеюсь</strong>, снизит недовольство, выгорание и текучку кадров, даже если в данный момент развития вашего проекта невозможно платить \"как большие компании\".</p></blockquote><p>Важное уточнение: люди были поставлены в известность касаемо проводимой исследовательской работы. Наши коллеги достаточно прогрессивные и они всегда готовы к новым интересным методом взаимодействия. Нужно понимать, что уровень довольства работой в нашей команде намного выше среднего, за счет ряда параметров, поэтому переживать о \"подопытных\" в этом эксперименте не стоит. В конечном итоге, несмотря на возможность платить меньше, наше руководство приняло к сведению результаты эксперимента, но оклад вернулся к уровню нормального, рыночного выражения. <br>Однако, был <strong>введен пилот программы заботы о здоровье</strong>. </p><blockquote><p>Наш пилот заключается в том, чтобы протестировать два метода получения витамина D:<br>1. Получение из витаминного комплекса. <br>2. Уменьшение рабочего дня на 1 час каждую пятницу и корпоративное такси на пляж.</p></blockquote><p>Помимо этого в наших планах — выяснить, как еще и какие еще витамины могут влиять благотворно на здоровье наших сотрудников и нашу работу. </p><p>Дополнительно, считаю важным пояснить, что <strong>наша компания не \"бедствует\", не \"находится на грани\"</strong>. Мотивация проведения экспериментов была продиктована тем, что мы непосредственно связаны с медициной, с витаминами и минералами. Участники эксперимента были релоцированы в Стамбул, где по их же согласию они будут продолжать участвовать в пилоте, описанном выше. </p><p>P.S. от автора. Пожалуйста, относитесь к своим работникам с уважением и заботой. Помните, что они люди, а не просто рабочая сила, я надеюсь, что помимо основной идеи статьи, вы вынесете дополнительную идею о том, что \"<em>люди</em> и взаимодействие <em>важнее</em> процессов и <em>инструментов</em>\". <br><br></p><p></p>', 2, '2023-06-12 22:03:41', 690251, 99, '/ru/articles/738946/', 'Бег — это один из самых доступных и эффективных способов физической активности. Бег помогает улучшить физическую форму и здоровье, укрепляет сердечно-сосудистую систему, повышает выносливость и снижает риск развития различных заболеваний.Очень привлекательный набор достижений, не правда ли! Нужно лишь поднять себя с дивана, удобно одеться и выйти в ближайший парк. И вот вы уже один из участников бегового сообщества. Первый шаг на пути к красивому телу и крепкому здоровью сделан!Теперь, чтобы ваша беговая история была долгой и счастливой, прочитайте нашу статью. Мы расскажем, как не бросить бег после второй тренировки. Как бегать, чтобы не навредить себе. Как организовать процесс, чтобы бег был в радость и приносил нужный результат. А также где и когда можно испытать себя и свои беговые навыки.'),
(229, 'Сколько стоит твоя жизнь?', '<figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/9ac/698/81c/9ac69881ca72bceb38e1545aa7e4c513.png\" width=\"1560\" height=\"877\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/9ac/698/81c/9ac69881ca72bceb38e1545aa7e4c513.png\"></figure><p>Сколько стоит человеческая жизнь? Да-да, в рублях.</p><p> Обычная реакция на такой вопрос, что-то вроде: как ты смеешь говорить о цене человеческой жизни, ведь она бесценна? Что ж, обсудим.</p><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/6477208c7ddf71fbc1da1997\" data-style=\"\" id=\"6477208c7ddf71fbc1da1997\" width=\"\"><h2>Невидимые дети</h2><p>Начнём мы с истории Ханса Рослинга из его книги «Фактологичность». Рослинг специалист по статистике и эксперт в области международного здравоохранения. Как связаны эти два направления? Скоро узнаете.</p><p>На заре своей карьеры он, гражданин Швеции, отправился работать врачом в Мозамбике в рамках проекта «врачи без границ» (он был одним из основателей Шведского отделения). Они с коллегой были двумя врачами на 300 тысяч населения.</p><p>Это не самый простой опыт. В день в больницу попадали примерно по три тяжелобольных ребёнка. Каждый двенадцатый умирал там же. Оснащение больницы и количество персонала не позволяло спасти больше.</p><p>Однажды на выходные к Рослингу приехал его друг — шведский педиатр, который работал в более крупном городе Мозамбика в больнице с лучшим оснащением. Была суббота, но Рослинга срочно вызвали на работу. На пороге они встретили перепуганную мать с ребёнком, страдающим от жуткой диареи. Женщина была так слаба, что у неё пропало молоко. Рослинг осмотрел ребёнка, установил питательную трубку и велел вводить через неё раствор для регидратации.</p><p>Друг Рослинга открыто раскритиковал такое назначение, обвинив его в том, что он просто хочет вернуться домой пораньше. Рослинг пояснил, что такова стандартная процедура, а на установку капельницы уйдёт куча времени, да ещё и медсёстры могут потом и напортачить с повторной установкой. Но главное, Рослинг заметил, что он действительно спешит на ужин с семьёй, ведь иначе он не протянул бы тут и месяца.</p><p>Друг Рослинга не принял эти аргументы и остался на несколько часов для установки капельницы в тончайшую вену. Когда он вернулся домой к Рослингу, то продолжил настаивать на своём: ты должен делать всё возможное для каждого пациента.</p><p>На что Рослинг ответил: нет, я не имею права тратить все мои ресурсы и время на спасение тех, кто обратился в больницу. Я в ответе за все детские смерти в этом округе, а не только за те, что происходят у меня на глазах.</p><p>Как вы считаете, кто прав в этом споре?</p><p>Добавлю немного фактов: в больнице в тот год погибло 52 ребёнка. А в округе, который курировал Рослинг, произошло больше 3000 детских смертей. Рослинг сделал упор на обучение деревенских фельдшеров, которые вакцинировали детей и начинали лечить наиболее опасные болезни, не требующие серьёзной квалификации в тех пунктах, до которых люди могли добраться пешком.</p><p>Мне кажется, нужно иметь довольно много мужества и рациональности, чтобы отвернуться от умирающего ребёнка, при этом не отвернувшись от сотен безымянных детей, которых ты не видишь. Гораздо проще было бы считать себя героем, игнорируя всё, что находится вне поля твоего зрения. Но Рослинг был слишком хорошо знаком с тем, что он называл жестокой математикой нищеты.</p><p>Друг Рослинга с лёгкостью настаивал на том, что каждая жизнь бесценна. Вот только руководствоваться этим принципом — значит считать, что одна жизнь стоит столько же, сколько стоят тысячи или миллионы жизней. Если же мы хотим спасти больше жизней, то считать так неэффективно, хотя очень хочется.</p><h2>Удобные назначения</h2><p>К сожалению, эффективные методы зачастую и «выглядят» некрасиво и менее удобны. Кардиолог <a href=\"https://youtu.be/cs-FIoWl3hk?t=216\" rel=\"noopener noreferrer nofollow\">Ярослав Ашихмин</a> в своём выступлении рассказывает, к чему это приводит. При аритмии есть два альтернативных метода лечения. Один из них — с использованием так называемых антиаритмиков класса 1ц. Этот способ обожают и пациенты, и врачи, ведь он быстро снимает симптомы, а побочные эффекты от него минимальны. Врачей, назначающих такой вид лечения, очень рекомендуют друзьям и знакомым. Альтернативой выступает лечение без антиаритмиков. Но в этом случае довольно неприятная симптоматика не снимается, что не нравится пациентам. Это к тому же неудобно врачам, вынужденным объяснять пациенту зачем он мучается. Проблема состоит в том, что пациенты в первом случае (с антиаритмиками) умирают значительно чаще. Такая вот дилемма: человеческая жизнь или комфорт.</p><h2>Задача об азиатской болезни</h2><p>Нечто подобное демонстрирует Даниель Канеман в эксперименте «задача об азиатской болезни». На всякий случай скажу, что задача появилась задолго до пандемии коронавируса. Я приведу немного модифицированную её версию.</p><p>Страна готовится к эпидемии необычной азиатской болезни, которая убьёт тысячу человек. И предложены два альтернативных метода борьбы с ней, с разными прогнозами. Тебе предстоит выбрать метод, считая, что прогнозы точны.</p><p><em>И так первый метод борьбы позволит гарантированно спасти 800 жизней.</em></p><p><em>Второй метод с вероятностью 90% спасёт всю тысячу человек, но с вероятностью 10% никого из них спасти не удастся. </em></p><p>Многие люди выбирают гарантированное спасение. Но математическое ожидание такого выбора хуже. Приняв такое решение сотню раз, вы спасёте 80 тысяч человек, а приняв второе решение сотню раз, вы спасёте 90 тысяч. И многие восклицают, мол как можно считать жизни и подвергать людей опасности, играя в это как в азартную игру?</p><p>Но вот что интересно. Канеман переформулирует задачу следующим образом:</p><p><em>Первый метод гарантированно убьёт 200 человек. </em></p><p><em>Второй метод с вероятностью 90% сохранит все жизни, и с вероятностью 10% не сможет их сохранить.</em></p><p>В этой формулировке респонденты резко меняют своё решение. Потому что теперь гораздо комфортнее с моральной точки зрения выбрать второй вариант. То есть даже в мысленных экспериментах мы выбираем не то, что эффективнее и спасёт больше человеческих жизней, а то, что нам комфортнее сказать.</p><h2>Медицина и твоё мнение</h2><p>И именно <a href=\"https://www.youtube.com/playlist?list=PL8IqJ9ByNwX6dNgSdA7V_YQMLr1BngY4I\" rel=\"noopener noreferrer nofollow\">медицина</a>, с которой мы начали ролик, является областью, где подобные мысленные эксперименты превращаются в практические задачи. Легко говорить, что каждая жизнь стоит любых потраченных на неё денег. Но когда вы, как Рослинг, влияете на распределение бюджета в мировом здравоохранении для вас абсолютно бесполезен данный принцип. Он не позволит принимать правильные решения. Он не позволит отказаться от сбора 700 тысяч долларов для оплаты одной трансплантации костного мозга и потратить эти же деньги на закупку противомоскитных сеток в Африку, способных спасти от <a href=\"https://www.givewell.org/charities/amf#Whatdoyougetforyourdollar\" rel=\"noopener noreferrer nofollow\">малярии около 200 детей</a>.</p><p>И здесь не получится рассуждать в стиле «ну это решает кто-то другой», ведь общественное мнение (то есть лично твоё) определяет какой поступок комфортен человеку, принимающему решение, как в случае с врачами и антиартимиками.</p><h2>Как мы принимаем решения?</h2><p>Всё это тесно связано с таким понятием как <a href=\"https://lesswrong.ru/w/%D0%A7%D0%B0%D0%92%D0%BE_%D0%BE_%D0%BA%D0%BE%D0%BD%D1%81%D0%B5%D0%BA%D0%B2%D0%B5%D0%BD%D1%86%D0%B8%D0%B0%D0%BB%D0%B8%D0%B7%D0%BC%D0%B5\" rel=\"noopener noreferrer nofollow\">консеквенциализм</a>. Упрощая, это принцип принятия решений, когда ценным считается результат, а не то, как это решение выглядит или то, кажется ли оно красивым. Но почему для нас так не естественен подобный подход?</p><p>Ответ частично уже звучал. Многие решения принимаются вообще не оптимизируя количество спасённых жизней. Нам важен сам процесс и то, что он принесёт. В случае с кардиологами, назначающими антиаритмики — это рекомендации и положительная обратная связь. В случае со спасённым ребёнком в Мозамбике — это тёплое чувство в груди, которое Скотт Александер называет пушистиком. Ну знаете, когда перевели бабушку через дорогу. Чувство обратное стыду. Ну а в случае с Каннемановской задачей мы просто пытаемся транслировать сигнал в социум о том, какие мы молодцы. И в этих мотивах нет ничего плохого, пока они не преграждают путь эффективности.</p><p>Здорово, если люди увлекаются какими-нибудь экологическими штуками вроде переработки отходов, потому что им нравится транслировать вовне образ себя как ответственного жителя нашей планеты. Однако что если они таким образом делают не лучшее из возможного? Вдруг им стоило бы распорядиться ограниченными ресурсами иначе? А может они и так избрали лучшую стратегию? Но абсолютно точно, это невозможно оценить, если хотя бы не попробовать. И есть <a href=\"https://www.givewell.org/\" rel=\"noopener noreferrer nofollow\">организации</a>, которые делают попытки оценить это. Это направление известно как <a href=\"https://ea-ru.org/\" rel=\"noopener noreferrer nofollow\">эффективный альтруизм</a>, и я не буду останавливаться на нём подробно, при желании вы сами ознакомитесь с ним, и разберётесь, насколько лучше или хуже вас они справляются с такой оценкой.</p><h2>Любить людей или деньги?</h2><p>Я лишь хотел донести мысль о том, что, людям, которые хотят приносить больше пользы в реальном мире приходится считать ограниченные ресурсы. Отказ от оценки человеческой жизни не просто не делает лучше, он строго делает хуже. Он отдаёт решение на откуп монетке — как иронично. Чтобы помогать людям нужно считать деньги, или даже любить их (однако ваша любовь к деньгам не всегда порождает желание помочь людям). Помню, как меня удивила и восхитила фраза: «я люблю деньги», сказанная Нютой Федермессер, пионером паллиативной помощи в России и учредителем фонда помощи хосписам. В этой фразе вовсе не было посыла, который транслируют исполнители современному поколению. В её исполнении фраза несла смысл: человеческая жизнь имеет цену в деньгах, а я люблю человеческие жизни.</p><h2>Цена и ценность</h2><p>Думаю, моя позиция в данной статье довольна прозрачна. Поэтому настало самое время всё запутать. И сделаю я это простым вопросом: неужели я считаю, что ценность человеческой жизни можно приравнять к стоимости автомобиля?</p><p>Ответ на этот вопрос связан с тем, что цена и ценность — это разные понятия. А чтобы пояснить это наглядно, я обращусь к притче от Найта Соарэса (<a href=\"https://mindingourway.com/the-value-of-a-life/\" rel=\"noopener noreferrer nofollow\">оригинал</a>, <a href=\"https://lesswrong.ru/w/%D0%A6%D0%B5%D0%BD%D0%BD%D0%BE%D1%81%D1%82%D1%8C_%D0%B6%D0%B8%D0%B7%D0%BD%D0%B8\" rel=\"noopener noreferrer nofollow\">перевод</a>).</p><p>Когда-то давно существовала деревня мирных бессмертных людей. Они не старели в биологическом смысле. То есть вероятность смерти не зависела от прожитых лет. Но они всё ещё могли умереть от голода или повреждений. Так было до появления дракона.</p><p>Я уверен, вы знаете, что драконы желают получить от людей две вещи: золото и плоть. Дракон, дал жителям мрачный ультиматум:</p><p>Каждый человек в этой деревне должен ежегодно платить налог золотом, количество которого равно возрасту этого человека. Всякий, кто не сможет заплатить, будет съеден.</p><p>Жители деревни умоляли, стоя на коленях, рыдали и приходили в ярость, но дракон оставался непреклонен. Он просто показал им несколько скал, в которых, вероятно, можно было сделать хорошие золотые прииски и приказал им приступать к работе.</p><p>Люди старались изо всех сил. Сельчане работали не покладая рук, откидывая камни в сторону, копали землю голыми руками, разбивая пальцы до крови, мало охотились и старались как можно меньше заниматься собирательством, и даже перестали заботиться о своих жилищах — но всё равно, не смогли отдать налог дракону. В конце года дракон вернулся и забрал всё золото, которое у них было, и десять самых старых сельских жителей (отдав старейшин, удалось спасти большинство жизней).</p><p>Обезумев, жители деревни решили попробовать снова. Они подвергли себя ещё большим аскезам в попытке успеть к назначенному сроку, становясь всё более изнурёнными. Их глаза поблёкли, кожа болезненно пожелтела, а руки стали безжизненными. И в следующий раз, когда пришёл дракон, он забрал всё золото и пятьдесят жителей.</p><p>Стратегия не работала.</p><p>Но изобретательность – одно из главных человеческих качеств.</p><p>Таким образом, на третий год выжившие пришли к горькому осознанию своего положения и снова начали охотиться, заниматься собирательством, становились сильнее и здоровее, и признали, что им придётся заботиться о себе, прежде чем они смогут позаботиться о своих близких. Они приступили к созданию кирок и лопат, понимая, что голыми руками справиться не удастся.</p><p>В конце третьего года дракон снова забрал всё золото и сотню жителей, поскольку их стратегия ещё не начала приносить плоды.</p><p>Но в конце четвёртого года дракон забрал всего двоих.</p><p>Вскоре после этого дракон (восхищаясь их прогрессом) сообщил жителям деревни, что теперь налог будет расти быстрее, экспоненциально их возрасту.</p><p>На этот раз жители деревни лишь только кивнули и преобразовали свою горячую ярость в холодную решимость.</p><p>Прошло много лет с тех пор, как дракон впервые пришёл в селение. На самом деле, всё сильно изменилось: деревня выросла до города, а город вырос до цивилизации.</p><p>Старейшины стали мыслить продуктивнее и поняли, как получать больше золота в час, но стало приходить время, когда эта повышенная производительность больше не стоила затрат на жизнь. И когда это время настало, старейшины были готовы к своей судьбе, потому что понимали, что их жизнь не стоила двух других.</p><p>На самом деле жёсткие компромиссы, подобные этим, стали обычным явлением. Жители деревни давно открыли экономику и специализацию, и теперь большинство из них не работало в шахтах. Некоторые из них стали проводить время за готовкой или выращиванием растений для пропитания, другие стали тратить время на совершенствование жилищ, появились и мастера, занимающиеся разработкой новых инструментов и механизмов, которые бы поспевали за грабительским налогом дракона.</p><p>Удивительно, но есть и те, кто посвятил свою жизнь искусству и развлечениям, ведь жители осознали важность поддержания мотивации и морального духа.</p><p>(А тем временем, некоторые жители, глубоко под землёй, подальше от любопытных глаз дракона, <a href=\"https://www.youtube.com/watch?v=MUKqv-SwD9w\" rel=\"noopener noreferrer nofollow\">разрабатывали оружие</a>)</p><p>Таким образом, вы можете обнаружить в этой цивилизации людей, которые посвящают свою жизнь не добыче золота, а написанию книг, но если вы посмотрите внимательно, то заметите, что это происходит только тогда, когда писатель может спасти больше жизней за счёт роста производительности и морали, чем за счёт своего труда в шахте. И потому эта цивилизация, одержимая сохранением жизни тому количеству людей, скольких может спасти ежегодно, все ещё создаёт книги, пьесы и фильмы.</p><p>Это означает, что в настоящее время вы можете рассчитать точную цену спасения каждой жизни. И оказывается, что одна жизнь равна примерно той же цене, что и тысяча билетов в кино.</p><p>Но цена и ценность не одно и то же. Факт о том, что человеческая жизнь приравнена к стоимости 1000 билетов в кино вовсе не означает, что у них одинаковая ценность. Это факт о том, что если мы вместо непосредственного спасения жизни можем получить две тысячи билетов, а с ними рост мотивации и морального духа, то это может спасти больше жизней.</p><h2>Возвращаемся в реальность</h2><p>Но это в вымышленном мире. В нашем мире экономика неэффективна. И когда спасение жизни в развитых странах может стоить миллионы долларов, спасение жизни где-нибудь в странах третьего мира может стоить несколько тысяч долларов.</p><p>И это тем не менее вполне конкретный диапазон цен. Представь себе кнопку, которая с шансом один на миллион убивает случайного человека. Сколько тебе должны заплатить за нажатие такой кнопки, чтобы ты согласился? Ответ «нисколько» понятен, но чудовищен по отношению к другим людям. Вождение автомобиля - эквивалентно нажатию такой кнопки, потому что убивает с вероятность 1к10 тысячам одного человека в год согласно статистике. Только в случае с автомобилем ты не получаешь деньги, а лишь комфорт от передвижения. А в случае с кнопкой ты мог хотя бы назвать 10 долларов. Ведь нажатие такой кнопки миллион раз убило бы одного человека, но вырученные 10 миллионов долларов ты мог бы потратить на спасение более чем одного. Спорно? Но ведь ты мог назвать вообще любую сумму, и помочь любому количеству людей. Мысленный эксперимент далёк от реальности, но даже в нём хочется отдать всё на откуп монетке.</p><p>Но почему всё устроено так несправедливо? Почему при общем согласии о бесценности человеческой жизни мы должны назначать ей цену? Всё из-за дракона.</p><p>Может я скажу <a href=\"https://www.yudkowsky.net/singularity/simplified\" rel=\"noopener noreferrer nofollow\">банальные вещи</a>, но, к сожалению, они не так очевидны, как кажется. Жизнь — это хорошо, здоровье — это хорошо; красота, счастье, веселье, смех, решение сложных задач, возможность учиться — всё это хорошо. И чем больше, тем лучше. Без ограничений.</p><h2>Дракон не так уж плох?</h2><p>Но не все жители нашей с вами деревни считают дракона таким уж плохим (под деревней я имею в виду всё человечество). Почему?</p><p>В массовой культуре куча шаблонных мыслей про смерть. Таких мыслей, которые вызывают социальное одобрение, и иногда даже ощущение глубокой мудрости. Ну вы всё их знаете: например, «смерть придаёт смысл жизни». Но представь, что ты родился бессмертным. И тебе предлагают стать смертным, но зато ты будешь знать, что скоро умрёшь. И, видимо, это тебя особо замотивирует на что-то. Как предложение? По мне, не очень. Но <a href=\"https://t.me/bayesyatinaa/114\" rel=\"noopener noreferrer nofollow\">рационализация</a> заставляет нас видеть что-то хорошее в этом.</p><p>Персонажи ищущие бессмертия в массовой культуре поголовно злодеи. Учёные работающие над радикальным продлением жизни или борющиеся со смертельными заболеваниями вовсе не являются таковыми. Но они как мы помним где-то глубоко под землёй, а билеты, которые мы приравняли к цене человеческой жизни, продаются в кино, где герой не может желать бессмертия.</p><p>Следующий стандартный шаблон: «<a href=\"https://www.youtube.com/playlist?list=PL8IqJ9ByNwX6_3d8kRxiJS27Dsylznku1\" rel=\"noopener noreferrer nofollow\">эволюция</a> не просто так сделала нас смертными». Но цели наших генов и наши личные цели вовсе не должны совпадать. Да, смерть заложена генетически. Как и смертельные и наследственные заболевания. Это вовсе не повод с ними не бороться. На самом деле даже действия животных тоже не является непосредственным выполнением прихотей генов. Самец богомола не мечтает погибнуть в объятии самки аки скандинавский воин мечтает погибнуть в бою и очутиться в Вальгалле. Они хотят жить и вырываются, с некоторым шансом на успех.</p><p>Вот ещё один шаблон: «если мы будем жить сильно дольше, наступит перенаселение». Однако экономическое развитие имеет стойкую корреляцию с рождаемостью, а та в свою очередь определяет население нашей планеты. Сейчас мы находимся на спадающей по скорости рождаемости, и к 100 году прогноз ООН обещает нам всего 12 миллиардов населения. Но подробнее про это в другой раз.</p><p>Следующая стандартная мудрость: слишком сложно правильно всё оценить. Да, конечно, посчитать цену человеческой жизни не так просто. Как и принимать правильные решения. В нашем <a href=\"https://www.youtube.com/watch?v=T7hSBbf6Hk0\" rel=\"noopener noreferrer nofollow\">чаепитии с Александром Панчиным</a> он указал на одну из очевидных дилемм: если разобрать людей, которым осталось жить недолго на органы, то это спасёт больше человеческих жизней. Но такой мир, куда менее приятен. Мозг сложная штука и в ней есть сложнейшая иерархия желаний, зачастую противоречивых и непрерывно изменяющихся во времени. Всё больше подобных дилемм возникает с развитием <a href=\"https://www.youtube.com/playlist?list=PL8IqJ9ByNwX7v_OO5ZrjCVBGM_dHpJAih\" rel=\"noopener noreferrer nofollow\">искусственного интеллекта</a>, который должен принимать решения, например при вождении (что переводит мысленные эксперименты в область практических решений). Но сложность такой задачи не должна вызывать отказ от попыток её решать. Ведь подобный отказ слишком сильно напоминает отказ видеть детей, умирающих вне поля зрения. И по эффективности, и по уровню комфорта.</p><p>А ещё вспомнил, жить дольше 100 лет будет скучно. Утопия Шоу в своём <a href=\"https://www.youtube.com/watch?v=YLeXoLX_AjM\" rel=\"noopener noreferrer nofollow\">ролике про бессмертие</a> приводит эталонный контраргумент: если человеку сообщить, что ему осталось жить неделю, то он забьёт всю неделю важными делами. Но если через неделю спросить, успел ли он всё, он ответит отрицательно. Дав ему ещё неделю, он вновь не успеет. Он не успеет никогда. Конечно, человек в преклонном возрасте может утверждать, что устал от жизни. Но это рассуждения вышедшей из строя гормональной и нервной систем. Вечно молодой человек совсем другое дело. И когда мы говорим о радикальном продлении жизни, мы не имеем в виду обвешанные трубками тела, уставшие от бесконечной боли. Мы говорим о 700 летних архитекторах с юношеским вдохновением, создающих шедевры недостижимые за жизнь человека.</p><p> Ну и последний на сегодня шаблон из куда более обширной их коллекции: «Откуда ты знаешь, что биологическое бессмертие возможно?». На самом деле не знаю. У нас пока есть лишь гипотезы и исследования на эту тему. Рекомендую вот <a href=\"https://www.youtube.com/watch?v=MUKqv-SwD9w\" rel=\"noopener noreferrer nofollow\">эту лекцию</a>, с обзором самых интересных научных достижений в этом вопросе. Но исследования по пути к бессмертию, даже если оно невозможно направлены на улучшение качества и продолжительности жизни. А следовательно, направлены на снижение её цены, при сохранении ценности.</p><h2>P.s.</h2><p>Я считаю важным донести мысль, что смерть дракона — это единственная хорошая и оправданная смерть. Даже когда сторонники смертной казни указывают на то, что иногда смерть полезна, они всё же имеют ввиду, что таким образом, по их мнению, удастся спасти больше жизней. Правы ли они в своём прогнозе? Ну уж точно они согласны с тем, что больше спасённых жизней это хорошо.</p><p>Благодаря распространению озвученных выше и непрозвучавших сегодня шаблонов в массовой культуре мы, как и некоторые жители деревни забываем о драконе. Может это и правильно, ведь сначала нужно позаботиться о себе, вместо того чтобы голыми руками копать шахту. Становиться бедняками это вряд ли лучшее решение, ведь тогда спасать придётся нас, а не нам. Но с забвением идей о борьбе с драконом мы перестаём ценить учёных, которые прямо сейчас в подземных лабораториях разрабатывают оружие против него. Продолжаем коситься на врачей, считающих цену человеческой жизни для её спасения. И продолжаем плодить мысли о том, что дракон не так уж и плох.</p><p><a href=\"https://t.me/bayesyatinaa\" rel=\"noopener noreferrer nofollow\"><u>Мой канал в телеграмм</u></a></p><p><a href=\"https://youtube.com/@bayesyatina\" rel=\"noopener noreferrer nofollow\">Мой канал на ютуб</a></p><p></p>', 1, '2023-06-12 22:03:41', 497055, 109, '/ru/articles/738868/', 'В предыдущей статье был разобран вопрос организации общедомовой вытяжной вентиляции из санузлов и кухонь в квартирах в многоэтажных многоквартирных домах.Теперь попытаемся обобщить технические решения по вентиляции, которые пригодные для отдельных квартир. Обобщение сделаем для «отдельных помещений» в составе «больших зданий».К категории «отдельных помещений» можно причислить что угодно: от  квартир и офисов  до производственных мастерских и торговых помещений. Ну, а к категории «больших зданий» можно причислить тоже обширный ряд сооружений: от плоских и длинно-широких одно-двух этажных Торговых центров (ТЦ)  до высотных зданий офисных центров с квартирами и апартаментами на верхних этажах (далее БЦ).К категории ТЦ также можно причислить широкий ряд малоэтажных протяжённых сооружений технического назначения: заводские корпуса, склады, гаражи и т.д.Для всех перечисленных типов зданий от ТЦ до БЦ свойственно одно общее свойство, а именно:Объём здания разделён на отдельные помещения (или отдельные зоны в общих помещениях) с различными условиями и требованиями к режиму вентиляции во времени и в пространстве.То есть в одном здании должно быть несколько независимо работающих вентиляционных систем, обеспечивающих вентиляцию в отдельных помещениях, или в отдельных малых участках больших помещений.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(230, 'Дьявол в мелочах: белковый нанокомпьютер для клеточной терапии', '<img src=\"https://habrastorage.org/r/w780q1/webt/xr/8p/fe/xr8pfe475zufb-ahxijhalaiv2g.jpeg\" data-src=\"https://habrastorage.org/webt/xr/8p/fe/xr8pfe475zufb-ahxijhalaiv2g.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\nДаже самые грандиозные вещи куда проще понять, если разложить их на составляющие. Подобный принцип не является чем-то новым в научном сообществе, так как многие процессы и явления описывались и описываются путем предварительного обозначения их элементов. Говоря об организме человека и о заболеваниях, которыми он страдает, также крайне важно найти первоисточник недуга. Даже самые серьезные заболевания с самыми ярко выраженными симптомами берут свое начало из строительных блоков любого живого организма — клеток. Создание механизма непосредственного воздействия на клетки с последующим их восстановлением является одной из важнейших задач современной науки. Ученые из университета штата Пенсильвания (США) стали на шаг ближе к достижению этой цели, разработав белковый нанокомпьютер, способный модулировать поведение клеток. Из чего сделан компьютер, какими именно функциями он обладает, и как именно он может быть использован на практике? Ответы на эти вопросы мы найдем в докладе ученых.<a name=\"habracut\"></a><br>\r\n<br>\r\n<h3>Основа исследования</h3><br>\r\nКлетки обнаруживают биохимические, структурные и механические сигналы окружающей среды и используют эту информацию для принятия решений, координации задач и изменения своего поведения. В основе этих процессов лежат сложные вычислительные операции, проводимые белковыми сетями, которые получают входные сигналы, обрабатывают информацию и производят функциональные выходные данные.<br>\r\n<br>\r\nПонимание этого процесса позволит ученым из области синтетической биологии научиться перепрограммировать клеточное поведение. Искусственные клетки со встроенными инструкциями, созданные с использованием ДНК или белков, могут открыть путь для реализации биосенсорного анализа и биоремедиации в науках об окружающей среде, для диагностики заболеваний и инновационных терапевтических применений в медицине.<br>\r\n<br>\r\nГоворя о вычислительном процессе, стоит отметить, что фундаментальным его элементом является логический вентиль. Недавние достижения в области синтетической биологии включают попытки создания генетических цепей, которые функционируют как различные логические элементы, в которых функциональный результат контролируется экспрессией генов целевого белка (или белков).<br>\r\n<br>\r\nЭкспрессия белка регулируется путем захвата процесса транскрипции ДНК или трансляции мРНК и нацеливания на основные элементы во время этого процесса, такие как факторы транскрипции, промоторы и терминаторы или мРНК. В качестве альтернативы, в некоторых исследованиях изучалась конструкция логических вентилей в белках на посттрансляционном уровне. Эти логические вентили на основе белков создаются либо путем модулирования взаимодействий белок-белок, либо путем контроля реакций, опосредованных протеазами.<br>\r\n<br>\r\nАвторы рассматриваемого нами сегодня труда предложили новый метод интеграции восприятия, обработки и генерации выходных данных в едином белке, который они назвали «нанокомпьютерным агентом». Этот агент, по мнению ученых, может стать новым важным шагом в области биокомпьютинга.<br>\r\n<br>\r\nВместо того чтобы перепрограммировать генетические схемы, взаимодействия белок-белок или схемы, основанные на протеолизе, ученые попытались перепрограммировать трехмерную структуру и динамику одного белка-мишени. По сравнению с традиционными методами этот подход имеет ряд преимуществ.<br>\r\n<br>\r\nВо-первых, входной сигнал немедленно изменяет конформацию белка и изменяет его функцию, минуя процессы транскрипции и трансляции. Это обеспечивает быстрое время отклика и повышенную надежность.<br>\r\n<br>\r\nВо-вторых, вместо того чтобы работы с факторами транскрипции и промоторами, небольшие сенсорные домены (~ 15 кДа) вставляются в целевой белок для обеспечения функционального контроля. Таким образом, «кодирующий сценарий» заметно сжимается, а метаболическая нагрузка снижается.<br>\r\n<br>\r\nВ-третьих, в традиционных подходах после экспрессии или активации целевого белка функция вывода продолжается до тех пор, пока белок не расщепится (например, в результате нормальных или регулируемых процессов). Однако в новом подходе выходной функцией можно управлять с помощью светочувствительных датчиков с высокой обратимостью и пространственно-временным разрешением.<br>\r\n<br>\r\nВ рассматриваемом нами сегодня труде ученые описывают процесс создания и тестирования некоммутативной комбинаторной логической схемы в одном гибридном белке. Достигнуто это было путем включения модуля uniRapR, чувствительного к рапамицину, и модуля напряжения кислорода, реагирующего на синий свет (LOV2), в киназу Src — нерецепторную тирозинкиназу, которая играет важную роль в различных клеточных процессах (клеточная адгезия, подвижность, пролиферация, дифференцировка и т.д.).<br>\r\n<br>\r\n<h3>Результаты исследования</h3><br>\r\nВ <i>аллостерии*</i> возмущение, вносимое в дистальный (аллостерический) сайт, энергетически связано с функциональным сайтом, тем самым влияя на активность белка.<blockquote><b>Аллостерия*</b> — это прямое и эффективное средство регуляции функции биологических макромолекул, возникающее в результате связывания лиганда с аллостерическим сайтом, топографически отличным от ортостерического сайта.</blockquote>Используя белковую аллостерию, сенсорные модули были вставлены в аллостерические сайты, чтобы регулировать функции белка-мишени. В труде «<a href=\"https://www.nature.com/articles/s41467-021-26937-x.pdf\">Two-input protein logic gate for computationin living cells</a>» ученые добились «логики OR (ИЛИ) с двумя входами» путем вставки uniRapR в домены киназы и LOV2 в домены киназы фокальной адгезии.<br>\r\n<br>\r\nВместо нацеливания на два разных домена белка ученые предложили включить оба сенсора в один и тот же домен белка-мишени и «запутать» аллостерические коммуникации внутри одного и того же белка-хозяина, чтобы сенсорные домены конкурировали друг с другом. Ученые считают, что такая конструкция будет устанавливать более сложные логические вычисления в одном белке, которые ранее не выполнялись.<br>\r\n<br>\r\nДля проверки этой гипотезы сенсоры uniRapR и LOV2 были введены в киназный домен белка Src (изображение ниже).<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/kw/ux/zj/kwuxzjpiuqsugt_qacrwgzmcaoa.jpeg\" data-src=\"https://habrastorage.org/webt/kw/ux/zj/kwuxzjpiuqsugt_qacrwgzmcaoa.jpeg\" data-blurred=\"true\"><br>\r\n<i>Изображение №1</i><br>\r\n<br>\r\nСконструированное белковое устройство использовало в качестве входных сигналов рапамицин и синий свет, каждый из которых влияет на конформационную динамику Src. Результирующее конформационное изменение белка затем влияло на его сеть белкового взаимодействия внутри клетки, вызывая отчетливую функциональную реакцию.<br>\r\n<br>\r\nВ исследовании «<a href=\"https://www.pnas.org/doi/epdf/10.1073/pnas.1218319110\">Rational design of a ligand-controlled proteinconformational switch</a>» ученые разработали молекулярный переключатель, контролируемый рапамицином (Src-uniRapR), вставив uniRapR в сайт, аллостерически связанный с активным сайтом киназного домена Src. Используя этот труд в качестве отправной точки, ученые хотели добавить датчик LOV2 для создания системы с двойным управлением, в которой активность Src могла бы регулироваться как рапамицином, так и синим светом.<br>\r\n<br>\r\nЧтобы добиться функционального контроля системы с помощью синего света, необходимо было идентифицировать второй аллостерический сайт для вставки LOV2, который удовлетворял бы двум требованиям. Во-первых, вставка LOV2 должна сохранить большинство функций Src в клеточной системе. Во-вторых, сайт встраивания должен быть аллостерически связан с ключевым сайтом внутримолекулярного взаимодействия, который имеет решающее значение для поддержания аутоингибирующей конформации Src.<br>\r\n<br>\r\nВ трехмерной структуре Src было обнаружено в общей сложности пять открытых на поверхности <i>петель*</i> в дополнение к одной, используемой для вставки uniRapR.<blockquote><b>Петля*</b> — гибкая область вторичной структуры белка.</blockquote>Воздействие петель на поверхность было подтверждено путем расчета нормализованной площади поверхности, доступной для растворителя (SASA от solvent-accessible surface area). Все пять петель были экспонированы на поверхности, и, по крайней мере, один остаток в каждой петле имеет нормализованную SASA более 40% (<b>2A</b>).<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/6s/0g/-4/6s0g-4cvfgpdfvidda1xv5mlhui.jpeg\" data-src=\"https://habrastorage.org/webt/6s/0g/-4/6s0g-4cvfgpdfvidda1xv5mlhui.jpeg\" data-blurred=\"true\"><br>\r\n<i>Изображение №2</i><br>\r\n<br>\r\nЧтобы предсказать, играют ли эти петли функциональные роли, была выполнена оценка эволюционной консервативности каждого остатка (аминокислота в пептидной цепи) на основе нормализованных показателей консервации, рассчитанных с помощью <a href=\"https://consurf.tau.ac.il/consurf_index.php\">ConSurf</a>. Большинство остатков в этих пяти петлях не являлись консервативными и, таким образом, подходят для вставки LOV2.<br>\r\n<br>\r\nЗатем ученые определили, какая из пяти петель может быть модифицирована для обеспечения аллостерического контроля конформационных изменений Src, что влияет на функцию.<br>\r\n<br>\r\nВ физиологических условиях киназа Src принимает автоингибирующую конформацию за счет внутримолекулярного взаимодействия между доменом SH2, фосфорилированным тирозином (pTyr<sup>527</sup>) на С-концевом хвосте и доменом SH3 с полипролиновым линкером SH2-SH1. Ранее было установлено, что эта неактивная конформация также была стабилизирована сэндвич-подобным гидрофобным взаимодействием между Trp<sup>260</sup>, спиралью αC и цепью β4. Опыты показали, что делеция С-концевого хвоста незначительно активировала Src, в то время как мутация гидрофобного стека запускала сильную активацию белка.<br>\r\n<br>\r\nСледовательно, ученые предположили, что LOV2, встроенный в петли, которые аллостерически связаны с этими двумя ключевыми взаимодействиями, может быть способен включать/выключать функции белка. Изучая структуру Src, было обнаружено, что петля 4 близка к С-концевому взаимодействию, а петля 5 расположена рядом с цепью β4 и, таким образом, может оказывать более сильное аллостерическое влияние, чем другие петли. Был проведен анализ аллостерических коммуникационных путей, начинающихся от каждой петли до pTyr<sup>527</sup> или Trp<sup>260</sup>, используя <a href=\"http://Ohm.dokhlab.org\">Ohm</a>. Анализ показал, что петля 5 и петля 4 имеют самый сильный аллостерический контроль над гидрофобным стеком и С-концевым взаимодействием соответственно. На основании этих результатов петля 4 и петля 5 были выбраны для вставки LOV2.<br>\r\n<br>\r\nЗатем было выполнено моделирование дискретной молекулярной динамики (DMD от discrete molecular dynamics) для оценки того, как вставка LOV2 в петлю 4 или петлю 5 влияет на аллостерический контроль конформационных состояний Src.<br>\r\n<br>\r\nКиназа Src претерпевает конформационное изменение из неактивного состояния в активное с диссоциацией SH2-SH3 и киназного домена. Было количественно оценено расстояние между центрами масс этих двух областей, чтобы определить конформационные изменения во время моделирования. Большое расстояние указывает на диссоциацию между доменами SH2-SH3 и киназы, что указывает на активацию белка, тогда как более близкое расстояние указывает на неактивное состояние.<br>\r\n<br>\r\nКогда LOV2 вставлен в петлю 5, расстояние между темным мутантом Src-LOV2 (LOV2 C450A) значительно увеличивается по сравнению с соответствующим освещенным мутантом (LOV2 I510E/I539E) (<b>2B</b>, <b>2C</b>). Это подразумевает, что синий свет может ингибировать активацию Src в этой конструкции. Для вставки LOV2 в петле 4, однако, освещенный мутант имеет большие расстояния, чем темный мутант. Это позволяет предположить, что синий свет может активировать Src в этой конструкции.<br>\r\n<br>\r\nРазница между темными и освещенными мутантами со вставкой петли 5 намного больше, чем у мутантов с петлей 4. Это указывает на то, что петля 5 обеспечивает более сильный аллостерический контроль.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/n_/l3/3a/n_l33amfu7wlfgvwb6velp8hn6m.jpeg\" data-src=\"https://habrastorage.org/webt/n_/l3/3a/n_l33amfu7wlfgvwb6velp8hn6m.jpeg\" data-blurred=\"true\"><br>\r\n<i>Изображение №3</i><br>\r\n<br>\r\nДалее ученые создали химико- и оптогенетически сконструированные системы путем вставки домена LOV2 в петлю 4 и петлю 5, соответственно, с использованием конструкции Src-uniRapR. Проводилось тестирование различных линкеров соединения, включая Gly-Pro-Gly (GPG), Gly-Ser-Gly (GSG) и отсутствие линкера, при присоединении LOV2 для оптимизации аллостерической регуляции. К С-концу сконструированного белка Src была прикреплена метка mCherry, чтобы визуализировать локализацию белка в клетках. Для изучения функций белков, регулируемых сенсорами, были сконструированы мутанты Src-uniRapR-LOV2-mCherry dark (темный; LOV2 C450A) и lit (освещенный; LOV2 I510E/I539E), которые временно экспрессировались в клетках MDA-MB-231. Для вставки LOV2 в петле 4 не наблюдалось какой-либо заметной разницы в клеточном фенотипе между темными и освещенными мутантами или до и после добавления рапамицина. Внешнее нарушение, вносимое LOV2 для нарушения С-концевого взаимодействия, может оказаться неспособным полностью активировать белок Src, или линкеры соединения могут быть не оптимальными для аллостерического контроля. Однако была замечена транслокация белка из цитоплазмы в фокальные адгезии после добавления рапамицина, когда LOV2 был встроен в петлю 5 с линкером GSG. Потому ученые решили использовать именно эту систему, названную Src-uniRapR-LOV2-mCherry, для дальнейшего изучения.<br>\r\n<br>\r\nУченые исследовали фенотип фиксированных клеток MDA-MB-231 со сверхэкспрессией мутанта Src-uniRapR-LOV2-mCherry dark или lit, обработанных рапамицином или без него. Добавление рапамицина значительно увеличивало количество и размер фокальных спаек как у темных, так и у освещенных мутантов (<b>3A</b> и <b>3B</b>) по сравнению с теми, у которых не было рапамицина. В отсутствие рапамицина достоверных различий между темными и освещенными мутантами не наблюдалось.<br>\r\n<br>\r\nЭти данные указывают на то, что рапамицин активирует Src, что приводит к транслокации белка и формированию фокальной адгезии. В присутствии рапамицина мутант lit имеет уменьшенное количество и площадь фокальных спаек по сравнению с мутантом dark. Эти наблюдения говорят о том, что синий свет инактивирует Src и ингибирует формирование фокальной адгезии, что противоречит аллостерическим эффектам, индуцированным рапамицином. Визуализация MDA-MB-231 в живых клетках на сетках, покрытых коллагеном, дополнительно подтверждает, что рапамицин стимулирует локализацию Src в фокальных адгезиях на периферии клеток (<b>3C</b> и видео №1).<br>\r\n<br>\r\n<div class=\"oembed\"><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/6475a2e1025fe1fbb3576d7c\" data-style=\"\" id=\"6475a2e1025fe1fbb3576d7c\" width=\"\"><i>Видео №1</i><br>\r\n<br>\r\nРапамицин регулирует активность киназы Src в конструкции Src-uniRapR. Чтобы проверить, повлияла ли активность киназы в системе с двойным контролем, был измерен уровень фосфорилирования Src Tyr<sup>416</sup> in vivo во всех возможных условиях, включая освещение, темноту, рапамицин и отсутствие рапамицина.<br>\r\n<br>\r\nАктивность киназы оставалась неактивной при всех условиях. Это означает, что активация и инактивация uniRapR и LOV2 вообще не влияли на активность киназы. Другая возможность заключается в том, что вставка LOV2 искажает сайт связывания аденозин-5\'-трифосфата и, следовательно, устраняет активность киназы. Из-за отсутствия киназной активности наблюдалась транслокация Src в фокальные адгезии, т.е. фенотип, отличный от поляризованного распространения, когда была индуцирована киназная активность. Индуцированная киназная активность Src способствует фосфорилированию его субстратов при фокальных адгезиях и стимулирует обмен фокальных адгезий и подвижность клеток. Следовательно, при устранении киназной активности в системе оборот фокальной адгезии ингибируется. Таким образом сохраняется фокальная адгезия. И наоборот, активность активированной киназы способствует обороту фокальной адгезии и приводит к другому клеточному фенотипу.<br>\r\n<br>\r\nФокальная адгезия является основным структурным элементом клетки, соединяющим внеклеточный матрикс с актомиозиновым цитоскелетом. Он функционирует как датчик механического напряжения и геометрии, позволяя обнаруживать различные морфологические, физические и биохимические среды и использует эту информацию для координации сложного клеточного поведения. Одним из важных явлений, связанных с фокальной адгезией, является направленная миграция клеток, индуцируемая контактными сигналами внеклеточного матрикса, что необходимо для морфогенеза ткани, диссеминации раковых клеток и миграции иммунных клеток. Фокальные адгезии играют жизненно важную роль в этих процессах, так как их созревание вызывает выравнивание F-актина, что дополнительно стимулирует ориентацию клеток и направленную миграцию. Поскольку наблюдалось созревание фокальной адгезии в разработанной системе с двойным контролем, ученые хотели знать, могут ли они контролировать направление клеток на выровненных коллагеновых волокнах, служащих в качестве сигналов направления контакта.<br>\r\n<br>\r\nКлетки MDA-MB-231 могут взаимно преобразовываться между веретеновидной и округлой морфологией с ламеллиподием на переднем крае. При посеве на полиакриламидные волокна коллагена nanolane, в ответ на сигналы окружающей среды, клетки MDAMB-231 принимают стержнеобразную форму с постоянным миграционным наклоном ~30°. Угловая ориентация возникает из-за наложения сил с различными осями приложения, которые создаются динамической конкуренцией между зарождающимися адгезиями и созревающими фокальными адгезиями, представленными нанополосами коллагена I типа.<br>\r\n<br>\r\nВ этой системе большинство формирующихся дискретных зарождающихся спаек преимущественно устанавливаются ламеллоподиальным расширением поперек наноструктуры, перпендикулярно расположенным нанополосам. Альтернативно, созревающие фокальные адгезии непрерывно распространяются вдоль нанополос, направляя расширение клеток соосно направлению нанополос, формируя динамический, механобиологически регулируемый баланс между растяжением клеток вдоль и поперек коллагеновых нанополос. Добавление рапамицина замедляло клеточную динамику, и клетки начинали удлиняться и выравниваться вдоль коллагеновых волокон как у темных, так и у светлых мутантов. В результате ориентация клеток на нанополосах коллагена была значительно снижена, в среднем менее чем на 10°. Уменьшение наклона клеток связано с увеличением количества и площади фокальных спаек по мере их созревания. Более зрелые фокальные адгезии увеличивают силы вдоль нанополос коллагена и, следовательно, сдвигают ориентацию клеток в направлении удлинения фокальных адгезий.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/po/r6/ys/por6ysqdjjf1_ntig_fzawe7xle.jpeg\" data-src=\"https://habrastorage.org/webt/po/r6/ys/por6ysqdjjf1_ntig_fzawe7xle.jpeg\" data-blurred=\"true\"><br>\r\n<i>Изображение №4</i><br>\r\n<br>\r\nЧтобы продемонстрировать точное управление разработанной системой и прояснить основные логические вычисления, ученые использовали конструкцию Src-uniRapRLOV2-mCherry (дикого типа) в клетках MDA-MB-231 и выполнили визуализацию живых клеток на коллагеновых нанополосах.<br>\r\n<br>\r\nДобавление рапамицина сразу ингибировало динамику миграции клеток (видео ниже). Клетки начали удлиняться и смещать свое направление в сторону вертикальных нанополос. Угол популяции уменьшился в среднем с 30° до менее 10° (<b>4B</b>). Чтобы уточнить изменение динамики клеток, была проведена количественная оценка прироста и потери апексов в течение 2 часов. Добавление рапамицина значительно уменьшало прирост и потерю апексов, что свидетельствует о снижении клеточной динамики.<br>\r\n<br>\r\n<div class=\"oembed\"><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/6475a2e2fe348a00f4b54c5c\" data-style=\"\" id=\"6475a2e2fe348a00f4b54c5c\" width=\"\"><i>Видео №2</i><br>\r\n<br>\r\nПри включении синего света в присутствии рапамицина через 3 часа, клетки восстановили свою динамику, так как прирост и потеря апексов значительно увеличились до уровня, который достоверно не отличался от уровня до добавления рапамицина (<b>4C</b>). Угол ориентации клеток также увеличивался под воздействием освещения.<br>\r\n<br>\r\nЧтобы понять лежащие в основе логические операции, ученые определили рапамицин и синий свет как входные сигналы, а ориентацию клеток или созревание фокальной адгезии как выходные данные. Было обнаружено, что система с двойной регулировкой функционировала как комбинаторная логическая схема, состоящая из логических элементов «И» и «НЕ» (<b>4A</b>), когда рапамицин был первым сигналом, а синий свет был вторым. В этом эксперименте, хоть рапамицин и присутствовал в клеточной культуре во время конфокальной визуализации, синий свет был способен изменять конформацию Src и противодействовать эффектам, индуцированным рапамицином. Следовательно, синий свет может быть более доминирующим в контроле конформаций Src, чем рапамицин.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/qu/0d/oi/qu0doiwljl9xuoism8ikticcuy8.jpeg\" data-src=\"https://habrastorage.org/webt/qu/0d/oi/qu0doiwljl9xuoism8ikticcuy8.jpeg\" data-blurred=\"true\"><br>\r\n<i>Изображение №5</i><br>\r\n<br>\r\nЧтобы проверить данную гипотезу, ученые изменили синхронизацию входных сигналов, в которых сначала использовался синий свет, а позже добавлялся рапамицин. При облучении синим светом угол ориентации клеток и клеточная динамика значительно увеличивались (<b>5B</b> и <b>5C</b>; видео ниже).<br>\r\n<br>\r\n<div class=\"oembed\"><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/6475a2e21a7f54fbab0ec987\" data-style=\"\" id=\"6475a2e21a7f54fbab0ec987\" width=\"\"><i>Видео №3</i><br>\r\n<br>\r\nКогда был добавлен рапамицин, угол ориентации клеток и динамика значительно уменьшились, независимо от применения синего света. Углы популяции были даже меньше, чем у необработанных клеток, а клеточная динамика восстанавливалась до исходного состояния. На основании этих двух экспериментов можно сделать вывод, что LOV2 и uniRapR играют эквивалентные роли во влиянии на конформационную динамику Src.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/k0/af/bd/k0afbdgnv3y-s87ndyfo9al1iyq.jpeg\" data-src=\"https://habrastorage.org/webt/k0/af/bd/k0afbdgnv3y-s87ndyfo9al1iyq.jpeg\" data-blurred=\"true\"><br>\r\n<i>Изображение №6</i><br>\r\n<br>\r\nУченые отмечают, что электронными логическими схемами можно гибко управлять (включать/выключать), сохраняя при этом высокую надежность. Чтобы выяснить, способна ли разработанная биологическая система к обратимому переключению, ученые провели продолжительный эксперимент (~15 часов), в котором синий свет включался и выключался каждые 3 часа в присутствии рапамицина.<br>\r\n<br>\r\nБыло обнаружено, что угол ориентации клеток, а также прирост и потеря апексов уменьшались, когда присутствовал только рапамицин (первый ряд на <b>6A</b>; левая панель на <b>6B</b>). Напротив, наклон клеток и клеточная динамика увеличивались при облучении синим светом.<br>\r\n<br>\r\nДля дальнейшего подтверждения цикличности использовался синий свет вместо добавления рапамицина (второй ряд на <b>6A</b>; и правая панель на <b>6B</b>). Клеточный угол и динамика немного увеличились при облучении синим светом. После добавления рапамицина и выключения синего света клеточный угол и динамика значительно уменьшились. Позднее облучение синим светом изменило клеточный фенотип и увеличило клеточный угол и динамику. В конце концов, когда снова был выключен синий свет, клеточный угол и динамика значительно уменьшились. Следовательно, манипулируя входными сигналами, вполне возможно обратимо генерировать выходные реакции включения/выключения.<br>\r\n<br>\r\nДля более детального ознакомления с нюансами исследования рекомендую заглянуть в <a href=\"https://www.science.org/doi/epdf/10.1126/sciadv.adg1062\">доклад ученых</a> и <a href=\"https://www.science.org/action/downloadSupplement?doi=10.1126%2Fsciadv.adg1062&amp;file=sciadv.adg1062_sm.pdf\">дополнительные материалы</a> к нему.<br>\r\n<br>\r\n<h3>Эпилог</h3><br>\r\nВ рассмотренном нами сегодня труде ученые рассказали о создании первого в мире нанокомпьютерного агента на основе белка, способного управлять поведением клеток.<br>\r\n<br>\r\nСпроектированный белок реагировал на определенные сигналы (входные данные) и производил соответствующие действия (выходные сигналы). Манипулирование входными сигналами позволяет получать различные желаемые выходные сигналы, тем самым получить контроль над поведением клеток.<br>\r\n<br>\r\nСупер-белок был создан посредством внедрения в него двух сенсорных доменов, которые реагируют на раздражители (синий свет и рапамицин). В ответ на эти раздражители данные домены меняют свою ориентацию и положение в пространстве. Во время практических испытаний разработанный белок помещался в живые клетки. Затем ученые использовали разные последовательности и комбинации раздражителей и проверяли, меняется ли ориентация клеток в ответ на них. Как выяснилось, если сначала обнаруживается рапамицин, а затем свет, клетка примет один угол ориентации. Если же сначала идет свет, а потом рапамицин, клетка примет другой угол ориентации.<br>\r\n<br>\r\nАвторы разработки заявляют, что увеличение числа входных сигналов, которые будет воспринимать нанокомпьютерный агент, приведет к получению более широкого спектра реакционных действий клеток. Следовательно, контроль над клеткой может быть достаточно обширным.<br>\r\n<br>\r\nУченые намерены продолжить свое исследование, дабы усовершенствовать свое творение, которое может быть весьма полезным в рамках клеточной терапии различных недугов, от аутоиммунных и вирусных заболеваний до диабета, рака и даже поврежденных нервов.<br>\r\n<br>\r\n<h3>Немного рекламы</h3><br>\r\nСпасибо, что остаётесь с нами. Вам нравятся наши статьи? Хотите видеть больше интересных материалов? Поддержите нас, оформив заказ или порекомендовав знакомым, <a href=\"https://ua-hosting.company/servers/vps/\">облачные VPS для разработчиков от $4.99</a>, <b>уникальный аналог entry-level серверов, который был придуман нами для Вас:</b> <a href=\"https://habr.com/company/ua-hosting/blog/347386/\">Вся правда о VPS (KVM) E5-2697 v3 (6 Cores) 10GB DDR4 480GB SSD 1Gbps от $19 или как правильно делить сервер?</a> (доступны варианты с RAID1 и RAID10, до 24 ядер и до 40GB DDR4).<br>\r\n<br>\r\n<b>Dell R730xd в 2 раза дешевле в дата-центре Maincubes Tier IV в Амстердаме?</b> Только у нас <b><a href=\"https://ua-hosting.company/servers/dedicated/\">2 х Intel TetraDeca-Core Xeon 2x E5-2697v3 2.6GHz 14C 64GB DDR4 4x960GB SSD 1Gbps 100 ТВ от $199</a> в Нидерландах! <b>Dell R420 — 2x E5-2430 2.2Ghz 6C 128GB DDR3 2x960GB SSD 1Gbps 100TB — от $99!</b></b> Читайте о том <a href=\"https://habr.com/company/ua-hosting/blog/329618/\">Как построить инфраструктуру корп. класса c применением серверов Dell R730xd Е5-2650 v4 стоимостью 9000 евро за копейки?</a>', 1, '2023-06-12 22:03:42', 695062, 106, '/ru/companies/ua-hosting/articles/738464/', 'Десять лет назад я начал изучать психологию манипуляций и решил узнать, насколько глубока кроличья нора. Начав с экстремистских материалов, я пообщался с религиозными фанатиками, сектантами, менеджерами активных продаж, мошенниками и даже (самая ужасная категория) дизайнерами интерфейсов приложений. Когда количество средств воздействия, используемых когнитивных искажений и ошибок мышления перевалили за сотню, настало время задуматься – а как обеспечить базовый уровень психологической безопасности человека, который не хочет во всё это погружаться и изучать? Говоря иначе, какие правила, тезисы и приёмы можно использовать, чтобы минимизировать вероятность попасть под влияние? Основное – в этой статье. А иллюстрировать мне её поможет многоуважаемый Джордж Карлин.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(231, 'Ветер над городом и поквартирная вентиляция через фасад', '<h3>Децентрализованная вентиляция больших зданий</h3><p>В предыдущей статье был разобран вопрос организации общедомовой вытяжной вентиляции из санузлов и кухонь в квартирах в многоэтажных многоквартирных домах.</p><p><a href=\"https://habr.com/ru/articles/736140/\" rel=\"noopener noreferrer nofollow\">https://habr.com/ru/articles/736140/</a></p><p><a href=\"https://habr.com/ru/articles/729574/\" rel=\"noopener noreferrer nofollow\">https://habr.com/ru/articles/729574/</a></p><p>Теперь попытаемся обобщить технические решения по вентиляции, которые пригодные для отдельных квартир. Обобщение сделаем для «отдельных помещений» в составе «больших зданий».</p><p>К категории «отдельных помещений» можно причислить что угодно: от  квартир и офисов  до производственных мастерских и торговых помещений. </p><p>Ну, а к категории «больших зданий» можно причислить тоже обширный ряд сооружений: от плоских и длинно-широких одно-двух этажных Торговых центров (ТЦ)  до высотных зданий офисных центров с квартирами и апартаментами на верхних этажах (далее БЦ).</p><p>К категории ТЦ также можно причислить широкий ряд малоэтажных протяжённых сооружений технического назначения: заводские корпуса, склады, гаражи и т.д.</p><p>Для всех перечисленных типов зданий от ТЦ до БЦ свойственно одно общее свойство, а именно:</p><p>Объём здания разделён на отдельные помещения (или отдельные зоны в общих помещениях) с различными условиями и требованиями к режиму вентиляции во времени и в пространстве.</p><p>То есть в одном здании должно быть несколько независимо работающих вентиляционных систем, обеспечивающих вентиляцию в отдельных помещениях, или в отдельных малых участках больших помещений.</p><h3>Отдельная система в отдельном помещении</h3><p>При делении больших зданий на отдельные помещения (или  локальные зоны) требуется в этих помещениях устанавливать отдельные вентиляционные системы, привязанные к наружным стенам или кровле, контактирующими именно с этим помещением.</p><p>Для больших зданий уже не имеет значение где будут организованы выходы вент систем: на крыше или на фасаде. </p><p>Оба варианта одинаковы правомочны относительно  требований современного СП60-2020.</p><p>С точки зрения физики динамика воздушных потоков одинакова для  высотного здания высотой 100м при размере стен в плане 20х20м, и для  плоского низкого сарая длиной 100м высотой 10м и шириной 20м. (см рис.1.).</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/c5e/3f7/2ce/c5e3f72ce182d9f94734bf46dec53357.png\" alt=\"рис.1\" title=\"рис.1\" width=\"1121\" height=\"802\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/c5e/3f7/2ce/c5e3f72ce182d9f94734bf46dec53357.png\"><div><figcaption>рис.1</figcaption></figure><p><em>Рис.1. Обтекание потоками ветра протяжённых зданий различной компоновки: А- длинное низкоэтажное здание (слева вид сбоку), Б- высотное узкое здание типа «небоскрёб-гвоздь» (слева вид сверху).</em></p><p>Для протяжённых зданий уже невозможно обеспечить стабильную работу естественных вытяжных систем, а потому все системы должны быть принудительными (с вентилятором).</p><p>В больших зданиях не выгодно тащить большие воздуховоды через соседние помещения из-за неразумной потери объёмов и площадей помещений на транзитные воздуховоды, а потому системы вентиляции становятся строго локальными.</p><h3>Чистота воздуха снаружи</h3><p>Психологически мы привыкли, что вытяжной «грязный воздух» надо выбрасывать именно на кровле, то есть где-то подальше от окон помещения, через которые в наши квартиры попадает уличный «чистый воздух».</p><p>В этом предположении понятия «грязный воздух» и «чистый воздух» взяты в кавычки, так как это некие «понятия», а не реальные показатели качества воздуха.</p><p>Так в отдельно стоящем  доме в чистом поле вытяжной воздух из трубы на крыше может быть действительно грязнее, чем приточный воздух через  окна.</p><p>В случае же размещения дома в плотной застройке большого города ситуация с чистотой воздуха в разных частях дома может быть не такой однозначной.</p><p>Так чистота воздуха в городе больше зависит от положения окружающих домов, чем от места относительно самого рассматриваемого дома.</p><p>Может сложится так, что  на крыше дома воздух будет сильно чище, чем возле окон на фасаде дома. </p><p>Именно так происходит в больших городах, где в приземной части воздух загрязнён сильнее от выхлопов автомобилей. При этом воздух на высоте чище из-за лучшего продувания атмосферным ветром.</p><h3>Оценка загрязнённости воздуха в Москве</h3><p>Для понимания степени загрязнённости воздуха в городе можно оценить среднее загрязнение воздуха в Москве.</p><p>Так в Москве на дорогах находится около 1 млн. автомобилей с работающими двигателями, а в домах проживают 15 млн. человек.</p><p>При этом человек выдыхает около 35г/ч углекислого газа(СО2).</p><p>А один средний автомобиль сжигает около 3кг бензина в час (10кг на 100км при средней скорости около 30км/ч).</p><p>При сжигании 3 кг бензина автомобиль выбросит приблизительно 9кг СО2.</p><p>СН2 +1,5*О2=СО2+Н2О</p><p>(12+1*2) +(1,5*16*2)=(12+16*2) +(1*2+16)</p><p>14+48=44+18 </p><p> То есть  из 14 грамм углеводорода слева получается 44 грамм СО2 справа.</p><p>Соотношение по массе близкое к 1:3</p><p>Итого ежечасно в Москве выделяется следующее количество углекислого газа:</p><p>Люди</p><p>Мл=0,035*15 000 000= 525 000кг=525 тонн</p><p>Автомобили</p><p>Мл=9*1 000 000= 9 000 000кг=9 000 тонн</p><p>То есть автомобили выделяют  более чем в 17 раз больше углекислого газа, чем люди.</p><p>Посчитаем необходимый воздухообмен Москвы для выполнения норматива по содержанию СО2 на уровне 1000ррм.</p><p>1000ррм= 1л (СО2) /м3  воздуха</p><p>Так как молярный вес СО2 сотавляет 44г/ моль, а 1 моль газа имеет объём 22,4л/моль, то 1 л (СО2) весит</p><p>Мсо2=44/22,4=1,96г/л= 0,002кг/л</p><p> То  есть для разбавления 9млн.кг чистого СО2 до концентрации 1000ррм потребуется объём воздуха:</p><p>Vвозд1000=9*10^6/0,002=4,5*10^9 м3</p><p>Учитывая фоновую концентрацию на уровне 400ррм на каждый кубометр мы можем добавить только 600ррм нового СО2, что потребует увеличить объём воздуха на разбавление до величины: </p><p> Vвозд600=4,5*10^9 *(1000/600)=7,5*10^9 м3 или 7,5км.куб.</p><p>При площади Москвы около 900км.кв (в пределах МКАД) слой загрязнённого за час воздуха составит</p><p>H=7,5/900=  0,0083 км или 8,3м.</p><p>За сутки будет испорчено  в 24 раза больше воздуха или слой около </p><p>Н=8,3*24=199м</p><p>Тоесть за сутки в безветренную погоду воздух в Москве оказывается отравленным на высоту выше 70-го этажа высотного здания.</p><p>При этом степень загрязнения воздуха в мегаполисе можно даже наблюдать без всяких приборов.</p><p>Так если отъехать от Москвы по Ярославскому  шоссе на 70км до Сергиева посада, то при взгляде в сторону  Москвы в закатных лучах над Москвой отчётливо виден купол жёлтого газа (сам наблюдал неоднократно).</p><p>Это вполне себе мгновенно визуализируемый слой отравленного воздуха над всем городом, который виден по изменению цвета воздуха с голубого на жёлтый в слое высотой выше уровня самых высоких домов и протяженностью 30-40 км.</p><p>Смог можно наблюдать и в самом городе, например глядя вдаль  вдоль крупных проспектов  или с высоких этажей над домами (см.рис. 2-3). </p><p>На первом фото вид на Москва-Сити с явной дымкой жёлтого смога при безоблачном небе в  безветренную погоду. </p><p>На втором фото воздух чист и прозрачен, а сам Сити не только отчётливо виден без задымления смогом, но и вдалеке за ним прекрасно видны красные многоэтажки (слева от Сити на линии горизонта).</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/97a/9da/2aa/97a9da2aa8888e140079df2eee5fcbbe.png\" alt=\"фото.1\" title=\"фото.1\" width=\"1323\" height=\"881\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/97a/9da/2aa/97a9da2aa8888e140079df2eee5fcbbe.png\"><div><figcaption>фото.1</figcaption></figure><p><em>Рис.2.  Дымка смога над городом в центре Москвы в ясную погоду без ветра.</em></p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/5f4/d56/8b6/5f4d568b62446800fb51f9c8ebad4b80.png\" alt=\"Фото.2\" title=\"Фото.2\" width=\"1232\" height=\"822\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/5f4/d56/8b6/5f4d568b62446800fb51f9c8ebad4b80.png\"><div><figcaption>Фото.2</figcaption></figure><p><em>Рис.3. Чистый и прозрачный воздух над центром Москвы в ветреную погоду с низкой облачностью.</em></p><p>Если принять скорость  ветра 2м/с (среднее значение по климатологии),  при ширине Москвы 45км всю Москву воздух пройдёт за 45/2=22,5 тыс.секунд или за 22500/3600=6,25 часов.</p><p>При 4-х кратном воздухообмене слой отравленного воздуха на выходе из Москвы составит уже всего около 50м.</p><p>То есть климатический воздухообмен Москвы составляет около 4-х крат за сутки, а на выходе из города будет постоянно дуть отравленный выхлопом ветер с весьма высокой концентрацией СО2.</p><p>Абсолютное значение концентрации СО2 по высоте воздуха от  земли будет сильно меняться.</p><p>Так если у поверхности земли на автодорогах концентрация СО2 и СО2  почти всегда больше ПДК, то на высоте в несколько десятков метров над землёй в ветреный день концентрация резко падает.</p><p>Так при расчёте на скорость ветра 2м/с  у нас «вытяжной» воздух из Москвы будет с предельной концентрацей по СО2 выше 1000ррм на высоте около 50м от крыш домов. </p><p>В тоже  время необходимо учитывать в  расчёте  высоту средней застройки домами высотой  в 30-50м , через  высоту которых будет  проходить циркуляционный поток  выхлопов от автомобилей   с улицы во дворы. </p><p>Тогда слой отравленного воздуха увеличится по высоте на высоту застройки, достигнув  высоты  в 100м от земли.То есть на выходе из Москвы  отравлены до 1000ррм слой составит более 100м при ветре над городом 2м/с.</p><p><strong>Прямой расчёт прибавки уровня СО2 в воздухе на выходе из Москвы в слое 100м.</strong></p><p>Ранее мы посчитали  количество выбросов СО2 от автомобилей 9 млн.кг/ч.</p><p>Расчётный объём на разбавление – это слой 100м при скорости 1м/с (ниже среднего) и длине фронта 30км (наименьше сечение Москвы).</p><p>Общий объём воздуха за час составит</p><p>Vвозд=1*3600*100*30*1000=10,8 *10^9= 10,8 млрд.м3</p><p>Объём  одного моля газа при нормальных условиях составляет 22,4л/моль (0,0224 м3/моль), при этом молярная масса СО2 составляет 44г/моль (0,044кг/моль). </p><p>Таким образом возможно посчитать общий объём отравляющих газов от часового выброса от автомобилей при  массе выбрасываемого в выхлопе СО2 в количестве 9млн.кг. </p><p>Объём выбросов СО2 от автомобилей составит:</p><p>Vсо2=9*10^6*0,0224/ 0,044=4581818 м3  или 4,58 млн.м3/ч</p><p>Концентрация СО2 при разбавлении составит </p><p>Vсо2/ Vвозд=  4,58 млн./10,8 млрд=0,0004242 или 420ррм</p><p>То есть при фоновом уровне 400ррм прибавка 420 ррм даст суммарно  вполне допустимый уровень загрязнения 400+420=820ррм, что ниже предполагаемого предела в 1000ррм на выходе загрязнённого воздуха из Москвы.</p><p>Из чего следует вывод, что в ветреную погоду с со скоростью ветра над домами  более 1 м/с качество воздуха во всех районах Москвы оказывается вполне удовлетворительным.</p><p>При этом в безветренную погоду ситуация с качеством воздуха становится критической уже через 6 часов полного штиля над мегаполисом.</p><h3>Задымление вдоль автомобильных дорог</h3><p>Даже если в среднем по городу содержание в воздухе СО2 и СО будет удовлетворительным, то в зоне автодорог уровень загрязнением СО2 и СО во много раз  превышает допустимые значения средних расчётных  цифр по всей площади города. Ведь именно на дорогах происходит выброс автомобильных выхлопов, а площадь самих дорог во много раз меньше общей площади застройки соседних жилых кварталов.</p><p>Так над дорогами образуются плотные подушки концентрированных выхлопных газов.</p><p>При этом вокруг дорог устанавливаются свои собственные циркуляционно-конвективные потоки, где над дорогой возникает восходящий поток тёплых выхлопных газов, а из прилегающих жилых кварталов вдоль земли на дорогу вытекают остывшие и чуть более чистые потоки «свежего» воздуха (см.рис.4.).</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e9b/db2/c43/e9bdb2c434f01d0b9c6f5295e59e35e7.png\" alt=\"рис.4\" title=\"рис.4\" width=\"1273\" height=\"490\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e9b/db2/c43/e9bdb2c434f01d0b9c6f5295e59e35e7.png\"><div><figcaption>рис.4</figcaption></figure><p><em>Рис.4. Локальные циркуляционные конвективные потоки воздуха в зоне автодорог с примыканием к жилой застройке.</em></p><p>При наличии устойчивого ветра над городом картина придорожных вихрей несколько изменяется, теряя симметрию относительно дороги (см.рис.5). </p><p>При этом поток  ветра над  домами не только усиливает вихревое перемешивание воздуха между автотрассами и прилегающими дворами, но и уносит часть загрязнений от выхлопов прочь из города вместе с потоками ветра, тем самым резко снижая локальные концентрации выхлопных газов над дорогами.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/1c7/f21/a4c/1c7f21a4ca5bcfbe4a400945e4c123d5.png\" alt=\"рис.5\" title=\"рис.5\" width=\"974\" height=\"288\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/1c7/f21/a4c/1c7f21a4ca5bcfbe4a400945e4c123d5.png\"><div><figcaption>рис.5</figcaption></figure><p><em>Рис.5 Сдвиг локальных циркуляционных вихрей «дорога-двор» под воздействием доминирующего ветра над домами.</em></p><p>Именно по этой причине мы пока не задохнулись внутри мегаполиса даже в окружении миллиона непрерывно дымящих автомобилей. Хотя остаётся по прежнему крайне опасно долго находится вблизи  широких многополосных шоссе и особенно внутри потока автомобилей в самом автотранспорте.</p><p>В экологическом отношении быть шофёром в Москве- это крайне вредная работа, приводящая к хроническим отравлениям угарным газом. </p><p>Такое отравление угарным газом выражается в не проходящей усталости и невозможности выспаться. При этом единственным лекарством от отравления угарным газом за рулём является смена работы (для профессиональных городских водителей)  или отказ от использования наземного автотранспорта в личных целях (для автолюбителей).</p><p>Лично мне пришлось отказаться от разъездной работы на автомобиле по Москве после того как я сам  хватанул подобное хроническое отравление угарным газом за рулём в московских пробках. </p><p>Просыпаться каждое утро уставшим и без сил – это не то состояние, при котором хочется жить и работать.</p><p>На загородных трассах риск отравления угарным газом резко падает из-за  сильного  бокового продувания автодороги ветром, так что дальнобойщики дышат сравнительно чистым воздухом даже на загруженных загородных шоссе.</p><h3>Распределение воздух на фасаде при поквартирных системах вентиляции</h3><p>При использовании индивидуальных поквартирных систем вентиляции малой производительности возникает вопрос о характере  движения воздуха вне дома и возможности затекания вытяжного воздуха в приточное отверстие в стене квартиры (в форточку).</p><p>Первоначально надо рассмотреть случай с вытяжкой через общедомовую вентиляцию с дефлектором на кровле (см.рис.6)</p><p>При отсутствии ветра наблюдается рециркуляция вытяжного воздуха из дефлектора на кровле обратно во двор. </p><p>Эта рециркуляция неизбежна в силу неразрывности воздушных потоков  в атмосфере. </p><p>При этом высота распространения восходящего потока в зимнее время будет больше, чем летом, в силу большей разности температур вытяжки и уличного воздуха в зимнее время. </p><p>В летнее же время относительно прохладный воздух из вытяжки (принудительной) вообще может сразу падать обратно во двор, так как воздух из прохладного здания может быть холоднее и тяжелее тёплого уличного воздуха.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a27/1a3/8c6/a271a38c6dd601fa43b06d90b21e8302.png\" alt=\"рис.6\" title=\"рис.6\" width=\"1066\" height=\"563\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a27/1a3/8c6/a271a38c6dd601fa43b06d90b21e8302.png\"><div><figcaption>рис.6</figcaption></figure><p><em>Рис.6. Схема рециркуляции воздуха от кровельной вытяжки к  фасадным приточным отверстиям.</em></p><h3>Расчёт струйных течений при поквартирной вентиляции с выбросом на фасаде</h3><p>Примем  скорость воздуха V=2м/с при  выбросе через отверстие на фасаде.</p><p>Тогда,  согласно справочника, струя воздуха из отверстия диаметром Ф100мм  будет тормозится об окружающие массы воздуха и  достигнет скорости 0,2м/с на расстоянии около 4м от фасада.</p><p>При этом надо помнить, что торможение струи газов осуществляется по закону сохранения импульса. То есть импульс струи до торможения о неподвижный воздух не должен изменится после торможения.</p><p>Р1=Р2</p><p>Где </p><p>Р1=V1*M1=2*М1</p><p>Р2=V2*M2 =0,2*М2</p><p>Приравняем полученные выражения:</p><p>0,2*М2=2*М1</p><p>Откуда получим:</p><p>M2=2*M1/0,2=10*М1</p><p>То есть на расстоянии 4м от стены воздух будет иметь не только скорость в 10 раз меньше, чем в отверстии в стене диаметром Ф100мм , но ещё и будет разбавлен в 10 раз окружающим воздухом.</p><p>При этом сечение струи увеличится в 10*10=100 раз или в 10 раз по диаметру (см.рис.7).</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/1dd/a63/c34/1dda63c34259d1914b870592b0a970d6.png\" alt=\"рис.7\" title=\"рис.7\" width=\"1553\" height=\"743\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/1dd/a63/c34/1dda63c34259d1914b870592b0a970d6.png\"><div><figcaption>рис.7</figcaption></figure><p><em>Рис.7. Схема взаимодействия потоков вытяжного  и приточного воздуха на фасаде здания при локальной поквартирной системе приточно-вытяжной вентиляции с фасада квартиры.</em></p><p>В результате расчёта мы получили, что вытяжная струя за пределами здания образует узкий  длинный  расширяющийся конус воздуха,  в котором постепенно меняется концентрация загрязнения от  условных 100% в отверстии до 10% на расстоянии 4м от стены.</p><p>В тоже время при всасывании воздуха с улицы наблюдается  совершенно иная динамика движения воздух к отверстию в стене. </p><p>Так приточный воздух  имеет полусферическое распределение скоростей, при котором на равном удалении от отверстия  соблюдается  одинаковая скорость воздуха в сторону всасывающего отверстия.</p><p>При таком  полусферическом распределении скорость воздуха изменяется от 2 м/с в отверстии в стене до 0,2м/с всего на расстоянии менее 200мм от краёв отверстия, где площадь полусферы окажется в 10 раз больше площади самого отверстия.</p><p>А на расстоянии всего в 1 м от отверстия скорость воздуха на всасывание упадёт до  мизерной величины менее 0,003м/с.</p><p>При этом и струя воздуха из вытяжного отверстия  из отдельной квартиры не останавливается на расстоянии 4 м от  фасада здания, а продолжает двигаться с торможением и перемешиванием с окружающим воздухом двора, пока концентрация не усреднится по двору, смешавшись со встречными потоками вытяжки из квартир от дома напротив.</p><p>Получается, что если между отверстиями притока и вытяжки  больше 1 м, то затекание вытяжки в приток  не наблюдается вообще, или если точнее, то величина прямого  затекания  вытяжного воздуха в приточный значительно меньше 1% или ниже точности измерения приборов  для измерения показателей СО2 в  воздухе.</p><p>Если над городом нет ветра, то дворы домов  через некоторое время всё равно заполняется «выхлопными газами» от местных жителей. Причём без разницы как организована вытяжка в домах:  с выбросом вентиляционного воздуха поквартирно  через фасад или централизованно через кровлю.</p><h3>Выводы и заключения</h3><p>Из приведённых расчётов и рассуждений можно сделать несколько выводов.</p><ol><li><p>Воздух в мегаполисе отравляется в 17 раз больше выхлопами от автомобилей, чем дыханием людей. То есть учитывать надо в большей степени именно выхлопы автомобилей вокруг жилых домов, а не выдыхаемый людьми воздух.</p></li><li><p>Выброс вентиляционного воздуха из помещений с людьми на фасад никак не добавит общего загрязнения воздуха во дворе в сравнении с выбросом на кровле из-за нисходящих циркуляционных потоков с кровли во двор.</p></li><li><p>Забор воздуха с улицы выгоднее всего делать как можно выше от земли и подальше от оживлённых автотрасс, где воздух относительно чище из-за продуваемости ветром, чем у поверхности земли вблизи автодорог.</p></li><li><p>Максимальная загазованность наблюдается над автодорогами, откуда загрязнения распределяются по внутренним кварталам города за счёт медленного конвективного перемешивания и сдува ветром.</p></li><li><p>В безветренные дни ситуация с загазованностью в Москве оказывается очень напряжённой. При этом на самих дорогах уровень СО2 и СО оказывается просто запредельным, что может приводить к тяжёлым последствиям для здоровья как водителей, так и пассажиров наземного транспорта<em>.</em></p></li></ol>', 1, '2023-06-12 22:03:43', 143939, 106, '/ru/articles/738644/', 'Есть одно убеждение, которое сделало многих людей несчастными, но они даже не подозревают об этом. Эта желание быть хорошим. В отличие от кучи других убеждений, которые не скрывают, что добавляют в жизни проблем, это выглядит белым и пушистым. Если ты «хороший человек», то этим можно гордиться. На самом деле — это повод всерьез забеспокоиться.  '),
(232, 'Дайджест научпоп-новостей за неделю, о которых мы ничего не писали', '<h2><a href=\"https://www.sciencealert.com/a-craft-has-flown-close-enough-to-the-sun-to-detect-the-source-of-elusive-solar-winds\" rel=\"nofollow noopener noreferrer\">Космический зонд пролетел достаточно близко к Солнцу, чтобы обнаружить источник неуловимых солнечных ветров</a></h2><br>\r\n<img src=\"https://habrastorage.org/r/w780q1/getpro/habr/post_images/05f/306/937/05f3069371468c275c90f9ded7fd4827.jpg\" data-src=\"https://habrastorage.org/getpro/habr/post_images/05f/306/937/05f3069371468c275c90f9ded7fd4827.jpg\" data-blurred=\"true\"><br>\r\n<i>Корональная дыра в трёх ультрафиолетовых диапазонах волн, полученная обсерваторией солнечной динамики НАСА в 2013 году </i><br>\r\n<br>\r\nИсточник солнечного ветра, дующего вблизи поверхности светила <a href=\"https://www.nature.com/articles/s41586-023-05955-3\" rel=\"nofollow noopener noreferrer\">найден</a> солнечным зондом Parker Solar Probe. В ноябре 2021 года зонд пронёсся на расстоянии около 8,5 миллионов километров от Солнца, что позволило ему определить тонкую структуру солнечного ветра, который выбрасывает тонны заряженных частиц в Солнечную систему через дыру в солнечной короне.<br>\r\n<br>\r\nПо словам группы физиков под руководством Стюарта Бейла из Калифорнийского университета в Беркли и Джеймса Дрейка из Мэрилендского университета в Колледж-Парке, полученные зондом данные дают нам самое близкое представление о том, как создаётся быстрый солнечный ветер.<br>\r\n<a name=\"habracut\"></a><br>\r\n<h2><a href=\"https://phys.org/news/2023-06-elusive-planets-cheops.html\" rel=\"nofollow noopener noreferrer\">Космический телескоп CHEOPS помог найти не замеченные ранее экзопланеты</a></h2><br>\r\n<img src=\"https://habrastorage.org/r/w780q1/getpro/habr/post_images/9f1/175/128/9f1175128082a05df379bce876ef5a1a.jpg\" data-src=\"https://habrastorage.org/getpro/habr/post_images/9f1/175/128/9f1175128082a05df379bce876ef5a1a.jpg\" data-blurred=\"true\"><br>\r\n<br>\r\nС помощью космического телескопа CHEOPS международной команде европейских астрономов удалось достоверно <a href=\"https://dx.doi.org/10.1093/mnras/stad1319\" rel=\"nofollow noopener noreferrer\">подтвердить</a> существование четырёх новых экзопланет. Эти четыре мини-нептуна меньше и холоднее, и их труднее найти, чем так называемые экзопланеты типа «горячий юпитер», которых найдено уже достаточно много. Две из четырёх итоговых статей написаны исследователями из Бернского и Женевского университетов, которые также являются членами Национального центра компетенции в области исследований (NCCR) PlanetS.<br>\r\n<br>\r\nCHEOPS — это совместная миссия Европейского космического агентства и Швейцарии под руководством Бернского университета в сотрудничестве с Женевским университетом. С момента запуска в декабре 2019 года чрезвычайно точные измерения CHEOPS способствовали нескольким ключевым открытиям в области экзопланет.<br>\r\n<br>\r\n<h2><a href=\"https://www.nasa.gov/feature/goddard2023/new-detectors-could-improve-views-of-gamma-ray-events\" rel=\"nofollow noopener noreferrer\">Новые детекторы от НАСА могут улучшить фиксацию гамма-вспышек</a></h2><br>\r\n<img src=\"https://habrastorage.org/r/w780q1/getpro/habr/post_images/10b/c42/7b8/10bc427b8df7506e5ed572786f8a1c4b.jpg\" data-src=\"https://habrastorage.org/getpro/habr/post_images/10b/c42/7b8/10bc427b8df7506e5ed572786f8a1c4b.jpg\" data-blurred=\"true\"><br>\r\n<br>\r\nПри помощи технологии, аналогичной той, что используется в камерах смартфонов, учёные НАСА разрабатывают усовершенствованные датчики, позволяющие выявить больше деталей о вспышках чёрных дыр и взрывающихся звёздах — при этом менее энергоёмкие и более простые в массовом производстве, чем используемые сегодня детекторы.<br>\r\n<br>\r\n«Изучая чёрные дыры, активно разрушающие звезды, или нейтронные звезды, взрывающиеся и создающие действительно высокоэнергетические вспышки света, вы имеете дело с самыми экстремальными событиями во Вселенной», — говорит астрофизик-исследователь д-р Регина Капуто. «Чтобы наблюдать эти события, приходится работать с самой высокоэнергетической формой света: гамма-лучами».<br>\r\n<br>\r\nКапуто руководит разработкой прибора под названием AstroPix в Центре космических полётов НАСА имени Годдарда в Гринбелте, штат Мэриленд. Кремниевые пиксельные датчики в AstroPix — всё ещё в стадии разработки и тестирования — напоминают полупроводниковые датчики, которые позволяют камерам смартфонов быть такими маленькими.<br>\r\n<br>\r\n<h2><a href=\"https://www.atomic-energy.ru/news/2023/06/07/136016\" rel=\"nofollow noopener noreferrer\">Учёные построили трёхмерные кристаллы из «четырёхмерных» молекул гиперкубана</a></h2><br>\r\n<img src=\"https://habrastorage.org/r/w780q1/getpro/habr/post_images/71a/d15/d0e/71ad15d0eb030630e94b0417f597fdd9.jpg\" data-src=\"https://habrastorage.org/getpro/habr/post_images/71a/d15/d0e/71ad15d0eb030630e94b0417f597fdd9.jpg\" data-blurred=\"true\"><br>\r\n<br>\r\nИсследователи Института нанотехнологий в электронике, спинтронике и фотонике (ИНТЭЛ) НИЯУ МИФИ смоделировали и рассчитали свойства трёхмерных кристаллов из «четырёхмерных» молекул гиперкубана. <a href=\"https://doi.org/10.1016/j.mtcomm.2023.106146\" rel=\"nofollow noopener noreferrer\">Результаты работы</a> опубликованы в научном журнале Materials Today Communications.<br>\r\n<br>\r\nКуб – одна из самых простых и «естественных» геометрических фигур. Однако в мире углеводородных молекул, которые принимают самые причудливые формы, куб — экзотика.<br>\r\n<br>\r\nМолекула кубана C8H8, имеющая кубическую форму, была синтезирована в 1964 году путём сложной многоступенчатой реакции. Кубан оказался сверхплотным углеводородом, почти вдвое плотнее бензина. Несмотря на сложность синтеза, это соединение не только продемонстрировало высокую устойчивость, но и стало родоначальником целого семейства производных молекул, которые нашли применения в качестве энергоэффективных топлив и лекарств. В 2022 году 58-летний кубан снова привлёк внимание общественности, появившись на страницах известного научного журнала Science: на его основе был создан «крошечный пожиратель электронов».<br>\r\n<br>\r\n<h2><a href=\"https://www.hpcwire.com/off-the-wire/ionq-demonstrates-world-first-quantum-cognition-models/\" rel=\"nofollow noopener noreferrer\">Компания IonQ продемонстрировала квантовый ИИ</a></h2><br>\r\nКомпания IonQ, работающая в области квантовых вычислений, объявила о результатах своих первых исследований по применению квантовых компьютеров для моделирования человеческого разума. В недавно опубликованной работе описывается первый в мире публично известный метод, в котором основные модели человеческого познания были запущены на квантовом оборудовании, что открывает путь к потенциальной разработке улучшенных моделей принятия решений, имитирующих человеческое мышление.<br>\r\n<br>\r\nПроведённое в сотрудничестве с международной группой квантовых исследователей исследование представляет собой отправную точку для разработки квантовых схем, которые реализуют математические модели познания, кодируя ментальные состояния в регистрах кубитов и когнитивные операции с помощью различных затворов и измерений. С 1960-х годов когнитивные психологи пытались понять взаимосвязь между тем, как задаются вопросы, и тем, как участник ответит на них. Концепция квантовой вероятности эффективно описывает некоторые из этих отношений, однако только недавно квантовая аппаратура достигла того уровня, когда модели квантовой вероятности можно было исследовать и тестировать.<br>\r\n<br>\r\n<h2><a href=\"https://rscf.ru/news/release/stimulyatsiya-mozga-pomozhet-uluchshit-reabilitatsiyu-posle-travm-i-insultov-/\" rel=\"nofollow noopener noreferrer\">Стимуляция мозга поможет улучшить реабилитацию после травм и инсультов</a></h2><br>\r\n<img src=\"https://rscf.ru/upload/iblock/7dc/x42ikqz94ucuq4gjmrbgjimnmnvajrmw.jpg\" data-src=\"https://rscf.ru/upload/iblock/7dc/x42ikqz94ucuq4gjmrbgjimnmnvajrmw.jpg\" data-blurred=\"true\"><br>\r\n<br>\r\nУчёные показали, что магнитная стимуляция дорсолатеральной префронтальной коры — области мозга, ответственной за внимание, рабочую память и планирование — помогает улучшить контроль движений. Выяснили это на 30 здоровых добровольцах. Такой подход может сделать реабилитацию людей с неврологическими заболеваниями более эффективной и помочь спортсменам улучшить результаты. Исследование поддержано грантом Российского научного фонда (РНФ) и опубликовано в журнале Sensors.<br>\r\n<br>\r\nЛюбое движение человека — результат слаженной работы мозга, который сначала строит воображаемую модель движения, затем передаёт сигнал моторным (двигательным) нейронам, а они, в свою очередь, вызывают сокращения мышц. Всё это происходит буквально в один миг, но иногда связь между этапами нарушается в результате повреждения тканей мозга — например, при инсульте или болезни Паркинсона — и возникают двигательные нарушения. Они плохо сказываются на качестве жизни пациента и мешают ему нормально совершать даже бытовые манипуляции.<br>\r\n<br>\r\nУчёные и врачи активно разрабатывают методы лечения и восстановления после таких заболеваний. Многие методы реабилитации построены на том, чтобы для начала натренировать представление движения без его совершения, и, наоборот, совершение движения врачом или экзоскелетом, а затем наладить связь между этими процессами. Для улучшения реабилитации учёные изучают в том числе влияние транскраниальной магнитной стимуляции (ТМС, метод стимуляции нервных клеток головного мозга с помощью магнитного поля) на двигательную активность.', 2, '2023-06-13 00:46:19', 932787, 106, '/ru/articles/741254/', 'Каждый второй, читающий этот пост пережил выгорание (Burnout), а 75% выгоревших теряют место работы. Будучи дизайн-менеджером 18+ лет, я убедился, что основные причины выгорания часто связаны не только с работой, и стресс может накапливаться по иным причинам. Эта статья о том, какие ещё причины есть, и что с ними делать.В вопросах физиологии мне помогала разбираться специалист международной ассоциации спортивных наук и Gray Institute Полина Рязанова. Я благодарен ей за поддержку и знания в этой области.'),
(233, 'Как ещё бороться с выгоранием', '<p>Каждый второй, читающий этот пост пережил выгорание (Burnout), а 75% выгоревших теряют место работы. Как дизайн-менеджер со стажем 18+ лет, я убедился, что основные причины выгорания часто связаны не только с работой, и стресс может накапливаться по иным причинам. Эта статья о том, какие ещё причины есть, и что с ними делать.</p><p>В вопросах физиологии мне помогала разбираться специалист международной ассоциации спортивных наук и Gray Institute Полина Рязанова. Я благодарен ей за поддержку и знания в этой области.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/d92/de4/c5c/d92de4c5c16a3218614c106b8edc142b.png\" alt=\"Untitled\" title=\"Stutz: Directed by Jonah Hill. With Jonah Hill, Phil Stutz\" width=\"1422\" height=\"750\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d92/de4/c5c/d92de4c5c16a3218614c106b8edc142b.png\"><div><figcaption><em>Stutz</em>: Directed by Jonah Hill. With Jonah Hill, Phil <em>Stutz</em></figcaption></figure><p>На Netflix есть классная документалка «Stutz» о Филе Штутсе, психотерапевте актера Джоны Хилла. Фил и Джона просто и весело рассказывают о ментальном здоровье и инструментах для борьбы с трудностями. Там есть про структуру работы с депрессией и это очень похоже на то, что рекомендуют от выгорания.</p><p>Депрессия и выгорание — не одно и то же, однако инструменты схожие.</p><h4>Структура работы с ментальным здоровьем</h4><ol><li><p>Базовый уровень — отношение со своим физическим телом</p></li><li><p>Средний уровень — отношения с другими людьми</p></li><li><p>Высший уровень — отношения с собой</p></li></ol><blockquote><p>Phil Stutz (про отношение со своим телом): Все, что нужно — заставить тело функционировать лучше, и это работает.</p></blockquote><blockquote><p>Jonah Hill: Какой процент на этом уровне позволяет почувствовать себя лучше?</p></blockquote><blockquote><p>Phil Stutz: Ну, на самом деле, наверное 85%</p></blockquote><blockquote><p>Jonah Hill: С ума сойти! В детстве: упражнения и диета подавались так, будто что-то не так с моей внешностью. Но мне ни разу не предложили упражнения или диету для психического здоровья. Хотелось бы, чтобы людям объяснили это по-другому.</p></blockquote><p>Итак, пробую объяснить.</p><h4>Еще раз, что такое выгорание</h4><p>Выгорание – это <s>когда ты ложишься на пол в прихожей, приходя с работы домой</s> результат продолжительного высокого уровня стресса.</p><h4>Как понять, что ты выгораешь</h4><ol><li><p>Физические симптомы: хроническая усталость, проблемы со сном, головные боли, проблемы с ЖКТ, изменения аппетита, иммунная система может ослабнуть, это приводит к частым простудным заболеваниям.</p></li><li><p>Эмоциональное истощение: безысходность, апатия, раздражительность и потеря интереса к ранее приятным вещам.</p></li><li><p>Снижение продуктивности: чувство бесполезности и неспособности справиться с повседневными задачами, трудности с концентрацией, памятью и принятием решений.</p></li><li><p>Отчуждение от работы или окружающих: ощущение изоляции и неспособности установить связь с другими людьми.</p></li><li><p>Изменения отношения к работе: цинизм, чувство безнадежности и негатив. Ранее важные ценности и цели могут потерять свое значение.</p></li></ol><h4>Основные рекомендации по борьбе с выгоранием</h4><ol><li><p>Питание</p></li><li><p>Физическая активность</p></li><li><p>Сон</p></li><li><p>Медитация и дыхательные упражнения</p></li><li><p>Общение и достижения</p></li></ol><h4>Питание</h4><p>85% физического состояния зависит от питания. Здесь важно определить свои потребности в энергии и питательных веществах и точно закрывать их, в общем и целом все. Да, и ещё еда должна быть вкусной, это важно.</p><p>Профит: потенциально +10-20 лет жизни высокого уровня качества (<a href=\"https://thl.fi/documents/189940/1496849/north_karelia_project.pdf\" rel=\"noopener noreferrer nofollow\">ссылка на исследование</a>).</p><p>Косты: не все будут считать вас настоящим рок-н-рольщиком, с этим можно жить.</p><h4>Потребности организма</h4><p>Потребность организма в энергии (те самые калории) — это индивидуальное значение, чем точнее он определен, тем проще его контролировать. Энергия нужна чтобы думать и двигаться, профицит энергии приводит к избыткам запасов — ожирению. Ожирение мощно влияет на «нормальность» функционирования организма. Дефицит энергии приводит к неосознанному сокращению физической и умственной активности.</p><p>Потребности организма в питательных веществах — это то, сколько в граммах нужно белков, жиров, углеводов, витаминов и минералов для того, чтобы ткани восстанавливались и организм не разрушался. Значения норм определяются индивидуально.</p><p>Некоторые питательные вещества несут в себе энергию, некоторые нет, но в итоге количество энергии не должно превышать общую потребность организма в энергии.</p><p>Лучший способ закрывать полученные потребности — иметь все питательные вещества в еде в нужном количестве. Закрывать потребности БАДами довольно рисковано, особенно из-за опасности профицитов синтетических витаминов и минералов. Профициты синтетикой очень опасны, профициты натуральными питательными веществами практически невозможны.</p><p>И да. Еда должна быть вкусной, не просто вкусной, а восхитительной, до стона, до слез счастья, до полного удовлетворения.</p><p>Получается довольно интересная задача: определить набор параметров и максимально точно предоставить их в виде меню, в соответствии с индивидуальными вкусовыми предпочтениями и возможными ограничениями.</p><p>Кажется, что такая задача уже решена, но нет. Мы говорим об уровне точности, стремящимся к 100%. Во всех известных решения потребности определяются с точностью +-20-30%, и закрываются с точностью +- 20-30%, в итоге получается драматически высокая вероятность ошибки. Такие ошибки не выдерживает нервная система, а мозг переполняется тревожными сигналами.</p><blockquote><p>Все зло от недостатка знаний (Дэвид Дойч «Начало бесконечности. Объяснения, которые меняют мир»)</p></blockquote><h4>Совершенный алгоритм</h4><p>В итоге вам понадобиться совершенный алгоритм. Он должен перебирать 5 млн вариантов сочетаний продуктов, а потребности определять функциями. Смотреть на влияние определенного продукта на уровень сахара в крови и предотвращать диабеты. Учитывать праздники, дни рождения и отпуски, не предлагать в рабочий день на обед рыбу. Приоритизировать продукты по цене. Подбирать минимально-необходимую физическую активность и учитывать ее в общей энергии.</p><p>Один из важнейших эффектов при нормализации питания — тревоги становится меньше, принимаются более качественные решения. Помните исследование про судей в Израиле, которые после обеда выносили менее суровые приговоры? Это просто кортизол ушел.</p><p><strong>Итого про питание: важно точно определить потребности организма и максимально точно их закрывать, параметры потребностей индивидуальны, плохо посчитанные программы опасны, БАДы не спасают.</strong></p><p>Поддержка систем в рабочем состоянии зависит не только от питания, для некоторых процессов нужна физическая активность.</p><h4>Физическая активность</h4><p>Без достаточной физической активности тело страдает, а ткани разрушаются. Физическая нагрузка — обязательное условие для нашего организма, речь не идет о развитии суперспособностей.</p><blockquote><p>Больше — не значит лучше. Меньше тоже плохо.</p></blockquote><p>Основные метрики это тип нагрузки и ее уровень.</p><p>Типы нагрузок: кардио и силовая. Кардио (танцы, бокс, бег, велосипед, капоэйра, etc.) — насыщает кровь кислородом, укрепляет сердечную мышцу. Раз в неделю может быть очень даже полезно, но этот вид нагрузки можно включать только после выполнении обязательной программы, и тут важно не перегрузить себя. Избыток кардио при низком белке в рационе разрушает мышцы, а они нужны для нормального функционирования тела.</p><p>Обязательная программа — это силовая нагрузка. Это все что нужно в большинстве случаев. Не путать с бодибилдингом и пауэрлифтингом, это другое. Самое важное здесь определить переносимый уровень стресса и следовать ему.</p><p>Упражнения не помогут вам похудеть, не помогут с кубиками пресса, и скорее всего не помогут с «бицухой» или «орешком», это контринтуитивно, но это важно принять. Эффективность большинства стандартных подходов не превышает погрешность.</p><p>Силовые упражнения помогут вам не терять мышцы, то немногое что есть сейчас, уходит само без нагрузки и восстановить мышечную ткань будет очень сложно. Упражнения помогут держать в порядке суставы, без нагрузки они не питаются. Упражнения помогут развить мышцы, без которых невозможна правильная походка, бег и стояние, это вызывает повышенную загрузку других мышц, те спазмируются и все начинает болеть — спина, шея, колени.</p><p><strong>Итого про физическую активность: кардио — фан, силовые нагрузки не сделают тебя качком, но поддержат мышцы и суставы в хорошем рабочем состоянии. А еще дофамина от силовых в десятки раз больше, чем от пирожных.</strong></p><p>Каждый из последующих пунктов достоин отдельной статьи, здесь описываю кратко.</p><h4>Сон. Недостаток сна может усугубить выгорание</h4><p>Для меня важнее всего оказалось вставать и ложиться в одно и тоже время всегда, даже в выходные, ну и время засыпания и пробуждения — всегда одно, иначе вечный джетлаг. Блэкаут шторы и свежий воздух тоже творят чудеса. Прочие инструменты и практики оказались менее эффективными, но это все индивидуально, надо пробовать.</p><h4>Медитация и дыхательные упражнения. Снижают уровень стресса</h4><p>Медитация просто необходима как минимум для того, чтобы вовремя заметить, что уровень стресса высокий, так как в первую очередь медитация учит замечать. Не религия, не эзотерика, просто тренировка раз в день на 15 минут.</p><blockquote><p>«Дыхательные упражнения творят чудеса» — Людвиг Быстроновский.</p></blockquote><h4>Общение. Общайтесь чаще и шире</h4><p>Без общения мы моделируем социальные связи в отрыве от реальности, коммуникация может стать сложной и даже токсичной, в конечном итоге люди перестают понимать друг друга.</p><p>Нам необходимо общаться не только для обмена информацией, но и для самовыражения и поддержки.</p><blockquote><p>Лично мне очень важно общение с людьми из иных <s>реальностей</s> предметных областей, эпох, культур, это почти всегда интересно. 75-летний тренер по боксу, который тренировал Валуева, за пару тренировок может рассказать историй на хорошую книгу.</p></blockquote><p>Если как в примере комбинировать инструменты, например физическую активность и расширение <s>сознания</s> кругозора, можно сэкономить много времени.</p><h4>Достижения. Не забывайте о своих достижениях</h4><p>Нам всем важно признание того, что мы делаем, если этого нет, мы чувствуем бесполезность и фрустрируем. И костылим рационализации.</p><p>Как дизайн-менеджер я стараюсь хвалить коллег как можно чаще — мозг будет тянуться в сторону развития того, за что тебя похвалили.</p><p>Крайне полезно значимую часть своего времени тратить на портфолио или CV — это помогает осознать что ты уже сделал много всего классного, ну или пора что-то менять в жизни.</p><h4>И финальное</h4><p>Как видно, многие пункты пересекаются и взаимосвязаны, важно начать с чего-то, это даст энергии на следующие действия и так далее. По опыту могу сказать — если план достаточно точный и учитывает все детали, это выглядит как несколько минорных фиксов, которые можно и в пятницу вечером релизить.</p><p>Проблемы неизбежны! Проблемы можно решить! (Дэвид Дойч «Начало бесконечности. Объяснения, которые меняют мир»).</p><p></p>', 1, '2023-06-13 00:46:19', 757081, 96, '/ru/articles/741220/', 'Часто можно услышать утверждение: «у человека нет никаких выдающихся физических качеств, он не самый быстрый, не самый сильный, не самый высокий, но стал доминирующим видом благодаря развитому мозгу». Так ли это? Похоже, что да! Именно способность мозга обучаться, накапливать опыт и затем его передавать сделала нас теми, кто мы есть сегодня. Но был ли мозг тем самым game changer, который помог нам занять свою экологическую нишу, выжить и развиться до такой степени? Антропологи Dennis Bramble и Daniel Lieberman сделали занятный материал, в котором предлагают взглянуть на наши способности и эволюционную доминацию с другой стороны. Давай ознакомимся с их трудом, чтобы понять, что они имеют ввиду.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(234, 'Почему человек стал человеком? Из-за мозга или ягодичной мышцы?', '<p>Часто можно услышать утверждение: «у человека нет никаких выдающихся физических качеств, он не самый быстрый, не самый сильный, не самый высокий, но стал доминирующим видом благодаря развитому мозгу». Так ли это? Похоже, что да! Именно способность мозга обучаться, накапливать опыт и затем его передавать сделала нас теми, кто мы есть сегодня. Но был ли мозг тем самым game changer, который помог нам занять свою экологическую нишу, выжить и развиться до такой степени? Антропологи Dennis Bramble и Daniel Lieberman сделали занятный материал, в котором предлагают взглянуть на наши способности и эволюционную доминацию с другой стороны. <a href=\"https://www.nature.com/articles/nature03052\" rel=\"noopener noreferrer nofollow\">Давай ознакомимся с их трудом, чтобы понять, что они имеют ввиду.</a></p><h3>Встали на ноги, чтобы ходить или бегать?</h3><p><em>«Хотя прямохождение включает в себя и бег, и ходьбу, принято считать, что бег не сыграл большой роли в эволюции человека, потому что люди, как и обезьяны, являются плохими спринтерами по сравнению с большинством четвероногих».</em></p><p>Ученых сподвигло то, что биомеханика бега человека так хорошо изучена и при этом так мало исследований на тему того, был ли это основной способ передвижения у предков. А изучать тут есть что.</p><p><em>\"Этот недостаток внимания во многом объясняется тем, что люди являются посредственными бегунами в нескольких отношениях.\"</em></p><p>Даже элитные спринтеры сравнительно медлительны. Максимальную скорость, которую они могут развивать всего 10,2 м/с и поддерживать ее менее 15 секунд. <em>(Прим. максимальная скорость, которую удалось развить человеку, была 12,2 м/с и этот рекорд принадлежит Усейн Болту.)</em></p><p>А вот быстрые четвероногие, такие как лошади, борзые и антилопы, могут поддерживать максимальную скорость галопа 15-20 м/с в течение нескольких минут и преодолевать несколько километров за это время.</p><p>Более того, бег обходится людям дороже, чем большинству млекопитающих, требуя примерно в два раза больше метаболической энергии на пройденное расстояние, чем для млекопитающего с поправкой массу тела.</p><p>Наконец, люди менее маневренны и лишены многих структурных бонусов, характерных для большинства четвероногих, таких как удлиненные ступни и короткие голени.</p><p><strong>Однако, хотя люди сравнительно плохие спринтеры, они занимаются еще одним видом бега — бегом на выносливость, определяемый как пробег многих километров в течение длительных периодов времени с использованием аэробного метаболизма.</strong>\"</p><h3>Кто быстрее: лошадь или человек?</h3><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e3f/9d9/fbd/e3f9d9fbd2a66ca48521da648de95680.png\" width=\"700\" height=\"521\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e3f/9d9/fbd/e3f9d9fbd2a66ca48521da648de95680.png\"></figure><p>Ходьба достаточно затратный ресурс. Но как только мы с ходьбы 1-1,3 м/с переходим на легкий бег 2-2,5 м/с, все резко меняется. При беге энергии тратится столько же, как при ходьбе, но преодолевается вдвое большее расстояние за меньшее время.</p><p>Все благодаря комплексу сухожилий и других пружинящих механик. Например, когда мы идем, то ставим вперед практически прямую ногу, которая поглощает в себя всю созданную энергию предыдущим толчком ноги. Перекатывание с пятки на носок затрачивает большой энергетический ресурс, вовлекая в работу икроножные мышцы. Неудачное расположение центра массы ровно посреди туловища. Все это заставляет тратить много энергии. Ходьба больше похожа на маятник, а ноги сопротивляются раскачивающемуся туда-сюда туловищу.</p><p>Во время бега тело работает иначе благодаря эластичным способностям сухожилий и более удачному положению ног и корпуса. Сухожилия выталкивают ногу вперед, почти не тратя энергию икроножных мышц на сокращение. Удар приходится на согнутую ногу, что дополнительно задействует коленные связки и сухожилия, что опять снижает нагрузку на мышцы и задействует пружинистые возможности связок. А корпус наклонен слегка вперед, что упрощает его разгон и поддержание скорости. Раскачивание во время бега значительно ниже, чем при ходьбе.</p><p>Все это позволяет не только преодолевать большие расстояния, но и двигаться с приличной скоростью. Скорость бега на выносливость у человека приблизительно равна галопу больших (и маленьких) четвероногих.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/d09/a4d/37e/d09a4d37e068e728a7f599e445efa282.png\" width=\"700\" height=\"610\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d09/a4d/37e/d09a4d37e068e728a7f599e445efa282.png\"></figure><p>В Уэльсе с 1980 года ежегодно проходит <a href=\"https://upload.wikimedia.org/wikipedia/commons/0/03/Manvhorse06.jpg\" rel=\"noopener noreferrer nofollow\">Марафон человека и лошади</a>. Там люди соревнуются против наездников на лошадях на дистанции 35 км. Чаще побеждают лошади, но было два года (2004 и 2007), когда человек победил. А в 2007 году человек даже дал фору самой быстрой лошади в целых 11 минут.</p><p>Но это прохладный тенистый Уэльс, в котором лошадь не так быстро нагревается. Становление нашей цивилизации происходило в жаркой саване, где у нас было еще одно преимущество.</p><h3>Терморегуляция.</h3><p>Во время бега производился очень много тепла из-за чего тело нагревается, нарушая внутренний гомеостаз. И в том, как мы умеем остужать тело, нам тоже нет равных.</p><p>Система потоотделения есть у большинства животных. Но у нас нет волосяного покрова, что делает потоотделение более эффективным.</p><p>Узкое и вытянутое тело тоже является положительным признаком для быстрого остужения. У нас отличное устройство кровеносной и артериальной системы особенно в голове, которая очень эффективно отводит тепло не допуская нагревание мозга. Сонная артерия достаточно близка к поверхности кожи и может успевать остужать кровь, прежде чем доставить ее в мозг.</p><p>Еще одной особенностью людей является склонность<br>дышать ртом (но не задыхаться) во время напряженной деятельности.</p><p>Носовое дыхание, типичное для обезьян, оказывает слишком сильное сопротивление воздуху. Ноздри недостаточно широки, чтобы выдерживать высокие требования к вентиляции при интенсивной деятельности. Дыхание ртом обеспечивает более высокую скорость воздушного потока при меньшем сопротивлении и мышечных усилиях. А еще является более эффективным средством разгрузки избыточного тепла во время выдоха.</p><p><strong>Все вышеперечисленные особенности делают нас монстрами выносливости, недоступной никаким другим млекопитающим особям.</strong></p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/bea/808/430/bea80843077bf33032ea2cbc1a75a467.png\" width=\"514\" height=\"398\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/bea/808/430/bea80843077bf33032ea2cbc1a75a467.png\"></figure><p>Я веду Телеграм канал<a href=\"https://t.me/+T0hc2pMg01diZmU6\" rel=\"noopener noreferrer nofollow\"> Терентьев Фитнес</a><a href=\"https://t.me/+uT66VZXForg4N2Ri\" rel=\"noopener noreferrer nofollow\"> </a>про тренировки, питание, спортивный лайфстайл. Даю полезные рекомендации для тренирующихся, делюсь опытом подопечных. Подписывайся! Буду рад тебя видеть.Загон животных — до сих пор один из актуальных способов охоты у современных племен охотников и собирателей. Группа охотников выбирает жертву, пугают ее. Та в свою очередь на больших мощностях под палящим солнцем убегает. По следам ее отслеживают и снова пугают. И так до тех пор, пока косуля не останется без сил, чтобы спокойно убить ее с ближнего расстояния.</p><p>Ученые строят предположение, что в отличии от тигров, волков, гиен, люди питались более свежими особями, выигрывав еще и в этом. Остальные, выдав спринт, максимум на что могли рассчитывать — это старая больная и хромая косуля. А если ничего не ловили, голодали следующую неделю, восстанавливая силы. Т.е. хищная охота больше похожа на лотерею, а выносливость похожа на расчет.</p><h3>Итог.</h3><p>Это крупицы из тех фактов, которые нам предоставили ученые. Они разбирали так же устройство ягодичной мышцы, отмечали ее развитость и эффективность именно при беге в отличии от ходьбы, где она практически не участвует. Развитость ягодичной значительно отличает нас от обезьян, которые тоже умеют достаточно быстро бегать, но не долго, в т.ч. из-за маленькой не развитой ягодичной.</p><p>Так же они сравнивали различные остатки костей, которые удалось найти. Сравнивали предполагаемые периоды жизни и развитость костей, их отличия от обезьян, первых людей и нас.</p><p>И подводя итог, вполне вероятно, что комплекс выносливости, терморегуляции и бег являлись нашей экологической нишей до того, как начал активно развиваться мозг. Помогали выживать, добывать пропитание и преодолевать большие расстояния в поиске лучших мест для жизни. Возможно, бег и дал мозгу толчок для роста.</p><p>Когда тебе станет трудно, помни, что ты чертова машина выносливости!</p><blockquote><p>Я веду Телеграм канал<a href=\"https://t.me/+T0hc2pMg01diZmU6\" rel=\"noopener noreferrer nofollow\"> Терентьев Фитнес</a><a href=\"https://t.me/+uT66VZXForg4N2Ri\" rel=\"noopener noreferrer nofollow\"> </a>про тренировки, питание, спортивный лайфстайл. Даю полезные рекомендации для тренирующихся, делюсь опытом подопечных. Подписывайся! Буду рад тебя видеть.</p></blockquote><p></p>', 2, '2023-06-13 00:46:20', 652225, 109, '/ru/articles/741072/', 'Стресс аналитика особенный — у него запах страха не справиться, сроков, хаоса и структуры, достаточности и избыточности информации, фрустрации и критического мышления. Но долго сидеть в этом облаке запахов не стоит — иногда нужно проветриваться.Поговорим как рассеять облако страхов и расслабить клапана, чтобы фляга не засвистела.'),
(235, 'К кому приходит удача и как можно на нее влиять?', '<p>Обычно удача воспринимается как случайность или незаслуженный успех. Выдающиеся результаты похудения и тем более выдающихся результатов в тренажерном зале часто объясняются удачей. Повезло с генетикой, с работой, с поддерживающим/ой супругом/ой. Нам так проще принимать неравенство.<br>А что если хоть частично удача лежит в зоне нашей ответственности?</p><h3>Не случайность, а правильный настрой</h3><p>Например в одном <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC9734849/#CR15\" rel=\"noopener noreferrer nofollow\">исследовании</a>, изучавшем результаты регбистов, то, что болельщики и СМИ называли «удачей», по сути оказывалось просто бОльшим количеством ударов в створ ворот той командой, которую якобы постигла удача. С удачей сталкивается тот, кто предпринимает большее количество попыток.</p><p>Вот еще несколько примеров.</p><p>Гольфисты, которым давали играть «счастливым мячом», оказывались значительно результативнее тех, кому давали «обычный мяч как у всех». А испытуемым, которым разрешили взять из дома свой талисман на удачу, решали анаграммы лучше и усерднее тех, кто остался без талисмана. (<a href=\"https://journals.sagepub.com/doi/abs/10.1177/0956797610372631\" rel=\"noopener noreferrer nofollow\">1</a>)</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/2ec/631/1ef/2ec6311efa8925658eb0afb91ee9f12f.png\" width=\"700\" height=\"555\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/2ec/631/1ef/2ec6311efa8925658eb0afb91ee9f12f.png\"></figure><p>Складывается впечатление, что на удачу можно влиять без возможности ее контролировать.</p><p>Как-то я писал публикацию про самоконтроль. <a href=\"https://t.me/novyfitness/1258\" rel=\"noopener noreferrer nofollow\">Вывод одного из них</a> заключался в том, что люди, верившие в несгибаемость своей воли несгибаемую волю и демонстрировали. С удачей было замечено что-то похожее.</p><p>Во время <a href=\"http://richardwiseman.com/resources/The_Luck_Factor.pdf\" rel=\"noopener noreferrer nofollow\">одного уличного эксперимента</a>, те, кто считал себя удачливым, чаще находили фразу «если ты заметил эту строчку, скажи исследователю об этом и получи $250» в предложенной исследователями газете.</p><p>Получается, что удача — это не просто стечение обстоятельств. Ее приход обеспечивает наша психология. Настрой отчасти определяет, разглядим мы удачу и воспользуемся ей или нет. Удача приходит к тем, кто считает себя достойным для ее прихода и создает для нее возможности.</p><p>Если мы перенесем это все на фитнес и ЗОЖ и посмотрим на наши предыдущие попытки влиться в тему, к которым многие относятся болезненно. Ведь неудача — это поражение и кажется, что оно делает нас хуже. Но важно понять то, что предыдущие попытки, пускай и неудачные, имеют статистическую значимость и, если бы можно составить математическое уравнение нашей трансформации, они бы имели знак плюс, а не минус. Величина эффекта у них пока что невелика, но эффект есть и таким образом мы повышаем свои шансы на успех.</p><h3>Психология влияет и на успех следующей попытки</h3><p>Если что-то не получилось один раз, вероятность того, что получится в следующий раз, снижается.</p><p><a href=\"https://www.sciencedirect.com/science/article/pii/S0010027714000031/\" rel=\"noopener noreferrer nofollow\">Это заметили</a> в исследовании, когда у игроков в крэпс и рулетку (результат которых во многом определяет случайность) после двух побед подряд вероятность следующего выигрыша равнялась 57%.</p><p>У игроков, которые сделали две неудачные ставки подряд, вероятность победы в следующей ставке была 40%. Почему так, если статистически вероятность у всех 50/50?</p><p>Оказалось, что те, кто обуздал удачу, ожидают, что если удалось выиграть два раза подряд, то следующий кон они с большей вероятностью проиграют, поэтому действуют более рассудительно, делая менее рисковые ставки. «Ведь не может постоянно везти!»</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e3c/43c/0bf/e3c43c0bf996f88c19be597e95ee8ec9.png\" width=\"700\" height=\"700\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e3c/43c/0bf/e3c43c0bf996f88c19be597e95ee8ec9.png\"></figure><p>Те, кто ошибся, думает что в следующий раз точно повезет, «Ведь не может постоянно не везти!», что приводит к желанию отыграться, тогда размер ставок, а вместе с тем риски, растут. Ничего не напоминает?</p><p>Люди, которые не смогли похудеть, в следующий раз предпримут боле радикальные меры, сделав диету строже. Те, кто не накачался, в следующий раз купят абонемент сразу на год, а не на месяц, чтобы «стимулировать» свои занятия без возможности отвертеться. Будут тренироваться, не давая себе спуску, чтобы не расслабиться. Ставки растут, а значит вероятность победы снижается.</p><p>Риски снижают устойчивость и комфорт, а они служат фундаментом изменений и поддержания этих изменений на длительном отрезке времени.</p><p>Пока жив страх не справится с тем, что уже единожды не получалось, мы всегда будем иметь более низкие шансы на успех.</p><p>Positive thinking показал свою несостоятельность и даже вред, предлагая отрыв от реальности и необоснованную веру в будущее.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/1c3/36e/821/1c336e8214729addd2b44714e24154d1.png\" width=\"570\" height=\"765\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/1c3/36e/821/1c336e8214729addd2b44714e24154d1.png\"></figure><p>Однако, вера в удачу, на мой взгляд, к этому не относится. Никто не говорит, что «однозначно получится». Это умение принимать успех и неудачи в равной степени, делать взвешенные решения с попыткой вырастить вероятность успеха до 57%, а неудачи снизить до 40%.</p><p>Удача хочет, чтобы в нее верили и постоянно проверяли, давая ей шанс проявиться.</p><blockquote><p>Я веду Телеграм канал<a href=\"https://t.me/+T0hc2pMg01diZmU6\" rel=\"noopener noreferrer nofollow\"> Терентьев Фитнес</a><a href=\"https://t.me/+uT66VZXForg4N2Ri\" rel=\"noopener noreferrer nofollow\"> </a>про тренировки, питание, спортивный лайфстайл. Даю полезные рекомендации для тренирующихся, делюсь опытом подопечных. Подписывайся! Буду рад тебя видеть.</p></blockquote><p></p>', 3, '2023-06-13 00:46:21', 634977, 110, '/ru/articles/740918/', 'Привет, хабр! Я заранее прошу прощения насчет того, что этот пост не совсем соотвествует тематике хабра, однако сохранение зрения и здоровья глаз - важный параметр для айтишников, при и без того высокой нагрузке на глаза.Я пишу этот пост потому, что больше 10 лет назад я написал на хабре статью \"Очень быстрый и эффективный способ расслабления глаз\" - с тех самых пор и по сей день я продолжаю использовать эту методику, и по-прежнему считаю ее эффективной. Итак, суть ситуации, которая сподвигла создать этот пост: у меня по-прежнему хорошее зрение, правый глаз видит на 100%, однако левый глаз за последние 3 года стал видеть немного хуже. У моей жены тоже всю жизнь было идеальное зрение, но в последние 3 года оно стало падать на правом глазу. И я и она - правши. Но что совпадает - так это то, что я сплю в основном на левом боку, а жена на правом.Это наблюдение натолкнуло на мысль, что сон на боку (точнее подушка, которая слегка давит на глаз) негативно влияет на зрение. Давление подушки незначительное, но неравномерное и довольно продолжительное. Отсюда родилось предположение, что это давление вызывает астигматизм.Этот пост создавался ради опроса, чтобы обнаружить корреляцию (или ее отсутствие) между сном на боку и зрением. Если она есть - классно что мы с вами ее обнаружим. Если ее нет - извиняюсь, что потратил ваше время'),
(236, 'А что если сон на боку портит зрение?', '<p>Привет, Хабр! Я заранее прошу прощения насчет того, что этот пост не совсем соответствует тематике Хабра, однако сохранение зрения и здоровья глаз - важный параметр для айтишников, при и без того высокой нагрузке на глаза.</p><p><em>Я пишу этот пост потому, что больше 10 лет назад я написал на Хабре статью \"</em><a href=\"https://habr.com/ru/articles/142096/\" rel=\"noopener noreferrer nofollow\"><em>Очень быстрый и эффективный способ расслабления глаз</em></a><em>\" - с тех самых пор и по сей день я продолжаю использовать эту методику, по-прежнему считаю ее эффективной и до сих пор экспериментирую с разными методиками.</em></p><p>Итак, суть ситуации, которая сподвигла создать этот пост: у меня по-прежнему хорошее зрение, правый глаз видит на 100%, однако левый глаз за последние 3 года стал видеть немного хуже. У моей жены тоже всю жизнь было идеальное зрение, но в последние 3 года оно стало падать на правом глазу. И я и она - правши. Но что совпадает - так это то, что я сплю в основном на левом боку, а жена на правом.</p><p>Это наблюдение натолкнуло на мысль, что сон на боку (точнее подушка, которая слегка давит на глаз) негативно влияет на зрение. Давление подушки незначительное, но неравномерное и довольно продолжительное. Отсюда родилось предположение, что это давление вызывает <a href=\"https://ru.wikipedia.org/wiki/%D0%90%D1%81%D1%82%D0%B8%D0%B3%D0%BC%D0%B0%D1%82%D0%B8%D0%B7%D0%BC_(%D0%BC%D0%B5%D0%B4%D0%B8%D1%86%D0%B8%D0%BD%D0%B0)\" rel=\"noopener noreferrer nofollow\">астигматизм</a>.</p><p>Этот пост создавался ради опроса, чтобы обнаружить корреляцию (или ее отсутствие) между сном на боку и зрением. Если она есть - классно что мы с вами ее обнаружим. Если ее нет - извиняюсь, что потратил ваше время</p><p></p>', 2, '2023-06-13 00:46:21', 510734, 110, '/ru/articles/740804/', 'Вы обращали внимание на волатильность сексуального компонента в отношениях? От «высшего проявления любви» через «перевод отношений в горизонтальную плоскость» и «супружеского долга» до «изнасилования в браке» путь может быть очень коротким с минимальными стоянками на каждом из этапов. И если об этом задумываться, то хочется понять, каким же образом происходит смена остановок, что допустимо, а что нет, с точки зрения здоровых отношений и заботы о партнере. Сразу скажу, что здесь не пойдет речь о сексуальных практиках, в которые партнеры вступают по предварительному обоюдному согласию. Мы сосредоточимся на формате сексуальных отношений и некоторых правилах, которые помогут расставить точки над i.Во время написания статьи, я подумал, что, в отличие от большинства предыдущих статей, не буду приводить определение термина, о котором пойдет речь, ибо «и так же всё понятно». Но погрузившись в тему, решил, что следует это сделать, чтобы сложилось более полное понимание феномена. Скажу честно, что до создания статьи, я рассматривал термины «секс» и «половой акт» как синонимы, отличающиеся больше стилистической окраской. Поэтому, более корректно будет использовать термин «сексуальное поведение», на которое я и буду ссылаться в рамках статьи. Отсюда и далее, стоит воспринимать слово «секс» именно в таком значении:'),
(237, 'Карательная стоматология или «Нижегородская резня»', '<img src=\"https://habrastorage.org/r/w780q1/webt/iv/xl/-w/ivxl-wet18nqssrbaffxrwd1-im.jpeg\" alt=\"image\" data-src=\"https://habrastorage.org/webt/iv/xl/-w/ivxl-wet18nqssrbaffxrwd1-im.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\nЯ заранее прошу убрать от экранов слишком уж впечатлительных граждан, беременных животных, неуравновешенных детей, моралистов и фанатов врачебной этики. <a name=\"habracut\"></a><br>\r\n<br>\r\nЗдравствуйте, уважаемые друзья!<br>\r\n<br>\r\nНачну с того, что в сегодняшней статье будет присутствовать завуалированная ненормативная лексика чуть в большем объеме, чем это обычно бывает. Почему? Потому что эта статья спонтанна и не запланирована. Всему виной недоумение, что такое вообще бывает. <b>Поэтому, если вы считаете, что врачи не такие же люди, как и вы, и не ругаются матом, а от слова «**й» вы падаете в обморок, – советую воздержаться от прочтения этой статьи.</b><br>\r\n<br>\r\nЯ уже не раз говорил о том, что крайне сложно найти адекватную стоматологическую клинику, не говоря уже о докторе, который “знает и могёт”. Сегодняшняя статья посвящена очередному случаю непрофессионализма, с которым мне пришлось столкнуться. Вы скажете, – а как же врачебная этика? Да ну её нахрен, когда дело касается здоровья пациента. Выражение «не можешь – не берись» очень четко подходит к медицине. Как-никак доктора имеют дело со здоровьем и жизнью людей.<br>\r\n<br>\r\nДалее будет случай, который основан на рассказе пациента, – Константина. Конечно, с моими ремарками.<br>\r\n<br>\r\nИтак, около недели тому назад сижу на работе, беды не чую. Ассистент готовит кабинет к приёму очередного пациента. На почту приходит сообщение от некоего Константина, который с двух попыток в разных нижегородских клиниках не смог избавиться от вот такого зуба мудрости.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/q5/xc/yv/q5xcyv9slgs8gybypaitd0g3kvi.jpeg\" alt=\"image\" data-src=\"https://habrastorage.org/webt/q5/xc/yv/q5xcyv9slgs8gybypaitd0g3kvi.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\nГоризонтальный – зуб мудрости, черная полоска под ним – нижнечелюстной нерв.<br>\r\n<br>\r\nКазалось бы, – что должно пойти не так при удалении стандартной восьмерки? Если время этого самого удаления занимает 20, а в худшем случае 30 минут. А вот что.<br>\r\n<br>\r\n<b>Настало время офигительных историй.</b><br>\r\n<br>\r\n<b>11 мая</b> сего года Константин обратился в частную клинику в Нижнем Новгороде дабы полечить поверхностный кариес. Увидев, что в клинике есть хирургические услуги, он поинтересовался у молодой “врачихи” 27 лет отроду о том, можно ли заодно удалить его единственный зуб мудрости. Она сказала, что это займет много времени (около полутора часов), но вай, как говорится, и нот? Типа, 10 тыщ – и я вся твоя.<br>\r\n<br>\r\nВрачиха, стоимость и продолжительность Константина устроили. Если с ценником я еще соглашусь, то полтора часа – это лютый перебор. Что можно делать с зубом полтора часа? – подумал я. Снимать тик-токи?<br>\r\n<br>\r\nЧто ж. Она начала. Через три часа… ТРИ, КАРЛ! Анестезия начала проседать. Ничего удивительного. Константин почувствовал боль, «врачиха» повела его на рентгеновский снимок.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/gd/my/pp/gdmyppcxgr0jr7zwtkv72t1g5hs.jpeg\" alt=\"image\" data-src=\"https://habrastorage.org/webt/gd/my/pp/gdmyppcxgr0jr7zwtkv72t1g5hs.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\nОн спросил, – «много ли перепилили»? Ответом было, – нуу… процентов 5 от зуба. За три-то часа. В этом месте Константин прихренел. Он надеялся, что за три часа процесс уж точно должен был быть закончен. Но, получив еще дозу наркоза (мы, конечно, говорим про местную анестезию), они пошли пилить дальше.<br>\r\n<br>\r\nПосле того, как с начала удаления прошло уже 5 (!) часов… врач сказала, – «бор не достает до зуба, да и отек у тебя уже образовывается. Поехали-ка мы лучше в <a href=\"https://habr.com/ru/articles/458218/\">ЧЛХ (челюстно–лицевую хирургию)</a>, там врач сразу тебе все удалит и отпустит домой». Звучит обнадеживающе. Стоит отдать должное девушке-доктору, что она не выперла Константина из клиники, а все-таки довезла его до более компетентного, как тогда казалось, места. Приехали в больницу. Спустя 2 часа (странно, что не больше) Константина госпитализировали. Но вот незадача, – врача уже нет, рабочий, мать его, день закончился. Пришлось остаться ночевать. Все же знают, какой кайф ночевать в региональной больнице? Вот и Константину это «понравилось». Его можно понять, ведь никто не хочет испытать на себе все радости храпящих и пукающих соседей, уколов в сраку и внутрибольничной инфекции в качестве бонуса. На следующий день пришла врач пенсионного возраста и сказала, что нет никакого смысла что-то делать, так как за ночь успел развиться большой отек. Полежи-ка, милок, неделю, вот начнет открываться рот, тогда и посмотрим. Зашибись, неправда ли?<br>\r\n<br>\r\nПришел, б***ь, зуб удалить.<br>\r\n<br>\r\nСложный.<br>\r\n<br>\r\nЗа полтора часа.<br>\r\n<br>\r\nЗа 10 тыщ.<br>\r\n<br>\r\nНа 17-е число, аккурат в день рождения Константина, была назначена повторная операция.<br>\r\n<br>\r\nГотовы? Сейчас Косте будут дарить подарки.<br>\r\n<br>\r\n<b>17 мая 2023</b> года Константина кладут на стол, обезболивают и зачем-то завязывают глаза. <s>Потом достают самый мощный страпон</s>. Начинают пилить зуб машинкой. Засунув элеватор в рот, доктор сказала, – «сейчас хрустнет!», но почему-то не хрустело. Это наверно первый случай за 47 лет жизни Константина, когда он безумно хотел, чтобы в его голове уже что-то наконец хрустнуло. Вдруг он почувствовал резкую боль, пошла кровь. <s>ФЛЮГЕНГЕХАЙМЕН! Пытался крикнуть Константин с полным ртом крови.</s><br>\r\n<br>\r\nНачались тампоны, тампоны, тампоны. Увезли в палату, поставили капельницу. «Похоже, засандалила она в нерв», предположил Константин. С учетом того, что после этой «операции» чувство онемения в области губы и подбородка с левой стороны до сих пор не прошло – Костя не ошибся. Назначили повторную операцию под общим наркозом, которую несколько раз переносили. Константина это изрядно подзае***о и 19 мая он решил покинуть обитель Авиценны.<br>\r\n<br>\r\nВнимание! Выписка из стационара:<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/ak/b7/u8/akb7u8d73suydsafbweblqe-lh0.jpeg\" alt=\"image\" data-src=\"https://habrastorage.org/webt/ak/b7/u8/akb7u8d73suydsafbweblqe-lh0.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\nОказывается, кровотечение началось из-за того, что у Константина вдруг резко подскочило давление. Ну-ну.<br>\r\n<br>\r\nНесколько дней он не находил себе места и думал, что же делать дальше.<br>\r\n<br>\r\n<b>30 мая</b>, очарованный рекомендациями и отзывами, он записался на консультацию к чуть ли не «самому лучшему хирургу-стоматологу и, по совместительству, челюстно-лицевому хирургу Нижнего Новгорода». В такую же не менее “элитарную”, если не самую лучшую клинику. Если верить аббревиатуре «VIP» в названии.<br>\r\n<br>\r\n«Оказалось он с моей этой бабкой (имеет ввиду доктора из ЧЛХ) в одной больнице раньше работал» – рассказывает Константин. «Сказал, что зуб очень сложный и лежит на нерве, нерв на сосуде»…<br>\r\n<br>\r\nИгла в яйце, яйцо в утке, утка в зайце, палец в жопе. И, внимание, апогей! «Возможно надо будет вырывать седьмой зуб», – сказал местный умелец и велел идти снова к бабке в ЧЛХ на поклон. Что, б***ь? Удалять седьмой зуб, чтобы удалить восьмой? Вы там совсем уже все ёкнулись в край? Это как ампутировать руку, потому что не получается снять куртку. За эту чудесную консультацию товарищ не забыл взять с Константина тыщу рублей, хоть и йодоформная турунда, которую он уложил в лунку, была лучше больничной.<br>\r\n<br>\r\nНикакого желания ехать к «бабке» не было, а уж если «нижегородский гуру» сказал, что сложно, куда ж еще идти? Константин взялся гуглить, вселенная подкинула ему мои статьи, после чего, как ни странно, он решил связаться уже со мной. Я сказал, что нужна повторная компьютерная томография, и пора готовиться к путешествию в Москву. На следующий день мне пришло письмо:<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/3s/k4/gl/3sk4gljqkacbrbfow3vkpasepxs.jpeg\" alt=\"image\" data-src=\"https://habrastorage.org/webt/3s/k4/gl/3sk4gljqkacbrbfow3vkpasepxs.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\nОткрываю я снимок и вижу, что действительно так и было:<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/nj/sj/bh/njsjbhpl_er7jubejcrhpsv7sos.jpeg\" alt=\"image\" data-src=\"https://habrastorage.org/webt/nj/sj/bh/njsjbhpl_er7jubejcrhpsv7sos.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\nЧерная полоска, уходящая в правый нижний угол картинки, отмеченная кружком, и есть то место, где был перебит нерв.<br>\r\n<br>\r\nЯ сказал Константину, что никаких проблем удалении не вижу, тем более все осложнения, которые могли быть, он уже хапнул.<br>\r\n<br>\r\nКонстантин пунктуально прибыл в намеченный день и час. <b>3 июня 2023</b>. Осмотрев полость рта и «заколдованное» место, в частности, я предложил начать. Константин согласился, хоть и немного волновался. Но это и немудрено после всего того, что он прошёл.<br>\r\n<br>\r\nКонечно, меня посещали мысли, что же там такого, что первый раз почти 6 часов пытались удалить зуб, а во второй вообще фиганули нерв. Сделал анестезию, разрез, и удалил зуб за 4 минуты.<br>\r\n<br>\r\nБ***ь.<br>\r\n<br>\r\n4 минуты!<br>\r\n<br>\r\nМожет хотя бы 40? Нет, 4!<br>\r\n<br>\r\nЧто там искали? Закладку? Что столько пилили? Почему не смогли?<br>\r\n<br>\r\nУточняю: 3 минуты ждали, пока подействует анестезия, 4 минуты удаляли зуб, 5 минут накладывали швы, 3 минуты я катал Константина в кресле вверх и вниз. Всё. Меньше 15 минут ушло на удаление остатков зуба мудрости. На целый ушло бы не больше 25.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/3n/8f/ka/3n8fkawwsslqkhmpano8h75ykro.jpeg\" alt=\"image\" data-src=\"https://habrastorage.org/webt/3n/8f/ka/3n8fkawwsslqkhmpano8h75ykro.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\nБелые точки – это остатки йода от йодоформной турунды, которую уложили в больнице (если вы читали выписку). Он рентгеноконтрастен.<br>\r\n<br>\r\nОпешивший Константин меня приобнял, мы оба поох(*)али и посмеялись, а я решил написать эту статью.<br>\r\n<br>\r\nХороших вам врачей, друзья.<br>\r\n<br>\r\nСпасибо за внимание!<br>\r\n<br>\r\nВсегда ваш, Андрей Дашков.<br>\r\n<br>\r\n<b>Что еще почитать?</b><br>\r\n<br>\r\n<b>Про имплантацию зубов и костные пластики:</b><br>\r\n<br>\r\n<ul>\r\n<li><a href=\"https://habr.com/ru/post/459140/\">Установка имплантата: как это делается?</a></li>\r\n<li><a href=\"https://habr.com/ru/post/517572/\">Синус-лифтинг: как это делается?</a></li>\r\n<li><a href=\"https://habr.com/ru/post/521710/\">Расщепление в стоматологии: как это делается?</a></li>\r\n<li><a href=\"https://habr.com/ru/post/527550/\">Пересадка костного блока: как это делается?</a></li>\r\n<li><a href=\"https://habr.com/ru/post/455852/\">Синус-лифтинг и одномоментная имплантация</a></li>\r\n<li><a href=\"https://habr.com/ru/post/459956/\">Имплантация при полном отсутствии зубов, как следствие несвоевременного обращения к стоматологу</a></li>\r\n<li><a href=\"https://habr.com/ru/post/508928/\">Тотальное протезирование на имплантатах</a></li>\r\n<li><a href=\"https://habr.com/ru/post/569088/\">Одномоментная имплантация и немедленная нагрузка</a></li>\r\n</ul><br>\r\n<b>Про зубы мудрости и их удаление:</b><br>\r\n<br>\r\n<ul>\r\n<li><a href=\"https://habr.com/ru/post/455286/\">Зубы мудрости: удалить нельзя оставить</a></li>\r\n<li><a href=\"https://habr.com/ru/post/457336/\">Последствия несвоевременного удаления зубов мудрости. Часть I </a></li>\r\n<li><a href=\"https://habr.com/ru/post/563626/\">Последствия несвоевременного удаления зубов мудрости. Часть II</a></li>\r\n<li><a href=\"https://habr.com/ru/post/455499/\">Удаление зубов мудрости. Как это делается?</a></li>\r\n<li><a href=\"https://habr.com/ru/post/458218/\">ЧЛХ или не ЧЛХ? Вот в чем вопрос…</a></li>\r\n<li><a href=\"https://habr.com/ru/articles/727068/\">Челюстно-лицевая хирургия или нет? Вот в чем вопрос… Часть II</a></li>\r\n<li><a href=\"https://habr.com/ru/post/549560/\">Онемение после удаления зуба мудрости</a></li>\r\n<li><a href=\"https://habr.com/ru/post/670788/\">Зубы мудрости: «Выше только...»</a></li>\r\n<li><a href=\"https://habr.com/ru/post/456402/\">Зубы мудрости: Тянем-потянем!</a></li>\r\n</ul><br>\r\n<b>Про профессиональную гигиену полости рта:</b><br>\r\n<br>\r\n<ul>\r\n<li><a href=\"https://habr.com/ru/post/510398/\">Профессиональная гигиена полости рта. Часть I. Введение</a></li>\r\n<li><a href=\"https://habr.com/ru/post/512080/\">Профессиональная гигиена полости рта. Часть II. Как это делается?</a><br>\r\n </li>\r\n</ul><br>\r\n<b>И, конечно:</b><br>\r\n<br>\r\n<ul>\r\n<li><a href=\"https://habr.com/ru/post/557842/\">Удаление кисты малой слюнной железы. Как это делается?</a></li>\r\n<li><a href=\"https://habr.com/ru/articles/697420/\">Комплексный подход в стоматологии</a></li>\r\n<li><a href=\"https://habr.com/ru/post/600103/\">Дистализация зубов</a></li>\r\n<li><a href=\"https://habr.com/ru/post/576374/\">Сверхкомплектные зубы</a></li>\r\n<li><a href=\"https://habr.com/ru/post/538762/\">Удаление зуба, «недорого»… последствия</a></li>\r\n<li><a href=\"https://habr.com/ru/post/589611/\">Удаление зуба: как это делается?</a></li>\r\n<li><a href=\"https://habr.com/ru/post/505258/\">Стоматология: ожидание и реальность</a></li>\r\n<li><a href=\"https://habr.com/ru/post/489456/\">Рекомендации после приёма хирурга-стоматолога</a></li>\r\n<li><a href=\"https://habr.com/ru/post/479898/\">Голая правда</a> (статья о формировании стоимости лечения в стоматологической клинике)</li>\r\n</ul>', 3, '2023-06-13 00:46:22', 476690, 109, '/ru/articles/740604/', 'Как узнать, каким будет ваше будущее? Посмотреть на настоящее. Какими делами заполнен ваш день? Если вы хотите больше зарабатывать, но ничего для этого не делаете, то откуда взяться деньгам? Если хотите свободно говорить на английском, но не учите его, как это случится? Но проблема в том, что новые дела сложно ввести в привычный распорядок и превратить в привычки. Вот 8 способов, которые помогают мне это делать.  ');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(238, 'Постельный норматив: какой секс можно считать психологически безопасным?', '<figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b82/a42/fea/b82a42feaac38342942185ca3a22d6ab.png\" alt=\"Неплохая иллюстрация последствий\" title=\"Неплохая иллюстрация последствий\" width=\"1280\" height=\"720\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b82/a42/fea/b82a42feaac38342942185ca3a22d6ab.png\"><div><figcaption>Неплохая иллюстрация последствий</figcaption></figure><p>Вы обращали внимание на волатильность сексуального компонента в отношениях? От «высшего проявления любви» через «перевод отношений в горизонтальную плоскость» и «супружеского долга» до «изнасилования в браке» путь может быть очень коротким с минимальными стоянками на каждом из этапов. </p><p>И если об этом задумываться, то хочется понять, каким же образом происходит смена остановок, что допустимо, а что нет, с точки зрения здоровых отношений и заботы о партнере. Сразу скажу, что здесь не пойдет речь о сексуальных практиках, в которые партнеры вступают по предварительному обоюдному согласию. Мы сосредоточимся на формате сексуальных отношений и некоторых правилах, которые помогут расставить точки над i.</p><p><strong><em>Дисклеймер:</em></strong><em> В силу подхода к работе так сложилось, что обычно я консультирую людей интеллектуального труда. В последний год это преимущественно управленцы и сотрудники IT‑сферы. Это люди, которые всю жизнь решали любые проблемы «через голову». Такой подход неизбежно накладывает отпечаток на личность и внепрофессиональную жизнь. Минимизацией негативных последствий таких особенностей я занимаюсь. И в рамках статей на данном ресурсе стараюсь обобщить профессиональный опыт и дать полезную информацию.</em></p><p>Во время написания статьи, я подумал, что, в отличие от большинства предыдущих статей, не буду приводить определение термина, о котором пойдет речь, ибо «и так же всё понятно». Но погрузившись в тему, решил, что следует это сделать, чтобы сложилось более полное понимание феномена. Скажу честно, что до создания статьи, я рассматривал термины «секс» и «половой акт» как синонимы, отличающиеся больше стилистической окраской. Поэтому, более корректно будет использовать термин «сексуальное поведение», на которое я и буду ссылаться в рамках статьи. Отсюда и далее, стоит воспринимать слово «секс» именно в таком значении:</p><blockquote><p><strong>Сексуа́льное</strong> или <strong>полово́е поведе́ние челове́ка</strong> — совокупность психических реакций, установок и поступков, связанных с проявлением и удовлетворением полового влечения человека. <br>Сексуальное поведение является одной из форм взаимодействия индивидов и представляет собой практическую реализацию сексуальности человека, являясь одним из вариантов социального поведения. <br>Хотя сексуальное поведение человека тесно связано с репродуктивной функцией, однако оно, в отличие от полового поведения животных, определяется социальным развитием конкретной личности. Поэтому сексуальное поведение человека относительно автономно от его репродуктивной функции.</p></blockquote><p>И в нём для нашего понимания важны следующие пункты:</p><ul><li><p>совокупность психических реакций, установок и поступков, связанных с проявлением и удовлетворением полового влечения. То есть, мы понимаем, что само влечение существует не просто так, оно проявляется через определенные поступки, действия и установки. Влечение выступает мотивом, а форма его реализации может быть различной.</p></li><li><p>Сексуальное поведение является одной из форм взаимодействия индивидов. Ключевым словом является «взаимодействие», следовательно, мы не будем рассматривать в рамках данной статьи изолированное проявление и удовлетворение влечения человеком.</p></li><li><p>Сексуальное поведение человека относительно автономно от его репродуктивной функции. И это значит, что влечение и стремление завести потомство – разные мотивы. И не стоит сводить секс к заведению потомства.</p></li></ul><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/490/d04/ea7/490d04ea70b647f3c335d4081fe1e6b8.png\" alt=\"Если ставить прямо тематические картинки, то сайт нужно переименовать в pornhabr\" title=\"Если ставить прямо тематические картинки, то сайт нужно переименовать в pornhabr\" width=\"1600\" height=\"900\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/490/d04/ea7/490d04ea70b647f3c335d4081fe1e6b8.png\"><div><figcaption>Если ставить прямо тематические картинки, то сайт нужно переименовать в pornhabr</figcaption></figure><p>Теперь, когда мы понимаем, что секс – это не просто 3-13 минут (именно столько длится, по мнению большинства исследователей, нормальный и «оптимальный» половой акт), а еще дни, месяцы и годы вокруг него. И вот про этот период мы, преимущественно, будем говорить. И самое важное, с чего следует начать, это вопрос – а каким критериям должно соответствовать сексуальное поведение, чтобы оно считалось адекватным, здоровым и безопасным? Сексологи выделяют четыре базовых критерия:</p><ol><li><p><strong>Безопасность</strong> - это значит, что нас волнует жизнь и здоровье партнёра, его психологическое и физическое состояние. Значит, что мы не используем его сугубо для удовлетворения своих нужд;</p></li><li><p><strong>Добровольность</strong> - отсутствие принуждения к сексу. Как принуждения прямого (физического), так и шантажа любого рода, угроз, обмана, манипуляции, давления, использования алкоголя или наркотических средств с целью переломить волю партнера или снизить его возможности к сопротивлению. <strong>Важный момент!</strong> Сам по себе половой акт под влиянием алкоголя или наркотических средств не является чем-то плохим или неадекватным. Но важно отдавать себе отчет, что именно сексуальное поведение может стать неадекватным у одного или обоих партнеров, что снизит качество отношений, качество полового акта и создаст как психологические, так и юридические риски;</p></li><li><p><strong>Осознанность</strong> - ваш партнёр в курсе, чем вы будете заниматься, что это такое и для чего нужно. Здесь подразумевается, что с партнером, не имеющим представления о сексе, нельзя им заниматься. То есть, именно этот критерий и отсекает такие варианты парафилии (нарушение влечения) как зоофилия и педофилия. Также этот пункт является логичным следствием алкогольного или наркотического опьянения из прошлого блока, уточняя, что если партнер находится в бессознательном состоянии или не может отдавать себе отчета о происходящем, то секс может неожиданно легко превратиться в изнасилование, которое чревато не только психологическими, но и юридическими последствиями;</p></li><li><p><strong>Стремление к получению удовольствия</strong> - единственный адекватный мотив для секса. Не самоутверждение, не получение материальных или иных благ, не попытка привязать партнёра к себе через секс. Только получение удовольствия.</p></li></ol><p>Обращу внимание, что здесь не идёт речи про количество партнеров, их половой и гендерный состав, варианты сексуальных практик, использование тех или иных игрушек и приспособлений.</p><ul><li><p><em>Вы можете заниматься сексом в гордом одиночестве, а можете с группой людей - это нормально.</em></p></li><li><p><em>Вы можете заниматься сексом с партнером того же пола - это </em><strong><em>КоАП РФ Статья 6.21</em></strong></p></li><li><p><em>Вы можете использовать всё, что нравится вам и партнёру - это нормально.</em></p></li></ul><p>Говоря иначе, это четыре базовых критерия, которые позволяют провести четкую границу между здоровым и нездоровым проявлением сексуального поведения. И в дальнейшем я буду на них ссылаться. И чтобы понимание было полноценным, нам требуется познакомиться с еще одним понятием – <strong>активным согласием</strong>. И тут будет любопытно взглянуть эволюцию этой идеи.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/edd/97f/b1d/edd97fb1d3b6bfaf5f77feeba312f724.png\" alt=\"Не самая редкая ситуация, правда?\" title=\"Не самая редкая ситуация, правда?\" width=\"1280\" height=\"853\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/edd/97f/b1d/edd97fb1d3b6bfaf5f77feeba312f724.png\"><div><figcaption>Не самая редкая ситуация, правда?</figcaption></figure><p>Первый этап, через который прошла «культура согласия» выражался во фразе <em>«Нет – значит нет»</em>. То есть, упор делался на по умолчанию подразумеваемое согласие, которое может быть отозвано словом «нет». Сопоставляя его с описанными выше пунктами, мы понимаем, что такая концепция может вступать в конфликт с критериями «добровольности» и «осознанности», так как, например, один из партнеров в стабильной паре может банально «перепить» и не смочь отказаться от полового акта. А второй партнер, руководствуясь «подразумеваемым согласием» может совершить, фактически, изнасилование.</p><p>Далее идея перешла в свою вторую фазу, которая отражается во фразе <em>«Да – значит да»</em>. То есть, отвергается концепция подразумеваемого согласия и заменяется идеей подразумеваемого несогласия. И в этом случае, требуется получить четкое и однозначное согласие партнера на половой акт. На сегодняшний день, именно этот формат считается адекватным.</p><p>И вот тут следует прояснить еще один момент, который мог скрыться между строк. Согласие – это не единожды сказанное «да». Согласие – это состояние добровольной готовности. Согласие, как и готовность, могут исчезнуть в любой момент, даже во время непосредственно полового акта. И как только это согласие отозвано, заканчивается секс и начинается изнасилование. </p><p>Давайте кратко разберем пункты, которые могут быть восприняты как нарушение базовых критериев:</p><p><strong>Нарушение критерия безопасности</strong></p><ul><li><p>Игнорирование физического состояния партнера до и во время близости (например, головной боли или неприятных ощущений)</p></li><li><p>Высмеивание или критика сексуальных желаний или предпочтений партнера</p></li><li><p>Деструктивная критика партнера, его внешности или физиологических особенностей</p></li><li><p>Отказ от использования контрацепции, если партнер на этом настаивает</p></li></ul><p><strong>Нарушение критерия добровольности</strong></p><ul><li><p>Принуждение к половому акту</p></li><li><p>Принуждение к определенным практикам во время полового акта</p></li><li><p>Ограничение свободы партнера, если это не является заранее согласованной сексуальной практикой</p></li></ul><p><strong>Нарушение критерия осознанности</strong></p><ul><li><p>Склонение к половому акту партнера, находящего в состоянии алкогольного или наркотического опьянения</p></li><li><p>Склонение к непривычному или новому формату полового акта партера, находящегося в состоянии алкогольного или наркотического опьянения</p></li><li><p>Введение партнера в заблуждение, предлагая ему тот или иной формат/практику сексуальных отношений</p></li></ul><p><strong>Нарушение критерия удовольствия</strong></p><ul><li><p>Игнорирование удовольствия партнера в процессе полового акта</p></li><li><p>Игнорирование важности удовлетворения (оргазма) партнера</p></li><li><p>Игнорирование пожеланий и предпочтений партнера</p></li></ul><p>На этом моменте, мы приблизительно определились с тем, что считать согласием на половой акт. Но как и было сказано выше – сексуальное поведение не ограничивается половым актом, а включает в себя целый ряд социальных взаимодействий. И вот о них пойдет сейчас речь. И тут нам понадобится еще один интересный термин – монополия на сексуальные отношения.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/cf4/824/a87/cf4824a874a1e1d202861879bb4e04a6.png\" alt=\"Тот момент, когда для искал для иллюстрации уголь, а нашел золото\" title=\"Тот момент, когда для искал для иллюстрации уголь, а нашел золото\" width=\"650\" height=\"650\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/cf4/824/a87/cf4824a874a1e1d202861879bb4e04a6.png\"><div><figcaption>Тот момент, когда для искал для иллюстрации уголь, а нашел золото</figcaption></figure><blockquote><p><strong>Монополия на сексуальные отношения</strong> – договоренность партнеров об определенных формах сексуального поведения, которое может проявляться по отношению к другим людям без последующих санкций. </p></blockquote><p>Говоря иначе, «легализация» форм подобного поведения. Говоря еще проще – что считается изменой.</p><p>И здесь опять стоит напомнить, что под «сексом» мы понимаем не только половой акт или иные формы непосредственно сексуальной активности, а также социальное взаимодействие людей, которое затрагивает эту тему. И самое частое нарушение этой (пусть и не озвученной) монополии – обсуждение сексуальных тем с другими людьми и обсуждение вашей с партнером сексуальной жизни с другими.</p><p>Несомненно, секс, как одна из табуированных в обществе тем, вызывает интерес. И практически каждый человек общается на эту тему со своими знакомыми. В ход идет всё: от личных впечатлений и ощущений до описания «Тактико-Технических Характеристик» формы и размеров первичных половых признаков и описания особенностей процесса. И зачастую, если «обсуждаемый» об этом узнает, то ему будет некомфортно, потому что см п. 1 – безопасность. Сохранность тайн, личного пространства и интимных предпочтений вполне может быть важным и чувствительным для партнера моментом. </p><p>И не зря критерий безопасности стоит на первом месте. Именно этот критерий, который включает в себя физическую, психологическую, информационную, репродуктивную и иные виды безопасности, создает путь к доверию и, следовательно, возможности проявлению своих желаний, стремлений и интересов, которые могут выходить за границы социально-одобряемых пределов, но при этом быть желанными для конкретных людей. </p><p>А закончить мне бы хотелось картинкой со звуком:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/4fc/c80/73d/4fcc8073dd8eed559787b708f9ab87b8.png\" alt=\"Каким бы ни был секс, главное, чтобы он был...\" title=\"Каким бы ни был секс, главное, чтобы он был...\" width=\"1380\" height=\"774\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/4fc/c80/73d/4fcc8073dd8eed559787b708f9ab87b8.png\"><div><figcaption>Каким бы ни был секс, главное, чтобы он был...</figcaption></figure><p>С уважением<br>Сергей Максимов.<br>Психолог.</p><p><strong><em>P. S. Если вдруг интересны другие статьи по психологии, они есть в моем ТГ‑канале. Только статьи, без мемов и спама. </em></strong><a href=\"https://t.me/maximov_psy\" rel=\"noopener noreferrer nofollow\"><u>https://t.me/maximov_psy</u></a></p><p></p>', 2, '2023-06-13 00:46:23', 879129, 109, '/ru/articles/739770/', 'Как и обещали, публикуем вторую часть инструкции нашего коллеги, Игоря Иванова, по выращиванию гигантских арбузов в условиях средней полосы. В этой части переходим к практике — прививаем арбуз, высаживаем в открытый грунт и собираем урожай.Осторожно, много фото!'),
(239, 'Как узнать, какое будущее вас ждет?', '<p>Посмотреть на свое настоящее. Какими делами заполнен ваш день? Если вы хотите больше зарабатывать, но ничего для этого не делаете, то откуда взяться деньгам? Если хотите свободно говорить на английском, но не учите его, как это случится? Но проблема в том, что новые дела сложно ввести в привычный распорядок и превратить в привычки. Вот 8 способов, которые помогают мне это делать.  </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/ec6/ce7/705/ec6ce7705d68e5b19e37439fc9a8b622.jpg\" alt=\"Я посмотрел 14000605 вариантов будущего и ни в одном из них заклинание «С понедельника начну» не сработало  \" title=\"Я посмотрел 14000605 вариантов будущего и ни в одном из них заклинание «С понедельника начну» не сработало  \" width=\"1000\" height=\"545\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ec6/ce7/705/ec6ce7705d68e5b19e37439fc9a8b622.jpg\" data-blurred=\"true\"><div><figcaption>Я посмотрел 14000605 вариантов будущего и ни в одном из них заклинание «С понедельника начну» не сработало  </figcaption></figure><h3>Почему сложно внедрять привычки?</h3><p>Почему я делаю такой упор на привычках? Потому что привычки определяют судьбу. Есть привычка пить — станешь алкоголиком. Есть привычка зарабатывать — станешь миллионером. Как говорится: «Посеешь привычку, пожнешь характер. Посеешь характер — пожнешь судьбу». Но мало кому удается легко обзаводиться полезными привычками.</p><p>Как обычно мы пытаемся внедрять новые привычки? Нам приходит в голову идея, что надо похудеть, освоить новую профессию, открыть бизнес или выучить английский, и вот, заряженные предвкушением результата, мы начинаем действовать.</p><p>Воодушевление помогает сделать первые шаги, а дальше мы сталкиваемся с первыми трудностями, и все становится не так радужно. Кто-то бросает уже на этом этапе, кто-то продолжает идти на силе воле: «Я решил, значит, сделаю». Однако, сила воли истощается, и в итоге сдаются почти все.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/da4/995/11d/da499511de1fa96cd71c605ed1c80fea.jpg\" alt=\"3 простых шага от восторга до фиаско  \" title=\"3 простых шага от восторга до фиаско  \" width=\"1000\" height=\"314\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/da4/995/11d/da499511de1fa96cd71c605ed1c80fea.jpg\" data-blurred=\"true\"><div><figcaption>3 простых шага от восторга до фиаско  </figcaption></figure><p>Но не все. Возникает вопрос, как превратить припадки активности в продуктивную и регулярную деятельность? Как из воодушевления создать устойчивую привычку? Построить «гардеробную».</p><h3>Строим «гардеробную»</h3><p>Когда-то давно у меня было маркетинговое агентство и одним из первых клиентов был дизайнер интерьеров. Мы пили чай, говорили о том о сем, и он сказал:</p><p>— Знаешь, во многих семьях есть такая проблема. Муж приходит с работы, бросает носки в гостинной, жена его пилит годами, но ничего не меняется. Знаешь, как выглядит дизайнерское решение этой проблемы?</p><p>— Как? — я был заинтригован.</p><p>— Я предлагаю своим клиентам построить гардеробную. Теперь муж заходит домой, присаживается на диванчик в гардеробной, разувается, снимает носки и бросает их в корзину с грязным бельем, которая стоит тут же. Он не понесет их в гостинную, поскольку ему придется потратить больше сил.</p><p>Так вот для привычек тоже очень полезно построить своеобразную «гардеробную», которая поможет сэкономить усилия на внедрении привычки.</p><h3>А смысл?</h3><p>Первое, без чего внедрение новой привычки обречено на провал — это отсутствие смысла. Если я не понимаю, зачем мне тратить силы на преодоление трудностей, то, естественно, я саботирую начинание.</p><p>Например, когда я затеял четвертый по счету бизнес, у меня была очень понятная мотивация. Мне было чуть меньше 40 лет. Предыдущий бизнес приносил небольшую стабильную прибыль, но я не мог сделать так, чтобы он приносил больше. В результате для меня стало крайне важно разобраться, что надо делать, чтобы бизнес рос. Иначе меня ждали бы очень скверные перспективы и нищенская старость.</p><p>Проверить, обладает ли привычка, которую вы хотите внедрить, для вас смыслом просто. Если встает выбор позаниматься новым делом или посмотреть сериал (или что вы любите делать), и вы регулярно выбираете сериал, то нет, не обладает. Надо либо искать новый смысл, либо смириться с тем, что новая привычка не приживется.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/991/a7a/350/991a7a350352d1bc731787ae2cfa74a1.jpg\" width=\"1000\" height=\"565\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/991/a7a/350/991a7a350352d1bc731787ae2cfa74a1.jpg\" data-blurred=\"true\"></figure><h3>Освобождаем место</h3><p>Может казаться, что у нас много свободного времени, но это не так. Каждая минута нашей жизни чем-то занята. Любые дела — полежать на диване, посмотреть сериал, поиграть в игры удовлетворяют какую-то нашу потребность. Когда мы пытаемся запихнуть на их место новую привычку, то сначала все идет хорошо, но потом организм очухивается и говорит: «Так, стопэ. У меня тут потребности раньше удовлетворялись, а теперь нет. Вертай все назад».</p><p>Именно поэтому важно подумать, какие дела мы перестанем делать, когда начнем делать новые.</p><p>Лайфхак, который я использую, заменять новыми привычками дела, которые меня бесят или вызывают тоску. Например, вместо того, чтобы убираться— нанять клининг, а самому написать новую статью. Или делегировать часть рутинных процессов в бизнесе, а за это время разобраться как работает новый рекламный канал. Заменяя скучные дела интересными, я существенно увеличиваю шансы, что они закрепятся в моем расписании.</p><h3>Понемногу</h3><p>Этот пункт я использую, только если новая привычка вызывает сопротивление. Скажем, надо найти блогеров для рекламы, а мне не хочется. Тогда я начну с простого — выделю на эту задачу 20 минут в день. Когда немного освоюсь — 30 минут, затем 40. Это поможет привыкнуть к новой задаче и разобраться в ней.</p><p>Этот трюк, кстати, отлично помогает, если ваше ключевое опасение, что у вас нет времени на новую привычку. Найти 20 минут в день вполне реально, а затем это время можно постепенно расширить и довести, скажем, до часа.</p><h3>Привычка к привычке</h3><p>Еще один способ, который я практиковал, но так и не понял, насколько он хорошо работает сам по себе — это цеплять привычку к привычке.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/ec9/424/b03/ec9424b038e8a2be63873f7121937f72.jpg\" alt=\"И привычка будет следовать за привычкой  \" title=\"И привычка будет следовать за привычкой  \" width=\"1000\" height=\"416\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ec9/424/b03/ec9424b038e8a2be63873f7121937f72.jpg\" data-blurred=\"true\"><div><figcaption>И привычка будет следовать за привычкой  </figcaption></figure><p>Скажем, у вас выработана четкая последовательность действий. Вы завтракаете, чистите зубы, просматриваете рабочую почту, а с понедельника решаете писать посты в блог. Так вот если встроить написание постов сразу после разгребания почты, то должно получится проще. У меня это всегда работало в комплексе с другими способами, эффективно ли это само по себе — не знаю.</p><h3>Упростить начало</h3><p>А вот этот трюк совершенно точно облегчил мне несколько начинаний. Бывают дела, которые сложно начать. Скажем, нужно идти в спортзал, но если сумка одеждой не собрана, то возникает дополнительное препятствие, которое может загубить все дело.</p><p>У меня таким препятствием оказалась необходимость придумывать темы для статей и постов. Не раз было так, что я садился писать, а мыслей в голове не было. В результате я тратил много времени, прежде чем нащупать то, о чем интересно рассказать в моменте.</p><p>Решил я эту задачу просто. Разбил ее на два этапа:</p><ol><li><p>придумываю тему;</p></li><li><p>пишу пост (статью).</p></li></ol><p>Темы я придумываю в свободное время, пока гуляю по берегу моря, и просто записываю голосовушки. В результате на это не приходится специально тратить время, а из множества готовых тем всегда найдется та, про которую хочется сейчас рассказать (эта статья не исключение).</p><h3>Напомнить</h3><p>Очевидный способ, но его важно упомянуть. Если я не запишу, что мне надо сделать дело, то шансы, что я его не сделаю, вырастают кратно. Кто-то любит вести списки в Notion и прочих digital-планировщиках, а мне нравится старая добрая бумага, поскольку я обожаю вычеркивать дела, которые сделал.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/d6d/bf3/05b/d6dbf305bf7bbd0aac6351ac90562406.jpg\" width=\"1000\" height=\"656\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d6d/bf3/05b/d6dbf305bf7bbd0aac6351ac90562406.jpg\" data-blurred=\"true\"></figure><h3>Кнут</h3><p>Мы любим воображать, что устроены сложно, но в каком-то смысле мы устроены просто. Например, все наши укоренившиеся привычки укоренились только потому, что мы получаем вознаграждение, пока им следуем, и дискомфорт, когда от них отказываемся.</p><p>Например, после того, как почистим зубы, мы испытываем приятное чувство свежести во рту, а если этого не сделаем, то будем время от времени с неудовольствием трогать зубы языком и ощущать на них лишний «налет» или кусочки пищи.</p><p>Но это когда привычка укоренилась. А вот когда она только формируется, систему из кнута и пряника можно создавать искусственно.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/244/ad9/a7a/244ad9a7a9c129283baf10d1c98a9d9a.jpg\" alt=\"Важно найти правильный кнут  \" title=\"Важно найти правильный кнут  \" width=\"1000\" height=\"480\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/244/ad9/a7a/244ad9a7a9c129283baf10d1c98a9d9a.jpg\" data-blurred=\"true\"><div><figcaption>Важно найти правильный кнут  </figcaption></figure><p>Например, я 10 лет хотел, но не мог написать художественный роман. А потом попросил свою знакомую об услуге. Мы договорились, что раз в 2 дня я должен отправлять ей новую страницу романа. Она могла ее не читать, но должна была напоминать мне, что я не сдержал слово. Благодаря этому приему я написал черновую редакцию, а позже <a href=\"https://www.litres.ru/book/maksim-shishov-10377017/literaturnyy-roman-21993626/\" rel=\"noopener noreferrer nofollow\">закончил роман</a>. Трюк с кнутом сработал.</p><p>Вы можете подобрать персональный кнут для себя — это может быть публичное обещание, пари, денежный штраф, лишение себя десерта (самый жестокий способ), словом, что-то, что не даст вам слиться, когда будет трудно.</p><h3>Пряник</h3><p>Но с одним кнутом дело идет грустно. Нужен еще и пряник.</p><p>Люди не достигают многих целей ровно по той причине, что не видят положительной мотивации их достигать. Очень показательный пример здесь с попыткой заработать больше денег. Почти все хотят зарабатывать больше. И многие пытаются. И, допустим, вам это удалось, и ваш доход вырос вдвое.</p><p>Если вы взрослый человек, обремененный детьми и ипотекой, то, вероятно, ваш дополнительный доход тут же разлетится на то, чтобы быстрее погасить ипотеку, сделать ремонт или зубы, купить детям игрушки (образование, компьютер). В результате ваша эмоциональная часть почувствует себя обокраденной: «Я старалась, ишачила, зарабатывала, а куда все делось? Досрочное погашение ипотеки и ремонт как-то не возбуждают. Где радость-то от дополнительных денег? Ради чего все это было?»</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/467/e36/11d/467e3611d83cbf948fd0e4b36bd00e7f.jpg\" width=\"1000\" height=\"692\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/467/e36/11d/467e3611d83cbf948fd0e4b36bd00e7f.jpg\" data-blurred=\"true\"></figure><p>В результате со стороны эмоциональной части начинается саботаж, и вот ваш доход скатывается на прежний уровень, поскольку нет смысла впахивать и не радовать себя (по мнению, эмоциональной части, рациональная часть с ней не согласится).</p><p>Поэтому так важно вознаграждать себя не только за результаты, но и за усилия в нужном направлении. Написал пост? Молодец, возьми на полке пирожок. Пробежал 5 километров? Умница, посмотри сериал. Если же речь идет о заработке дополнительных денег, то очень важно часть их потратить на какие-то новые радости будь то поход в кафе, покупка нового айфона или бугатти (у каждого свое представление о дополнительных деньгах).</p><p>А какие способы помогают вам не бросать новые начинания? Поделитесь, пожалуйста, в комментариях. Ну и если статья показалась интересной, <a href=\"https://t.me/voprk\" rel=\"noopener noreferrer nofollow\">подписывайтесь на мой телеграм-канал</a>, где пишу про разные ментальные ловушки и лайфхаки, которые помогают с ними справиться.</p>', 3, '2023-06-13 00:46:23', 819230, 82, '/ru/articles/739702/', 'Судя по предыдущей части, оказание первой помощи оказалась трепетной темой. Поэтому я решилась написать вторую часть, посвященную практике. Можете сохранить эту статью себе в заметки, в экстренной ситуации может вам пригодится. Хорошо бы, чтобы не пригодилось, но если что — держите.Итак, необходимо придерживаться четырёх шагов при оказании первой помощи.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(240, 'Как айтишник гигантские арбузы в средней полосе выращивал. Часть 2', '<p>Как и обещали, публикуем вторую часть инструкции нашего коллеги, Игоря Иванова, по выращиванию гигантских арбузов в условиях средней полосы. В этой части переходим к практике - прививаем арбуз, высаживаем в открытый грунт и собираем урожай.</p><p>Осторожно, много фото!</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/ec9/3ae/3af/ec93ae3afecd43efb8f98da311a3a76e.png\" width=\"1600\" height=\"900\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ec9/3ae/3af/ec93ae3afecd43efb8f98da311a3a76e.png\"></figure><blockquote><p>Ссылка на <a href=\"https://habr.com/ru/companies/maxilect/articles/737838/\">первую часть</a> (кто не читал) </p></blockquote><h3>Инструменты для прививки</h3><p>Первое что нам потребуется - это острый и удобный инструмент. Последние 2-3 года я использую дешевые скальпели со сменными лезвиями с Алиэкспресс, также вполне сгодятся лезвия для строительных резаков в виде трапеции:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b54/166/753/b54166753bea182755c6b8b720d9b068.png\" width=\"1390\" height=\"629\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b54/166/753/b54166753bea182755c6b8b720d9b068.png\"></figure><p>Еще нам потребуются клипсы для прививки, которые можно заменить стрейч‑пленкой или фум‑лентой. Последний вариант я крайне не рекомендую. Во время тотального локдауна я не смог выехать в город за клипсами и использовал два вида фум‑ленты, которые были под рукой на даче. В итоге один из них оказался с мерзкой пропиткой, которая благополучно убила место прививки, т. е. арбузы вместе с подвоем. И стрейч‑пленка, и фум‑лента обладают малой растяжимостью и использовать надо очень кратковременно, т.к. стволы растений постоянно утолщаются по мере роста и место прививки начинает пережиматься.</p><p>Вот два самых популярных вида клипс для прививок с Алиэкспресс:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/252/747/2f5/2527472f5f1bf26c49e9303330944173.png\" width=\"1299\" height=\"799\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/252/747/2f5/2527472f5f1bf26c49e9303330944173.png\"></figure><p>Первые — жесткие пластиковые, бывают с разной формой полости внутри клипс (круглые, овальные). Их минусы — существенный вес, который в некоторых случаях может потребовать поддержки, а также довольно жесткая пружина, которая ограничивает рост ствола растения. Некоторые бахчеводы использую только их, попробуйте, возможно они окажутся удобнее и для вас.</p><p>Второй вариант, который я использую, — мягкие клипсы из силиконоподобного пластика. Обладают малым весом, сделаны из очень мягкого пластика и не препятствуют росту ствола. Сила прижима регулируется (но только однократно) пережиманием пружинки клипсы плоскогубцами. Удалять такие клипсы можно при высадке в грунт, т.к. они практически не мешают растению развиваться.</p><h3>Методы прививки и что делать с арбузами после нее</h3><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/db5/999/86f/db599986fae628936010dff5b3879907.png\" width=\"748\" height=\"1009\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/db5/999/86f/db599986fae628936010dff5b3879907.png\"></figure><p>Для иллюстрации способов прививки арбузов воспользуемся картинками из <a href=\"https://www.syngenta.ru/crops/crops-vegetables/20230410-watermelon-grafting-technology\"><u>статьи</u></a> компании Syngenta с небольшими корректировками алгоритма.</p><p><strong>Первый способ</strong>, который использую я. По мнению большинства бахчеводов он является самым беспроблемным, но наиболее трудозатратным (в момент прививки, но не после нее):</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/346/e1b/914/346e1b914ce3c801034448ba6e0db78f.png\" width=\"1100\" height=\"411\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/346/e1b/914/346e1b914ce3c801034448ba6e0db78f.png\"></figure><p>Называется он «Сближение» или просто «прививка язычком». Выполняется следующим образом:</p><ol><li><p>Извлекаем арбуз и подвой из земли, стараясь при этом максимально очистить корни от земли, т.к. ее вес может порвать надрезанный ствол. </p></li><li><p>На подвое и арбузе зачищаем под углом 90 градусов ствол в месте будущей прививки (таким образом удаляется внешний покров со ствола — это увеличивает площадь контакта и улучшает дальнейшее сращивание). </p></li><li><p>На подвое делаем надрез длиной 5–10мм под углом вниз к корням, на арбузе делаем аналогичный надрез по направлению вверх к семядольным листьям. </p></li><li><p>Совмещаем подвой и арбуз, закрепляем место прививки клипсой или лентой. У подвоя удаляем все настоящие листья или их зачатки, сажаем получившегося монстрика в индивидуальную тару (место прививки должно быть на пару сантиметров выше земли). </p></li><li><p>Убираем на сутки в тень. После этого можно перемещать рассаду на солнечный подоконник или стеллажи с искусственной подсветкой. </p></li><li><p>Через 3 дня после прививки аккуратно пережимаем стебель арбуза пинцетом, чтобы стимулировать арбуз к переходу на питание от корней подвоя.</p></li><li><p>Еще через 3–4 дня перерезаем стебель арбуза.</p></li><li><p>Высаживаем в грунт. Все это время следим за появлением настоящих листьев у подвоя и удаляем их. Через некоторое время он смирится с «нахлебником» на своем стволе и перестанет пытаться отрастить собственные, а еще чуть позже сами отомрут и его семядольные листья.</p></li></ol><p>Все последующие методы подразумевают удаление корня у арбуза в момент прививки и требуют обязательного контроля влажности с периодическими проветриваниями по часам до завершения срастания арбуза и подвоя. Для этого необходимо либо отдельное помещение с автоматикой, либо подобный мини‑парник:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/241/759/8eb/2417598eb9d8589b87fc2e187821a64f.png\" width=\"580\" height=\"819\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/241/759/8eb/2417598eb9d8589b87fc2e187821a64f.png\"></figure><p>Несомненный плюс всех этих способов — это отсутствие возни с пересадкой. Арбузы можно выращивать кучей в одной емкости, а подвой в индивидуальных емкостях, из которых их потом и высаживают на постоянное место.</p><p><strong>Второй способ</strong> прививки — это так называемая «прививка в укол». В этом случае у подвоя удаляется точка роста, делается прокол на ее месте, арбуз отрезается под углом и вставляется в полученное отверстие:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a46/d36/fb9/a46d36fb975433738e216b9556a85625.png\" width=\"706\" height=\"305\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a46/d36/fb9/a46d36fb975433738e216b9556a85625.png\"></figure><p>Основной минус данного способа — если после прививки выдерживать слишком высокую влажность и пренебрегать проветриванием для стимулирования срастания, арбуз может вырастить новый корень в полости, которая есть в стволе подвоя, и все ваши старания пойдут насмарку. Узнаете вы об этом через пару недель после высадки, когда арбуз продолжит зеленеть, а стебель подвоя усохнет.</p><p><strong>Третий способ</strong> — «сплайс‑трансплантат». Очень похож на предыдущий, но лишен его основного недостатка в виде большой вероятности прорастания корней арбуза сквозь подвой. В этом случае вместе с точкой роста отсекается одна из семядолей подвоя и на ее место закрепляется арбуз:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f50/5ca/8a3/f505ca8a38acd05b3e15a63a4b1ea40d.png\" width=\"705\" height=\"292\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f50/5ca/8a3/f505ca8a38acd05b3e15a63a4b1ea40d.png\"></figure><p><strong>Четвертый способ</strong> по сути является некоторой комбинацией первого и третьего - прививка в боковой разрез:</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/356/ba0/bf1/356ba0bf1d9296dcecd5c0ceac4e24dc.png\" width=\"300\" height=\"301\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/356/ba0/bf1/356ba0bf1d9296dcecd5c0ceac4e24dc.png\"></figure><p>По моему опыту это самый легкий способ в плане скорости сращения (после прививки «язычком»). </p><p>Резюмируя все вышесказанное, я бы рекомендовал для начинающих прививку «язычком». Попробуйте и остальные способы, возможно они вам понравятся больше. Выбрать подходящий способ прививки можно, не дожидаясь нового сезона. Холодными зимними вечерами можно купить семена какого‑нибудь дешевого арбуза (Шуга бейби, Огонек), семена лагенарии или тыквы и прививать, прививать, набивая руку и собирая все шишки. Именно так я сделал в первый год, когда сам впервые узнал о прививке арбузов.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b72/95f/97c/b7295f97cbfae679bed380f40d8637e9.png\" width=\"757\" height=\"1009\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b72/95f/97c/b7295f97cbfae679bed380f40d8637e9.png\"></figure><h3>Освещение и уход</h3><p>Если у вас имеется несколько южных окон или застекленных балконов/лоджий, то рассаду до высадки вполне можно выращивать на них, не заморачиваясь с дополнительным освещением, т.к. к апрелю‑маю продолжительность светового дня и интенсивность света вполне достаточна, чтобы рассада прожила пару недель до высадки. В моем случае такой вариант не подходит, т.к. рассады у меня существенно больше, чем позволяют разместить окна.</p><p>За последние несколько лет по мере изменения цен на светильники в магазинах и на Алиэкспрессе я использовал разные варианты. Первый вариант, который верой и правдой отслужил несколько лет, — металлические стеллажи с наклеенными на них светодиодными лентами. Основные недостатки такого варианта: необходимость где‑то размещать блоки питания лент, потеря около 20% мощности на токоограничивающих резисторах лент и неэффективное размещение — между поддонами и полками для охлаждения лент приходится оставлять расстояние. </p><p>После 3–4 сезонов светимость лент упала и было решено заменить их на матрицы 30 Вт с активным охлаждением в виде старых кулеров от CPU, благо айтишнику они достаются бесплатно со старой техники. Часть матриц покупалась с фито‑спектром (также известны как «ловите наркомана!»), но как показала практика, кроме вырвиглазного света никаких преимуществ они не дают по сравнению с обычными матрицами.</p><p>После переезда в новую квартиру в связи с отсутствием лоджий было решено собрать более эстетичный и легкоразборный вариант, благо сейчас светодиодные светильники стоят небольших денег и в местных магазинах. В качестве основы конструкции был выбран подобный пластиковый быстроразборный стеллаж:<br></p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/967/45d/0cd/96745d0cdc18814444657898cee4f6b2.png\" width=\"1126\" height=\"1600\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/967/45d/0cd/96745d0cdc18814444657898cee4f6b2.png\"></figure><p>К ребрам жесткости каждой из его полок стяжками закреплено по три линейных светильника подходящей длины:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/513/d21/8f5/513d218f52e530b4528bac1711e8f5a8.png\" width=\"1600\" height=\"1199\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/513/d21/8f5/513d218f52e530b4528bac1711e8f5a8.png\"></figure><p>Таймер использую самый дешевый электронный, время работы освещения с 8 до 22 часов.<strong><br></strong></p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/c0f/be0/394/c0fbe0394ab54456a5124a2e18baec6a.png\" width=\"1600\" height=\"1600\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/c0f/be0/394/c0fbe0394ab54456a5124a2e18baec6a.png\"></figure><p>Остальной уход заключается в регулярном поливе и корневой подкормке комплексными удобрениями, если рассада задерживается в квартире больше двух недель из-за неподходящих для высадки погодных условий.</p><h3>Высадка рассады в открытый грунт, полив и агротехника</h3><p>Перед высадкой рассады необходимо подготовить участок земли, где будут выращиваться наши арбузы. </p><p>Сразу отмечу, что тут речь пойдет только о высадке в открытый грунт. Выращивание арбузов в теплице — отдельная наука. Там надо правильно формировать куст, опылять, подвязывать плоды. У меня в этом опыта мало. Я только несколько раз высаживал по паре кустов в теплицу, чтобы получить ранний урожай в июле на день рождения супруги и сына.</p><p>Основное требование к делянке — ширина данного участка минимум 3 метра, т.к. привитые арбузы могут занимать очень существенную площадь и к середине лета она превратится в сплошной зеленый ковер. Землю перекапываем ранней весной, как только она достаточно прогреется и просохнет. При перекопке желательно внести комплексные минеральные удобрения (например, Bona Forte, Fertica), строго соблюдая нормы от производителя, т.к. арбузы, как впрочем и остальные бахчевые, еще те хомяки — все лишнее они тащат в свои закрома. Поэтому лучше немного не доложить удобрений, чем внести больше и потом наслаждаться повышенным уровнем нитратов в урожае. Для фанатов органических удобрений можно внести навоз и золу. Я только хотел бы отметить, что растения не умеют питаться органикой, а используют простые органические соли, которые получаются в результате разложения органических остатков бактериями и грибками. В случае внесения больших объемов навоза вы точно также получите напичканный нитратами плод. Минеральные же удобрения позволяют очень четко контролировать объем привнесенных в почву нитратов.</p><p>Про использование навоза еще один интересный момент — некоторые садоводы выращивают арбузы или тыквы на куче преющего навоза. Это позволяет повысить температуру корневой системы и обеспечивает растения питанием с огромным избытком нитратов, которые успешно накопятся в плодах. Есть такие арбузы или тыквы я бы не рекомендовал.</p><p>Сразу после перекопки накрываем нашу будущую грядку черной агротканью плотностью 60–80 г/м2 для ускорения прогрева почвы. Стандартная ширина агроткани как раз составляет 3.2м, которые подойдут для большинства сортов арбузов. Перед укладкой агроткани желательно сразу разместить на земле пару лент для капельного полива, если вы не планируете бегать с лейкой, а хотите автоматизировать процесс. </p><p>На тему полива можно писать отдельную большую статью, поэтому давайте кратко остановимся на основных моментах.</p><p>Таймеры полива можно условно разделить на два типа: с мембранным или с шаровым клапаном. Первые подходят только для водопровода с высоким давлением. Вторые более дорогие, но и более универсальные — их можно использовать как для систем с подачей воды самотеком, так и для систем с высоким давлением. Таймеры с шаровым клапаном, которые продаются на Алиэкспресс, имеют один конструктивный недостаток, из‑за которого после 1–2 сезонов клапан начинает потихоньку пропускать воду и требуют покупки ремкомплекта для устранения течи. Есть также общий для многих моделей недостаток — провода припаяны к нижней части батарейного отсека. В случае попадания даже небольшого количества влаги внутрь таймера, эти самые провода из‑за электролиза очень быстро подгнивают. </p><p>В прошлом году появились новые модели, в которых этот недостаток должен быть устранен за счет изменения конструкции клапана и батарейного отсека:</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/97f/083/cd5/97f083cd56893f7a81aa200e34cfa958.png\" width=\"836\" height=\"797\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/97f/083/cd5/97f083cd56893f7a81aa200e34cfa958.png\"></figure><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f4d/e21/5be/f4de215be8851ddfeaa669b7861ffe74.png\" width=\"509\" height=\"680\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f4d/e21/5be/f4de215be8851ddfeaa669b7861ffe74.png\"></figure><p>Ленты для капельного полива рекомендую выбирать на свой вкус и кошелек. Я использую ленты с встроенными капельницами, а кто‑то предпочитает щелевые ленты. </p><p>Итак, когда мы завершили подготовку участка для посадки арбузов, ждем когда дневная температура поднимется до +18–20 С и можем приступать к посадке. Здесь все просто — вырезаем в агроткани отверстия диаметром сантиметров 15–20 (стараемся не задеть при этом ленты), копаем лунки, высаживаем нашу рассаду и снимаем прививочные клипсы, если вы не сделали этого ранее.</p><p>Далее устанавливаем дуги и накрываем наши арбузы белой агротканью плотностью 60 г/м2 в один или два слоя в зависимости от прогноза погоды, но минимум на неделю. Данное укрытие защитит арбузы не только от перепадов температуры, но и от ветра, который может сломать арбуз в месте прививки, а также от солнца к которому наша рассада еще не привыкла после искусственного освещения. За эту неделю арбузы закрепятся усиками на агроткани и привыкнут к солнечному свету. Убирать агроткань желательно, когда ночные температуры будут выше +12С.</p><p>Вот так выглядит арбуз через 10 дней после посадки и удаления укрывной агроткани (высаживался саженец с 5–6 настоящими листьями):</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/28c/b6e/df3/28cb6edf3bc46b7115144a0c82432774.png\" width=\"1600\" height=\"985\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/28c/b6e/df3/28cb6edf3bc46b7115144a0c82432774.png\"></figure><p>Дальнейший уход заключается в регулярном поливе, укладке/развороте плетей в нужном направлении, чтобы они не заполонили весь участок, а также периодической подкормке нашей плантации. </p><p>С подкормками следует учесть, какой эффект дает каждый элемент из стандартной формулы NPK:</p><ul><li><p>азот (N) стимулирует рост зеленой массы, которая будет работать на рост наших будущих плодов, </p></li><li><p>фосфор (P) стимулирует развитие корневой системы и генеративных органов растения, </p></li><li><p>калий (K) повышает устойчивость растения к заболеваниям, улучшает вкус плодов и увеличивает накопление сахара в плодах. </p></li></ul><p>Если мы хотим получить вкусные и сладкие арбузы, то калий наш лучший друг. Подкормки мы можем вносить как под корень, так и по листу при помощи распылителя. Я использую второй вариант. На мой взгляд, лучшим комплексным удобрением в данном случае является Плантафол/Плантафид (это одно и то же, торговая марка Плантафид используется для маркировки товара, произведенного в России). В сети я встречал информацию, что данные удобрения одобрены для применения в органическом земледелии и содержат минимальное количество нитратов. На начальном этапе развития арбузов я использую NPK 20:20:20. Когда плети достигнут 1.5–2 метра в длину, можно переходить на использование NPK 10:54:10 (розоводы называют этот вариант «взрыв цвета»), чтобы стимулировать цветение. После завязывания плодов переходим к обработке формулой NPK 5:15:45. Более дешевым заменителем на последних двух стадиях обработки может быть монофосфат калия.</p><h3>Собираем урожай</h3><p>Впереди у нас остался самый интересный момент, а именно сбор урожая. Любой начинающий бахчевод сталкивается с вопросом «а когда же они уже созреют?», особенно с учетом того, что последние 2–3 недели арбузы не увеличиваются в размерах. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/d9b/b88/e7d/d9bb88e7d1f2d4a211ae8a631ea6292a.png\" width=\"568\" height=\"1009\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d9b/b88/e7d/d9bb88e7d1f2d4a211ae8a631ea6292a.png\"></figure><p>Арбузы отличаются от той же дыни тем, что дозревать могут только на кусту, после сбора они уже не станут спелее и слаще. Сразу могу сказать, что большинство советов из традиционных летних статей «как определить спелость арбуза?» с новостных сайтов можно пропускать мимо ушей, т.к. написана там откровенная чушь. Например, деление арбузов на «мальчик/девочка», когда все плоды арбуза — это девочки, а мальчики — это мелкие желтые цветы, которые мы на прилавках не видим. Из той же серии определение спелости по сухости хвостика или размеру желтого пятна на арбузе — хвостик засыхает от долгого хранения/транспортировки (арбуз не отсыхает и не отваливается от плети как дыня), а размер желтого пятна зависит только от того как арбуз лежал на земле.</p><p>Вот основные признаки спелости арбуза (часть из них доступна только на бахче):</p><ul><li><p>Большинство арбузов созревает в срок 40–50 дней, считая от завязи размером в пятирублевую монету, — метод так себе при выращивании в открытом грунте, это тепличники могут себе позволить вешать бирки с датой на каждый арбуз.</p></li><li><p>При созревании восковой матовый налет с арбуза практически исчезает и он становится блестящим, цвет полос меняется с бело‑зеленого до желтоватого.</p></li><li><p>Всеми любимый метод «похлопать арбуз». Звук вопреки всем рекомендациям должен быть не звонкий (самые зеленые арбузы звенят очень громко), а гулкий, как если бы вы ударили в колокол и звук несколько раз отразился от его стенок. Словами описать это трудно, понимание правильного звука приходит с опытом.</p></li><li><p>Сдавить арбуз и послушать как он хрустит. Во‑первых, после такой процедуры арбуз уже не будет долго храниться, т.к. будет нарушена его внутренняя структура. Во‑вторых, сорта, которые мы выращиваем для себя, как правило не толстокорые. Если вы сдавите ту же Шампань F1, но в руках у вас окажется две половинки арбуза и не факт что спелого.</p></li><li><p>Сухие «усик и лопаточка» работает в 90 процентах случаев при выращивании в открытом грунте (но очень редко в теплице). Давайте посмотрим на фото кто это такие:</p></li></ul><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/725/02a/75f/72502a75f011ea4273fbadd25ff5a800.png\" width=\"797\" height=\"517\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/725/02a/75f/72502a75f011ea4273fbadd25ff5a800.png\"></figure><p>В том междоузлии, где арбуз крепится к плети, есть основной большой лист, хвостик самого арбуза, а также ус, которым плеть старается закрепиться к окружающим предметам и маленький листик, называемый лопаточкой. При созревании арбуза первой засыхает лопаточка и дальше начинает потихоньку сохнуть усик. Для большинства сортов арбузов справедливо утверждение «когда усик и лопаточка засохли, арбуз можно снимать». </p><p>По своему опыту могу сказать, что первые 2 сезона у вас будет несколько сорванных зеленых арбузов, дальше с опытом их количество будет сведено к нулю. Да и объем урожая со временем научитесь прогнозировать точнее. Этот параметр напрямую зависит от размеров делянки. В первый год я высадил арбузы на грядку размером 3×15 м, собрал около 230 кг арбузов. На второй год решил добавить еще делянку примерно 6×6 м, но не учел, что на второй год прививки получились удачнее, да и в целом агротехнику довел до ума. Собрал в итого 700 с лишним килограмм и не знал потом, куда девать все эти арбузы. Накормил, всю родню, коллег и друзей. К концу сезона я был как дачник с кабачками — все говорили: «хорош, мы уже наелись арбузами до отвала».</p><p>Напоследок хочу пожелать всем отличных урожаев и готов ответить на все возникшие вопросы в комментариях. </p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/ea9/330/900/ea9330900d6e9e5e00bc0aefc838aae0.png\" width=\"1345\" height=\"1009\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ea9/330/900/ea9330900d6e9e5e00bc0aefc838aae0.png\"></figure><p>Автор: Игорь Иванов, Максилект.</p><p><strong>P.S.</strong> По итогам публикации первой части статьи и полученной обратной связи Игорь согласился рассказать о своем опыте выращивания остальных экзотических для средней полосы растений. Ждите новых статей!</p><p><strong>P.P.S.</strong> Мы публикуем наши статьи на нескольких площадках Рунета. Подписывайтесь на нашу страницу в<a href=\"https://vk.com/maxilect\"> <u>VK</u></a> или на<a href=\"https://t.me/maxilect\"> <u>Telegram-канал</u></a>, чтобы узнавать обо всех публикациях и других новостях компании Maxilect.</p><p></p>', 1, '2023-06-13 00:46:24', 873860, 111, '/ru/companies/maxilect/articles/739244/', 'Полтора года в нашей компании длился эксперимент, в котором участвовали 150 сотрудников. Он показал, что при разнице уровней оклада в 10-14% по сравнению с рынком разумеется не в нашу сторону специалисты от среднего до высокого уровня готовы продолжать работу при условии наличия программы заботы об их здоровье. Иными словами, если вы не можете или не хотите платить своим сотрудникам столько, сколько платит рынок, и это \"нежелание\" не превышает 14%, то вы можете выдавать витамин D, что сокращает выгорание, и как следствие — текучесть кадров.'),
(241, 'Оказание первой помощи. Практическая часть', '<p>Судя по <a href=\"https://habr.com/ru/companies/sportmaster_lab/articles/719944/\"><u>предыдущей части</u></a>, оказание первой помощи оказалась трепетной темой. Поэтому я решилась написать вторую часть, посвященную практике. Можете сохранить эту статью себе в заметки, в экстренной ситуации может вам пригодится. Хорошо бы, чтобы не пригодилось, но если что — держите.</p><p>Итак, необходимо придерживаться четырёх шагов при оказании первой помощи.</p><h3>Шаг первый: осмотреть место происшествия</h3><p>Представьте — вы гуляете с ребенком или просто проходите мимо детской площадки, и на ваших глазах ребенок падает с качелей. На секунду задумайтесь, какая будет ваша <strong>первая </strong>реакция? Скорее всего, вы, не задумываясь, помчите поднимать дитё. В этот момент вы можете сами получить этими же качелями по голове и помощь уже нужна будет вам =) И таких бытовых ситуаций может быть масса, поэтому не пренебрегайте этим простым правилом.</p><p><strong>Очень важно — убедиться, ничего ли не угрожает вашей собственной безопасности.</strong> На то, чтобы осмотреться, у вас уйдет секунд 5–10, собственная безопасность важнее.</p><p>В случае обнаружения опасности необходимо переместить пострадавшего в безопасное для вас обоих место. Например, если на человека упала сосулька с крыши и он отключился, то нужно переместить его подальше от крыши, чтобы соседняя сосулька не прилетела вам.</p><p>В случае, если вашей безопасности ничего не грозит и вы не можете определить нет ли у пострадавшего травм конечностей или позвонка – то старайтесь не перемещать. </p><h3>Шаг второй: осмотр пострадавшего</h3><p>Самые важные состояния, которые нужно проверять — это наличие сознания, наличие дыхания и отсутствие кровотечения. Ниже рассмотрим их подробнее.</p><p>Итак, вы выполнили первый пункт и убедились в своей безопасности, подходите к пострадавшему и в первую очередь определяете, есть ли у человека сознание и дыхание. Сознание можно определить дотронувшись до пострадавшего, можете тихонько потрясти его за плечи, как правило вы сразу сможете увидеть реакцию человека – он может дернуться или начать стонать. Если нет сознания, но есть дыхание, то достаточно человека просто повернуть в устойчивое боковое положение. Неважно, на какой бок укладывать, мы же спим как на правом, так и на левом боку. </p><p>Исключением являются <strong>беременные женщины на поздних сроках</strong>, их важно уложить именно на <strong>левый бок</strong>, так как у них работает по-другому кровообращение и если положить беременную на правый, то может нарушиться кровоснабжение плода.</p><p>Дыхание определяем только ухом, это самый эффективный способ, не стоит тратить время на определение дыхания с помощью каких-то предметов (зеркало, телефон и прочее), так как вам будут мешать внешние условия. Если вы на улице, то ветер, влажность и температура окружающей среды просто не позволят вам достоверно убедиться в наличии дыхания. Чтобы определить дыхание, необходимо положить человека на спину, запрокинуть голову назад, таким образом мы растягиваем корень языка и не дадим ему запасть, тем самым откроем дыхательные пути. Чтобы запрокинуть голову одну руку кладем на лоб, и двумя пальцами другой руки тянем за подбородок вверх. Не переусердствуйте =) </p><p>Прикладываем ухо к носу пострадавшего и считаем до 10, за это время человек в среднем делает 2–3  вдоха-выхода, этого достаточно, чтобы понять, есть ли дыхание, плюс наблюдайте за движением грудной клетки, это тоже послужит вам хорошей подсказкой.</p><p><br>Если дыхания нет — необходимо приступать к сердечно-легочной реанимации (СЛР). Важно запомнить, что дыхание и сердцебиение взаимосвязаны, одно не будет работать без другого! Это я к тому, что не нужно пытаться определить пульс. </p><p>Во время стрессовой ситуации вы сами будете на таком адреналине, что вы пульс сможете найти даже у стула, потому что вы найдете свой собственный пульс. Не тратьте, пожалуйста, на это время, ведь у вас есть приблизительно 5 минут, прежде чем начнет гибнуть мозг от отсутствия поставки кислорода. </p><p><strong>Важный момент при осмотре пострадавшего — проверить наличие кровотечений. </strong>Если человек без сознания и без дыхания, но если есть кровотечение, то это первостепенная угроза жизни, которую необходимо ликвидировать в первую очередь. Так как если вы приступите к СЛР, то через рану вы ускорите процесс потери крови, и человек может погибнуть.</p><h3>Шаг третий: вызов скорой помощи</h3><p>Итак, вы определили текущее состояние пострадавшего, звоните в скорую и ставьте на громкую связь. Можете одновременно осуществлять СЛР и описывать текущую ситуацию по связи. Важно сообщить пол, приблизительный возраст, состояние и адрес. Если не знаете адрес, попросите проходящих сообщить его. На худой конец навигатор, Яндекс Карты и прочее. Когда я последний раз звонила 112, они смогли отследить мои координаты по звонку.  </p><p>Кстати, один момент, если человеку нужна <strong>только</strong> медицинская помощь, то сразу звоните <strong>103</strong>, так как 112 являются неким посредником между вами и спасательными службами. А если, например, произошла авария, то звоните 112, ибо именно они уже вызовут все необходимые службы спасения (МЧС, полиция/ДПС, скорая/реанимация и прочее). </p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/77e/e6d/1bc/77ee6d1bca89b7d3929c0ead39323585.png\" width=\"388\" height=\"320\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/77e/e6d/1bc/77ee6d1bca89b7d3929c0ead39323585.png\"></figure><h3>Шаг четвертый: оказание помощи</h3><p><strong>Остановка кровотечения</strong></p><p>Если вы увидели кровотечение, важно наложить <strong>давящую повязку</strong>. <br>Не используйте жгуты! Во-первых, жгут это ужасно больно, во-вторых, жгутом вы прерываете кровообращение во всей конечности, а не только в ране, этим можно причинить еще больший вред. Жгут нужен в одном случае – при потере конечности, когда действительно необходимо прекратить кровоснабжение.<br><br>Во всех остальных случаях делаем только давящую повязку. Сделать ее можно из подручных средств, из аксессуаров одежды, например. Если большая рана, то, например, свернули тугим рулетиком шапку, наложили поверх раны и шарфом зафиксировали. Не стоит беспокоиться о стерильности, потому что это бессмысленно, стерильная среда может быть только в кабинете хирурга =) <br><br>Даже если у вас с собой «стерильный бинт», то, как только вы его вскрыли — всё, стерильность закончилась. Вы внутрь человека ничего не помещаете, кровь течет наружу, поэтому риск заражения не так велик. Снова же, что важнее — остановить кровь и потом лечить человека, или просто дать человеку погибнуть от потери.</p><p>Если рана совсем небольшая, то можно просто ополоснуть её водой и зажать рукой, кровь свернется и образует корочку, которую все очень любили в детстве сдирать с коленок. Если вдруг в аптечке завалялся хлоргексидин, то можно рану обработать им. <strong>Не используйте перекись водорода! </strong>Она обжигает сосуды!</p><p>Самый тяжелый случай — это кровотечение на шее. Там крупные магистрали, которые снабжают мозг, поэтому кровотечение там как правило очень обильное. В этом случае будьте готовым быть «затычкой» для пострадавшего до прибытия скорой и, скорее всего, даже до прибытия в больницу. Ваша задача будет наложить какой-то валик из одежды/ткани и крепко прижимать одной рукой с этой стороны. Сами понимаете, шарфом тут не зафиксируешь. Если человек в сознании, то он сам может плотно держать валик, но необходимо быть рядом и контролировать его состояние.</p><p><strong>Сердечно-легочная реанимация</strong></p><p>Приступаем в случае отсутствия дыхания и сознания.<br><br>Проводить её следует с помощью защитной маски с обратным клапаном, для того, чтобы избежать заражения от возможной инфекции. Если таковой с собой нет, то можете не вдувать, запаса воздуха в легких хватит приблизительно на 15 минут для того, чтобы мозгу хватало кислорода. </p><p>Если человек был физически здоров до происшествия, то как правило этого времени хватает, чтобы сердце завелось. </p><ol><li><p>если средство защиты оказалось с собой, то регламент выполнения следующий:<br>уложить пострадавшего на твердую поверхность, так как если он будет лежать на чем-то мягком, на диване, например, то вы будете продавливать диван, а не грудную клетку человека.</p></li><li><p>оголить грудную клетку, так вы точно будете видеть место, куда давить, и не нанесете дополнительного урона ребрам, особенно, если пострадавшая — девушка в корсете или бюстгальтере с косточками и прочее.</p></li><li><p></p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/758/8ee/b48/7588eeb484ca289f86b4a247110844f4.png\" width=\"450\" height=\"412\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/758/8ee/b48/7588eeb484ca289f86b4a247110844f4.png\"></figure><ol start=\"4\"><li><p>определяем место надавливания, как на рисунке выше, далее вторую руку кладем сверху первой, не скрещивайте пальцы в замок, вам так будет больно, и надавить качественно не получится</p></li><li><p>делаем 30 надавливаний на грудину на глубину примерно 5–6 см и следом 2 вдувания в рот, не забудьте запрокинуть голову, иначе воздух не попадет в легкие, а попадет в живот, так как дыхательные пути перекроются языком, плюс не забываем закрыть нос.</p></li></ol></li></ol><p>Для ребенка регламент такой же, только надавливания выполняем одной рукой, для младенца — двумя пальцами, и при вдувании воздуха захватываем и рот, и нос, так как части тела совсем крошечные.</p><p>СЛР можете выполнять до приезда скорой помощи, или если вас кто-то может подменить, или пока совсем не закончатся силы. Пока вы делаете СЛР, вы живете за человека, так как поддерживаете жизнь мозга.</p><p>Прекращаете делать СЛР, если заметили движение грудной клетки, лицо человека начало розоветь или он начал двигаться, как правило, это видно сразу, и процесс восстановления человека происходит быстро.</p><h4>Частные случаи</h4><p><strong>Приступ эпилепсии (судороги)</strong></p><ul><li><p>Стараемся защитить пострадавшего от получения травм от окружающих предметов (мебель, ступеньки);</p></li><li><p>Защищайте голову пострадавшего, подложив под нее что-то мягкое;</p></li><li><p><strong>Ничего не засовываем человеку в рот</strong></p></li><li><p>Положите пострадавшего на бок после того, как закончится спазм и человек начнет приходить в себя</p></li></ul><p>Вызов скорой помощи не требуется, если человек пришел в себя в течение 5–10 минут.</p><p><strong>Сердечный приступ</strong></p><ul><li><p>Основным признаком, указывающим на сердечный приступ, является боль в груди. Она может быть давящей, сжимающей, ноющей, возникает тяжесть в груди. Может отдавать в плечо, нижнюю челюсть, руку или шею. При этом боль не колющая. То есть если человек говорит «Ой, что-то кольнуло» — то это не признак приступа.</p></li><li><p>Человеку становится трудно дышать, появляется одышка.</p></li><li><p> Появляется чувство страха и тревоги. </p></li></ul><p><em>Первая помощь: </em>необходимо прекратить любую физическую активность! Помогите человеку принять удобную позу, желательно полусидя, так легче дышать. Расстегните одежду. Если человек принимает лекарства, <strong>выписанные ему врачом</strong>, то помогите ему принять их. Вызывайте скорую помощь. В случае потери сознания и остановке дыхания приступайте к СЛР.</p><p><strong>Инсульт</strong></p><p>Важно пояснить, что инсульт — это нарушение кровоснабжения мозга, как правило, это может быть какая-то закупорка, которая попала в один из сосудов в мозге и, соответственно, в ту часть перестает попадать кровь, так и развивается инсульт. Помочь человеку можно в течение четырех часов с начала развития приступа.</p><p>Признаки инсульта:</p><ul><li><p>пострадавший не может улыбнуться, перекошено лицо</p></li><li><p>не может поднять сразу две руки, если одна не слушается – прямой признак инсульта</p></li><li><p>не может внятно что-то сказать, заплетается язык, не понимает, что происходит вокруг, часто путают это состояние с опьянением, к сожалению.</p></li></ul><p>Если заметили хотя бы один из признаков, то сразу вызывайте скорую.</p><p><em>Первая помощь: </em>уложите пострадавшего на бок парализованной частью вверх, освобождайте рот и нос от слюны и слизи. Приложите что-то холодное на лоб и голову. Следим за состоянием пострадавшего. В случае потери сознания и остановке дыхания, приступайте к СЛР.</p><p><strong>Человек тонет </strong></p><p>Наступило лето, а значит — скоро откроется купальный сезон. К сожалению, каждый год не удается избежать несчастных случаев, так как мало кто знает, как оказать помощь.</p><p>Запомните, в реальной жизни тонущий человек <strong>не кричит! </strong>Основными признаками тонущего является его вертикальное положение в воде, периодическое появление/исчезновение головы, «стеклянные» глаза полные страха. Обязательно смотрите за детьми, они могут утонуть даже там, где по колено, даже если они в нарукавниках или надувном круге! </p><p>Итак, вы заметили утопающего. Необходимо вытащить его из воды на берег, очистить рот и нос от воды, слюны и слизи, уложить на твердую поверхность и приступать к СЛР. Здесь есть нюанс, что так как первостепенной причиной смерти является именно остановка дыхания, то сначала нужно сделать 5 вдуваний, а потом уже как обычно 30 надавливаний на 2 вдоха. Тот же самый нюанс работает, когда человек подавился.</p><p>Не нужно человека трясти, переворачивать вверх ногами, стучать по спине и прочие действия — в легких воды нет! У трахеи есть защитный клапан (я не сильна в анатомии, поэтому не помню как он называется), который закрывается, как только инородное тело пытается попасть в дыхательные пути. </p><p>Поэтому, как только человек пытается вдохнуть под водой, то этот клапан срабатывает и не дает воде попасть в легкие. Поэтому существует выражение «утонуть и в чайной ложке можно», ибо происходит одно и то же — что человек поперхнулся, что пытался вдохнуть в воде.</p><p><strong>Человек подавился</strong></p><p>Это, пожалуй, самая частая бытовая ситуация, которая происходит абсолютно со всеми. И, к сожалению, она несет большую угрозу, так как обычно человек начинает стесняться, куда-то уходить и в итоге это приводит к трагедии. Пожалуйста, не стесняйтесь того, что вы подавились, наоборот — привлеките к себе внимание, попросите жестами помощи! </p><p>Если человек подавился и может кашлять, то ничего не делайте, легкие сделают все сами. Не нужно в этот момент стучать по спине, вы тем самым только протолкнете инородное тело глубже.</p><p>Если человек полностью подавился, то существует два способа человеку помочь.</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/363/82e/dc9/36382edc9e9492d66171e2eb35342802.jpeg\" width=\"270\" height=\"186\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/363/82e/dc9/36382edc9e9492d66171e2eb35342802.jpeg\" data-blurred=\"true\"></figure><p>Позиция первая (слева на картинке): вы обхватываете человека сзади под грудь и наклоняете немного корпус вперед, тем самым вы поддержите человека, чтобы он не упал. И сзади между лопаток наносите 1-2 довольно сильных и резких ударов основанием ладони, инородное тело вылетит как пробка.</p><p><br>Позиция вторая (справа на картинке): обхватываете человека двумя руками сзади. Положение рук определяете следующим образом. Нащупываете пупок и кладете одну руку, сжатую в кулак над пупком, вторую руку кладете сверху и осуществляете движение внутрь и вверх, тем самым вы приведете в движение диафрагму, которая сожмет легкие и создаст внутри давление, с помощью которого и будет вытолкнуто инородное тело.</p><p>С маленькими детьми тактика немного другая.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a27/d43/958/a27d439581304370f7c0dec14281dc28.png\" width=\"750\" height=\"422\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a27/d43/958/a27d439581304370f7c0dec14281dc28.png\"></figure><p>Кладете младенца на руку, оперевшись на бедро, голову обязательно фиксируйте пальцами, чтобы не нанести травм, и второй рукой так же осуществляем удар между лопатками, только силу контролируйте. </p><p>Если этот метод не помогает, то разворачиваете ребенка, как показано справа, так же фиксируете голову ребенка пальцами и осуществляете надавливания только двумя пальцами так же, чуть выше пупка. И поочередно чередуете эти два метода, пока не освободите дыхательные пути, как правило, с первого раза все вылетает.</p><p>Если вы подавились сами, а помочь некому, то найдите какой-то предмет мебели: спинка стула, подлокотник дивана, который будет выступать в роли упора для вас. Далее вам необходимо привести в движение диафрагму. Кладем кулак на опору, и осуществляем надавливающие движения животом на кулак, как если бы это делал другой человек, оказывая вам помощь.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/671/659/5eb/6716595eb3833d0369f2e339303fbcb7.jpeg\" width=\"936\" height=\"468\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/671/659/5eb/6716595eb3833d0369f2e339303fbcb7.jpeg\" data-blurred=\"true\"></figure><p>Если вы <strong>беременны</strong> и подавились, а помочь некому, то способ со стулом вам не подойдет. В таком случае наклонитесь вперед и стучите себя ладонью по грудной клетке, будет такой же эффект, как от постукиваний по спине, инородное тело выскочит.</p><p>На этом у меня все. Надеюсь, было полезно, и пусть вам никогда это не пригодится, но вы будете знать, как действовать! </p><p>Берегите себя, всем бобра))</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/3a2/ff5/fde/3a2ff5fdee2f0d8877f12d613bee54f3.jpeg\" width=\"602\" height=\"602\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/3a2/ff5/fde/3a2ff5fdee2f0d8877f12d613bee54f3.jpeg\" data-blurred=\"true\"></figure><p></p>', 2, '2023-06-13 00:46:25', 422824, 110, '/ru/companies/sportmaster_lab/articles/739214/', 'Сколько стоит человеческая жизнь? Да-да, в рублях.Обычная реакция на такой вопрос, что-то вроде: как ты смеешь говорить о цене человеческой жизни, ведь она бесценна? ');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(242, 'Как сохранить команду разработчиков, если не хочется платить больше?', '<p>Привет, Хабр и <s>Хабаровчане</s> Хабровчане, меня зовут Ибрагим и я руковожу проектом parasafi. Мы доставляем различные товары из Турции и оказываем медицинское сопровождение под ключ в этой же стране. Я хотел бы рассказать вам о нашем эксперименте, который проводился с полного согласия испытуемых и руководства и показал интересные результаты. </p><p>Еще немного необходимой нудятины перед стартом. В тексте будет два личных местоимения: \"я\" и \"мы\". Я намеренно использовал в тексте такой стиль, чтобы разделить зоны ответственности. Всякий раз, когда в тексте встречается \"я\", знайте, что это лишь моя зона ответственности от начала до конца, все действия, расчеты, аналитику и последствия я принимал лично на себя. Когда в тексте встречается \"мы\", это означает, что ответственность и работа ложилась на команду; эта команда могла увеличиваться и уменьшаться, но всегда оставалась командой. К примеру, я один никак не смог бы контролировать произношение матерных слов у одной группы людей, при этом считать время перекура у другой группы людей. Ну, всё, с нудятиной покончили, предлагаю переходить к введению.</p><p>В современном мире информационных технологий, где высокая производительность и интенсивный ритм работы являются неотъемлемой частью ежедневной жизни, забота о здоровье и благополучии сотрудников становится все более важной. Одной из существенных составляющих здоровья, которая привлекает все большее внимание, является витамин D. Этот витамин не только поддерживает здоровье костей и иммунную систему, но также играет важную роль в психическом благополучии.</p><p>В настоящее время все больше исследований указывает на то, что недостаток витамина D может быть связан с увеличенным риском развития депрессии, тревожных расстройств и других психических состояний. Это особенно актуально в контексте  IT-индустрии, где сотрудники сталкиваются с высоким уровнем стресса, интенсивной работой и частыми дедлайнами, поддержание психического  здоровья становится приоритетом. <strong>Выгорание, характеризующееся  эмоциональным и физическим истощением, снижением производительности и ухудшением настроения, становится все более распространенной проблемой среди профессионалов IT.</strong>  </p><blockquote><p>Интересно отметить, что витамин D может играть ключевую роль в предотвращении выгорания и поддержании психического благополучия в IT‑среде.   </p></blockquote><p>Стоп, что? Витамин D от выгорания, а как следствие — от сорванных сроков и текучки кадров? И не надо даже повышать уровень оклада?</p><p>Да, все верно, существует ряд исследований и статистика, которые свидетельствуют о  связи между выгоранием сотрудников, в том числе в IT-индустрии, и текучестью кадров. Вот некоторые исследования, изученные нами:  </p><ol><li><p>Исследование \"The Relationship Between Burnout and Turnover Intention Among IT Professionals\" (2017): Это исследование, опубликованное в журнале \"Computers in Human Behavior\", исследовало связь между выгоранием и увольнениями у профессионалов в области информационных технологий. Результаты показали, что высокий уровень выгорания значительно увеличивает вероятность намерения сменить работу.</p></li><li><p>Исследование \"Job Burnout and Employee Turnover: A Firm-Level Perspective\" (2018): Это исследование, проведенное в рамках Шведского института труда, исследовало влияние выгорания на текучесть кадров на уровне компании. Оно выявило, что высокий уровень выгорания в организации связан с повышенной вероятностью увольнений и текучести кадров.</p></li><li><p>Опрос компаний: Многие IT-компании проводят внутренние опросы или исследования среди своих сотрудников для изучения причин и факторов, влияющих на текучесть кадров. В некоторых исследованиях отмечается, что высокий уровень выгорания является одной из основных причин ухода сотрудников из компании.</p></li><li><p>Статистика текучести кадров: В различных отчетах и исследованиях, проведенных в IT-индустрии, часто отмечается, что компании с высоким уровнем выгорания сотрудников также испытывают проблемы с текучестью кадров. Например, согласно отчету компании LinkedIn \"Global Talent Trends 2020\", 50% респондентов, работающих в области информационных технологий, указали выгорание в качестве одной из основных причин ухода из компании.</p></li></ol><blockquote><p>Наш внутренний эксперимент, длившийся 1,5 года, проводимый на 150 сотрудниках, показал, что при разнице уровней оклада в 10-14% по сравнению с рынком <s>разумеется не в нашу сторону</s> специалисты от среднего до высокого уровня готовы продолжать работу при условии наличия программы заботы об их здоровье. <br><strong>Иными словами, если вы не можете или не хотите платить своим сотрудникам столько, сколько платит рынок, и это \"нежелание\" не превышает 14%, то вы можете выдавать витамин D, что сокращает выгорание, и как следствие —</strong> <strong>текучесть кадров.</strong></p></blockquote><p>Конечно же, несмотря на то, что витамин D имеет важное значение для здоровья и может оказывать положительное влияние на настроение и психическое благополучие, отсутствуют специфические исследования, которые прямо связывают витамин D с предотвращением выгорания сотрудников в IT-индустрии.</p><p>Работодателю необходимо понимать, что выгорание (burnout) является сложным состоянием, которое обычно связано с длительным стрессом, перегрузкой на работе и недостатком психологической поддержки. Хотя витамин D может играть определенную роль в психическом здоровье, предотвращение выгорания требует комплексного подхода, который включает не только физическое здоровье, но и психологическую поддержку, организационные изменения и управление стрессом.</p><blockquote><p>Конечно, данные нашей команды и нашего эксперимента не могут считаться применимыми ко всем ситуациям в мире, но, существуют примеры больших <br>IT-компаний, которые предоставляют своим сотрудникам витамин D в рамках программы заботы о здоровье. <br>И логика проводимых программ в этих компаниях абсолютно одинакова с проводимой логикой эксперимента нашей компании. <br><strong>Вот пример компаний, чьи программы и эксперименты подтолкнули нас к проверке этой интересной гипотезы:</strong></p></blockquote><ol><li><p>Google известен своими многочисленными программами по благополучию сотрудников. Они предоставляют различные бесплатные услуги и льготы, включая фитнес-центры, медицинские услуги и даже бесплатное питание. <strong>В рамках этих программ Google также предоставляет своим сотрудникам витамин D и другие питательные добавки.</strong></p></li><li><p>Microsoft имеет программу \"Employee Assistance Program\" (EAP), которая включает в себя различные инициативы по заботе о здоровье сотрудников. <strong>Витамин D является одним из компонентов этой программы</strong>, помогая сотрудникам поддерживать оптимальный уровень этого витамина.</p></li><li><p>Facebook также предоставляет ряд программ и льгот для своих сотрудников. В рамках программы \"Wellness Program\" (программа благополучия) Facebook <strong>предоставляет витамин D</strong> и другие питательные добавки для поддержания здоровья и производительности своих сотрудников.</p></li></ol><blockquote><p>Как мы проводили эксперимент?</p></blockquote><p><s>Разумеется</s> с согласия работников нашей компании. Мы выделили для себя 4 направления специалистов: </p><ul><li><p>Менеджеры и специалисты поддержки пользователей</p></li><li><p>Непосредственно разработчики</p></li><li><p>Маркетинг-специалисты и SEO-специалисты</p></li><li><p>Дизайнеры и переводчики</p></li></ul><p>Почему мы выделили эти группы и объединили их в пары?<br>Все просто, мы рассматривали и составляли группы по уровню ежедневного стресса, связанного с переработками, ритмом работы и дедлайнами. Если объяснять нашу логику на простом языке, то: <br><strong>наиболее напряженные</strong> - это менеджеры и специалисты поддержки, потому что они вынуждены ежедневно обзванивать, контактировать, слушать и работать с <s>неадекватами </s>сложными людьми в неисчислимых значениях, как следствие, большое психологические напряжение и желание \"уйти подальше от всего этого\". <br>Группа из разработчиков и маркетологов вместе с SEOшниками в нашем понимании находились на среднем уровне стресса. </p><blockquote><p>Конечно, все разработчики так или иначе переживают о дедлайне, особенно о его нарушении, точно так же и маркетологи переживают за \"неверную\" стратегию рекламной компании, а SEOшники переживают о том, что \"робот выдает меньше иксов\", но они могут позволить себе наплевать на это, если не с высокой колокольни, то со средней уж точно. От этого их уровень стресса немного ниже.</p></blockquote><p>Наименее напряженными по нашим представлениям являлись переводчики и дизайнеры. По абсолютно понятным всем причинам отсутствия огромного пласта мгновенной ответственности, отчетности, KPI  и прочих противных параметров. </p><blockquote><p>И что, вот так просто можно срезать зарплату и никто не будет против?</p></blockquote><p>Конечно же нет, дело в том, что у нас, как и у вас, есть понятие \"премии\" вот именно ее мы и варьировали. Логика нашего эксперимента и путь его развития был следующий: </p><ol><li><p>Установить уровень оплаты (с премией) согласно запросам рынка. Тот самый \"запрос\" мы выявляли через всем известный агрегатор поикса работы. Следить за текучкой кадров и проводить опросы для выявления общих настроений сотрудников. </p></li><li><p>Тоже что в п.1, но добавить программу заботы о здоровье и выдавать тот самый витамин D.</p></li><li><p>Оставляем витамин, но делаем уровень премии ниже рынка с шагом -3,5% каждые 3 месяца. Разумеется, следим за текучкой и проводим опросы как и ранее. </p></li><li><p>Устанавливаем уровень оклада выше рынка, но убираем витамины, проводим замеры</p></li></ol><blockquote><p>Как мы оценивали уровень стресса, выгорания, текучести кадров?</p></blockquote><p>У нас был целый ряд факторов, который мы оценивали, но предлагаю сейчас сосредоточиться на тех, что я выделил для себя, на человеческих факторах. Бизнес-аналитику наших манипуляций оставим для отдельной статьи, напишу только то, что она была тоже положительной. <br> <br><strong>Для первой группы</strong> мы измеряли количество успешных сделок и/или решений конфликтов. Кроме того, оценивали общее количество времени на \"перекуры\". <br><strong>Для второй группы</strong> мы оценивали количество \"пушей\" в наш гит, в процессе создания проектов, те же перекуры и (это может показаться смешным, но для этого был нанят человек) количество произносимых за день \"б!%ть\", \"с!\"ка\" и прочих прекрасных слов.<br><strong>Для группы номер три</strong> - это было количество рекламных компаний, запущенных в Я.Директе, а также время их запуска. <br><strong>Для четвертой группы</strong> уровень перевода и качество дизайн-проектов. </p><blockquote><p>Как изменились показатели?</p></blockquote><div><div class=\"table\"><table><tbody><tr><td colspan=\"3\"><p align=\"center\">Группа 1</p></td></tr><tr><td><p align=\"center\">Оклад в % от рынка</p></td><td><p align=\"center\">Успешные сделки</p></td><td><p align=\"center\">Время на перекуры (мин)</p></td></tr><tr><td><p align=\"center\">100%</p></td><td><p align=\"center\">45</p></td><td><p align=\"center\">50</p></td></tr><tr><td><p align=\"center\">-3.5%</p></td><td><p align=\"center\">43</p></td><td><p align=\"center\">52</p></td></tr><tr><td><p align=\"center\">-7%</p></td><td><p align=\"center\">45</p></td><td><p align=\"center\">46</p></td></tr><tr><td><p align=\"center\">-10,5%</p></td><td><p align=\"center\">47</p></td><td><p align=\"center\">43</p></td></tr><tr><td><p align=\"center\">-14%</p></td><td><p align=\"center\">46</p></td><td><p align=\"center\">39</p></td></tr><tr><td><p align=\"center\">115%</p></td><td><p align=\"center\">43</p></td><td><p align=\"center\">47</p></td></tr></tbody></table><div><div class=\"table\"><table><tbody><tr><td colspan=\"3\" data-colwidth=\"0,234,0\" width=\"0\"><p align=\"center\">Группа 2</p></td></tr><tr><td><p align=\"center\">Оклад в % от рынка</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">Пуши </p></td><td><p align=\"center\">\"б!%ть\", \"с!\"ка\" в день</p></td></tr><tr><td><p align=\"center\">100%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">240</p></td><td><p align=\"center\">340</p></td></tr><tr><td><p align=\"center\">-3.5%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">231</p></td><td><p align=\"center\">341</p></td></tr><tr><td><p align=\"center\">-7%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">240</p></td><td><p align=\"center\">304</p></td></tr><tr><td><p align=\"center\">-10,5%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">243</p></td><td><p align=\"center\">293</p></td></tr><tr><td><p align=\"center\">-14%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">250</p></td><td><p align=\"center\">273</p></td></tr><tr><td><p align=\"center\">115%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">240</p></td><td><p align=\"center\">264</p></td></tr></tbody></table><div><div class=\"table\"><table><tbody><tr><td colspan=\"3\" data-colwidth=\"0,234,0\" width=\"0\"><p align=\"center\">Группа 3</p></td></tr><tr><td><p align=\"center\">Оклад в % от рынка</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">Количество РК в директе</p></td><td><p align=\"center\">Среднее время создания</p></td></tr><tr><td><p align=\"center\">100%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">35</p></td><td><p align=\"center\">17:40</p></td></tr><tr><td><p align=\"center\">-3.5%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">32</p></td><td><p align=\"center\">17:43</p></td></tr><tr><td><p align=\"center\">-7%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">29</p></td><td><p align=\"center\">17:25</p></td></tr><tr><td><p align=\"center\">-10,5%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">24</p></td><td><p align=\"center\">17:12</p></td></tr><tr><td><p align=\"center\">-14%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">19</p></td><td><p align=\"center\">16:52</p></td></tr><tr><td><p align=\"center\">115%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">20</p></td><td><p align=\"center\">16:51</p></td></tr></tbody></table><div><div class=\"table\"><table><tbody><tr><td colspan=\"3\" data-colwidth=\"0,234,0\" width=\"0\"><p align=\"center\">Группа 4</p></td></tr><tr><td><p align=\"center\">Оклад в % от рынка</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">Количество ошибок в переводе</p></td><td><p align=\"center\">Среднее число \"переделок\" в дизайн проекте</p></td></tr><tr><td><p align=\"center\">100%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">14</p></td><td><p align=\"center\">65</p></td></tr><tr><td><p align=\"center\">-3.5%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">13</p></td><td><p align=\"center\">63</p></td></tr><tr><td><p align=\"center\">-7%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">9</p></td><td><p align=\"center\">54</p></td></tr><tr><td><p align=\"center\">-10,5%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">7</p></td><td><p align=\"center\">47</p></td></tr><tr><td><p align=\"center\">-14%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">8</p></td><td><p align=\"center\">47</p></td></tr><tr><td><p align=\"center\">115%</p></td><td data-colwidth=\"234\" width=\"234\"><p align=\"center\">7</p></td><td><p align=\"center\">40</p></td></tr></tbody></table><blockquote><p>Интерпретация результатов и подведение итогов</p></blockquote><p>Итого, что мы получили? <br><strong>Для группы №1</strong> мы получили снижение времени перекуров на 11 минут в пике своих значений. При этом количество успешных сделок не изменилось. Что это означает?<br>По нашему мнению, эти данные свидетельствовали о снижении уровня стресса, так как людям требуется тратить меньше времени на то, чтобы \"прийти в себя\" после очередного сложного клиента. При этом, можем заметить, что при уровне оклада выше рынка время на перекуры выросло, но как же так? Люди начали больше стрессовать? Как оказалось, все куда проще, просто за перекуром они начали обсуждать отпуска и покупки.<br><br><strong>Для группы №2 и группы №3</strong> мы видим явную положительную динамику по снижению уровня стресса. Если количество рекламных компаний и пушей выросло не сильно, хотя и выросло, то вот количество матерных слов и среднее время запуска рекламной компании снизились в явном выражении. Почему мы считаем это хорошим фактором? Все просто, маркетолог запускает рекламную компанию в течение рабочего дня, без переработок, его маркетинговый мозг сконцентрирован на работе, он успевает больше, а количество переходов по рекламной компании тоже увеличилось. То же самое можно резюмировать и для наших прогеров, они начали меньше ругаться, да, пушей стало не сильно больше, но их настроение явно стало лучше, работа стала продуктивнее и они стали выходить на работу без опозданий, а некоторые даже начали перерабатывать со словами \"это же интересно\" или \"щаща я доделаю и пойду\". <br><br><strong>Группу 4</strong> мы тоже оцениваем положительно, ее проще всего описать на переводчиках, как вы можете видеть, количество ошибок в их переводах снизилось. Это могут быть механические описки или реальные орфографические ошибки, связанные с большим количеством переводимых символов за короткий срок времени. Но как бы то ни было, ошибок стало меньше, и это хорошо для нас.</p><blockquote><p>Для всех четырех групп вы можете видеть в динамике, что при повышении оклада выше рынка, но отсутствии витаминов, результат схож с вариантов присутствия витаминов, но пониженном окладе.</p></blockquote><p>Хочется еще раз <u>подчеркнуть</u>, что выгорание несомненно является серьезной проблемой, с которой сталкиваются многие сотрудники в IT-индустрии и других сферах деятельности. Исследования показывают, что высокий уровень выгорания может приводить к снижению работоспособности, психическим расстройствам и повышенной текучести кадров.</p><p>Однако, мы можем принять меры для предотвращения выгорания и поддержания здоровья наших сотрудников. Витамин D, как показано исследованиями, играет важную роль в поддержании психического благополучия. </p><blockquote><p>Забота о здоровье команды - это инвестиция, которая может принести эффективность работы команды и компании в целом, а также, <strong>надеюсь</strong>, снизит недовольство, выгорание и текучку кадров, даже если в данный момент развития вашего проекта невозможно платить \"как большие компании\".</p></blockquote><p>Важное уточнение: люди были поставлены в известность касаемо проводимой исследовательской работы. Наши коллеги достаточно прогрессивные и они всегда готовы к новым интересным методом взаимодействия. Нужно понимать, что уровень довольства работой в нашей команде намного выше среднего, за счет ряда параметров, поэтому переживать о \"подопытных\" в этом эксперименте не стоит. В конечном итоге, несмотря на возможность платить меньше, наше руководство приняло к сведению результаты эксперимента, но оклад вернулся к уровню нормального, рыночного выражения. <br>Однако, был <strong>введен пилот программы заботы о здоровье</strong>. </p><blockquote><p>Наш пилот заключается в том, чтобы протестировать два метода получения витамина D:<br>1. Получение из витаминного комплекса. <br>2. Уменьшение рабочего дня на 1 час каждую пятницу и корпоративное такси на пляж.</p></blockquote><p>Помимо этого в наших планах — выяснить, как еще и какие еще витамины могут влиять благотворно на здоровье наших сотрудников и нашу работу. </p><p>Дополнительно, считаю важным пояснить, что <strong>наша компания не \"бедствует\", не \"находится на грани\"</strong>. Мотивация проведения экспериментов была продиктована тем, что мы непосредственно связаны с медициной, с витаминами и минералами. Участники эксперимента были релоцированы в Стамбул, где по их же согласию они будут продолжать участвовать в пилоте, описанном выше. </p><p>P.S. от автора. Пожалуйста, относитесь к своим работникам с уважением и заботой. Помните, что они люди, а не просто рабочая сила, я надеюсь, что помимо основной идеи статьи, вы вынесете дополнительную идею о том, что \"<em>люди</em> и взаимодействие <em>важнее</em> процессов и <em>инструментов</em>\". <br><br></p><p></p>', 2, '2023-06-13 00:46:26', 921488, 99, '/ru/articles/738946/', 'Бег — это один из самых доступных и эффективных способов физической активности. Бег помогает улучшить физическую форму и здоровье, укрепляет сердечно-сосудистую систему, повышает выносливость и снижает риск развития различных заболеваний.Очень привлекательный набор достижений, не правда ли! Нужно лишь поднять себя с дивана, удобно одеться и выйти в ближайший парк. И вот вы уже один из участников бегового сообщества. Первый шаг на пути к красивому телу и крепкому здоровью сделан!Теперь, чтобы ваша беговая история была долгой и счастливой, прочитайте нашу статью. Мы расскажем, как не бросить бег после второй тренировки. Как бегать, чтобы не навредить себе. Как организовать процесс, чтобы бег был в радость и приносил нужный результат. А также где и когда можно испытать себя и свои беговые навыки.'),
(243, 'Сколько стоит твоя жизнь?', '<figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/9ac/698/81c/9ac69881ca72bceb38e1545aa7e4c513.png\" width=\"1560\" height=\"877\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/9ac/698/81c/9ac69881ca72bceb38e1545aa7e4c513.png\"></figure><p>Сколько стоит человеческая жизнь? Да-да, в рублях.</p><p> Обычная реакция на такой вопрос, что-то вроде: как ты смеешь говорить о цене человеческой жизни, ведь она бесценна? Что ж, обсудим.</p><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/6477208c7ddf71fbc1da1997\" data-style=\"\" id=\"6477208c7ddf71fbc1da1997\" width=\"\"><h2>Невидимые дети</h2><p>Начнём мы с истории Ханса Рослинга из его книги «Фактологичность». Рослинг специалист по статистике и эксперт в области международного здравоохранения. Как связаны эти два направления? Скоро узнаете.</p><p>На заре своей карьеры он, гражданин Швеции, отправился работать врачом в Мозамбике в рамках проекта «врачи без границ» (он был одним из основателей Шведского отделения). Они с коллегой были двумя врачами на 300 тысяч населения.</p><p>Это не самый простой опыт. В день в больницу попадали примерно по три тяжелобольных ребёнка. Каждый двенадцатый умирал там же. Оснащение больницы и количество персонала не позволяло спасти больше.</p><p>Однажды на выходные к Рослингу приехал его друг — шведский педиатр, который работал в более крупном городе Мозамбика в больнице с лучшим оснащением. Была суббота, но Рослинга срочно вызвали на работу. На пороге они встретили перепуганную мать с ребёнком, страдающим от жуткой диареи. Женщина была так слаба, что у неё пропало молоко. Рослинг осмотрел ребёнка, установил питательную трубку и велел вводить через неё раствор для регидратации.</p><p>Друг Рослинга открыто раскритиковал такое назначение, обвинив его в том, что он просто хочет вернуться домой пораньше. Рослинг пояснил, что такова стандартная процедура, а на установку капельницы уйдёт куча времени, да ещё и медсёстры могут потом и напортачить с повторной установкой. Но главное, Рослинг заметил, что он действительно спешит на ужин с семьёй, ведь иначе он не протянул бы тут и месяца.</p><p>Друг Рослинга не принял эти аргументы и остался на несколько часов для установки капельницы в тончайшую вену. Когда он вернулся домой к Рослингу, то продолжил настаивать на своём: ты должен делать всё возможное для каждого пациента.</p><p>На что Рослинг ответил: нет, я не имею права тратить все мои ресурсы и время на спасение тех, кто обратился в больницу. Я в ответе за все детские смерти в этом округе, а не только за те, что происходят у меня на глазах.</p><p>Как вы считаете, кто прав в этом споре?</p><p>Добавлю немного фактов: в больнице в тот год погибло 52 ребёнка. А в округе, который курировал Рослинг, произошло больше 3000 детских смертей. Рослинг сделал упор на обучение деревенских фельдшеров, которые вакцинировали детей и начинали лечить наиболее опасные болезни, не требующие серьёзной квалификации в тех пунктах, до которых люди могли добраться пешком.</p><p>Мне кажется, нужно иметь довольно много мужества и рациональности, чтобы отвернуться от умирающего ребёнка, при этом не отвернувшись от сотен безымянных детей, которых ты не видишь. Гораздо проще было бы считать себя героем, игнорируя всё, что находится вне поля твоего зрения. Но Рослинг был слишком хорошо знаком с тем, что он называл жестокой математикой нищеты.</p><p>Друг Рослинга с лёгкостью настаивал на том, что каждая жизнь бесценна. Вот только руководствоваться этим принципом — значит считать, что одна жизнь стоит столько же, сколько стоят тысячи или миллионы жизней. Если же мы хотим спасти больше жизней, то считать так неэффективно, хотя очень хочется.</p><h2>Удобные назначения</h2><p>К сожалению, эффективные методы зачастую и «выглядят» некрасиво и менее удобны. Кардиолог <a href=\"https://youtu.be/cs-FIoWl3hk?t=216\" rel=\"noopener noreferrer nofollow\">Ярослав Ашихмин</a> в своём выступлении рассказывает, к чему это приводит. При аритмии есть два альтернативных метода лечения. Один из них — с использованием так называемых антиаритмиков класса 1ц. Этот способ обожают и пациенты, и врачи, ведь он быстро снимает симптомы, а побочные эффекты от него минимальны. Врачей, назначающих такой вид лечения, очень рекомендуют друзьям и знакомым. Альтернативой выступает лечение без антиаритмиков. Но в этом случае довольно неприятная симптоматика не снимается, что не нравится пациентам. Это к тому же неудобно врачам, вынужденным объяснять пациенту зачем он мучается. Проблема состоит в том, что пациенты в первом случае (с антиаритмиками) умирают значительно чаще. Такая вот дилемма: человеческая жизнь или комфорт.</p><h2>Задача об азиатской болезни</h2><p>Нечто подобное демонстрирует Даниель Канеман в эксперименте «задача об азиатской болезни». На всякий случай скажу, что задача появилась задолго до пандемии коронавируса. Я приведу немного модифицированную её версию.</p><p>Страна готовится к эпидемии необычной азиатской болезни, которая убьёт тысячу человек. И предложены два альтернативных метода борьбы с ней, с разными прогнозами. Тебе предстоит выбрать метод, считая, что прогнозы точны.</p><p><em>И так первый метод борьбы позволит гарантированно спасти 800 жизней.</em></p><p><em>Второй метод с вероятностью 90% спасёт всю тысячу человек, но с вероятностью 10% никого из них спасти не удастся. </em></p><p>Многие люди выбирают гарантированное спасение. Но математическое ожидание такого выбора хуже. Приняв такое решение сотню раз, вы спасёте 80 тысяч человек, а приняв второе решение сотню раз, вы спасёте 90 тысяч. И многие восклицают, мол как можно считать жизни и подвергать людей опасности, играя в это как в азартную игру?</p><p>Но вот что интересно. Канеман переформулирует задачу следующим образом:</p><p><em>Первый метод гарантированно убьёт 200 человек. </em></p><p><em>Второй метод с вероятностью 90% сохранит все жизни, и с вероятностью 10% не сможет их сохранить.</em></p><p>В этой формулировке респонденты резко меняют своё решение. Потому что теперь гораздо комфортнее с моральной точки зрения выбрать второй вариант. То есть даже в мысленных экспериментах мы выбираем не то, что эффективнее и спасёт больше человеческих жизней, а то, что нам комфортнее сказать.</p><h2>Медицина и твоё мнение</h2><p>И именно <a href=\"https://www.youtube.com/playlist?list=PL8IqJ9ByNwX6dNgSdA7V_YQMLr1BngY4I\" rel=\"noopener noreferrer nofollow\">медицина</a>, с которой мы начали ролик, является областью, где подобные мысленные эксперименты превращаются в практические задачи. Легко говорить, что каждая жизнь стоит любых потраченных на неё денег. Но когда вы, как Рослинг, влияете на распределение бюджета в мировом здравоохранении для вас абсолютно бесполезен данный принцип. Он не позволит принимать правильные решения. Он не позволит отказаться от сбора 700 тысяч долларов для оплаты одной трансплантации костного мозга и потратить эти же деньги на закупку противомоскитных сеток в Африку, способных спасти от <a href=\"https://www.givewell.org/charities/amf#Whatdoyougetforyourdollar\" rel=\"noopener noreferrer nofollow\">малярии около 200 детей</a>.</p><p>И здесь не получится рассуждать в стиле «ну это решает кто-то другой», ведь общественное мнение (то есть лично твоё) определяет какой поступок комфортен человеку, принимающему решение, как в случае с врачами и антиартимиками.</p><h2>Как мы принимаем решения?</h2><p>Всё это тесно связано с таким понятием как <a href=\"https://lesswrong.ru/w/%D0%A7%D0%B0%D0%92%D0%BE_%D0%BE_%D0%BA%D0%BE%D0%BD%D1%81%D0%B5%D0%BA%D0%B2%D0%B5%D0%BD%D1%86%D0%B8%D0%B0%D0%BB%D0%B8%D0%B7%D0%BC%D0%B5\" rel=\"noopener noreferrer nofollow\">консеквенциализм</a>. Упрощая, это принцип принятия решений, когда ценным считается результат, а не то, как это решение выглядит или то, кажется ли оно красивым. Но почему для нас так не естественен подобный подход?</p><p>Ответ частично уже звучал. Многие решения принимаются вообще не оптимизируя количество спасённых жизней. Нам важен сам процесс и то, что он принесёт. В случае с кардиологами, назначающими антиаритмики — это рекомендации и положительная обратная связь. В случае со спасённым ребёнком в Мозамбике — это тёплое чувство в груди, которое Скотт Александер называет пушистиком. Ну знаете, когда перевели бабушку через дорогу. Чувство обратное стыду. Ну а в случае с Каннемановской задачей мы просто пытаемся транслировать сигнал в социум о том, какие мы молодцы. И в этих мотивах нет ничего плохого, пока они не преграждают путь эффективности.</p><p>Здорово, если люди увлекаются какими-нибудь экологическими штуками вроде переработки отходов, потому что им нравится транслировать вовне образ себя как ответственного жителя нашей планеты. Однако что если они таким образом делают не лучшее из возможного? Вдруг им стоило бы распорядиться ограниченными ресурсами иначе? А может они и так избрали лучшую стратегию? Но абсолютно точно, это невозможно оценить, если хотя бы не попробовать. И есть <a href=\"https://www.givewell.org/\" rel=\"noopener noreferrer nofollow\">организации</a>, которые делают попытки оценить это. Это направление известно как <a href=\"https://ea-ru.org/\" rel=\"noopener noreferrer nofollow\">эффективный альтруизм</a>, и я не буду останавливаться на нём подробно, при желании вы сами ознакомитесь с ним, и разберётесь, насколько лучше или хуже вас они справляются с такой оценкой.</p><h2>Любить людей или деньги?</h2><p>Я лишь хотел донести мысль о том, что, людям, которые хотят приносить больше пользы в реальном мире приходится считать ограниченные ресурсы. Отказ от оценки человеческой жизни не просто не делает лучше, он строго делает хуже. Он отдаёт решение на откуп монетке — как иронично. Чтобы помогать людям нужно считать деньги, или даже любить их (однако ваша любовь к деньгам не всегда порождает желание помочь людям). Помню, как меня удивила и восхитила фраза: «я люблю деньги», сказанная Нютой Федермессер, пионером паллиативной помощи в России и учредителем фонда помощи хосписам. В этой фразе вовсе не было посыла, который транслируют исполнители современному поколению. В её исполнении фраза несла смысл: человеческая жизнь имеет цену в деньгах, а я люблю человеческие жизни.</p><h2>Цена и ценность</h2><p>Думаю, моя позиция в данной статье довольна прозрачна. Поэтому настало самое время всё запутать. И сделаю я это простым вопросом: неужели я считаю, что ценность человеческой жизни можно приравнять к стоимости автомобиля?</p><p>Ответ на этот вопрос связан с тем, что цена и ценность — это разные понятия. А чтобы пояснить это наглядно, я обращусь к притче от Найта Соарэса (<a href=\"https://mindingourway.com/the-value-of-a-life/\" rel=\"noopener noreferrer nofollow\">оригинал</a>, <a href=\"https://lesswrong.ru/w/%D0%A6%D0%B5%D0%BD%D0%BD%D0%BE%D1%81%D1%82%D1%8C_%D0%B6%D0%B8%D0%B7%D0%BD%D0%B8\" rel=\"noopener noreferrer nofollow\">перевод</a>).</p><p>Когда-то давно существовала деревня мирных бессмертных людей. Они не старели в биологическом смысле. То есть вероятность смерти не зависела от прожитых лет. Но они всё ещё могли умереть от голода или повреждений. Так было до появления дракона.</p><p>Я уверен, вы знаете, что драконы желают получить от людей две вещи: золото и плоть. Дракон, дал жителям мрачный ультиматум:</p><p>Каждый человек в этой деревне должен ежегодно платить налог золотом, количество которого равно возрасту этого человека. Всякий, кто не сможет заплатить, будет съеден.</p><p>Жители деревни умоляли, стоя на коленях, рыдали и приходили в ярость, но дракон оставался непреклонен. Он просто показал им несколько скал, в которых, вероятно, можно было сделать хорошие золотые прииски и приказал им приступать к работе.</p><p>Люди старались изо всех сил. Сельчане работали не покладая рук, откидывая камни в сторону, копали землю голыми руками, разбивая пальцы до крови, мало охотились и старались как можно меньше заниматься собирательством, и даже перестали заботиться о своих жилищах — но всё равно, не смогли отдать налог дракону. В конце года дракон вернулся и забрал всё золото, которое у них было, и десять самых старых сельских жителей (отдав старейшин, удалось спасти большинство жизней).</p><p>Обезумев, жители деревни решили попробовать снова. Они подвергли себя ещё большим аскезам в попытке успеть к назначенному сроку, становясь всё более изнурёнными. Их глаза поблёкли, кожа болезненно пожелтела, а руки стали безжизненными. И в следующий раз, когда пришёл дракон, он забрал всё золото и пятьдесят жителей.</p><p>Стратегия не работала.</p><p>Но изобретательность – одно из главных человеческих качеств.</p><p>Таким образом, на третий год выжившие пришли к горькому осознанию своего положения и снова начали охотиться, заниматься собирательством, становились сильнее и здоровее, и признали, что им придётся заботиться о себе, прежде чем они смогут позаботиться о своих близких. Они приступили к созданию кирок и лопат, понимая, что голыми руками справиться не удастся.</p><p>В конце третьего года дракон снова забрал всё золото и сотню жителей, поскольку их стратегия ещё не начала приносить плоды.</p><p>Но в конце четвёртого года дракон забрал всего двоих.</p><p>Вскоре после этого дракон (восхищаясь их прогрессом) сообщил жителям деревни, что теперь налог будет расти быстрее, экспоненциально их возрасту.</p><p>На этот раз жители деревни лишь только кивнули и преобразовали свою горячую ярость в холодную решимость.</p><p>Прошло много лет с тех пор, как дракон впервые пришёл в селение. На самом деле, всё сильно изменилось: деревня выросла до города, а город вырос до цивилизации.</p><p>Старейшины стали мыслить продуктивнее и поняли, как получать больше золота в час, но стало приходить время, когда эта повышенная производительность больше не стоила затрат на жизнь. И когда это время настало, старейшины были готовы к своей судьбе, потому что понимали, что их жизнь не стоила двух других.</p><p>На самом деле жёсткие компромиссы, подобные этим, стали обычным явлением. Жители деревни давно открыли экономику и специализацию, и теперь большинство из них не работало в шахтах. Некоторые из них стали проводить время за готовкой или выращиванием растений для пропитания, другие стали тратить время на совершенствование жилищ, появились и мастера, занимающиеся разработкой новых инструментов и механизмов, которые бы поспевали за грабительским налогом дракона.</p><p>Удивительно, но есть и те, кто посвятил свою жизнь искусству и развлечениям, ведь жители осознали важность поддержания мотивации и морального духа.</p><p>(А тем временем, некоторые жители, глубоко под землёй, подальше от любопытных глаз дракона, <a href=\"https://www.youtube.com/watch?v=MUKqv-SwD9w\" rel=\"noopener noreferrer nofollow\">разрабатывали оружие</a>)</p><p>Таким образом, вы можете обнаружить в этой цивилизации людей, которые посвящают свою жизнь не добыче золота, а написанию книг, но если вы посмотрите внимательно, то заметите, что это происходит только тогда, когда писатель может спасти больше жизней за счёт роста производительности и морали, чем за счёт своего труда в шахте. И потому эта цивилизация, одержимая сохранением жизни тому количеству людей, скольких может спасти ежегодно, все ещё создаёт книги, пьесы и фильмы.</p><p>Это означает, что в настоящее время вы можете рассчитать точную цену спасения каждой жизни. И оказывается, что одна жизнь равна примерно той же цене, что и тысяча билетов в кино.</p><p>Но цена и ценность не одно и то же. Факт о том, что человеческая жизнь приравнена к стоимости 1000 билетов в кино вовсе не означает, что у них одинаковая ценность. Это факт о том, что если мы вместо непосредственного спасения жизни можем получить две тысячи билетов, а с ними рост мотивации и морального духа, то это может спасти больше жизней.</p><h2>Возвращаемся в реальность</h2><p>Но это в вымышленном мире. В нашем мире экономика неэффективна. И когда спасение жизни в развитых странах может стоить миллионы долларов, спасение жизни где-нибудь в странах третьего мира может стоить несколько тысяч долларов.</p><p>И это тем не менее вполне конкретный диапазон цен. Представь себе кнопку, которая с шансом один на миллион убивает случайного человека. Сколько тебе должны заплатить за нажатие такой кнопки, чтобы ты согласился? Ответ «нисколько» понятен, но чудовищен по отношению к другим людям. Вождение автомобиля - эквивалентно нажатию такой кнопки, потому что убивает с вероятность 1к10 тысячам одного человека в год согласно статистике. Только в случае с автомобилем ты не получаешь деньги, а лишь комфорт от передвижения. А в случае с кнопкой ты мог хотя бы назвать 10 долларов. Ведь нажатие такой кнопки миллион раз убило бы одного человека, но вырученные 10 миллионов долларов ты мог бы потратить на спасение более чем одного. Спорно? Но ведь ты мог назвать вообще любую сумму, и помочь любому количеству людей. Мысленный эксперимент далёк от реальности, но даже в нём хочется отдать всё на откуп монетке.</p><p>Но почему всё устроено так несправедливо? Почему при общем согласии о бесценности человеческой жизни мы должны назначать ей цену? Всё из-за дракона.</p><p>Может я скажу <a href=\"https://www.yudkowsky.net/singularity/simplified\" rel=\"noopener noreferrer nofollow\">банальные вещи</a>, но, к сожалению, они не так очевидны, как кажется. Жизнь — это хорошо, здоровье — это хорошо; красота, счастье, веселье, смех, решение сложных задач, возможность учиться — всё это хорошо. И чем больше, тем лучше. Без ограничений.</p><h2>Дракон не так уж плох?</h2><p>Но не все жители нашей с вами деревни считают дракона таким уж плохим (под деревней я имею в виду всё человечество). Почему?</p><p>В массовой культуре куча шаблонных мыслей про смерть. Таких мыслей, которые вызывают социальное одобрение, и иногда даже ощущение глубокой мудрости. Ну вы всё их знаете: например, «смерть придаёт смысл жизни». Но представь, что ты родился бессмертным. И тебе предлагают стать смертным, но зато ты будешь знать, что скоро умрёшь. И, видимо, это тебя особо замотивирует на что-то. Как предложение? По мне, не очень. Но <a href=\"https://t.me/bayesyatinaa/114\" rel=\"noopener noreferrer nofollow\">рационализация</a> заставляет нас видеть что-то хорошее в этом.</p><p>Персонажи ищущие бессмертия в массовой культуре поголовно злодеи. Учёные работающие над радикальным продлением жизни или борющиеся со смертельными заболеваниями вовсе не являются таковыми. Но они как мы помним где-то глубоко под землёй, а билеты, которые мы приравняли к цене человеческой жизни, продаются в кино, где герой не может желать бессмертия.</p><p>Следующий стандартный шаблон: «<a href=\"https://www.youtube.com/playlist?list=PL8IqJ9ByNwX6_3d8kRxiJS27Dsylznku1\" rel=\"noopener noreferrer nofollow\">эволюция</a> не просто так сделала нас смертными». Но цели наших генов и наши личные цели вовсе не должны совпадать. Да, смерть заложена генетически. Как и смертельные и наследственные заболевания. Это вовсе не повод с ними не бороться. На самом деле даже действия животных тоже не является непосредственным выполнением прихотей генов. Самец богомола не мечтает погибнуть в объятии самки аки скандинавский воин мечтает погибнуть в бою и очутиться в Вальгалле. Они хотят жить и вырываются, с некоторым шансом на успех.</p><p>Вот ещё один шаблон: «если мы будем жить сильно дольше, наступит перенаселение». Однако экономическое развитие имеет стойкую корреляцию с рождаемостью, а та в свою очередь определяет население нашей планеты. Сейчас мы находимся на спадающей по скорости рождаемости, и к 100 году прогноз ООН обещает нам всего 12 миллиардов населения. Но подробнее про это в другой раз.</p><p>Следующая стандартная мудрость: слишком сложно правильно всё оценить. Да, конечно, посчитать цену человеческой жизни не так просто. Как и принимать правильные решения. В нашем <a href=\"https://www.youtube.com/watch?v=T7hSBbf6Hk0\" rel=\"noopener noreferrer nofollow\">чаепитии с Александром Панчиным</a> он указал на одну из очевидных дилемм: если разобрать людей, которым осталось жить недолго на органы, то это спасёт больше человеческих жизней. Но такой мир, куда менее приятен. Мозг сложная штука и в ней есть сложнейшая иерархия желаний, зачастую противоречивых и непрерывно изменяющихся во времени. Всё больше подобных дилемм возникает с развитием <a href=\"https://www.youtube.com/playlist?list=PL8IqJ9ByNwX7v_OO5ZrjCVBGM_dHpJAih\" rel=\"noopener noreferrer nofollow\">искусственного интеллекта</a>, который должен принимать решения, например при вождении (что переводит мысленные эксперименты в область практических решений). Но сложность такой задачи не должна вызывать отказ от попыток её решать. Ведь подобный отказ слишком сильно напоминает отказ видеть детей, умирающих вне поля зрения. И по эффективности, и по уровню комфорта.</p><p>А ещё вспомнил, жить дольше 100 лет будет скучно. Утопия Шоу в своём <a href=\"https://www.youtube.com/watch?v=YLeXoLX_AjM\" rel=\"noopener noreferrer nofollow\">ролике про бессмертие</a> приводит эталонный контраргумент: если человеку сообщить, что ему осталось жить неделю, то он забьёт всю неделю важными делами. Но если через неделю спросить, успел ли он всё, он ответит отрицательно. Дав ему ещё неделю, он вновь не успеет. Он не успеет никогда. Конечно, человек в преклонном возрасте может утверждать, что устал от жизни. Но это рассуждения вышедшей из строя гормональной и нервной систем. Вечно молодой человек совсем другое дело. И когда мы говорим о радикальном продлении жизни, мы не имеем в виду обвешанные трубками тела, уставшие от бесконечной боли. Мы говорим о 700 летних архитекторах с юношеским вдохновением, создающих шедевры недостижимые за жизнь человека.</p><p> Ну и последний на сегодня шаблон из куда более обширной их коллекции: «Откуда ты знаешь, что биологическое бессмертие возможно?». На самом деле не знаю. У нас пока есть лишь гипотезы и исследования на эту тему. Рекомендую вот <a href=\"https://www.youtube.com/watch?v=MUKqv-SwD9w\" rel=\"noopener noreferrer nofollow\">эту лекцию</a>, с обзором самых интересных научных достижений в этом вопросе. Но исследования по пути к бессмертию, даже если оно невозможно направлены на улучшение качества и продолжительности жизни. А следовательно, направлены на снижение её цены, при сохранении ценности.</p><h2>P.s.</h2><p>Я считаю важным донести мысль, что смерть дракона — это единственная хорошая и оправданная смерть. Даже когда сторонники смертной казни указывают на то, что иногда смерть полезна, они всё же имеют ввиду, что таким образом, по их мнению, удастся спасти больше жизней. Правы ли они в своём прогнозе? Ну уж точно они согласны с тем, что больше спасённых жизней это хорошо.</p><p>Благодаря распространению озвученных выше и непрозвучавших сегодня шаблонов в массовой культуре мы, как и некоторые жители деревни забываем о драконе. Может это и правильно, ведь сначала нужно позаботиться о себе, вместо того чтобы голыми руками копать шахту. Становиться бедняками это вряд ли лучшее решение, ведь тогда спасать придётся нас, а не нам. Но с забвением идей о борьбе с драконом мы перестаём ценить учёных, которые прямо сейчас в подземных лабораториях разрабатывают оружие против него. Продолжаем коситься на врачей, считающих цену человеческой жизни для её спасения. И продолжаем плодить мысли о том, что дракон не так уж и плох.</p><p><a href=\"https://t.me/bayesyatinaa\" rel=\"noopener noreferrer nofollow\"><u>Мой канал в телеграмм</u></a></p><p><a href=\"https://youtube.com/@bayesyatina\" rel=\"noopener noreferrer nofollow\">Мой канал на ютуб</a></p><p></p>', 1, '2023-06-13 00:46:26', 588764, 109, '/ru/articles/738868/', 'В предыдущей статье был разобран вопрос организации общедомовой вытяжной вентиляции из санузлов и кухонь в квартирах в многоэтажных многоквартирных домах.Теперь попытаемся обобщить технические решения по вентиляции, которые пригодные для отдельных квартир. Обобщение сделаем для «отдельных помещений» в составе «больших зданий».К категории «отдельных помещений» можно причислить что угодно: от  квартир и офисов  до производственных мастерских и торговых помещений. Ну, а к категории «больших зданий» можно причислить тоже обширный ряд сооружений: от плоских и длинно-широких одно-двух этажных Торговых центров (ТЦ)  до высотных зданий офисных центров с квартирами и апартаментами на верхних этажах (далее БЦ).К категории ТЦ также можно причислить широкий ряд малоэтажных протяжённых сооружений технического назначения: заводские корпуса, склады, гаражи и т.д.Для всех перечисленных типов зданий от ТЦ до БЦ свойственно одно общее свойство, а именно:Объём здания разделён на отдельные помещения (или отдельные зоны в общих помещениях) с различными условиями и требованиями к режиму вентиляции во времени и в пространстве.То есть в одном здании должно быть несколько независимо работающих вентиляционных систем, обеспечивающих вентиляцию в отдельных помещениях, или в отдельных малых участках больших помещений.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(244, 'Дьявол в мелочах: белковый нанокомпьютер для клеточной терапии', '<img src=\"https://habrastorage.org/r/w780q1/webt/xr/8p/fe/xr8pfe475zufb-ahxijhalaiv2g.jpeg\" data-src=\"https://habrastorage.org/webt/xr/8p/fe/xr8pfe475zufb-ahxijhalaiv2g.jpeg\" data-blurred=\"true\"><br>\r\n<br>\r\nДаже самые грандиозные вещи куда проще понять, если разложить их на составляющие. Подобный принцип не является чем-то новым в научном сообществе, так как многие процессы и явления описывались и описываются путем предварительного обозначения их элементов. Говоря об организме человека и о заболеваниях, которыми он страдает, также крайне важно найти первоисточник недуга. Даже самые серьезные заболевания с самыми ярко выраженными симптомами берут свое начало из строительных блоков любого живого организма — клеток. Создание механизма непосредственного воздействия на клетки с последующим их восстановлением является одной из важнейших задач современной науки. Ученые из университета штата Пенсильвания (США) стали на шаг ближе к достижению этой цели, разработав белковый нанокомпьютер, способный модулировать поведение клеток. Из чего сделан компьютер, какими именно функциями он обладает, и как именно он может быть использован на практике? Ответы на эти вопросы мы найдем в докладе ученых.<a name=\"habracut\"></a><br>\r\n<br>\r\n<h3>Основа исследования</h3><br>\r\nКлетки обнаруживают биохимические, структурные и механические сигналы окружающей среды и используют эту информацию для принятия решений, координации задач и изменения своего поведения. В основе этих процессов лежат сложные вычислительные операции, проводимые белковыми сетями, которые получают входные сигналы, обрабатывают информацию и производят функциональные выходные данные.<br>\r\n<br>\r\nПонимание этого процесса позволит ученым из области синтетической биологии научиться перепрограммировать клеточное поведение. Искусственные клетки со встроенными инструкциями, созданные с использованием ДНК или белков, могут открыть путь для реализации биосенсорного анализа и биоремедиации в науках об окружающей среде, для диагностики заболеваний и инновационных терапевтических применений в медицине.<br>\r\n<br>\r\nГоворя о вычислительном процессе, стоит отметить, что фундаментальным его элементом является логический вентиль. Недавние достижения в области синтетической биологии включают попытки создания генетических цепей, которые функционируют как различные логические элементы, в которых функциональный результат контролируется экспрессией генов целевого белка (или белков).<br>\r\n<br>\r\nЭкспрессия белка регулируется путем захвата процесса транскрипции ДНК или трансляции мРНК и нацеливания на основные элементы во время этого процесса, такие как факторы транскрипции, промоторы и терминаторы или мРНК. В качестве альтернативы, в некоторых исследованиях изучалась конструкция логических вентилей в белках на посттрансляционном уровне. Эти логические вентили на основе белков создаются либо путем модулирования взаимодействий белок-белок, либо путем контроля реакций, опосредованных протеазами.<br>\r\n<br>\r\nАвторы рассматриваемого нами сегодня труда предложили новый метод интеграции восприятия, обработки и генерации выходных данных в едином белке, который они назвали «нанокомпьютерным агентом». Этот агент, по мнению ученых, может стать новым важным шагом в области биокомпьютинга.<br>\r\n<br>\r\nВместо того чтобы перепрограммировать генетические схемы, взаимодействия белок-белок или схемы, основанные на протеолизе, ученые попытались перепрограммировать трехмерную структуру и динамику одного белка-мишени. По сравнению с традиционными методами этот подход имеет ряд преимуществ.<br>\r\n<br>\r\nВо-первых, входной сигнал немедленно изменяет конформацию белка и изменяет его функцию, минуя процессы транскрипции и трансляции. Это обеспечивает быстрое время отклика и повышенную надежность.<br>\r\n<br>\r\nВо-вторых, вместо того чтобы работы с факторами транскрипции и промоторами, небольшие сенсорные домены (~ 15 кДа) вставляются в целевой белок для обеспечения функционального контроля. Таким образом, «кодирующий сценарий» заметно сжимается, а метаболическая нагрузка снижается.<br>\r\n<br>\r\nВ-третьих, в традиционных подходах после экспрессии или активации целевого белка функция вывода продолжается до тех пор, пока белок не расщепится (например, в результате нормальных или регулируемых процессов). Однако в новом подходе выходной функцией можно управлять с помощью светочувствительных датчиков с высокой обратимостью и пространственно-временным разрешением.<br>\r\n<br>\r\nВ рассматриваемом нами сегодня труде ученые описывают процесс создания и тестирования некоммутативной комбинаторной логической схемы в одном гибридном белке. Достигнуто это было путем включения модуля uniRapR, чувствительного к рапамицину, и модуля напряжения кислорода, реагирующего на синий свет (LOV2), в киназу Src — нерецепторную тирозинкиназу, которая играет важную роль в различных клеточных процессах (клеточная адгезия, подвижность, пролиферация, дифференцировка и т.д.).<br>\r\n<br>\r\n<h3>Результаты исследования</h3><br>\r\nВ <i>аллостерии*</i> возмущение, вносимое в дистальный (аллостерический) сайт, энергетически связано с функциональным сайтом, тем самым влияя на активность белка.<blockquote><b>Аллостерия*</b> — это прямое и эффективное средство регуляции функции биологических макромолекул, возникающее в результате связывания лиганда с аллостерическим сайтом, топографически отличным от ортостерического сайта.</blockquote>Используя белковую аллостерию, сенсорные модули были вставлены в аллостерические сайты, чтобы регулировать функции белка-мишени. В труде «<a href=\"https://www.nature.com/articles/s41467-021-26937-x.pdf\">Two-input protein logic gate for computationin living cells</a>» ученые добились «логики OR (ИЛИ) с двумя входами» путем вставки uniRapR в домены киназы и LOV2 в домены киназы фокальной адгезии.<br>\r\n<br>\r\nВместо нацеливания на два разных домена белка ученые предложили включить оба сенсора в один и тот же домен белка-мишени и «запутать» аллостерические коммуникации внутри одного и того же белка-хозяина, чтобы сенсорные домены конкурировали друг с другом. Ученые считают, что такая конструкция будет устанавливать более сложные логические вычисления в одном белке, которые ранее не выполнялись.<br>\r\n<br>\r\nДля проверки этой гипотезы сенсоры uniRapR и LOV2 были введены в киназный домен белка Src (изображение ниже).<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/kw/ux/zj/kwuxzjpiuqsugt_qacrwgzmcaoa.jpeg\" data-src=\"https://habrastorage.org/webt/kw/ux/zj/kwuxzjpiuqsugt_qacrwgzmcaoa.jpeg\" data-blurred=\"true\"><br>\r\n<i>Изображение №1</i><br>\r\n<br>\r\nСконструированное белковое устройство использовало в качестве входных сигналов рапамицин и синий свет, каждый из которых влияет на конформационную динамику Src. Результирующее конформационное изменение белка затем влияло на его сеть белкового взаимодействия внутри клетки, вызывая отчетливую функциональную реакцию.<br>\r\n<br>\r\nВ исследовании «<a href=\"https://www.pnas.org/doi/epdf/10.1073/pnas.1218319110\">Rational design of a ligand-controlled proteinconformational switch</a>» ученые разработали молекулярный переключатель, контролируемый рапамицином (Src-uniRapR), вставив uniRapR в сайт, аллостерически связанный с активным сайтом киназного домена Src. Используя этот труд в качестве отправной точки, ученые хотели добавить датчик LOV2 для создания системы с двойным управлением, в которой активность Src могла бы регулироваться как рапамицином, так и синим светом.<br>\r\n<br>\r\nЧтобы добиться функционального контроля системы с помощью синего света, необходимо было идентифицировать второй аллостерический сайт для вставки LOV2, который удовлетворял бы двум требованиям. Во-первых, вставка LOV2 должна сохранить большинство функций Src в клеточной системе. Во-вторых, сайт встраивания должен быть аллостерически связан с ключевым сайтом внутримолекулярного взаимодействия, который имеет решающее значение для поддержания аутоингибирующей конформации Src.<br>\r\n<br>\r\nВ трехмерной структуре Src было обнаружено в общей сложности пять открытых на поверхности <i>петель*</i> в дополнение к одной, используемой для вставки uniRapR.<blockquote><b>Петля*</b> — гибкая область вторичной структуры белка.</blockquote>Воздействие петель на поверхность было подтверждено путем расчета нормализованной площади поверхности, доступной для растворителя (SASA от solvent-accessible surface area). Все пять петель были экспонированы на поверхности, и, по крайней мере, один остаток в каждой петле имеет нормализованную SASA более 40% (<b>2A</b>).<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/6s/0g/-4/6s0g-4cvfgpdfvidda1xv5mlhui.jpeg\" data-src=\"https://habrastorage.org/webt/6s/0g/-4/6s0g-4cvfgpdfvidda1xv5mlhui.jpeg\" data-blurred=\"true\"><br>\r\n<i>Изображение №2</i><br>\r\n<br>\r\nЧтобы предсказать, играют ли эти петли функциональные роли, была выполнена оценка эволюционной консервативности каждого остатка (аминокислота в пептидной цепи) на основе нормализованных показателей консервации, рассчитанных с помощью <a href=\"https://consurf.tau.ac.il/consurf_index.php\">ConSurf</a>. Большинство остатков в этих пяти петлях не являлись консервативными и, таким образом, подходят для вставки LOV2.<br>\r\n<br>\r\nЗатем ученые определили, какая из пяти петель может быть модифицирована для обеспечения аллостерического контроля конформационных изменений Src, что влияет на функцию.<br>\r\n<br>\r\nВ физиологических условиях киназа Src принимает автоингибирующую конформацию за счет внутримолекулярного взаимодействия между доменом SH2, фосфорилированным тирозином (pTyr<sup>527</sup>) на С-концевом хвосте и доменом SH3 с полипролиновым линкером SH2-SH1. Ранее было установлено, что эта неактивная конформация также была стабилизирована сэндвич-подобным гидрофобным взаимодействием между Trp<sup>260</sup>, спиралью αC и цепью β4. Опыты показали, что делеция С-концевого хвоста незначительно активировала Src, в то время как мутация гидрофобного стека запускала сильную активацию белка.<br>\r\n<br>\r\nСледовательно, ученые предположили, что LOV2, встроенный в петли, которые аллостерически связаны с этими двумя ключевыми взаимодействиями, может быть способен включать/выключать функции белка. Изучая структуру Src, было обнаружено, что петля 4 близка к С-концевому взаимодействию, а петля 5 расположена рядом с цепью β4 и, таким образом, может оказывать более сильное аллостерическое влияние, чем другие петли. Был проведен анализ аллостерических коммуникационных путей, начинающихся от каждой петли до pTyr<sup>527</sup> или Trp<sup>260</sup>, используя <a href=\"http://Ohm.dokhlab.org\">Ohm</a>. Анализ показал, что петля 5 и петля 4 имеют самый сильный аллостерический контроль над гидрофобным стеком и С-концевым взаимодействием соответственно. На основании этих результатов петля 4 и петля 5 были выбраны для вставки LOV2.<br>\r\n<br>\r\nЗатем было выполнено моделирование дискретной молекулярной динамики (DMD от discrete molecular dynamics) для оценки того, как вставка LOV2 в петлю 4 или петлю 5 влияет на аллостерический контроль конформационных состояний Src.<br>\r\n<br>\r\nКиназа Src претерпевает конформационное изменение из неактивного состояния в активное с диссоциацией SH2-SH3 и киназного домена. Было количественно оценено расстояние между центрами масс этих двух областей, чтобы определить конформационные изменения во время моделирования. Большое расстояние указывает на диссоциацию между доменами SH2-SH3 и киназы, что указывает на активацию белка, тогда как более близкое расстояние указывает на неактивное состояние.<br>\r\n<br>\r\nКогда LOV2 вставлен в петлю 5, расстояние между темным мутантом Src-LOV2 (LOV2 C450A) значительно увеличивается по сравнению с соответствующим освещенным мутантом (LOV2 I510E/I539E) (<b>2B</b>, <b>2C</b>). Это подразумевает, что синий свет может ингибировать активацию Src в этой конструкции. Для вставки LOV2 в петле 4, однако, освещенный мутант имеет большие расстояния, чем темный мутант. Это позволяет предположить, что синий свет может активировать Src в этой конструкции.<br>\r\n<br>\r\nРазница между темными и освещенными мутантами со вставкой петли 5 намного больше, чем у мутантов с петлей 4. Это указывает на то, что петля 5 обеспечивает более сильный аллостерический контроль.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/n_/l3/3a/n_l33amfu7wlfgvwb6velp8hn6m.jpeg\" data-src=\"https://habrastorage.org/webt/n_/l3/3a/n_l33amfu7wlfgvwb6velp8hn6m.jpeg\" data-blurred=\"true\"><br>\r\n<i>Изображение №3</i><br>\r\n<br>\r\nДалее ученые создали химико- и оптогенетически сконструированные системы путем вставки домена LOV2 в петлю 4 и петлю 5, соответственно, с использованием конструкции Src-uniRapR. Проводилось тестирование различных линкеров соединения, включая Gly-Pro-Gly (GPG), Gly-Ser-Gly (GSG) и отсутствие линкера, при присоединении LOV2 для оптимизации аллостерической регуляции. К С-концу сконструированного белка Src была прикреплена метка mCherry, чтобы визуализировать локализацию белка в клетках. Для изучения функций белков, регулируемых сенсорами, были сконструированы мутанты Src-uniRapR-LOV2-mCherry dark (темный; LOV2 C450A) и lit (освещенный; LOV2 I510E/I539E), которые временно экспрессировались в клетках MDA-MB-231. Для вставки LOV2 в петле 4 не наблюдалось какой-либо заметной разницы в клеточном фенотипе между темными и освещенными мутантами или до и после добавления рапамицина. Внешнее нарушение, вносимое LOV2 для нарушения С-концевого взаимодействия, может оказаться неспособным полностью активировать белок Src, или линкеры соединения могут быть не оптимальными для аллостерического контроля. Однако была замечена транслокация белка из цитоплазмы в фокальные адгезии после добавления рапамицина, когда LOV2 был встроен в петлю 5 с линкером GSG. Потому ученые решили использовать именно эту систему, названную Src-uniRapR-LOV2-mCherry, для дальнейшего изучения.<br>\r\n<br>\r\nУченые исследовали фенотип фиксированных клеток MDA-MB-231 со сверхэкспрессией мутанта Src-uniRapR-LOV2-mCherry dark или lit, обработанных рапамицином или без него. Добавление рапамицина значительно увеличивало количество и размер фокальных спаек как у темных, так и у освещенных мутантов (<b>3A</b> и <b>3B</b>) по сравнению с теми, у которых не было рапамицина. В отсутствие рапамицина достоверных различий между темными и освещенными мутантами не наблюдалось.<br>\r\n<br>\r\nЭти данные указывают на то, что рапамицин активирует Src, что приводит к транслокации белка и формированию фокальной адгезии. В присутствии рапамицина мутант lit имеет уменьшенное количество и площадь фокальных спаек по сравнению с мутантом dark. Эти наблюдения говорят о том, что синий свет инактивирует Src и ингибирует формирование фокальной адгезии, что противоречит аллостерическим эффектам, индуцированным рапамицином. Визуализация MDA-MB-231 в живых клетках на сетках, покрытых коллагеном, дополнительно подтверждает, что рапамицин стимулирует локализацию Src в фокальных адгезиях на периферии клеток (<b>3C</b> и видео №1).<br>\r\n<br>\r\n<div class=\"oembed\"><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/6475a2e1025fe1fbb3576d7c\" data-style=\"\" id=\"6475a2e1025fe1fbb3576d7c\" width=\"\"><i>Видео №1</i><br>\r\n<br>\r\nРапамицин регулирует активность киназы Src в конструкции Src-uniRapR. Чтобы проверить, повлияла ли активность киназы в системе с двойным контролем, был измерен уровень фосфорилирования Src Tyr<sup>416</sup> in vivo во всех возможных условиях, включая освещение, темноту, рапамицин и отсутствие рапамицина.<br>\r\n<br>\r\nАктивность киназы оставалась неактивной при всех условиях. Это означает, что активация и инактивация uniRapR и LOV2 вообще не влияли на активность киназы. Другая возможность заключается в том, что вставка LOV2 искажает сайт связывания аденозин-5\'-трифосфата и, следовательно, устраняет активность киназы. Из-за отсутствия киназной активности наблюдалась транслокация Src в фокальные адгезии, т.е. фенотип, отличный от поляризованного распространения, когда была индуцирована киназная активность. Индуцированная киназная активность Src способствует фосфорилированию его субстратов при фокальных адгезиях и стимулирует обмен фокальных адгезий и подвижность клеток. Следовательно, при устранении киназной активности в системе оборот фокальной адгезии ингибируется. Таким образом сохраняется фокальная адгезия. И наоборот, активность активированной киназы способствует обороту фокальной адгезии и приводит к другому клеточному фенотипу.<br>\r\n<br>\r\nФокальная адгезия является основным структурным элементом клетки, соединяющим внеклеточный матрикс с актомиозиновым цитоскелетом. Он функционирует как датчик механического напряжения и геометрии, позволяя обнаруживать различные морфологические, физические и биохимические среды и использует эту информацию для координации сложного клеточного поведения. Одним из важных явлений, связанных с фокальной адгезией, является направленная миграция клеток, индуцируемая контактными сигналами внеклеточного матрикса, что необходимо для морфогенеза ткани, диссеминации раковых клеток и миграции иммунных клеток. Фокальные адгезии играют жизненно важную роль в этих процессах, так как их созревание вызывает выравнивание F-актина, что дополнительно стимулирует ориентацию клеток и направленную миграцию. Поскольку наблюдалось созревание фокальной адгезии в разработанной системе с двойным контролем, ученые хотели знать, могут ли они контролировать направление клеток на выровненных коллагеновых волокнах, служащих в качестве сигналов направления контакта.<br>\r\n<br>\r\nКлетки MDA-MB-231 могут взаимно преобразовываться между веретеновидной и округлой морфологией с ламеллиподием на переднем крае. При посеве на полиакриламидные волокна коллагена nanolane, в ответ на сигналы окружающей среды, клетки MDAMB-231 принимают стержнеобразную форму с постоянным миграционным наклоном ~30°. Угловая ориентация возникает из-за наложения сил с различными осями приложения, которые создаются динамической конкуренцией между зарождающимися адгезиями и созревающими фокальными адгезиями, представленными нанополосами коллагена I типа.<br>\r\n<br>\r\nВ этой системе большинство формирующихся дискретных зарождающихся спаек преимущественно устанавливаются ламеллоподиальным расширением поперек наноструктуры, перпендикулярно расположенным нанополосам. Альтернативно, созревающие фокальные адгезии непрерывно распространяются вдоль нанополос, направляя расширение клеток соосно направлению нанополос, формируя динамический, механобиологически регулируемый баланс между растяжением клеток вдоль и поперек коллагеновых нанополос. Добавление рапамицина замедляло клеточную динамику, и клетки начинали удлиняться и выравниваться вдоль коллагеновых волокон как у темных, так и у светлых мутантов. В результате ориентация клеток на нанополосах коллагена была значительно снижена, в среднем менее чем на 10°. Уменьшение наклона клеток связано с увеличением количества и площади фокальных спаек по мере их созревания. Более зрелые фокальные адгезии увеличивают силы вдоль нанополос коллагена и, следовательно, сдвигают ориентацию клеток в направлении удлинения фокальных адгезий.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/po/r6/ys/por6ysqdjjf1_ntig_fzawe7xle.jpeg\" data-src=\"https://habrastorage.org/webt/po/r6/ys/por6ysqdjjf1_ntig_fzawe7xle.jpeg\" data-blurred=\"true\"><br>\r\n<i>Изображение №4</i><br>\r\n<br>\r\nЧтобы продемонстрировать точное управление разработанной системой и прояснить основные логические вычисления, ученые использовали конструкцию Src-uniRapRLOV2-mCherry (дикого типа) в клетках MDA-MB-231 и выполнили визуализацию живых клеток на коллагеновых нанополосах.<br>\r\n<br>\r\nДобавление рапамицина сразу ингибировало динамику миграции клеток (видео ниже). Клетки начали удлиняться и смещать свое направление в сторону вертикальных нанополос. Угол популяции уменьшился в среднем с 30° до менее 10° (<b>4B</b>). Чтобы уточнить изменение динамики клеток, была проведена количественная оценка прироста и потери апексов в течение 2 часов. Добавление рапамицина значительно уменьшало прирост и потерю апексов, что свидетельствует о снижении клеточной динамики.<br>\r\n<br>\r\n<div class=\"oembed\"><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/6475a2e2fe348a00f4b54c5c\" data-style=\"\" id=\"6475a2e2fe348a00f4b54c5c\" width=\"\"><i>Видео №2</i><br>\r\n<br>\r\nПри включении синего света в присутствии рапамицина через 3 часа, клетки восстановили свою динамику, так как прирост и потеря апексов значительно увеличились до уровня, который достоверно не отличался от уровня до добавления рапамицина (<b>4C</b>). Угол ориентации клеток также увеличивался под воздействием освещения.<br>\r\n<br>\r\nЧтобы понять лежащие в основе логические операции, ученые определили рапамицин и синий свет как входные сигналы, а ориентацию клеток или созревание фокальной адгезии как выходные данные. Было обнаружено, что система с двойной регулировкой функционировала как комбинаторная логическая схема, состоящая из логических элементов «И» и «НЕ» (<b>4A</b>), когда рапамицин был первым сигналом, а синий свет был вторым. В этом эксперименте, хоть рапамицин и присутствовал в клеточной культуре во время конфокальной визуализации, синий свет был способен изменять конформацию Src и противодействовать эффектам, индуцированным рапамицином. Следовательно, синий свет может быть более доминирующим в контроле конформаций Src, чем рапамицин.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/qu/0d/oi/qu0doiwljl9xuoism8ikticcuy8.jpeg\" data-src=\"https://habrastorage.org/webt/qu/0d/oi/qu0doiwljl9xuoism8ikticcuy8.jpeg\" data-blurred=\"true\"><br>\r\n<i>Изображение №5</i><br>\r\n<br>\r\nЧтобы проверить данную гипотезу, ученые изменили синхронизацию входных сигналов, в которых сначала использовался синий свет, а позже добавлялся рапамицин. При облучении синим светом угол ориентации клеток и клеточная динамика значительно увеличивались (<b>5B</b> и <b>5C</b>; видео ниже).<br>\r\n<br>\r\n<div class=\"oembed\"><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/6475a2e21a7f54fbab0ec987\" data-style=\"\" id=\"6475a2e21a7f54fbab0ec987\" width=\"\"><i>Видео №3</i><br>\r\n<br>\r\nКогда был добавлен рапамицин, угол ориентации клеток и динамика значительно уменьшились, независимо от применения синего света. Углы популяции были даже меньше, чем у необработанных клеток, а клеточная динамика восстанавливалась до исходного состояния. На основании этих двух экспериментов можно сделать вывод, что LOV2 и uniRapR играют эквивалентные роли во влиянии на конформационную динамику Src.<br>\r\n<br>\r\n<img src=\"https://habrastorage.org/r/w780q1/webt/k0/af/bd/k0afbdgnv3y-s87ndyfo9al1iyq.jpeg\" data-src=\"https://habrastorage.org/webt/k0/af/bd/k0afbdgnv3y-s87ndyfo9al1iyq.jpeg\" data-blurred=\"true\"><br>\r\n<i>Изображение №6</i><br>\r\n<br>\r\nУченые отмечают, что электронными логическими схемами можно гибко управлять (включать/выключать), сохраняя при этом высокую надежность. Чтобы выяснить, способна ли разработанная биологическая система к обратимому переключению, ученые провели продолжительный эксперимент (~15 часов), в котором синий свет включался и выключался каждые 3 часа в присутствии рапамицина.<br>\r\n<br>\r\nБыло обнаружено, что угол ориентации клеток, а также прирост и потеря апексов уменьшались, когда присутствовал только рапамицин (первый ряд на <b>6A</b>; левая панель на <b>6B</b>). Напротив, наклон клеток и клеточная динамика увеличивались при облучении синим светом.<br>\r\n<br>\r\nДля дальнейшего подтверждения цикличности использовался синий свет вместо добавления рапамицина (второй ряд на <b>6A</b>; и правая панель на <b>6B</b>). Клеточный угол и динамика немного увеличились при облучении синим светом. После добавления рапамицина и выключения синего света клеточный угол и динамика значительно уменьшились. Позднее облучение синим светом изменило клеточный фенотип и увеличило клеточный угол и динамику. В конце концов, когда снова был выключен синий свет, клеточный угол и динамика значительно уменьшились. Следовательно, манипулируя входными сигналами, вполне возможно обратимо генерировать выходные реакции включения/выключения.<br>\r\n<br>\r\nДля более детального ознакомления с нюансами исследования рекомендую заглянуть в <a href=\"https://www.science.org/doi/epdf/10.1126/sciadv.adg1062\">доклад ученых</a> и <a href=\"https://www.science.org/action/downloadSupplement?doi=10.1126%2Fsciadv.adg1062&amp;file=sciadv.adg1062_sm.pdf\">дополнительные материалы</a> к нему.<br>\r\n<br>\r\n<h3>Эпилог</h3><br>\r\nВ рассмотренном нами сегодня труде ученые рассказали о создании первого в мире нанокомпьютерного агента на основе белка, способного управлять поведением клеток.<br>\r\n<br>\r\nСпроектированный белок реагировал на определенные сигналы (входные данные) и производил соответствующие действия (выходные сигналы). Манипулирование входными сигналами позволяет получать различные желаемые выходные сигналы, тем самым получить контроль над поведением клеток.<br>\r\n<br>\r\nСупер-белок был создан посредством внедрения в него двух сенсорных доменов, которые реагируют на раздражители (синий свет и рапамицин). В ответ на эти раздражители данные домены меняют свою ориентацию и положение в пространстве. Во время практических испытаний разработанный белок помещался в живые клетки. Затем ученые использовали разные последовательности и комбинации раздражителей и проверяли, меняется ли ориентация клеток в ответ на них. Как выяснилось, если сначала обнаруживается рапамицин, а затем свет, клетка примет один угол ориентации. Если же сначала идет свет, а потом рапамицин, клетка примет другой угол ориентации.<br>\r\n<br>\r\nАвторы разработки заявляют, что увеличение числа входных сигналов, которые будет воспринимать нанокомпьютерный агент, приведет к получению более широкого спектра реакционных действий клеток. Следовательно, контроль над клеткой может быть достаточно обширным.<br>\r\n<br>\r\nУченые намерены продолжить свое исследование, дабы усовершенствовать свое творение, которое может быть весьма полезным в рамках клеточной терапии различных недугов, от аутоиммунных и вирусных заболеваний до диабета, рака и даже поврежденных нервов.<br>\r\n<br>\r\n<h3>Немного рекламы</h3><br>\r\nСпасибо, что остаётесь с нами. Вам нравятся наши статьи? Хотите видеть больше интересных материалов? Поддержите нас, оформив заказ или порекомендовав знакомым, <a href=\"https://ua-hosting.company/servers/vps/\">облачные VPS для разработчиков от $4.99</a>, <b>уникальный аналог entry-level серверов, который был придуман нами для Вас:</b> <a href=\"https://habr.com/company/ua-hosting/blog/347386/\">Вся правда о VPS (KVM) E5-2697 v3 (6 Cores) 10GB DDR4 480GB SSD 1Gbps от $19 или как правильно делить сервер?</a> (доступны варианты с RAID1 и RAID10, до 24 ядер и до 40GB DDR4).<br>\r\n<br>\r\n<b>Dell R730xd в 2 раза дешевле в дата-центре Maincubes Tier IV в Амстердаме?</b> Только у нас <b><a href=\"https://ua-hosting.company/servers/dedicated/\">2 х Intel TetraDeca-Core Xeon 2x E5-2697v3 2.6GHz 14C 64GB DDR4 4x960GB SSD 1Gbps 100 ТВ от $199</a> в Нидерландах! <b>Dell R420 — 2x E5-2430 2.2Ghz 6C 128GB DDR3 2x960GB SSD 1Gbps 100TB — от $99!</b></b> Читайте о том <a href=\"https://habr.com/company/ua-hosting/blog/329618/\">Как построить инфраструктуру корп. класса c применением серверов Dell R730xd Е5-2650 v4 стоимостью 9000 евро за копейки?</a>', 2, '2023-06-13 00:46:28', 331606, 106, '/ru/companies/ua-hosting/articles/738464/', 'Десять лет назад я начал изучать психологию манипуляций и решил узнать, насколько глубока кроличья нора. Начав с экстремистских материалов, я пообщался с религиозными фанатиками, сектантами, менеджерами активных продаж, мошенниками и даже (самая ужасная категория) дизайнерами интерфейсов приложений. Когда количество средств воздействия, используемых когнитивных искажений и ошибок мышления перевалили за сотню, настало время задуматься – а как обеспечить базовый уровень психологической безопасности человека, который не хочет во всё это погружаться и изучать? Говоря иначе, какие правила, тезисы и приёмы можно использовать, чтобы минимизировать вероятность попасть под влияние? Основное – в этой статье. А иллюстрировать мне её поможет многоуважаемый Джордж Карлин.');
INSERT INTO `news` (`newsid`, `title`, `text`, `author`, `created`, `url`, `rubid`, `parserUrl`, `anonce`) VALUES
(245, 'Ветер над городом и поквартирная вентиляция через фасад', '<h3>Децентрализованная вентиляция больших зданий</h3><p>В предыдущей статье был разобран вопрос организации общедомовой вытяжной вентиляции из санузлов и кухонь в квартирах в многоэтажных многоквартирных домах.</p><p><a href=\"https://habr.com/ru/articles/736140/\" rel=\"noopener noreferrer nofollow\">https://habr.com/ru/articles/736140/</a></p><p><a href=\"https://habr.com/ru/articles/729574/\" rel=\"noopener noreferrer nofollow\">https://habr.com/ru/articles/729574/</a></p><p>Теперь попытаемся обобщить технические решения по вентиляции, которые пригодные для отдельных квартир. Обобщение сделаем для «отдельных помещений» в составе «больших зданий».</p><p>К категории «отдельных помещений» можно причислить что угодно: от  квартир и офисов  до производственных мастерских и торговых помещений. </p><p>Ну, а к категории «больших зданий» можно причислить тоже обширный ряд сооружений: от плоских и длинно-широких одно-двух этажных Торговых центров (ТЦ)  до высотных зданий офисных центров с квартирами и апартаментами на верхних этажах (далее БЦ).</p><p>К категории ТЦ также можно причислить широкий ряд малоэтажных протяжённых сооружений технического назначения: заводские корпуса, склады, гаражи и т.д.</p><p>Для всех перечисленных типов зданий от ТЦ до БЦ свойственно одно общее свойство, а именно:</p><p>Объём здания разделён на отдельные помещения (или отдельные зоны в общих помещениях) с различными условиями и требованиями к режиму вентиляции во времени и в пространстве.</p><p>То есть в одном здании должно быть несколько независимо работающих вентиляционных систем, обеспечивающих вентиляцию в отдельных помещениях, или в отдельных малых участках больших помещений.</p><h3>Отдельная система в отдельном помещении</h3><p>При делении больших зданий на отдельные помещения (или  локальные зоны) требуется в этих помещениях устанавливать отдельные вентиляционные системы, привязанные к наружным стенам или кровле, контактирующими именно с этим помещением.</p><p>Для больших зданий уже не имеет значение где будут организованы выходы вент систем: на крыше или на фасаде. </p><p>Оба варианта одинаковы правомочны относительно  требований современного СП60-2020.</p><p>С точки зрения физики динамика воздушных потоков одинакова для  высотного здания высотой 100м при размере стен в плане 20х20м, и для  плоского низкого сарая длиной 100м высотой 10м и шириной 20м. (см рис.1.).</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/c5e/3f7/2ce/c5e3f72ce182d9f94734bf46dec53357.png\" alt=\"рис.1\" title=\"рис.1\" width=\"1121\" height=\"802\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/c5e/3f7/2ce/c5e3f72ce182d9f94734bf46dec53357.png\"><div><figcaption>рис.1</figcaption></figure><p><em>Рис.1. Обтекание потоками ветра протяжённых зданий различной компоновки: А- длинное низкоэтажное здание (слева вид сбоку), Б- высотное узкое здание типа «небоскрёб-гвоздь» (слева вид сверху).</em></p><p>Для протяжённых зданий уже невозможно обеспечить стабильную работу естественных вытяжных систем, а потому все системы должны быть принудительными (с вентилятором).</p><p>В больших зданиях не выгодно тащить большие воздуховоды через соседние помещения из-за неразумной потери объёмов и площадей помещений на транзитные воздуховоды, а потому системы вентиляции становятся строго локальными.</p><h3>Чистота воздуха снаружи</h3><p>Психологически мы привыкли, что вытяжной «грязный воздух» надо выбрасывать именно на кровле, то есть где-то подальше от окон помещения, через которые в наши квартиры попадает уличный «чистый воздух».</p><p>В этом предположении понятия «грязный воздух» и «чистый воздух» взяты в кавычки, так как это некие «понятия», а не реальные показатели качества воздуха.</p><p>Так в отдельно стоящем  доме в чистом поле вытяжной воздух из трубы на крыше может быть действительно грязнее, чем приточный воздух через  окна.</p><p>В случае же размещения дома в плотной застройке большого города ситуация с чистотой воздуха в разных частях дома может быть не такой однозначной.</p><p>Так чистота воздуха в городе больше зависит от положения окружающих домов, чем от места относительно самого рассматриваемого дома.</p><p>Может сложится так, что  на крыше дома воздух будет сильно чище, чем возле окон на фасаде дома. </p><p>Именно так происходит в больших городах, где в приземной части воздух загрязнён сильнее от выхлопов автомобилей. При этом воздух на высоте чище из-за лучшего продувания атмосферным ветром.</p><h3>Оценка загрязнённости воздуха в Москве</h3><p>Для понимания степени загрязнённости воздуха в городе можно оценить среднее загрязнение воздуха в Москве.</p><p>Так в Москве на дорогах находится около 1 млн. автомобилей с работающими двигателями, а в домах проживают 15 млн. человек.</p><p>При этом человек выдыхает около 35г/ч углекислого газа(СО2).</p><p>А один средний автомобиль сжигает около 3кг бензина в час (10кг на 100км при средней скорости около 30км/ч).</p><p>При сжигании 3 кг бензина автомобиль выбросит приблизительно 9кг СО2.</p><p>СН2 +1,5*О2=СО2+Н2О</p><p>(12+1*2) +(1,5*16*2)=(12+16*2) +(1*2+16)</p><p>14+48=44+18 </p><p> То есть  из 14 грамм углеводорода слева получается 44 грамм СО2 справа.</p><p>Соотношение по массе близкое к 1:3</p><p>Итого ежечасно в Москве выделяется следующее количество углекислого газа:</p><p>Люди</p><p>Мл=0,035*15 000 000= 525 000кг=525 тонн</p><p>Автомобили</p><p>Мл=9*1 000 000= 9 000 000кг=9 000 тонн</p><p>То есть автомобили выделяют  более чем в 17 раз больше углекислого газа, чем люди.</p><p>Посчитаем необходимый воздухообмен Москвы для выполнения норматива по содержанию СО2 на уровне 1000ррм.</p><p>1000ррм= 1л (СО2) /м3  воздуха</p><p>Так как молярный вес СО2 сотавляет 44г/ моль, а 1 моль газа имеет объём 22,4л/моль, то 1 л (СО2) весит</p><p>Мсо2=44/22,4=1,96г/л= 0,002кг/л</p><p> То  есть для разбавления 9млн.кг чистого СО2 до концентрации 1000ррм потребуется объём воздуха:</p><p>Vвозд1000=9*10^6/0,002=4,5*10^9 м3</p><p>Учитывая фоновую концентрацию на уровне 400ррм на каждый кубометр мы можем добавить только 600ррм нового СО2, что потребует увеличить объём воздуха на разбавление до величины: </p><p> Vвозд600=4,5*10^9 *(1000/600)=7,5*10^9 м3 или 7,5км.куб.</p><p>При площади Москвы около 900км.кв (в пределах МКАД) слой загрязнённого за час воздуха составит</p><p>H=7,5/900=  0,0083 км или 8,3м.</p><p>За сутки будет испорчено  в 24 раза больше воздуха или слой около </p><p>Н=8,3*24=199м</p><p>Тоесть за сутки в безветренную погоду воздух в Москве оказывается отравленным на высоту выше 70-го этажа высотного здания.</p><p>При этом степень загрязнения воздуха в мегаполисе можно даже наблюдать без всяких приборов.</p><p>Так если отъехать от Москвы по Ярославскому  шоссе на 70км до Сергиева посада, то при взгляде в сторону  Москвы в закатных лучах над Москвой отчётливо виден купол жёлтого газа (сам наблюдал неоднократно).</p><p>Это вполне себе мгновенно визуализируемый слой отравленного воздуха над всем городом, который виден по изменению цвета воздуха с голубого на жёлтый в слое высотой выше уровня самых высоких домов и протяженностью 30-40 км.</p><p>Смог можно наблюдать и в самом городе, например глядя вдаль  вдоль крупных проспектов  или с высоких этажей над домами (см.рис. 2-3). </p><p>На первом фото вид на Москва-Сити с явной дымкой жёлтого смога при безоблачном небе в  безветренную погоду. </p><p>На втором фото воздух чист и прозрачен, а сам Сити не только отчётливо виден без задымления смогом, но и вдалеке за ним прекрасно видны красные многоэтажки (слева от Сити на линии горизонта).</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/97a/9da/2aa/97a9da2aa8888e140079df2eee5fcbbe.png\" alt=\"фото.1\" title=\"фото.1\" width=\"1323\" height=\"881\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/97a/9da/2aa/97a9da2aa8888e140079df2eee5fcbbe.png\"><div><figcaption>фото.1</figcaption></figure><p><em>Рис.2.  Дымка смога над городом в центре Москвы в ясную погоду без ветра.</em></p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/5f4/d56/8b6/5f4d568b62446800fb51f9c8ebad4b80.png\" alt=\"Фото.2\" title=\"Фото.2\" width=\"1232\" height=\"822\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/5f4/d56/8b6/5f4d568b62446800fb51f9c8ebad4b80.png\"><div><figcaption>Фото.2</figcaption></figure><p><em>Рис.3. Чистый и прозрачный воздух над центром Москвы в ветреную погоду с низкой облачностью.</em></p><p>Если принять скорость  ветра 2м/с (среднее значение по климатологии),  при ширине Москвы 45км всю Москву воздух пройдёт за 45/2=22,5 тыс.секунд или за 22500/3600=6,25 часов.</p><p>При 4-х кратном воздухообмене слой отравленного воздуха на выходе из Москвы составит уже всего около 50м.</p><p>То есть климатический воздухообмен Москвы составляет около 4-х крат за сутки, а на выходе из города будет постоянно дуть отравленный выхлопом ветер с весьма высокой концентрацией СО2.</p><p>Абсолютное значение концентрации СО2 по высоте воздуха от  земли будет сильно меняться.</p><p>Так если у поверхности земли на автодорогах концентрация СО2 и СО2  почти всегда больше ПДК, то на высоте в несколько десятков метров над землёй в ветреный день концентрация резко падает.</p><p>Так при расчёте на скорость ветра 2м/с  у нас «вытяжной» воздух из Москвы будет с предельной концентрацей по СО2 выше 1000ррм на высоте около 50м от крыш домов. </p><p>В тоже  время необходимо учитывать в  расчёте  высоту средней застройки домами высотой  в 30-50м , через  высоту которых будет  проходить циркуляционный поток  выхлопов от автомобилей   с улицы во дворы. </p><p>Тогда слой отравленного воздуха увеличится по высоте на высоту застройки, достигнув  высоты  в 100м от земли.То есть на выходе из Москвы  отравлены до 1000ррм слой составит более 100м при ветре над городом 2м/с.</p><p><strong>Прямой расчёт прибавки уровня СО2 в воздухе на выходе из Москвы в слое 100м.</strong></p><p>Ранее мы посчитали  количество выбросов СО2 от автомобилей 9 млн.кг/ч.</p><p>Расчётный объём на разбавление – это слой 100м при скорости 1м/с (ниже среднего) и длине фронта 30км (наименьше сечение Москвы).</p><p>Общий объём воздуха за час составит</p><p>Vвозд=1*3600*100*30*1000=10,8 *10^9= 10,8 млрд.м3</p><p>Объём  одного моля газа при нормальных условиях составляет 22,4л/моль (0,0224 м3/моль), при этом молярная масса СО2 составляет 44г/моль (0,044кг/моль). </p><p>Таким образом возможно посчитать общий объём отравляющих газов от часового выброса от автомобилей при  массе выбрасываемого в выхлопе СО2 в количестве 9млн.кг. </p><p>Объём выбросов СО2 от автомобилей составит:</p><p>Vсо2=9*10^6*0,0224/ 0,044=4581818 м3  или 4,58 млн.м3/ч</p><p>Концентрация СО2 при разбавлении составит </p><p>Vсо2/ Vвозд=  4,58 млн./10,8 млрд=0,0004242 или 420ррм</p><p>То есть при фоновом уровне 400ррм прибавка 420 ррм даст суммарно  вполне допустимый уровень загрязнения 400+420=820ррм, что ниже предполагаемого предела в 1000ррм на выходе загрязнённого воздуха из Москвы.</p><p>Из чего следует вывод, что в ветреную погоду с со скоростью ветра над домами  более 1 м/с качество воздуха во всех районах Москвы оказывается вполне удовлетворительным.</p><p>При этом в безветренную погоду ситуация с качеством воздуха становится критической уже через 6 часов полного штиля над мегаполисом.</p><h3>Задымление вдоль автомобильных дорог</h3><p>Даже если в среднем по городу содержание в воздухе СО2 и СО будет удовлетворительным, то в зоне автодорог уровень загрязнением СО2 и СО во много раз  превышает допустимые значения средних расчётных  цифр по всей площади города. Ведь именно на дорогах происходит выброс автомобильных выхлопов, а площадь самих дорог во много раз меньше общей площади застройки соседних жилых кварталов.</p><p>Так над дорогами образуются плотные подушки концентрированных выхлопных газов.</p><p>При этом вокруг дорог устанавливаются свои собственные циркуляционно-конвективные потоки, где над дорогой возникает восходящий поток тёплых выхлопных газов, а из прилегающих жилых кварталов вдоль земли на дорогу вытекают остывшие и чуть более чистые потоки «свежего» воздуха (см.рис.4.).</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e9b/db2/c43/e9bdb2c434f01d0b9c6f5295e59e35e7.png\" alt=\"рис.4\" title=\"рис.4\" width=\"1273\" height=\"490\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e9b/db2/c43/e9bdb2c434f01d0b9c6f5295e59e35e7.png\"><div><figcaption>рис.4</figcaption></figure><p><em>Рис.4. Локальные циркуляционные конвективные потоки воздуха в зоне автодорог с примыканием к жилой застройке.</em></p><p>При наличии устойчивого ветра над городом картина придорожных вихрей несколько изменяется, теряя симметрию относительно дороги (см.рис.5). </p><p>При этом поток  ветра над  домами не только усиливает вихревое перемешивание воздуха между автотрассами и прилегающими дворами, но и уносит часть загрязнений от выхлопов прочь из города вместе с потоками ветра, тем самым резко снижая локальные концентрации выхлопных газов над дорогами.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/1c7/f21/a4c/1c7f21a4ca5bcfbe4a400945e4c123d5.png\" alt=\"рис.5\" title=\"рис.5\" width=\"974\" height=\"288\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/1c7/f21/a4c/1c7f21a4ca5bcfbe4a400945e4c123d5.png\"><div><figcaption>рис.5</figcaption></figure><p><em>Рис.5 Сдвиг локальных циркуляционных вихрей «дорога-двор» под воздействием доминирующего ветра над домами.</em></p><p>Именно по этой причине мы пока не задохнулись внутри мегаполиса даже в окружении миллиона непрерывно дымящих автомобилей. Хотя остаётся по прежнему крайне опасно долго находится вблизи  широких многополосных шоссе и особенно внутри потока автомобилей в самом автотранспорте.</p><p>В экологическом отношении быть шофёром в Москве- это крайне вредная работа, приводящая к хроническим отравлениям угарным газом. </p><p>Такое отравление угарным газом выражается в не проходящей усталости и невозможности выспаться. При этом единственным лекарством от отравления угарным газом за рулём является смена работы (для профессиональных городских водителей)  или отказ от использования наземного автотранспорта в личных целях (для автолюбителей).</p><p>Лично мне пришлось отказаться от разъездной работы на автомобиле по Москве после того как я сам  хватанул подобное хроническое отравление угарным газом за рулём в московских пробках. </p><p>Просыпаться каждое утро уставшим и без сил – это не то состояние, при котором хочется жить и работать.</p><p>На загородных трассах риск отравления угарным газом резко падает из-за  сильного  бокового продувания автодороги ветром, так что дальнобойщики дышат сравнительно чистым воздухом даже на загруженных загородных шоссе.</p><h3>Распределение воздух на фасаде при поквартирных системах вентиляции</h3><p>При использовании индивидуальных поквартирных систем вентиляции малой производительности возникает вопрос о характере  движения воздуха вне дома и возможности затекания вытяжного воздуха в приточное отверстие в стене квартиры (в форточку).</p><p>Первоначально надо рассмотреть случай с вытяжкой через общедомовую вентиляцию с дефлектором на кровле (см.рис.6)</p><p>При отсутствии ветра наблюдается рециркуляция вытяжного воздуха из дефлектора на кровле обратно во двор. </p><p>Эта рециркуляция неизбежна в силу неразрывности воздушных потоков  в атмосфере. </p><p>При этом высота распространения восходящего потока в зимнее время будет больше, чем летом, в силу большей разности температур вытяжки и уличного воздуха в зимнее время. </p><p>В летнее же время относительно прохладный воздух из вытяжки (принудительной) вообще может сразу падать обратно во двор, так как воздух из прохладного здания может быть холоднее и тяжелее тёплого уличного воздуха.</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a27/1a3/8c6/a271a38c6dd601fa43b06d90b21e8302.png\" alt=\"рис.6\" title=\"рис.6\" width=\"1066\" height=\"563\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a27/1a3/8c6/a271a38c6dd601fa43b06d90b21e8302.png\"><div><figcaption>рис.6</figcaption></figure><p><em>Рис.6. Схема рециркуляции воздуха от кровельной вытяжки к  фасадным приточным отверстиям.</em></p><h3>Расчёт струйных течений при поквартирной вентиляции с выбросом на фасаде</h3><p>Примем  скорость воздуха V=2м/с при  выбросе через отверстие на фасаде.</p><p>Тогда,  согласно справочника, струя воздуха из отверстия диаметром Ф100мм  будет тормозится об окружающие массы воздуха и  достигнет скорости 0,2м/с на расстоянии около 4м от фасада.</p><p>При этом надо помнить, что торможение струи газов осуществляется по закону сохранения импульса. То есть импульс струи до торможения о неподвижный воздух не должен изменится после торможения.</p><p>Р1=Р2</p><p>Где </p><p>Р1=V1*M1=2*М1</p><p>Р2=V2*M2 =0,2*М2</p><p>Приравняем полученные выражения:</p><p>0,2*М2=2*М1</p><p>Откуда получим:</p><p>M2=2*M1/0,2=10*М1</p><p>То есть на расстоянии 4м от стены воздух будет иметь не только скорость в 10 раз меньше, чем в отверстии в стене диаметром Ф100мм , но ещё и будет разбавлен в 10 раз окружающим воздухом.</p><p>При этом сечение струи увеличится в 10*10=100 раз или в 10 раз по диаметру (см.рис.7).</p><figure class=\"full-width \"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/1dd/a63/c34/1dda63c34259d1914b870592b0a970d6.png\" alt=\"рис.7\" title=\"рис.7\" width=\"1553\" height=\"743\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/1dd/a63/c34/1dda63c34259d1914b870592b0a970d6.png\"><div><figcaption>рис.7</figcaption></figure><p><em>Рис.7. Схема взаимодействия потоков вытяжного  и приточного воздуха на фасаде здания при локальной поквартирной системе приточно-вытяжной вентиляции с фасада квартиры.</em></p><p>В результате расчёта мы получили, что вытяжная струя за пределами здания образует узкий  длинный  расширяющийся конус воздуха,  в котором постепенно меняется концентрация загрязнения от  условных 100% в отверстии до 10% на расстоянии 4м от стены.</p><p>В тоже время при всасывании воздуха с улицы наблюдается  совершенно иная динамика движения воздух к отверстию в стене. </p><p>Так приточный воздух  имеет полусферическое распределение скоростей, при котором на равном удалении от отверстия  соблюдается  одинаковая скорость воздуха в сторону всасывающего отверстия.</p><p>При таком  полусферическом распределении скорость воздуха изменяется от 2 м/с в отверстии в стене до 0,2м/с всего на расстоянии менее 200мм от краёв отверстия, где площадь полусферы окажется в 10 раз больше площади самого отверстия.</p><p>А на расстоянии всего в 1 м от отверстия скорость воздуха на всасывание упадёт до  мизерной величины менее 0,003м/с.</p><p>При этом и струя воздуха из вытяжного отверстия  из отдельной квартиры не останавливается на расстоянии 4 м от  фасада здания, а продолжает двигаться с торможением и перемешиванием с окружающим воздухом двора, пока концентрация не усреднится по двору, смешавшись со встречными потоками вытяжки из квартир от дома напротив.</p><p>Получается, что если между отверстиями притока и вытяжки  больше 1 м, то затекание вытяжки в приток  не наблюдается вообще, или если точнее, то величина прямого  затекания  вытяжного воздуха в приточный значительно меньше 1% или ниже точности измерения приборов  для измерения показателей СО2 в  воздухе.</p><p>Если над городом нет ветра, то дворы домов  через некоторое время всё равно заполняется «выхлопными газами» от местных жителей. Причём без разницы как организована вытяжка в домах:  с выбросом вентиляционного воздуха поквартирно  через фасад или централизованно через кровлю.</p><h3>Выводы и заключения</h3><p>Из приведённых расчётов и рассуждений можно сделать несколько выводов.</p><ol><li><p>Воздух в мегаполисе отравляется в 17 раз больше выхлопами от автомобилей, чем дыханием людей. То есть учитывать надо в большей степени именно выхлопы автомобилей вокруг жилых домов, а не выдыхаемый людьми воздух.</p></li><li><p>Выброс вентиляционного воздуха из помещений с людьми на фасад никак не добавит общего загрязнения воздуха во дворе в сравнении с выбросом на кровле из-за нисходящих циркуляционных потоков с кровли во двор.</p></li><li><p>Забор воздуха с улицы выгоднее всего делать как можно выше от земли и подальше от оживлённых автотрасс, где воздух относительно чище из-за продуваемости ветром, чем у поверхности земли вблизи автодорог.</p></li><li><p>Максимальная загазованность наблюдается над автодорогами, откуда загрязнения распределяются по внутренним кварталам города за счёт медленного конвективного перемешивания и сдува ветром.</p></li><li><p>В безветренные дни ситуация с загазованностью в Москве оказывается очень напряжённой. При этом на самих дорогах уровень СО2 и СО оказывается просто запредельным, что может приводить к тяжёлым последствиям для здоровья как водителей, так и пассажиров наземного транспорта<em>.</em></p></li></ol>', 3, '2023-06-13 00:46:28', 420255, 106, '/ru/articles/738644/', 'Есть одно убеждение, которое сделало многих людей несчастными, но они даже не подозревают об этом. Эта желание быть хорошим. В отличие от кучи других убеждений, которые не скрывают, что добавляют в жизни проблем, это выглядит белым и пушистым. Если ты «хороший человек», то этим можно гордиться. На самом деле — это повод всерьез забеспокоиться.  ');

-- --------------------------------------------------------

--
-- Структура таблицы `newskey`
--

CREATE TABLE `newskey` (
  `id` int NOT NULL,
  `nid` int NOT NULL,
  `nrubid` int NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Дамп данных таблицы `newskey`
--

INSERT INTO `newskey` (`id`, `nid`, `nrubid`) VALUES
(110, 104, 45),
(111, 104, 71),
(112, 105, 45),
(113, 105, 71),
(114, 106, 45),
(115, 106, 73),
(116, 107, 45),
(117, 107, 72),
(118, 108, 45),
(119, 108, 72),
(120, 109, 45),
(121, 109, 72),
(122, 110, 45),
(123, 110, 72),
(124, 111, 45),
(125, 111, 72),
(126, 112, 45),
(127, 112, 72),
(128, 113, 45),
(129, 113, 72),
(130, 114, 45),
(131, 114, 72),
(132, 115, 45),
(133, 115, 72),
(134, 116, 45),
(135, 116, 73),
(136, 117, 45),
(137, 117, 72),
(138, 118, 45),
(139, 118, 72),
(140, 119, 45),
(141, 119, 74),
(142, 120, 45),
(143, 120, 72),
(144, 121, 45),
(145, 121, 72),
(146, 122, 45),
(147, 122, 75),
(148, 123, 45),
(149, 123, 75),
(150, 124, 45),
(151, 124, 75),
(152, 125, 45),
(153, 125, 76),
(154, 126, 45),
(155, 126, 75),
(156, 127, 45),
(157, 127, 76),
(158, 128, 45),
(159, 128, 75),
(160, 129, 45),
(161, 129, 75),
(162, 130, 45),
(163, 130, 77),
(164, 131, 45),
(165, 131, 75),
(166, 132, 45),
(167, 132, 74),
(168, 133, 45),
(169, 133, 76),
(170, 134, 45),
(171, 134, 75),
(172, 135, 45),
(173, 135, 76),
(174, 136, 45),
(175, 136, 79),
(176, 137, 45),
(177, 137, 76),
(178, 138, 45),
(179, 138, 73),
(180, 139, 45),
(181, 139, 76),
(182, 140, 45),
(183, 140, 76),
(184, 141, 45),
(185, 141, 79),
(186, 142, 45),
(187, 142, 79),
(188, 143, 45),
(189, 143, 76),
(190, 144, 45),
(191, 144, 76),
(192, 145, 45),
(193, 145, 79),
(194, 146, 45),
(195, 146, 76),
(196, 147, 45),
(197, 147, 80),
(198, 148, 45),
(199, 148, 80),
(200, 149, 45),
(201, 149, 79),
(202, 150, 45),
(203, 150, 81),
(204, 151, 52),
(205, 151, 73),
(206, 152, 52),
(207, 152, 83),
(208, 153, 52),
(209, 153, 86),
(210, 154, 52),
(211, 154, 83),
(212, 155, 52),
(213, 155, 87),
(214, 156, 52),
(215, 156, 83),
(216, 157, 52),
(217, 157, 88),
(218, 158, 52),
(219, 158, 89),
(220, 159, 52),
(221, 159, 90),
(222, 160, 52),
(223, 160, 72),
(224, 161, 52),
(225, 161, 82),
(226, 162, 52),
(227, 162, 91),
(228, 163, 52),
(229, 163, 82),
(230, 164, 52),
(231, 164, 82),
(232, 165, 52),
(233, 165, 90),
(234, 166, 53),
(235, 166, 92),
(236, 167, 53),
(237, 167, 92),
(238, 168, 53),
(239, 168, 92),
(240, 169, 53),
(241, 169, 93),
(242, 170, 53),
(243, 170, 92),
(244, 171, 53),
(245, 171, 94),
(246, 172, 53),
(247, 172, 92),
(248, 173, 53),
(249, 173, 92),
(250, 174, 53),
(251, 174, 95),
(252, 175, 53),
(253, 175, 77),
(254, 176, 54),
(255, 176, 96),
(256, 177, 54),
(257, 177, 83),
(258, 178, 54),
(259, 178, 83),
(260, 179, 54),
(261, 179, 83),
(262, 180, 54),
(263, 180, 86),
(264, 181, 54),
(265, 181, 83),
(266, 182, 54),
(267, 182, 97),
(268, 183, 54),
(269, 183, 83),
(270, 184, 54),
(271, 184, 90),
(272, 185, 54),
(273, 185, 98),
(274, 186, 54),
(275, 186, 99),
(276, 187, 54),
(277, 187, 90),
(278, 188, 54),
(279, 188, 99),
(280, 189, 54),
(281, 189, 83),
(282, 190, 54),
(283, 190, 83),
(284, 191, 54),
(285, 191, 98),
(286, 192, 54),
(287, 192, 96),
(288, 193, 54),
(289, 193, 99),
(290, 194, 55),
(291, 194, 100),
(292, 195, 55),
(293, 195, 101),
(294, 196, 55),
(295, 196, 100),
(296, 197, 55),
(297, 197, 102),
(298, 198, 55),
(299, 198, 100),
(300, 199, 55),
(301, 199, 100),
(302, 200, 55),
(303, 200, 100),
(304, 201, 55),
(305, 201, 100),
(306, 202, 55),
(307, 202, 100),
(308, 203, 55),
(309, 203, 103),
(310, 204, 55),
(311, 204, 99),
(312, 205, 55),
(313, 205, 104),
(314, 206, 55),
(315, 206, 100),
(316, 207, 55),
(317, 207, 77),
(318, 208, 55),
(319, 208, 100),
(320, 209, 55),
(321, 209, 72),
(322, 210, 55),
(323, 210, 72),
(324, 211, 56),
(325, 211, 105),
(326, 212, 56),
(327, 212, 106),
(328, 213, 56),
(329, 213, 107),
(330, 214, 56),
(331, 214, 106),
(332, 215, 56),
(333, 215, 106),
(334, 216, 56),
(335, 216, 108),
(336, 217, 56),
(337, 217, 106),
(338, 218, 56),
(339, 218, 105),
(340, 219, 56),
(341, 219, 96),
(342, 220, 56),
(343, 220, 109),
(344, 221, 56),
(345, 221, 110),
(346, 222, 56),
(347, 222, 110),
(348, 223, 56),
(349, 223, 109),
(350, 224, 56),
(351, 224, 109),
(352, 225, 56),
(353, 225, 82),
(354, 226, 56),
(355, 226, 111),
(356, 227, 56),
(357, 227, 110),
(358, 228, 56),
(359, 228, 99),
(360, 229, 56),
(361, 229, 109),
(362, 230, 56),
(363, 230, 106),
(364, 231, 56),
(365, 231, 106),
(366, 232, 56),
(367, 232, 106),
(368, 233, 56),
(369, 233, 96),
(370, 234, 56),
(371, 234, 109),
(372, 235, 56),
(373, 235, 110),
(374, 236, 56),
(375, 236, 110),
(376, 237, 56),
(377, 237, 109),
(378, 238, 56),
(379, 238, 109),
(380, 239, 56),
(381, 239, 82),
(382, 240, 56),
(383, 240, 111),
(384, 241, 56),
(385, 241, 110),
(386, 242, 56),
(387, 242, 99),
(388, 243, 56),
(389, 243, 109),
(390, 244, 56),
(391, 244, 106),
(392, 245, 56),
(393, 245, 106);

-- --------------------------------------------------------

--
-- Структура таблицы `rubrickeys`
--

CREATE TABLE `rubrickeys` (
  `id` int NOT NULL,
  `rchild` int NOT NULL,
  `rparent` int NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Дамп данных таблицы `rubrickeys`
--

INSERT INTO `rubrickeys` (`id`, `rchild`, `rparent`) VALUES
(22, 71, 45),
(23, 72, 45),
(24, 73, 45),
(25, 74, 45),
(26, 75, 45),
(27, 76, 45),
(28, 77, 45),
(29, 78, 45),
(30, 79, 45),
(31, 80, 45),
(32, 81, 45),
(33, 82, 52),
(34, 83, 52),
(35, 84, 52),
(36, 85, 52),
(37, 86, 52),
(38, 87, 52),
(39, 88, 52),
(40, 89, 52),
(41, 90, 52),
(42, 91, 52),
(43, 92, 53),
(44, 93, 53),
(45, 94, 53),
(46, 95, 53),
(47, 96, 54),
(48, 97, 54),
(49, 98, 54),
(50, 99, 54),
(51, 100, 55),
(52, 101, 55),
(53, 102, 55),
(54, 103, 55),
(55, 104, 55),
(56, 105, 56),
(57, 106, 56),
(58, 107, 56),
(59, 108, 56),
(60, 109, 56),
(61, 110, 56),
(62, 111, 56);

-- --------------------------------------------------------

--
-- Структура таблицы `rubrics`
--

CREATE TABLE `rubrics` (
  `id` int NOT NULL,
  `rubric` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `ruburl` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `main` int NOT NULL DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Дамп данных таблицы `rubrics`
--

INSERT INTO `rubrics` (`id`, `rubric`, `ruburl`, `main`) VALUES
(45, 'Разработка', 'develop', 1),
(52, 'Администрирование', 'admin', 1),
(53, 'Дизайн', 'design', 1),
(54, 'Менеджмент', 'management', 1),
(55, 'Маркетинг', 'marketing', 1),
(56, 'Научпоп', 'popsci', 1),
(71, 'Работа с видео', 'video', 0),
(72, 'Python', 'python', 0),
(73, 'Системное администрирование', 'sys_admin', 0),
(74, 'Тестирование IT-систем', 'it_testing', 0),
(75, 'PHP', 'php', 0),
(76, 'Разработка веб-сайтов', 'webdev', 0),
(77, 'Open source', 'open_source', 0),
(78, 'CMS', 'cms', 0),
(79, 'JavaScript', 'javascript', 0),
(80, 'VueJS', 'vuejs', 0),
(81, 'Высокая производительность', 'hi', 0),
(82, 'Карьера в IT-индустрии', 'career', 0),
(83, 'Управление персоналом', 'hr_management', 0),
(84, 'Анализ и проектирование систем', 'analysis_design', 0),
(85, 'IT-эмиграция', 'it_immigration', 0),
(86, 'Информационная безопасность', 'infosecurity', 0),
(87, 'Развитие стартапа', 'startuprise', 0),
(88, 'Профессиональная литература', 'lib', 0),
(89, 'CSS', 'css', 0),
(90, 'Исследования и прогнозы в IT', 'research', 0),
(91, 'Контент и копирайтинг', 'contentmarketing', 0),
(92, 'Графический дизайн', 'graph_design', 0),
(93, 'Работа с 3D-графикой', '3d_graphics', 0),
(94, 'Дизайн мобильных приложений', 'apps_design', 0),
(95, 'Веб-дизайн', 'web_design', 0),
(96, 'Управление сообществом', 'community_management', 0),
(97, 'Управление разработкой', 'dev_management', 0),
(98, 'Учебный процесс в IT', 'study', 0),
(99, 'Управление проектами', 'pm', 0),
(100, 'Монетизация IT-систем', 'it_monetization', 0),
(101, 'Децентрализованные сети', 'p2p', 0),
(102, 'IT-инфраструктура', 'it-infrastructure', 0),
(103, 'Семантика', 'sw', 0),
(104, 'IT-стандарты', 'itstandarts', 0),
(105, 'Астрономия', 'astronomy', 0),
(106, 'Научно-популярное', 'popular_science', 0),
(107, 'Программирование микроконтроллеров', 'controllers', 0),
(108, 'Физика', 'physics', 0),
(109, 'Читальный зал', 'read', 0),
(110, 'Здоровье', 'health', 0),
(111, 'Лайфхаки для гиков', 'lifehacks', 0);

-- --------------------------------------------------------

--
-- Структура таблицы `users`
--

CREATE TABLE `users` (
  `uid` int NOT NULL,
  `username` varchar(255) COLLATE utf8mb4_general_ci NOT NULL,
  `img` varchar(255) COLLATE utf8mb4_general_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Дамп данных таблицы `users`
--

INSERT INTO `users` (`uid`, `username`, `img`) VALUES
(1, 'John', '/public/img/avatar2.jpg'),
(2, 'Monica', '/public/img/avatar1.jpg'),
(3, 'Robert', '/public/img/avatar.jpg');

--
-- Индексы сохранённых таблиц
--

--
-- Индексы таблицы `news`
--
ALTER TABLE `news`
  ADD PRIMARY KEY (`newsid`),
  ADD KEY `author` (`author`),
  ADD KEY `rubid` (`rubid`);

--
-- Индексы таблицы `newskey`
--
ALTER TABLE `newskey`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `news` (`nid`,`nrubid`),
  ADD KEY `rubid` (`nrubid`);

--
-- Индексы таблицы `rubrickeys`
--
ALTER TABLE `rubrickeys`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `child` (`rchild`,`rparent`),
  ADD KEY `rubrickeys_ibfk_2` (`rparent`);

--
-- Индексы таблицы `rubrics`
--
ALTER TABLE `rubrics`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`uid`);

--
-- AUTO_INCREMENT для сохранённых таблиц
--

--
-- AUTO_INCREMENT для таблицы `news`
--
ALTER TABLE `news`
  MODIFY `newsid` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=246;

--
-- AUTO_INCREMENT для таблицы `newskey`
--
ALTER TABLE `newskey`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=394;

--
-- AUTO_INCREMENT для таблицы `rubrickeys`
--
ALTER TABLE `rubrickeys`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=63;

--
-- AUTO_INCREMENT для таблицы `rubrics`
--
ALTER TABLE `rubrics`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=112;

--
-- AUTO_INCREMENT для таблицы `users`
--
ALTER TABLE `users`
  MODIFY `uid` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;

--
-- Ограничения внешнего ключа сохраненных таблиц
--

--
-- Ограничения внешнего ключа таблицы `news`
--
ALTER TABLE `news`
  ADD CONSTRAINT `news_ibfk_2` FOREIGN KEY (`author`) REFERENCES `users` (`uid`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `news_ibfk_3` FOREIGN KEY (`rubid`) REFERENCES `rubrics` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT;

--
-- Ограничения внешнего ключа таблицы `newskey`
--
ALTER TABLE `newskey`
  ADD CONSTRAINT `newskey_ibfk_1` FOREIGN KEY (`nid`) REFERENCES `news` (`newsid`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `newskey_ibfk_2` FOREIGN KEY (`nrubid`) REFERENCES `rubrics` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Ограничения внешнего ключа таблицы `rubrickeys`
--
ALTER TABLE `rubrickeys`
  ADD CONSTRAINT `rubrickeys_ibfk_1` FOREIGN KEY (`rchild`) REFERENCES `rubrics` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `rubrickeys_ibfk_2` FOREIGN KEY (`rparent`) REFERENCES `rubrics` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
